{"repository_name":"x11","body":"# x11-cr\n\nX11 bindings for Crystal language.\n\n[![GitHub release](https://img.shields.io/github/release/TamasSzekeres/x11-cr.svg)](https://github.com/TamasSzekeres/x11-cr/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://tamasszekeres.github.io/x11-cr/)\n\n## Installation\n\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  x11:\n    github: TamasSzekeres/x11-cr\n```\n\nThen run in terminal:\n```bash\nshards install\n```\n\n## Usage\n\n\n```crystal\nrequire \"x11\"\n\nmodule YourModule\n  include X11 # For simpler use\nend\n```\n\nFor more details see the examples in [/examples](/examples) folder.\n\n## Samples\n\nBuild and run the low-level sample:\n```shell\n  cd examples/sample_window\n  shards build\n  ./bin/sample_window\n```\n![Sample Window](https://raw.githubusercontent.com/TamasSzekeres/x11-cr/master/examples/sample_window/screenshot/sample_window.png)\n\n\nBuild and run the high-level sample:\n```shell\n  cd examples/sample_window_hl\n  shards build\n  ./bin/sample_window_hl\n```\n\n## Documentation\n\nYou can generate documentation for yourself:\n```shell\ncrystal doc\n```\nThen you can open `/doc/index.html` in your browser.\n\nOr you can view last commited documentation online at: [https://tamasszekeres.github.io/x11-cr/](https://tamasszekeres.github.io/x11-cr/).\n\n## Contributing\n\n1. Fork it ( https://github.com/TamasSzekeres/x11-cr/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Tam√°s Szekeres](https://github.com/TamasSzekeres) - creator, maintainer\n","program":{"html_id":"x11/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"x11","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"x11/X11","path":"X11.html","kind":"module","full_name":"X11","name":"X11","abstract":false,"superclass":null,"ancestors":[{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"}],"locations":[{"filename":"src/x11.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L4"},{"filename":"src/x11/any_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L4"},{"filename":"src/x11/arc.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L3"},{"filename":"src/x11/atom.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L3"},{"filename":"src/x11/bad_alloc_exception.cr","line_number":1,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/bad_alloc_exception.cr#L1"},{"filename":"src/x11/button_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L4"},{"filename":"src/x11/c/X.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L3"},{"filename":"src/x11/char_struct.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L3"},{"filename":"src/x11/circulate_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L4"},{"filename":"src/x11/circulate_request_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L4"},{"filename":"src/x11/client_message_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L4"},{"filename":"src/x11/color.cr","line_number":1,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L1"},{"filename":"src/x11/colormap_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L4"},{"filename":"src/x11/configure_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L4"},{"filename":"src/x11/configure_request_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L4"},{"filename":"src/x11/create_window_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L4"},{"filename":"src/x11/crossing_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L4"},{"filename":"src/x11/destroy_window_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L4"},{"filename":"src/x11/display.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3"},{"filename":"src/x11/error_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L4"},{"filename":"src/x11/event.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/event.cr#L3"},{"filename":"src/x11/expose_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L4"},{"filename":"src/x11/ext_codes.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L3"},{"filename":"src/x11/ext_data.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L3"},{"filename":"src/x11/focus_change_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L4"},{"filename":"src/x11/font_struct.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L4"},{"filename":"src/x11/gc_values.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gc_values.cr#L3"},{"filename":"src/x11/generic_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L4"},{"filename":"src/x11/graphics_expose_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L4"},{"filename":"src/x11/gravity_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L4"},{"filename":"src/x11/host_address.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L3"},{"filename":"src/x11/image.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/image.cr#L3"},{"filename":"src/x11/key_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L4"},{"filename":"src/x11/keyboard_control.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L4"},{"filename":"src/x11/keyboard_state.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L3"},{"filename":"src/x11/keymap_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L4"},{"filename":"src/x11/map_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L4"},{"filename":"src/x11/map_request_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L4"},{"filename":"src/x11/mapping_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L4"},{"filename":"src/x11/mb_text_item.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L3"},{"filename":"src/x11/modifier_keymap.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/modifier_keymap.cr#L4"},{"filename":"src/x11/motion_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L4"},{"filename":"src/x11/no_expose_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L4"},{"filename":"src/x11/pixmap_format_values.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/pixmap_format_values.cr#L3"},{"filename":"src/x11/point.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/point.cr#L3"},{"filename":"src/x11/property_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L4"},{"filename":"src/x11/rectangle.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L3"},{"filename":"src/x11/reparent_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L4"},{"filename":"src/x11/resize_request_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L4"},{"filename":"src/x11/screen.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L4"},{"filename":"src/x11/segment.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L3"},{"filename":"src/x11/selection_clear_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L4"},{"filename":"src/x11/selection_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L4"},{"filename":"src/x11/selection_request_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L4"},{"filename":"src/x11/server_interpreted_address.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/server_interpreted_address.cr#L3"},{"filename":"src/x11/set_window_attributes.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L3"},{"filename":"src/x11/text_item.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L3"},{"filename":"src/x11/time_coord.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/time_coord.cr#L3"},{"filename":"src/x11/unmap_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L4"},{"filename":"src/x11/version.cr","line_number":1,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/version.cr#L1"},{"filename":"src/x11/visibility_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L4"},{"filename":"src/x11/visual.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visual.cr#L3"},{"filename":"src/x11/wc_text_item.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L3"},{"filename":"src/x11/window_changes.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L3"},{"filename":"src/x11/window_event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_event.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"1.0.0\"","doc":null,"summary":null}],"included_modules":[{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"all_planes:UInt64-class-method","html_id":"all_planes:UInt64-class-method","name":"all_planes","doc":"Returns a value with all bits set to 1 suitable for use in a plane argument to a procedure.","summary":"<p>Returns a value with all bits set to 1 suitable for use in a plane argument to a procedure.</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L103"},"def":{"name":"all_planes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"X.all_planes"}},{"id":"find_on_extension_list(structure:Pointer(X11::C::X::PExtData),number:Int32):ExtData?-class-method","html_id":"find_on_extension_list(structure:Pointer(X11::C::X::PExtData),number:Int32):ExtData?-class-method","name":"find_on_extension_list","doc":"Returns the first extension data structure for the extension numbered number.\n\n###Arguments\n- **structure** Specifies the extension list.\n- **number** Specifies the extension number from `Display::init_extension`.\n\n###Description\nThe `find_on_extension_list` function returns the first extension data\nstructure for the extension numbered number. It is expected that an extension\nwill add at most one extension data structure to any single data structure's\nextension data list. There is no way to find additional structures.","summary":"<p>Returns the first extension data structure for the extension numbered number.</p>","abstract":false,"args":[{"name":"structure","doc":null,"default_value":"","external_name":"structure","restriction":"::Pointer(X11::C::X::PExtData)"},{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int32"}],"args_string":"(structure : Pointer(X11::C::X::PExtData), number : Int32) : ExtData?","args_html":"(structure : Pointer(X11::C::X::PExtData), number : Int32) : <a href=\"X11/ExtData.html\">ExtData</a>?","location":{"filename":"src/x11.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L95"},"def":{"name":"find_on_extension_list","args":[{"name":"structure","doc":null,"default_value":"","external_name":"structure","restriction":"::Pointer(X11::C::X::PExtData)"},{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ExtData | ::Nil","visibility":"Public","body":"pdata = X.find_on_extension_list(structure, number)\nif pdata.null?\n  return nil\nend\nExtData.new(pdata)\n"}},{"id":"free(data:X11::C::PChar):Int32-class-method","html_id":"free(data:X11::C::PChar):Int32-class-method","name":"free","doc":"Frees the specified data.\n\n###Arguments\n- **data** Specifies the data that is to be freed.\n\n###Description\nThe `free` function is a general-purpose Xlib routine that frees the specified data.\nYou must use it to free any objects that were allocated by Xlib, unless an\nalternate function is explicitly specified for the object. A *null* pointer\ncannot be passed to this function.","summary":"<p>Frees the specified data.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"X11::C::PChar"}],"args_string":"(data : X11::C::PChar) : Int32","args_html":"(data : <a href=\"X11/C/PChar.html\">X11::C::PChar</a>) : Int32","location":{"filename":"src/x11.cr","line_number":186,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L186"},"def":{"name":"free","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"X11::C::PChar"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.free(data)"}},{"id":"free_string_list(list:X11::C::PPChar)-class-method","html_id":"free_string_list(list:X11::C::PPChar)-class-method","name":"free_string_list","doc":"Releases memory.\n\n###Arguments\n- **list** Specifies the list of strings to be freed.\n\n###Description\nThe `free_string_list` function releases memory allocated by\n`Display::mb_text_property_to_text_list` and `TextProperty::to_string_list`\nand the missing charset list allocated by `Display::create_font_set`.\n\n###See also\n`X11::alloc_class_hint`, `X11::alloc_icon_size`, `X11::alloc_size_hints`,\n`X11::alloc_wm_hints`, `X11::free`, `Display::set_command`,\n`Display::set_transient_for_hint`, `Display::set_text_property`,\n`Display::set_wm_client_machine`, `Display::set_wm_colormap_windows`,\n`Display::set_wm_icon_name`, `Display::set_wm_name`, `Display::set_wm_properties`,\n`Display::set_wm_protocols`, `string_list_to_text_property`, `TextProperty::to_string_list`.","summary":"<p>Releases memory.</p>","abstract":false,"args":[{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"X11::C::PPChar"}],"args_string":"(list : X11::C::PPChar)","args_html":"(list : <a href=\"X11/C/PPChar.html\">X11::C::PPChar</a>)","location":{"filename":"src/x11.cr","line_number":171,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L171"},"def":{"name":"free_string_list","args":[{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"X11::C::PPChar"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.free_string_list(list)"}},{"id":"g_context_from_gc(gc:X11::C::X::GC):X11::C::GContext-class-method","html_id":"g_context_from_gc(gc:X11::C::X::GC):X11::C::GContext-class-method","name":"g_context_from_gc","doc":"Returns GC-context from GC.\n\n###Arguments\n- **gc** Specifies the GC for which you want the resource ID.\n\n###See also\n`Display::all_planes`, `Display::change_gc`, `Display::copy_area`,\n`Display::copy_gc`, `Display::create_gc`, `Display::draw_arc`,\n`Display::draw line`, `Display::draw_rectangle`, `Display::draw_text`,\n`Display::fill_rectangle`, `Display::free_gc`, `Display::gc_values`,\n`Display::query_best_size`, `Display::set_arc_mode`, `Display::set_clip_origin`.","summary":"<p>Returns GC-context from GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"}],"args_string":"(gc : X11::C::X::GC) : X11::C::GContext","args_html":"(gc : X11::C::X::GC) : <a href=\"X11/C/GContext.html\">X11::C::GContext</a>","location":{"filename":"src/x11.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L59"},"def":{"name":"g_context_from_gc","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::GContext","visibility":"Public","body":"X.g_context_from_gc(gc)"}},{"id":"init_threads:X11::C::Status-class-method","html_id":"init_threads:X11::C::Status-class-method","name":"init_threads","doc":"Initializes Xlib support for concurrent threads.\n\n###Description\nThe `init_threads` function initializes Xlib support for concurrent threads.\nThis function must be the first Xlib function a multi-threaded program calls,\nand it must complete before any other Xlib call is made. This function\nreturns a nonzero status if initialization was successful; otherwise, it returns zero.\nOn systems that do not support threads, this function always returns zero.\nIt is only necessary to call this function if multiple threads might use Xlib\nconcurrently. If all calls to Xlib functions are protected by some other access\nmechanism (for example, a mutual exclusion lock in a toolkit or through explicit\nclient programming), Xlib thread initialization is not required. It is recommended\nthat single-threaded programs not call this function.\n\n###See also\n`Display::lock`, `Display::unlock`.","summary":"<p>Initializes Xlib support for concurrent threads.</p>","abstract":false,"args":[],"args_string":" : X11::C::Status","args_html":" : X11::C::Status","location":{"filename":"src/x11.cr","line_number":80,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L80"},"def":{"name":"init_threads","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Status","visibility":"Public","body":"X.init_threads"}},{"id":"keysym_to_string(keysym:X11::C::KeySym):String-class-method","html_id":"keysym_to_string(keysym:X11::C::KeySym):String-class-method","name":"keysym_to_string","doc":"Returns the string representation of a given *keysym*.\n\n###Arguments\n- **keysym** Specifies the `X::C::KeySym` that is to be converted.\n\n###Description\nThe returned string is in a static area and must not be modified.\nThe returned string is in the Host Portable Character Encoding.\nIf the specified `KeySym` is not defined, returns an empty `String`.\n\n###See also\n`Display::keycode_to_keysym`, `KeyEvent::lookup_keysym`.","summary":"<p>Returns the string representation of a given <em>keysym</em>.</p>","abstract":false,"args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"X11::C::KeySym"}],"args_string":"(keysym : X11::C::KeySym) : String","args_html":"(keysym : <a href=\"X11/C/KeySym.html\">X11::C::KeySym</a>) : String","location":{"filename":"src/x11.cr","line_number":17,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L17"},"def":{"name":"keysym_to_string","args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"X11::C::KeySym"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"pstr = X.keysym_to_string(keysym)\nif pstr.null?\n  return \"\"\nend\nstr = String.new(pstr)\nX.free(pstr)\nstr\n"}},{"id":"parse_geometry(parse_string:String):NamedTuple()-class-method","html_id":"parse_geometry(parse_string:String):NamedTuple()-class-method","name":"parse_geometry","doc":"Allows you to parse the standard window geometry.\n\n###Arguments\n- **parse_string** Specifies the string you want to parse.\n\n###Returns\n- **x**, **y** Return the x and y offsets.\n- **width**, **height** Return the width and height determined.\n\n###Description\nBy convention, X applications use a standard string to indicate window size\nand placement. `parse_geometry` makes it easier to conform to this standard\nbecause it allows you to parse the standard window geometry. Specifically,\nthis function lets you parse strings of the form:\n```\n[=][<width>{xX}<height>][{+-}<xoffset>{+-}<yoffset>]\n```\nThe fields map into the arguments associated with this function. (Items\nenclosed in <> are integers, items in [] are optional, and items enclosed in\n{} indicate \"choose one of.\" Note that the brackets should not appear in the\nactual string.) If the string is not in the Host Portable Character Encoding,\nthe result is implementation dependent.\n\nThe `parse_geometry` function returns a bitmask that indicates which of the\nfour values (width, height, xoffset, and yoffset) were actually found in the\nstring and whether the x and y values are negative. By convention, -0 is not\nequal to +0, because the user needs to be able to say \"position the window\nrelative to the right or bottom edge.\" For each value found, the\ncorresponding argument is updated. For each value not found, the argument is\nleft unchanged. The bits are represented by **XValue**, **YValue**,\n**WidthValue**, **HeightValue**, **XNegative**, or **YNegative** and are\ndefined in `x11/c/Xutil.cr`. They will be set whenever one of the values is\ndefined or one of the signs is set.\n\nIf the function returns either the **XValue** or **YValue** flag, you should\nplace the window at the requested position.\n\n###See also\n`Display::wm_geometry`, `Display::set_wm_properties`.","summary":"<p>Allows you to parse the standard window geometry.</p>","abstract":false,"args":[{"name":"parse_string","doc":null,"default_value":"","external_name":"parse_string","restriction":"String"}],"args_string":"(parse_string : String) : NamedTuple()","args_html":"(parse_string : String) : NamedTuple()","location":{"filename":"src/x11.cr","line_number":230,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L230"},"def":{"name":"parse_geometry","args":[{"name":"parse_string","doc":null,"default_value":"","external_name":"parse_string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(x: Int32, y: Int32, width: UInt32, height: UInt32, res: Int32)","visibility":"Public","body":"res = X.parse_geometry(parse_string.to_unsafe, out x_return, out y_return, out width_return, out height_return)\n{x: x_return, y: y_return, width: width_return, height: height_return, res: res}\n"}},{"id":"set_error_handler(handler:X11::C::X::ErrorHandler):X11::C::X::ErrorHandler-class-method","html_id":"set_error_handler(handler:X11::C::X::ErrorHandler):X11::C::X::ErrorHandler-class-method","name":"set_error_handler","doc":"Sets the error handler.\n\n###Arguments\n- **handler** Specifies the program's supplied error handler.\n\n###Description\nXlib generally calls the program's supplied error handler whenever an error\nis received. It is not called on **BadName** errors from **OpenFont**,\n**LookupColor**, or **AllocNamedColor** protocol requests or on **BadFont**\nerrors from a **QueryFont** protocol request. These errors generally are\nreflected back to the program through the procedural interface. Because this\ncondition is not assumed to be fatal, it is acceptable for your error handler\nto return; the returned value is ignored. However, the error handler should\nnot call any functions (directly or indirectly) on the display that will generate\nprotocol requests or that will look for input events. The previous error handler is returned.\n\n###See also\n`display_name`, `Display::error_database_text`, `Display::error_text`,\n`Display::new`, `set_io_error_handler`, `Display::synchronize`.","summary":"<p>Sets the error handler.</p>","abstract":false,"args":[{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"X11::C::X::ErrorHandler"}],"args_string":"(handler : X11::C::X::ErrorHandler) : X11::C::X::ErrorHandler","args_html":"(handler : X11::C::X::ErrorHandler) : X11::C::X::ErrorHandler","location":{"filename":"src/x11.cr","line_number":127,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L127"},"def":{"name":"set_error_handler","args":[{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"X11::C::X::ErrorHandler"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ErrorHandler","visibility":"Public","body":"X.set_error_handler(handler)"}},{"id":"set_io_error_handler(handler:X11::C::X::IOErrorHandler):X11::C::X::IOErrorHandler-class-method","html_id":"set_io_error_handler(handler:X11::C::X::IOErrorHandler):X11::C::X::IOErrorHandler-class-method","name":"set_io_error_handler","doc":"Sets the I/O error handler.\n\n###Arguments\n- **handler** Specifies the program's supplied error handler.\n\n###Description\nThe `set_io_error_handler` sets the fatal I/O error handler. Xlib calls the\nprogram's supplied error handler if any sort of system call error occurs\n(for example, the connection to the server was lost). This is assumed to be\na fatal condition, and the called routine should not return. If the I/O error\nhandler does return, the client process exits.\n\nNote that the previous error handler is returned.\n\n###See also\n`display_name`, `Display::error_database_text`, `Display::error_text`,\n`Display::new`, `set_error_handler`, `Display::synchronize`.","summary":"<p>Sets the I/O error handler.</p>","abstract":false,"args":[{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"X11::C::X::IOErrorHandler"}],"args_string":"(handler : X11::C::X::IOErrorHandler) : X11::C::X::IOErrorHandler","args_html":"(handler : X11::C::X::IOErrorHandler) : X11::C::X::IOErrorHandler","location":{"filename":"src/x11.cr","line_number":149,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L149"},"def":{"name":"set_io_error_handler","args":[{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"X11::C::X::IOErrorHandler"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::IOErrorHandler","visibility":"Public","body":"X.set_io_error_handler(handler)"}},{"id":"set_locale_modifiers(modifier_list:String):String-class-method","html_id":"set_locale_modifiers(modifier_list:String):String-class-method","name":"set_locale_modifiers","doc":"Sets the X modifiers for the current locale setting.\n\n###Arguments\n- **modifier_list** Specifies the modifiers.\n\n###Description\nThe `set_locale_modifiers` function sets the X modifiers for the current\nlocale setting. The modifier_list argument is a null-terminated string of\nthe form `{@category=value}`, that is, having zero or more concatenated\n`@category=value` entries, where category is a category name and value is\nthe (possibly empty) setting for that category. The values are encoded in\nthe current locale. Category names are restricted to the POSIX Portable\nFilename Character Set.\n\nThe local host X locale modifiers announcer (on POSIX-compliant systems, the\nXMODIFIERS environment variable) is appended to the modifier_list to provide\ndefault values on the local host. If a given category appears more than once\nin the list, the first setting in the list is used. If a given category is not\nincluded in the full modifier list, the category is set to an\nimplementation-dependent default for the current locale. An empty value for\na category explicitly specifies the implementation-dependent default.\n\nIf the function is successful, it returns a pointer to a string. The contents\nof the string are such that a subsequent call with that string (in the same\nlocale) will restore the modifiers to the same settings. If modifier_list is\na empty srting, `set_locale_modifiers` also returns a pointer to such a string,\nand the current locale modifiers are not changed.\n\nIf invalid values are given for one or more modifier categories supported by\nthe locale, an empty string is returned, and none of the current modifiers are changed.\n\nAt program startup, the modifiers that are in effect are unspecified until the\nfirst successful call to set them. Whenever the locale is changed, the modifiers\nthat are in effect become unspecified until the next successful call to set them.\nClients should always call `set_locale_modifiers` with a non-empty modifier_list\nafter setting the locale before they call any locale-dependent Xlib routine.\n\nThe only standard modifier category currently defined is `im`, which identifies\nthe desired input method. The values for input method are not standardized.\nA single locale may use multiple input methods, switching input method under\nuser control. The modifier may specify the initial input method in effect or\nan ordered list of input methods. Multiple input methods may be specified in\na single im value string in an implementation-dependent manner.\n\nThe returned modifiers string is owned by Xlib and should not be modified or\nfreed by the client. It may be freed by Xlib after the current locale or\nmodifiers are changed. Until freed, it will not be modified by Xlib.","summary":"<p>Sets the X modifiers for the current locale setting.</p>","abstract":false,"args":[{"name":"modifier_list","doc":null,"default_value":"","external_name":"modifier_list","restriction":"String"}],"args_string":"(modifier_list : String) : String","args_html":"(modifier_list : String) : String","location":{"filename":"src/x11.cr","line_number":289,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L289"},"def":{"name":"set_locale_modifiers","args":[{"name":"modifier_list","doc":null,"default_value":"","external_name":"modifier_list","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if modifier_list.empty?\n  pstr = X.set_locale_modifiers(X11::C::PChar.null)\nelse\n  pstr = X.set_locale_modifiers(modifier_list.to_unsafe)\nend\nif pstr.null?\n  return \"\"\nend\nstr = String.new(pstr)\nX.free(pstr)\nstr\n"}},{"id":"string_to_keysym(string:String):X11::C::KeySym-class-method","html_id":"string_to_keysym(string:String):X11::C::KeySym-class-method","name":"string_to_keysym","doc":"Returns the KeySym representation of a given *string*.\n\n###Arguments\n- **string** Specifies the name of the KeySym that is to be converted.\n\n###Description\nStandard KeySym names are obtained from `x11/c/keysymdef.cr` by removing the\nXK_ prefix from each name. KeySyms that are not part of the Xlib standard also\nmay be obtained with this function. The set of KeySyms that are available in\nthis manner and the mechanisms by which Xlib obtains them is implementation dependent.\n\nIf the KeySym name is not in the Host Portable Character Encoding, the\nresult is implementation dependent. If the specified string does not match\na valid KeySym, `string_to_keysym` returns `NoSymbol`.\n\n###See also\n`convert_case`, `Display::keycode_to_keysym`, `keysym_to_string`, `KeyEvent::lookup_keysym`.","summary":"<p>Returns the KeySym representation of a given <em>string</em>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : X11::C::KeySym","args_html":"(string : String) : <a href=\"X11/C/KeySym.html\">X11::C::KeySym</a>","location":{"filename":"src/x11.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L43"},"def":{"name":"string_to_keysym","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::KeySym","visibility":"Public","body":"X.string_to_keysym(string.to_unsafe)"}},{"id":"supports_locale:Bool-class-method","html_id":"supports_locale:Bool-class-method","name":"supports_locale","doc":"Returns **true** if Xlib functions are capable of operating under the current\nlocale. If it returns **false**.","summary":"<p>Returns <strong>true</strong> if Xlib functions are capable of operating under the current locale.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11.cr","line_number":238,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11.cr#L238"},"def":{"name":"supports_locale","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"X.supports_locale == X::True ? true : false"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"x11/X11/AnyEvent","path":"X11/AnyEvent.html","kind":"class","full_name":"X11::AnyEvent","name":"AnyEvent","abstract":false,"superclass":{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},"ancestors":[{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/any_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::AnyEvent` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/AnyEvent.html\">AnyEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PAnyEvent)-class-method","html_id":"new(event:X11::C::X::PAnyEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PAnyEvent"}],"args_string":"(event : X11::C::X::PAnyEvent)","args_html":"(event : X11::C::X::PAnyEvent)","location":{"filename":"src/x11/any_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PAnyEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::AnyEvent)-class-method","html_id":"new(event:X11::C::X::AnyEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::AnyEvent"}],"args_string":"(event : X11::C::X::AnyEvent)","args_html":"(event : X11::C::X::AnyEvent)","location":{"filename":"src/x11/any_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::AnyEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/any_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/any_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/any_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/any_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/any_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/any_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/any_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PAnyEvent-instance-method","html_id":"to_unsafe:X11::C::X::PAnyEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PAnyEvent","args_html":" : X11::C::X::PAnyEvent","location":{"filename":"src/x11/any_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PAnyEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::AnyEvent-instance-method","html_id":"to_x:X11::C::X::AnyEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::AnyEvent","args_html":" : X11::C::X::AnyEvent","location":{"filename":"src/x11/any_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::AnyEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/any_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/any_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/any_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L59"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/any_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/any_event.cr#L63"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/Arc","path":"X11/Arc.html","kind":"struct","full_name":"X11::Arc","name":"Arc","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/arc.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(x:Int16,y:Int16,width:UInt16,height:UInt16,angle1:Int16,angle2:Int16)-class-method","html_id":"new(x:Int16,y:Int16,width:UInt16,height:UInt16,angle1:Int16,angle2:Int16)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt16"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt16"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Int16"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Int16"}],"args_string":"(x : Int16, y : Int16, width : UInt16, height : UInt16, angle1 : Int16, angle2 : Int16)","args_html":"(x : Int16, y : Int16, width : UInt16, height : UInt16, angle1 : Int16, angle2 : Int16)","location":{"filename":"src/x11/arc.cr","line_number":26,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L26"},"def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt16"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt16"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Int16"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x, y, width, height, angle1, angle2)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(arc:X11::C::X::Arc)-class-method","html_id":"new(arc:X11::C::X::Arc)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"arc","doc":null,"default_value":"","external_name":"arc","restriction":"X11::C::X::Arc"}],"args_string":"(arc : X11::C::X::Arc)","args_html":"(arc : X11::C::X::Arc)","location":{"filename":"src/x11/arc.cr","line_number":12,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L12"},"def":{"name":"new","args":[{"name":"arc","doc":null,"default_value":"","external_name":"arc","restriction":"X11::C::X::Arc"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(arc)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(arc:X11::C::X::PArc)-class-method","html_id":"new(arc:X11::C::X::PArc)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"arc","doc":null,"default_value":"","external_name":"arc","restriction":"X11::C::X::PArc"}],"args_string":"(arc : X11::C::X::PArc)","args_html":"(arc : X11::C::X::PArc)","location":{"filename":"src/x11/arc.cr","line_number":21,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L21"},"def":{"name":"new","args":[{"name":"arc","doc":null,"default_value":"","external_name":"arc","restriction":"X11::C::X::PArc"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(arc)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"angle1:Int16-instance-method","html_id":"angle1:Int16-instance-method","name":"angle1","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/arc.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L9"},"def":{"name":"angle1","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@angle1"}},{"id":"angle1=(angle1:Int16)-instance-method","html_id":"angle1=(angle1:Int16)-instance-method","name":"angle1=","doc":null,"summary":null,"abstract":false,"args":[{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Int16"}],"args_string":"(angle1 : Int16)","args_html":"(angle1 : Int16)","location":{"filename":"src/x11/arc.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L9"},"def":{"name":"angle1=","args":[{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@angle1 = angle1"}},{"id":"angle2:Int16-instance-method","html_id":"angle2:Int16-instance-method","name":"angle2","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/arc.cr","line_number":10,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L10"},"def":{"name":"angle2","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@angle2"}},{"id":"angle2=(angle2:Int16)-instance-method","html_id":"angle2=(angle2:Int16)-instance-method","name":"angle2=","doc":null,"summary":null,"abstract":false,"args":[{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Int16"}],"args_string":"(angle2 : Int16)","args_html":"(angle2 : Int16)","location":{"filename":"src/x11/arc.cr","line_number":10,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L10"},"def":{"name":"angle2=","args":[{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@angle2 = angle2"}},{"id":"height:UInt16-instance-method","html_id":"height:UInt16-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt16","args_html":" : UInt16","location":{"filename":"src/x11/arc.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L8"},"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"@height"}},{"id":"height=(height:UInt16)-instance-method","html_id":"height=(height:UInt16)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt16"}],"args_string":"(height : UInt16)","args_html":"(height : UInt16)","location":{"filename":"src/x11/arc.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L8"},"def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height = height"}},{"id":"to_x:X11::C::X::Arc-instance-method","html_id":"to_x:X11::C::X::Arc-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::Arc","args_html":" : X11::C::X::Arc","location":{"filename":"src/x11/arc.cr","line_number":29,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L29"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::Arc","visibility":"Public","body":"arc = X11::C::X::Arc.new\narc.x = @x\narc.y = @y\narc.width = @width\narc.height = @height\narc.angle1 = @angle1\narc.angle2 = @angle2\narc\n"}},{"id":"width:Int16-instance-method","html_id":"width:Int16-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/arc.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L7"},"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@width"}},{"id":"width=(width:Int16)-instance-method","html_id":"width=(width:Int16)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int16"}],"args_string":"(width : Int16)","args_html":"(width : Int16)","location":{"filename":"src/x11/arc.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L7"},"def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width = width"}},{"id":"x:Int16-instance-method","html_id":"x:Int16-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/arc.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L5"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@x"}},{"id":"x=(x:Int16)-instance-method","html_id":"x=(x:Int16)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"}],"args_string":"(x : Int16)","args_html":"(x : Int16)","location":{"filename":"src/x11/arc.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L5"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = x"}},{"id":"y:Int16-instance-method","html_id":"y:Int16-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/arc.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L6"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@y"}},{"id":"y=(y:Int16)-instance-method","html_id":"y=(y:Int16)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"}],"args_string":"(y : Int16)","args_html":"(y : Int16)","location":{"filename":"src/x11/arc.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/arc.cr#L6"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = y"}}],"macros":[],"types":[]},{"html_id":"x11/X11/Atom","path":"X11/Atom.html","kind":"enum","full_name":"X11::Atom","name":"Atom","abstract":false,"superclass":null,"ancestors":[{"html_id":"x11/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"x11/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/atom.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L7"}],"repository_name":"x11","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"Primary","name":"Primary","value":"1_u64","doc":null,"summary":null},{"id":"Secondary","name":"Secondary","value":"2_u64","doc":null,"summary":null},{"id":"Arc","name":"Arc","value":"3_u64","doc":null,"summary":null},{"id":"Atom","name":"Atom","value":"4_u64","doc":null,"summary":null},{"id":"Bitmap","name":"Bitmap","value":"5_u64","doc":null,"summary":null},{"id":"Cardinal","name":"Cardinal","value":"6_u64","doc":null,"summary":null},{"id":"Colormap","name":"Colormap","value":"7_u64","doc":null,"summary":null},{"id":"Cursor","name":"Cursor","value":"8_u64","doc":null,"summary":null},{"id":"CutBuffer0","name":"CutBuffer0","value":"9_u64","doc":null,"summary":null},{"id":"CutBuffer1","name":"CutBuffer1","value":"10_u64","doc":null,"summary":null},{"id":"CutBuffer2","name":"CutBuffer2","value":"11_u64","doc":null,"summary":null},{"id":"CutBuffer3","name":"CutBuffer3","value":"12_u64","doc":null,"summary":null},{"id":"CutBuffer4","name":"CutBuffer4","value":"13_u64","doc":null,"summary":null},{"id":"CutBuffer5","name":"CutBuffer5","value":"14_u64","doc":null,"summary":null},{"id":"CutBuffer6","name":"CutBuffer6","value":"15_u64","doc":null,"summary":null},{"id":"CutBuffer7","name":"CutBuffer7","value":"16_u64","doc":null,"summary":null},{"id":"Drawable","name":"Drawable","value":"17_u64","doc":null,"summary":null},{"id":"Font","name":"Font","value":"18_u64","doc":null,"summary":null},{"id":"Integer","name":"Integer","value":"19_u64","doc":null,"summary":null},{"id":"Pixmap","name":"Pixmap","value":"20_u64","doc":null,"summary":null},{"id":"Point","name":"Point","value":"21_u64","doc":null,"summary":null},{"id":"Rectangle","name":"Rectangle","value":"22_u64","doc":null,"summary":null},{"id":"ResourceManager","name":"ResourceManager","value":"23_u64","doc":null,"summary":null},{"id":"RgbColorMap","name":"RgbColorMap","value":"24_u64","doc":null,"summary":null},{"id":"RgbBestMap","name":"RgbBestMap","value":"25_u64","doc":null,"summary":null},{"id":"RgbBlueMap","name":"RgbBlueMap","value":"26_u64","doc":null,"summary":null},{"id":"RgbDefaultMap","name":"RgbDefaultMap","value":"27_u64","doc":null,"summary":null},{"id":"RgbGrayMap","name":"RgbGrayMap","value":"28_u64","doc":null,"summary":null},{"id":"RgbGreenMap","name":"RgbGreenMap","value":"29_u64","doc":null,"summary":null},{"id":"RgbRedMap","name":"RgbRedMap","value":"30_u64","doc":null,"summary":null},{"id":"String","name":"String","value":"31_u64","doc":null,"summary":null},{"id":"VisualID","name":"VisualID","value":"32_u64","doc":null,"summary":null},{"id":"Window","name":"Window","value":"33_u64","doc":null,"summary":null},{"id":"WmCommand","name":"WmCommand","value":"34_u64","doc":null,"summary":null},{"id":"WmHints","name":"WmHints","value":"35_u64","doc":null,"summary":null},{"id":"WmClientMachine","name":"WmClientMachine","value":"36_u64","doc":null,"summary":null},{"id":"WmIconName","name":"WmIconName","value":"37_u64","doc":null,"summary":null},{"id":"WmIconSize","name":"WmIconSize","value":"38_u64","doc":null,"summary":null},{"id":"WmName","name":"WmName","value":"39_u64","doc":null,"summary":null},{"id":"WmNormalHints","name":"WmNormalHints","value":"40_u64","doc":null,"summary":null},{"id":"WmSizeHints","name":"WmSizeHints","value":"41_u64","doc":null,"summary":null},{"id":"WmZomHints","name":"WmZomHints","value":"42_u64","doc":null,"summary":null},{"id":"MinSpace","name":"MinSpace","value":"43_u64","doc":null,"summary":null},{"id":"NormSpace","name":"NormSpace","value":"44_u64","doc":null,"summary":null},{"id":"MaxSpace","name":"MaxSpace","value":"45_u64","doc":null,"summary":null},{"id":"EndSpace","name":"EndSpace","value":"46_u64","doc":null,"summary":null},{"id":"SuperscriptX","name":"SuperscriptX","value":"47_u64","doc":null,"summary":null},{"id":"SuperscriptY","name":"SuperscriptY","value":"48_u64","doc":null,"summary":null},{"id":"SubscriptX","name":"SubscriptX","value":"49_u64","doc":null,"summary":null},{"id":"SubscriptY","name":"SubscriptY","value":"50_u64","doc":null,"summary":null},{"id":"UnderlinePosition","name":"UnderlinePosition","value":"51_u64","doc":null,"summary":null},{"id":"UnderlineThickness","name":"UnderlineThickness","value":"52_u64","doc":null,"summary":null},{"id":"StrikeoutAscent","name":"StrikeoutAscent","value":"53_u64","doc":null,"summary":null},{"id":"StrikeoutDescent","name":"StrikeoutDescent","value":"54_u64","doc":null,"summary":null},{"id":"ItalicAngle","name":"ItalicAngle","value":"55_u64","doc":null,"summary":null},{"id":"XHeight","name":"XHeight","value":"56_u64","doc":null,"summary":null},{"id":"QuadWidth","name":"QuadWidth","value":"57_u64","doc":null,"summary":null},{"id":"Weight","name":"Weight","value":"58_u64","doc":null,"summary":null},{"id":"PointSize","name":"PointSize","value":"59_u64","doc":null,"summary":null},{"id":"Resolution","name":"Resolution","value":"60_u64","doc":null,"summary":null},{"id":"Copyright","name":"Copyright","value":"61_u64","doc":null,"summary":null},{"id":"Notice","name":"Notice","value":"62_u64","doc":null,"summary":null},{"id":"FontName","name":"FontName","value":"63_u64","doc":null,"summary":null},{"id":"FamilyName","name":"FamilyName","value":"64_u64","doc":null,"summary":null},{"id":"FullName","name":"FullName","value":"65_u64","doc":null,"summary":null},{"id":"CapHeight","name":"CapHeight","value":"66_u64","doc":null,"summary":null},{"id":"WmClass","name":"WmClass","value":"67_u64","doc":null,"summary":null},{"id":"WmTransientFor","name":"WmTransientFor","value":"68_u64","doc":null,"summary":null},{"id":"LastPredefined","name":"LastPredefined","value":"68_u64","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Predefined atoms.","summary":"<p>Predefined atoms.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"arc?-instance-method","html_id":"arc?-instance-method","name":"arc?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":10,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L10"},"def":{"name":"arc?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Arc"}},{"id":"atom?-instance-method","html_id":"atom?-instance-method","name":"atom?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L11"},"def":{"name":"atom?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Atom"}},{"id":"bitmap?-instance-method","html_id":"bitmap?-instance-method","name":"bitmap?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":12,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L12"},"def":{"name":"bitmap?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Bitmap"}},{"id":"cap_height?-instance-method","html_id":"cap_height?-instance-method","name":"cap_height?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":73,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L73"},"def":{"name":"cap_height?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CapHeight"}},{"id":"cardinal?-instance-method","html_id":"cardinal?-instance-method","name":"cardinal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":13,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L13"},"def":{"name":"cardinal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Cardinal"}},{"id":"colormap?-instance-method","html_id":"colormap?-instance-method","name":"colormap?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":14,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L14"},"def":{"name":"colormap?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Colormap"}},{"id":"copyright?-instance-method","html_id":"copyright?-instance-method","name":"copyright?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":68,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L68"},"def":{"name":"copyright?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Copyright"}},{"id":"cursor?-instance-method","html_id":"cursor?-instance-method","name":"cursor?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":15,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L15"},"def":{"name":"cursor?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Cursor"}},{"id":"cut_buffer0?-instance-method","html_id":"cut_buffer0?-instance-method","name":"cut_buffer0?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L16"},"def":{"name":"cut_buffer0?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CutBuffer0"}},{"id":"cut_buffer1?-instance-method","html_id":"cut_buffer1?-instance-method","name":"cut_buffer1?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":17,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L17"},"def":{"name":"cut_buffer1?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CutBuffer1"}},{"id":"cut_buffer2?-instance-method","html_id":"cut_buffer2?-instance-method","name":"cut_buffer2?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":18,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L18"},"def":{"name":"cut_buffer2?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CutBuffer2"}},{"id":"cut_buffer3?-instance-method","html_id":"cut_buffer3?-instance-method","name":"cut_buffer3?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L19"},"def":{"name":"cut_buffer3?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CutBuffer3"}},{"id":"cut_buffer4?-instance-method","html_id":"cut_buffer4?-instance-method","name":"cut_buffer4?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":20,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L20"},"def":{"name":"cut_buffer4?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CutBuffer4"}},{"id":"cut_buffer5?-instance-method","html_id":"cut_buffer5?-instance-method","name":"cut_buffer5?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":21,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L21"},"def":{"name":"cut_buffer5?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CutBuffer5"}},{"id":"cut_buffer6?-instance-method","html_id":"cut_buffer6?-instance-method","name":"cut_buffer6?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":22,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L22"},"def":{"name":"cut_buffer6?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CutBuffer6"}},{"id":"cut_buffer7?-instance-method","html_id":"cut_buffer7?-instance-method","name":"cut_buffer7?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L23"},"def":{"name":"cut_buffer7?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CutBuffer7"}},{"id":"drawable?-instance-method","html_id":"drawable?-instance-method","name":"drawable?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":24,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L24"},"def":{"name":"drawable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Drawable"}},{"id":"end_space?-instance-method","html_id":"end_space?-instance-method","name":"end_space?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":53,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L53"},"def":{"name":"end_space?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == EndSpace"}},{"id":"family_name?-instance-method","html_id":"family_name?-instance-method","name":"family_name?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L71"},"def":{"name":"family_name?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FamilyName"}},{"id":"font?-instance-method","html_id":"font?-instance-method","name":"font?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":25,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L25"},"def":{"name":"font?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Font"}},{"id":"font_name?-instance-method","html_id":"font_name?-instance-method","name":"font_name?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":70,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L70"},"def":{"name":"font_name?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FontName"}},{"id":"full_name?-instance-method","html_id":"full_name?-instance-method","name":"full_name?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":72,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L72"},"def":{"name":"full_name?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FullName"}},{"id":"integer?-instance-method","html_id":"integer?-instance-method","name":"integer?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":26,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L26"},"def":{"name":"integer?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Integer"}},{"id":"italic_angle?-instance-method","html_id":"italic_angle?-instance-method","name":"italic_angle?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":62,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L62"},"def":{"name":"italic_angle?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ItalicAngle"}},{"id":"last_predefined?-instance-method","html_id":"last_predefined?-instance-method","name":"last_predefined?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":77,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L77"},"def":{"name":"last_predefined?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LastPredefined"}},{"id":"max_space?-instance-method","html_id":"max_space?-instance-method","name":"max_space?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":52,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L52"},"def":{"name":"max_space?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MaxSpace"}},{"id":"min_space?-instance-method","html_id":"min_space?-instance-method","name":"min_space?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":50,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L50"},"def":{"name":"min_space?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MinSpace"}},{"id":"norm_space?-instance-method","html_id":"norm_space?-instance-method","name":"norm_space?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L51"},"def":{"name":"norm_space?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NormSpace"}},{"id":"notice?-instance-method","html_id":"notice?-instance-method","name":"notice?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":69,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L69"},"def":{"name":"notice?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Notice"}},{"id":"pixmap?-instance-method","html_id":"pixmap?-instance-method","name":"pixmap?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L27"},"def":{"name":"pixmap?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Pixmap"}},{"id":"point?-instance-method","html_id":"point?-instance-method","name":"point?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":28,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L28"},"def":{"name":"point?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Point"}},{"id":"point_size?-instance-method","html_id":"point_size?-instance-method","name":"point_size?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":66,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L66"},"def":{"name":"point_size?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PointSize"}},{"id":"primary?-instance-method","html_id":"primary?-instance-method","name":"primary?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L8"},"def":{"name":"primary?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Primary"}},{"id":"quad_width?-instance-method","html_id":"quad_width?-instance-method","name":"quad_width?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":64,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L64"},"def":{"name":"quad_width?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == QuadWidth"}},{"id":"rectangle?-instance-method","html_id":"rectangle?-instance-method","name":"rectangle?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":29,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L29"},"def":{"name":"rectangle?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Rectangle"}},{"id":"resolution?-instance-method","html_id":"resolution?-instance-method","name":"resolution?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L67"},"def":{"name":"resolution?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Resolution"}},{"id":"resource_manager?-instance-method","html_id":"resource_manager?-instance-method","name":"resource_manager?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":30,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L30"},"def":{"name":"resource_manager?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ResourceManager"}},{"id":"rgb_best_map?-instance-method","html_id":"rgb_best_map?-instance-method","name":"rgb_best_map?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":32,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L32"},"def":{"name":"rgb_best_map?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RgbBestMap"}},{"id":"rgb_blue_map?-instance-method","html_id":"rgb_blue_map?-instance-method","name":"rgb_blue_map?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":33,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L33"},"def":{"name":"rgb_blue_map?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RgbBlueMap"}},{"id":"rgb_color_map?-instance-method","html_id":"rgb_color_map?-instance-method","name":"rgb_color_map?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L31"},"def":{"name":"rgb_color_map?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RgbColorMap"}},{"id":"rgb_default_map?-instance-method","html_id":"rgb_default_map?-instance-method","name":"rgb_default_map?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":34,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L34"},"def":{"name":"rgb_default_map?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RgbDefaultMap"}},{"id":"rgb_gray_map?-instance-method","html_id":"rgb_gray_map?-instance-method","name":"rgb_gray_map?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L35"},"def":{"name":"rgb_gray_map?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RgbGrayMap"}},{"id":"rgb_green_map?-instance-method","html_id":"rgb_green_map?-instance-method","name":"rgb_green_map?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":36,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L36"},"def":{"name":"rgb_green_map?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RgbGreenMap"}},{"id":"rgb_red_map?-instance-method","html_id":"rgb_red_map?-instance-method","name":"rgb_red_map?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":37,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L37"},"def":{"name":"rgb_red_map?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RgbRedMap"}},{"id":"secondary?-instance-method","html_id":"secondary?-instance-method","name":"secondary?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L9"},"def":{"name":"secondary?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Secondary"}},{"id":"strikeout_ascent?-instance-method","html_id":"strikeout_ascent?-instance-method","name":"strikeout_ascent?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":60,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L60"},"def":{"name":"strikeout_ascent?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == StrikeoutAscent"}},{"id":"strikeout_descent?-instance-method","html_id":"strikeout_descent?-instance-method","name":"strikeout_descent?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":61,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L61"},"def":{"name":"strikeout_descent?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == StrikeoutDescent"}},{"id":"string?-instance-method","html_id":"string?-instance-method","name":"string?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":38,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L38"},"def":{"name":"string?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == String"}},{"id":"subscript_x?-instance-method","html_id":"subscript_x?-instance-method","name":"subscript_x?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":56,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L56"},"def":{"name":"subscript_x?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SubscriptX"}},{"id":"subscript_y?-instance-method","html_id":"subscript_y?-instance-method","name":"subscript_y?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":57,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L57"},"def":{"name":"subscript_y?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SubscriptY"}},{"id":"superscript_x?-instance-method","html_id":"superscript_x?-instance-method","name":"superscript_x?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":54,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L54"},"def":{"name":"superscript_x?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SuperscriptX"}},{"id":"superscript_y?-instance-method","html_id":"superscript_y?-instance-method","name":"superscript_y?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L55"},"def":{"name":"superscript_y?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SuperscriptY"}},{"id":"to_u64:UInt64-instance-method","html_id":"to_u64:UInt64-instance-method","name":"to_u64","doc":"Returns self converted to UInt64.","summary":"<p>Returns self converted to UInt64.</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/atom.cr","line_number":80,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L80"},"def":{"name":"to_u64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"self.value"}},{"id":"underline_position?-instance-method","html_id":"underline_position?-instance-method","name":"underline_position?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":58,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L58"},"def":{"name":"underline_position?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == UnderlinePosition"}},{"id":"underline_thickness?-instance-method","html_id":"underline_thickness?-instance-method","name":"underline_thickness?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L59"},"def":{"name":"underline_thickness?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == UnderlineThickness"}},{"id":"visual_id?-instance-method","html_id":"visual_id?-instance-method","name":"visual_id?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L39"},"def":{"name":"visual_id?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == VisualID"}},{"id":"weight?-instance-method","html_id":"weight?-instance-method","name":"weight?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":65,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L65"},"def":{"name":"weight?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Weight"}},{"id":"window?-instance-method","html_id":"window?-instance-method","name":"window?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":40,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L40"},"def":{"name":"window?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Window"}},{"id":"wm_class?-instance-method","html_id":"wm_class?-instance-method","name":"wm_class?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":74,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L74"},"def":{"name":"wm_class?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WmClass"}},{"id":"wm_client_machine?-instance-method","html_id":"wm_client_machine?-instance-method","name":"wm_client_machine?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L43"},"def":{"name":"wm_client_machine?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WmClientMachine"}},{"id":"wm_command?-instance-method","html_id":"wm_command?-instance-method","name":"wm_command?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":41,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L41"},"def":{"name":"wm_command?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WmCommand"}},{"id":"wm_hints?-instance-method","html_id":"wm_hints?-instance-method","name":"wm_hints?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":42,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L42"},"def":{"name":"wm_hints?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WmHints"}},{"id":"wm_icon_name?-instance-method","html_id":"wm_icon_name?-instance-method","name":"wm_icon_name?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":44,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L44"},"def":{"name":"wm_icon_name?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WmIconName"}},{"id":"wm_icon_size?-instance-method","html_id":"wm_icon_size?-instance-method","name":"wm_icon_size?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":45,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L45"},"def":{"name":"wm_icon_size?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WmIconSize"}},{"id":"wm_name?-instance-method","html_id":"wm_name?-instance-method","name":"wm_name?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":46,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L46"},"def":{"name":"wm_name?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WmName"}},{"id":"wm_normal_hints?-instance-method","html_id":"wm_normal_hints?-instance-method","name":"wm_normal_hints?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L47"},"def":{"name":"wm_normal_hints?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WmNormalHints"}},{"id":"wm_size_hints?-instance-method","html_id":"wm_size_hints?-instance-method","name":"wm_size_hints?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":48,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L48"},"def":{"name":"wm_size_hints?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WmSizeHints"}},{"id":"wm_transient_for?-instance-method","html_id":"wm_transient_for?-instance-method","name":"wm_transient_for?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L75"},"def":{"name":"wm_transient_for?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WmTransientFor"}},{"id":"wm_zom_hints?-instance-method","html_id":"wm_zom_hints?-instance-method","name":"wm_zom_hints?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":49,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L49"},"def":{"name":"wm_zom_hints?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WmZomHints"}},{"id":"x_height?-instance-method","html_id":"x_height?-instance-method","name":"x_height?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/atom.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/atom.cr#L63"},"def":{"name":"x_height?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == XHeight"}}],"macros":[],"types":[]},{"html_id":"x11/X11/BadAllocException","path":"X11/BadAllocException.html","kind":"class","full_name":"X11::BadAllocException","name":"BadAllocException","abstract":false,"superclass":{"html_id":"x11/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"x11/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/bad_alloc_exception.cr","line_number":2,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/bad_alloc_exception.cr#L2"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/ButtonEvent","path":"X11/ButtonEvent.html","kind":"class","full_name":"X11::ButtonEvent","name":"ButtonEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/button_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::ButtonEvent` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/ButtonEvent.html\">ButtonEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PButtonEvent)-class-method","html_id":"new(event:X11::C::X::PButtonEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PButtonEvent"}],"args_string":"(event : X11::C::X::PButtonEvent)","args_html":"(event : X11::C::X::PButtonEvent)","location":{"filename":"src/x11/button_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PButtonEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::ButtonEvent)-class-method","html_id":"new(event:X11::C::X::ButtonEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ButtonEvent"}],"args_string":"(event : X11::C::X::ButtonEvent)","args_html":"(event : X11::C::X::ButtonEvent)","location":{"filename":"src/x11/button_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ButtonEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/button_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"button:UInt32-instance-method","html_id":"button:UInt32-instance-method","name":"button","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/x11/button_event.cr","line_number":139,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L139"},"def":{"name":"button","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@event.button"}},{"id":"button=(button:UInt32)-instance-method","html_id":"button=(button:UInt32)-instance-method","name":"button=","doc":null,"summary":null,"abstract":false,"args":[{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"UInt32"}],"args_string":"(button : UInt32)","args_html":"(button : UInt32)","location":{"filename":"src/x11/button_event.cr","line_number":143,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L143"},"def":{"name":"button=","args":[{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.button = button"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/button_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L59"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/button_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L63"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"press?:Bool-instance-method","html_id":"press?:Bool-instance-method","name":"press?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/button_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L27"},"def":{"name":"press?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.type == ButtonPress"}},{"id":"release?:Bool-instance-method","html_id":"release?:Bool-instance-method","name":"release?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/button_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L31"},"def":{"name":"release?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.type == ButtonRelease"}},{"id":"root:X11::C::Window-instance-method","html_id":"root:X11::C::Window-instance-method","name":"root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/button_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L75"},"def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.root"}},{"id":"root=(root:X11::C::Window)-instance-method","html_id":"root=(root:X11::C::Window)-instance-method","name":"root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"X11::C::Window"}],"args_string":"(root : X11::C::Window)","args_html":"(root : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/button_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L79"},"def":{"name":"root=","args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.root = root"}},{"id":"same_screen:Bool-instance-method","html_id":"same_screen:Bool-instance-method","name":"same_screen","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/button_event.cr","line_number":147,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L147"},"def":{"name":"same_screen","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.same_screen ? true : false"}},{"id":"same_screen=(same_screen:Bool)-instance-method","html_id":"same_screen=(same_screen:Bool)-instance-method","name":"same_screen=","doc":null,"summary":null,"abstract":false,"args":[{"name":"same_screen","doc":null,"default_value":"","external_name":"same_screen","restriction":"Bool"}],"args_string":"(same_screen : Bool)","args_html":"(same_screen : Bool)","location":{"filename":"src/x11/button_event.cr","line_number":151,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L151"},"def":{"name":"same_screen=","args":[{"name":"same_screen","doc":null,"default_value":"","external_name":"same_screen","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.same_screen = same_screen ? 1 : 0"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/button_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L51"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/button_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L55"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/button_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L43"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/button_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L47"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"state:UInt32-instance-method","html_id":"state:UInt32-instance-method","name":"state","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/x11/button_event.cr","line_number":131,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L131"},"def":{"name":"state","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@event.state"}},{"id":"state=(state:UInt32)-instance-method","html_id":"state=(state:UInt32)-instance-method","name":"state=","doc":null,"summary":null,"abstract":false,"args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"UInt32"}],"args_string":"(state : UInt32)","args_html":"(state : UInt32)","location":{"filename":"src/x11/button_event.cr","line_number":135,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L135"},"def":{"name":"state=","args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.state = state"}},{"id":"sub_window:X11::C::Window-instance-method","html_id":"sub_window:X11::C::Window-instance-method","name":"sub_window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/button_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L83"},"def":{"name":"sub_window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.subwindow"}},{"id":"sub_window=(sub_window:X11::C::Window)-instance-method","html_id":"sub_window=(sub_window:X11::C::Window)-instance-method","name":"sub_window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"sub_window","doc":null,"default_value":"","external_name":"sub_window","restriction":"X11::C::Window"}],"args_string":"(sub_window : X11::C::Window)","args_html":"(sub_window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/button_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L87"},"def":{"name":"sub_window=","args":[{"name":"sub_window","doc":null,"default_value":"","external_name":"sub_window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.subwindow = sub_window"}},{"id":"time:X11::C::Time-instance-method","html_id":"time:X11::C::Time-instance-method","name":"time","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Time","args_html":" : <a href=\"../X11/C/Time.html\">X11::C::Time</a>","location":{"filename":"src/x11/button_event.cr","line_number":91,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L91"},"def":{"name":"time","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Time","visibility":"Public","body":"@event.time"}},{"id":"time=(time:X11::C::Time)-instance-method","html_id":"time=(time:X11::C::Time)-instance-method","name":"time=","doc":null,"summary":null,"abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(time : X11::C::Time)","args_html":"(time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>)","location":{"filename":"src/x11/button_event.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L95"},"def":{"name":"time=","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.time = time"}},{"id":"to_unsafe:X11::C::X::PButtonEvent-instance-method","html_id":"to_unsafe:X11::C::X::PButtonEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PButtonEvent","args_html":" : X11::C::X::PButtonEvent","location":{"filename":"src/x11/button_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PButtonEvent","visibility":"Public","body":"pointerof(@event)"}},{"id":"to_x:X11::C::X::ButtonEvent-instance-method","html_id":"to_x:X11::C::X::ButtonEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::ButtonEvent","args_html":" : X11::C::X::ButtonEvent","location":{"filename":"src/x11/button_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ButtonEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/button_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L35"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/button_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L39"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/button_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/button_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/button_event.cr","line_number":99,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L99"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","args_html":"(x : Int32)","location":{"filename":"src/x11/button_event.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L103"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x = x"}},{"id":"x_root:Int32-instance-method","html_id":"x_root:Int32-instance-method","name":"x_root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/button_event.cr","line_number":115,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L115"},"def":{"name":"x_root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x_root"}},{"id":"x_root=(x_root:Int32)-instance-method","html_id":"x_root=(x_root:Int32)-instance-method","name":"x_root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x_root","doc":null,"default_value":"","external_name":"x_root","restriction":"Int32"}],"args_string":"(x_root : Int32)","args_html":"(x_root : Int32)","location":{"filename":"src/x11/button_event.cr","line_number":119,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L119"},"def":{"name":"x_root=","args":[{"name":"x_root","doc":null,"default_value":"","external_name":"x_root","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x_root = x_root"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/button_event.cr","line_number":107,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L107"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","args_html":"(y : Int32)","location":{"filename":"src/x11/button_event.cr","line_number":111,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L111"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y = y"}},{"id":"y_root:Int32-instance-method","html_id":"y_root:Int32-instance-method","name":"y_root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/button_event.cr","line_number":123,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L123"},"def":{"name":"y_root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y_root"}},{"id":"y_root=(y_root:Int32)-instance-method","html_id":"y_root=(y_root:Int32)-instance-method","name":"y_root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y_root","doc":null,"default_value":"","external_name":"y_root","restriction":"Int32"}],"args_string":"(y_root : Int32)","args_html":"(y_root : Int32)","location":{"filename":"src/x11/button_event.cr","line_number":127,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/button_event.cr#L127"},"def":{"name":"y_root=","args":[{"name":"y_root","doc":null,"default_value":"","external_name":"y_root","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y_root = y_root"}}],"macros":[],"types":[]},{"html_id":"x11/X11/C","path":"X11/C.html","kind":"module","full_name":"X11::C","name":"C","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L3"},{"filename":"src/x11/c/Xatom.cr","line_number":1,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xatom.cr#L1"},{"filename":"src/x11/c/Xlib.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3"},{"filename":"src/x11/c/XlibConf.cr","line_number":1,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/XlibConf.cr#L1"},{"filename":"src/x11/c/Xmd.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xmd.cr#L3"},{"filename":"src/x11/c/Xregion.cr","line_number":1,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xregion.cr#L1"},{"filename":"src/x11/c/Xtos.cr","line_number":1,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xtos.cr#L1"},{"filename":"src/x11/c/Xutil.cr","line_number":1,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L1"},{"filename":"src/x11/c/cursorfont.cr","line_number":1,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/cursorfont.cr#L1"},{"filename":"src/x11/c/keysym.cr","line_number":1,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/keysym.cr#L1"},{"filename":"src/x11/c/keysymdef.cr","line_number":1,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/keysymdef.cr#L1"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"Above","name":"Above","value":"0","doc":null,"summary":null},{"id":"AllocAll","name":"AllocAll","value":"1","doc":"create map with no entries","summary":"<p>create map with no entries</p>"},{"id":"AllocNone","name":"AllocNone","value":"0","doc":null,"summary":null},{"id":"AllowExposures","name":"AllowExposures","value":"1","doc":null,"summary":null},{"id":"AllTemporary","name":"AllTemporary","value":"0_i64","doc":"special Button Code, passed to GrabButton","summary":"<p>special Button Code, passed to GrabButton</p>"},{"id":"AlreadyGrabbed","name":"AlreadyGrabbed","value":"1","doc":null,"summary":null},{"id":"Always","name":"Always","value":"2","doc":null,"summary":null},{"id":"AnyButton","name":"AnyButton","value":"0_i64","doc":"special Key Code, passed to GrabKey","summary":"<p>special Key Code, passed to GrabKey</p>"},{"id":"AnyKey","name":"AnyKey","value":"0_i64","doc":"special Atom, passed to GetProperty","summary":"<p>special Atom, passed to GetProperty</p>"},{"id":"AnyModifier","name":"AnyModifier","value":"(1 << 15)","doc":null,"summary":null},{"id":"AnyPropertyType","name":"AnyPropertyType","value":"0_i64","doc":"focus window in SetInputFocus","summary":"<p>focus window in SetInputFocus</p>"},{"id":"ArcChord","name":"ArcChord","value":"0","doc":null,"summary":null},{"id":"ArcPieSlice","name":"ArcPieSlice","value":"1","doc":"join endpoints of arc","summary":"<p>join endpoints of arc</p>"},{"id":"AsyncBoth","name":"AsyncBoth","value":"6","doc":null,"summary":null},{"id":"AsyncKeyboard","name":"AsyncKeyboard","value":"3","doc":null,"summary":null},{"id":"AsyncPointer","name":"AsyncPointer","value":"0","doc":null,"summary":null},{"id":"AutoRepeatModeDefault","name":"AutoRepeatModeDefault","value":"2","doc":null,"summary":null},{"id":"AutoRepeatModeOff","name":"AutoRepeatModeOff","value":"0","doc":null,"summary":null},{"id":"AutoRepeatModeOn","name":"AutoRepeatModeOn","value":"1","doc":null,"summary":null},{"id":"BadAccess","name":"BadAccess","value":"10","doc":"parameter not a Pixmap or Window","summary":"<p>parameter not a Pixmap or Window</p>"},{"id":"BadAlloc","name":"BadAlloc","value":"11","doc":"depending on context:\n\t- key/button already grabbed\n- attempt to free an illegal cmap entry\n\t- attempt to store into a read-only color map entry.\n- attempt to modify the access control list from other than the local host.\n\t- key/button already grabbed\n- attempt to free an illegal cmap entry\n\t- attempt to store into a read-only color map entry.\n- attempt to modify the access control list from other than the local host.","summary":"<p>depending on context: \t- key/button already grabbed - attempt to free an illegal cmap entry \t- attempt to store into a read-only color map entry.</p>"},{"id":"BadAtom","name":"BadAtom","value":"5","doc":"parameter not a Pixmap","summary":"<p>parameter not a Pixmap</p>"},{"id":"BadColor","name":"BadColor","value":"12","doc":"insufficient resources","summary":"<p>insufficient resources</p>"},{"id":"BadCursor","name":"BadCursor","value":"6","doc":"parameter not an Atom","summary":"<p>parameter not an Atom</p>"},{"id":"BadDrawable","name":"BadDrawable","value":"9","doc":"parameter mismatch","summary":"<p>parameter mismatch</p>"},{"id":"BadFont","name":"BadFont","value":"7","doc":"parameter not a Cursor","summary":"<p>parameter not a Cursor</p>"},{"id":"BadGC","name":"BadGC","value":"13","doc":"no such colormap","summary":"<p>no such colormap</p>"},{"id":"BadIDChoice","name":"BadIDChoice","value":"14","doc":"parameter not a GC","summary":"<p>parameter not a GC</p>"},{"id":"BadImplementation","name":"BadImplementation","value":"17","doc":"Request length incorrect","summary":"<p>Request length incorrect</p>"},{"id":"BadLength","name":"BadLength","value":"16","doc":"font or color name doesn't exist","summary":"<p>font or color name doesn't exist</p>"},{"id":"BadMatch","name":"BadMatch","value":"8","doc":"parameter not a Font","summary":"<p>parameter not a Font</p>"},{"id":"BadName","name":"BadName","value":"15","doc":"choice not in range or already used","summary":"<p>choice not in range or already used</p>"},{"id":"BadPixmap","name":"BadPixmap","value":"4","doc":"parameter not a Window","summary":"<p>parameter not a Window</p>"},{"id":"BadRequest","name":"BadRequest","value":"1","doc":"everything's okay","summary":"<p>everything's okay</p>"},{"id":"BadValue","name":"BadValue","value":"2","doc":"bad request code","summary":"<p>bad request code</p>"},{"id":"BadWindow","name":"BadWindow","value":"3","doc":"int parameter out of range","summary":"<p>int parameter out of range</p>"},{"id":"Below","name":"Below","value":"1","doc":null,"summary":null},{"id":"BottomIf","name":"BottomIf","value":"3","doc":null,"summary":null},{"id":"Button1","name":"Button1","value":"1","doc":null,"summary":null},{"id":"Button1Mask","name":"Button1Mask","value":"(1 << 8)","doc":null,"summary":null},{"id":"Button1MotionMask","name":"Button1MotionMask","value":"(1_i64 << 8)","doc":null,"summary":null},{"id":"Button2","name":"Button2","value":"2","doc":null,"summary":null},{"id":"Button2Mask","name":"Button2Mask","value":"(1 << 9)","doc":null,"summary":null},{"id":"Button2MotionMask","name":"Button2MotionMask","value":"(1_i64 << 9)","doc":null,"summary":null},{"id":"Button3","name":"Button3","value":"3","doc":null,"summary":null},{"id":"Button3Mask","name":"Button3Mask","value":"(1 << 10)","doc":null,"summary":null},{"id":"Button3MotionMask","name":"Button3MotionMask","value":"(1_i64 << 10)","doc":null,"summary":null},{"id":"Button4","name":"Button4","value":"4","doc":null,"summary":null},{"id":"Button4Mask","name":"Button4Mask","value":"(1 << 11)","doc":null,"summary":null},{"id":"Button4MotionMask","name":"Button4MotionMask","value":"(1_i64 << 11)","doc":null,"summary":null},{"id":"Button5","name":"Button5","value":"5","doc":null,"summary":null},{"id":"Button5Mask","name":"Button5Mask","value":"(1 << 12)","doc":null,"summary":null},{"id":"Button5MotionMask","name":"Button5MotionMask","value":"(1_i64 << 12)","doc":null,"summary":null},{"id":"ButtonMotionMask","name":"ButtonMotionMask","value":"(1_i64 << 13)","doc":null,"summary":null},{"id":"ButtonPress","name":"ButtonPress","value":"4","doc":null,"summary":null},{"id":"ButtonPressMask","name":"ButtonPressMask","value":"(1_i64 << 2)","doc":null,"summary":null},{"id":"ButtonRelease","name":"ButtonRelease","value":"5","doc":null,"summary":null},{"id":"ButtonReleaseMask","name":"ButtonReleaseMask","value":"(1_i64 << 3)","doc":null,"summary":null},{"id":"CapButt","name":"CapButt","value":"1","doc":null,"summary":null},{"id":"CapNotLast","name":"CapNotLast","value":"0","doc":null,"summary":null},{"id":"CapProjecting","name":"CapProjecting","value":"3","doc":null,"summary":null},{"id":"CapRound","name":"CapRound","value":"2","doc":null,"summary":null},{"id":"CenterGravity","name":"CenterGravity","value":"5","doc":null,"summary":null},{"id":"CirculateNotify","name":"CirculateNotify","value":"26","doc":null,"summary":null},{"id":"CirculateRequest","name":"CirculateRequest","value":"27","doc":null,"summary":null},{"id":"ClientMessage","name":"ClientMessage","value":"33","doc":null,"summary":null},{"id":"ClipByChildren","name":"ClipByChildren","value":"0","doc":null,"summary":null},{"id":"ColormapChangeMask","name":"ColormapChangeMask","value":"(1_i64 << 23)","doc":null,"summary":null},{"id":"ColormapInstalled","name":"ColormapInstalled","value":"1","doc":null,"summary":null},{"id":"ColormapNotify","name":"ColormapNotify","value":"32","doc":null,"summary":null},{"id":"ColormapUninstalled","name":"ColormapUninstalled","value":"0","doc":null,"summary":null},{"id":"Complex","name":"Complex","value":"0","doc":null,"summary":null},{"id":"ConfigureNotify","name":"ConfigureNotify","value":"22","doc":null,"summary":null},{"id":"ConfigureRequest","name":"ConfigureRequest","value":"23","doc":null,"summary":null},{"id":"ControlMapIndex","name":"ControlMapIndex","value":"2","doc":null,"summary":null},{"id":"ControlMask","name":"ControlMask","value":"(1 << 2)","doc":null,"summary":null},{"id":"Convex","name":"Convex","value":"2","doc":"no paths intersect, but not convex","summary":"<p>no paths intersect, but not convex</p>"},{"id":"CoordModeOrigin","name":"CoordModeOrigin","value":"0","doc":null,"summary":null},{"id":"CoordModePrevious","name":"CoordModePrevious","value":"1","doc":"relative to the origin","summary":"<p>relative to the origin</p>"},{"id":"CopyFromParent","name":"CopyFromParent","value":"0_i64","doc":"background pixmap in CreateWindow and ChangeWindowAttributes","summary":"<p>background pixmap in CreateWindow and ChangeWindowAttributes</p>"},{"id":"CreateNotify","name":"CreateNotify","value":"16","doc":null,"summary":null},{"id":"CurrentTime","name":"CurrentTime","value":"0_u64","doc":"special Resource ID passed to KillClient","summary":"<p>special Resource ID passed to KillClient</p>"},{"id":"CursorShape","name":"CursorShape","value":"0","doc":null,"summary":null},{"id":"CWBackingPixel","name":"CWBackingPixel","value":"(1_i64 << 8)","doc":null,"summary":null},{"id":"CWBackingPlanes","name":"CWBackingPlanes","value":"(1_i64 << 7)","doc":null,"summary":null},{"id":"CWBackingStore","name":"CWBackingStore","value":"(1_i64 << 6)","doc":null,"summary":null},{"id":"CWBackPixel","name":"CWBackPixel","value":"(1_i64 << 1)","doc":null,"summary":null},{"id":"CWBackPixmap","name":"CWBackPixmap","value":"(1_i64 << 0)","doc":null,"summary":null},{"id":"CWBitGravity","name":"CWBitGravity","value":"(1_i64 << 4)","doc":null,"summary":null},{"id":"CWBorderPixel","name":"CWBorderPixel","value":"(1_i64 << 3)","doc":null,"summary":null},{"id":"CWBorderPixmap","name":"CWBorderPixmap","value":"(1_i64 << 2)","doc":null,"summary":null},{"id":"CWBorderWidth","name":"CWBorderWidth","value":"(1_u32 << 4)","doc":null,"summary":null},{"id":"CWColormap","name":"CWColormap","value":"(1_i64 << 13)","doc":null,"summary":null},{"id":"CWCursor","name":"CWCursor","value":"(1_i64 << 14)","doc":null,"summary":null},{"id":"CWDontPropagate","name":"CWDontPropagate","value":"(1_i64 << 12)","doc":null,"summary":null},{"id":"CWEventMask","name":"CWEventMask","value":"(1_i64 << 11)","doc":null,"summary":null},{"id":"CWHeight","name":"CWHeight","value":"(1_u32 << 3)","doc":null,"summary":null},{"id":"CWOverrideRedirect","name":"CWOverrideRedirect","value":"(1_i64 << 9)","doc":null,"summary":null},{"id":"CWSaveUnder","name":"CWSaveUnder","value":"(1_i64 << 10)","doc":null,"summary":null},{"id":"CWSibling","name":"CWSibling","value":"(1_u32 << 5)","doc":null,"summary":null},{"id":"CWStackMode","name":"CWStackMode","value":"(1_u32 << 6)","doc":null,"summary":null},{"id":"CWWidth","name":"CWWidth","value":"(1_u32 << 2)","doc":null,"summary":null},{"id":"CWWinGravity","name":"CWWinGravity","value":"(1_i64 << 5)","doc":null,"summary":null},{"id":"CWX","name":"CWX","value":"(1_u32 << 0)","doc":null,"summary":null},{"id":"CWY","name":"CWY","value":"(1_u32 << 1)","doc":null,"summary":null},{"id":"DefaultBlanking","name":"DefaultBlanking","value":"2","doc":null,"summary":null},{"id":"DefaultExposures","name":"DefaultExposures","value":"2","doc":null,"summary":null},{"id":"DestroyAll","name":"DestroyAll","value":"0","doc":null,"summary":null},{"id":"DestroyNotify","name":"DestroyNotify","value":"17","doc":null,"summary":null},{"id":"DirectColor","name":"DirectColor","value":"5","doc":null,"summary":null},{"id":"DisableAccess","name":"DisableAccess","value":"0","doc":null,"summary":null},{"id":"DisableScreenInterval","name":"DisableScreenInterval","value":"0","doc":null,"summary":null},{"id":"DisableScreenSaver","name":"DisableScreenSaver","value":"0","doc":null,"summary":null},{"id":"DoBlue","name":"DoBlue","value":"(1_i64 << 2)","doc":null,"summary":null},{"id":"DoGreen","name":"DoGreen","value":"(1_i64 << 1)","doc":null,"summary":null},{"id":"DontAllowExposures","name":"DontAllowExposures","value":"0","doc":null,"summary":null},{"id":"DontPreferBlanking","name":"DontPreferBlanking","value":"0","doc":null,"summary":null},{"id":"DoRed","name":"DoRed","value":"(1_i64 << 0)","doc":null,"summary":null},{"id":"EastGravity","name":"EastGravity","value":"6","doc":null,"summary":null},{"id":"EnableAccess","name":"EnableAccess","value":"1","doc":null,"summary":null},{"id":"EnterNotify","name":"EnterNotify","value":"7","doc":null,"summary":null},{"id":"EnterWindowMask","name":"EnterWindowMask","value":"(1_i64 << 4)","doc":null,"summary":null},{"id":"EvenOddRule","name":"EvenOddRule","value":"0","doc":null,"summary":null},{"id":"Expose","name":"Expose","value":"12","doc":null,"summary":null},{"id":"ExposureMask","name":"ExposureMask","value":"(1_i64 << 15)","doc":null,"summary":null},{"id":"FamilyChaos","name":"FamilyChaos","value":"2","doc":null,"summary":null},{"id":"FamilyDECnet","name":"FamilyDECnet","value":"1","doc":"IPv4","summary":"<p>IPv4</p>"},{"id":"FamilyInternet","name":"FamilyInternet","value":"0","doc":null,"summary":null},{"id":"FamilyInternet6","name":"FamilyInternet6","value":"6","doc":null,"summary":null},{"id":"FamilyServerInterpreted","name":"FamilyServerInterpreted","value":"5","doc":"authentication families not tied to a specific protocol","summary":"<p>authentication families not tied to a specific protocol</p>"},{"id":"FillOpaqueStippled","name":"FillOpaqueStippled","value":"3","doc":null,"summary":null},{"id":"FillSolid","name":"FillSolid","value":"0","doc":null,"summary":null},{"id":"FillStippled","name":"FillStippled","value":"2","doc":null,"summary":null},{"id":"FillTiled","name":"FillTiled","value":"1","doc":null,"summary":null},{"id":"FirstExtensionError","name":"FirstExtensionError","value":"128","doc":null,"summary":null},{"id":"FocusChangeMask","name":"FocusChangeMask","value":"(1_i64 << 21)","doc":null,"summary":null},{"id":"FocusIn","name":"FocusIn","value":"9","doc":null,"summary":null},{"id":"FocusOut","name":"FocusOut","value":"10","doc":null,"summary":null},{"id":"FontChange","name":"FontChange","value":"255","doc":null,"summary":null},{"id":"FontLeftToRight","name":"FontLeftToRight","value":"0","doc":null,"summary":null},{"id":"FontRightToLeft","name":"FontRightToLeft","value":"1","doc":null,"summary":null},{"id":"ForgetGravity","name":"ForgetGravity","value":"0","doc":null,"summary":null},{"id":"GCArcMode","name":"GCArcMode","value":"(1_i64 << 22)","doc":null,"summary":null},{"id":"GCBackground","name":"GCBackground","value":"(1_i64 << 3)","doc":null,"summary":null},{"id":"GCCapStyle","name":"GCCapStyle","value":"(1_i64 << 6)","doc":null,"summary":null},{"id":"GCClipMask","name":"GCClipMask","value":"(1_i64 << 19)","doc":null,"summary":null},{"id":"GCClipXOrigin","name":"GCClipXOrigin","value":"(1_i64 << 17)","doc":null,"summary":null},{"id":"GCClipYOrigin","name":"GCClipYOrigin","value":"(1_i64 << 18)","doc":null,"summary":null},{"id":"GCDashList","name":"GCDashList","value":"(1_i64 << 21)","doc":null,"summary":null},{"id":"GCDashOffset","name":"GCDashOffset","value":"(1_i64 << 20)","doc":null,"summary":null},{"id":"GCFillRule","name":"GCFillRule","value":"(1_i64 << 9)","doc":null,"summary":null},{"id":"GCFillStyle","name":"GCFillStyle","value":"(1_i64 << 8)","doc":null,"summary":null},{"id":"GCFont","name":"GCFont","value":"(1_i64 << 14)","doc":null,"summary":null},{"id":"GCForeground","name":"GCForeground","value":"(1_i64 << 2)","doc":null,"summary":null},{"id":"GCFunction","name":"GCFunction","value":"(1_i64 << 0)","doc":null,"summary":null},{"id":"GCGraphicsExposures","name":"GCGraphicsExposures","value":"(1_i64 << 16)","doc":null,"summary":null},{"id":"GCJoinStyle","name":"GCJoinStyle","value":"(1_i64 << 7)","doc":null,"summary":null},{"id":"GCLastBit","name":"GCLastBit","value":"22","doc":null,"summary":null},{"id":"GCLineStyle","name":"GCLineStyle","value":"(1_i64 << 5)","doc":null,"summary":null},{"id":"GCLineWidth","name":"GCLineWidth","value":"(1_i64 << 4)","doc":null,"summary":null},{"id":"GCPlaneMask","name":"GCPlaneMask","value":"(1_i64 << 1)","doc":null,"summary":null},{"id":"GCStipple","name":"GCStipple","value":"(1_i64 << 11)","doc":null,"summary":null},{"id":"GCSubwindowMode","name":"GCSubwindowMode","value":"(1_i64 << 15)","doc":null,"summary":null},{"id":"GCTile","name":"GCTile","value":"(1_i64 << 10)","doc":null,"summary":null},{"id":"GCTileStipXOrigin","name":"GCTileStipXOrigin","value":"(1_i64 << 12)","doc":null,"summary":null},{"id":"GCTileStipYOrigin","name":"GCTileStipYOrigin","value":"(1_i64 << 13)","doc":null,"summary":null},{"id":"GenericEvent","name":"GenericEvent","value":"35","doc":null,"summary":null},{"id":"GrabFrozen","name":"GrabFrozen","value":"4","doc":null,"summary":null},{"id":"GrabInvalidTime","name":"GrabInvalidTime","value":"2","doc":null,"summary":null},{"id":"GrabModeAsync","name":"GrabModeAsync","value":"1","doc":null,"summary":null},{"id":"GrabModeSync","name":"GrabModeSync","value":"0","doc":null,"summary":null},{"id":"GrabNotViewable","name":"GrabNotViewable","value":"3","doc":null,"summary":null},{"id":"GrabSuccess","name":"GrabSuccess","value":"0","doc":null,"summary":null},{"id":"GraphicsExpose","name":"GraphicsExpose","value":"13","doc":null,"summary":null},{"id":"GravityNotify","name":"GravityNotify","value":"24","doc":null,"summary":null},{"id":"GrayScale","name":"GrayScale","value":"1","doc":null,"summary":null},{"id":"GXand","name":"GXand","value":"1","doc":"0","summary":"<p>0</p>"},{"id":"GXandInverted","name":"GXandInverted","value":"4","doc":"src","summary":"<p>src</p>"},{"id":"GXandReverse","name":"GXandReverse","value":"2","doc":"src AND dst","summary":"<p>src AND dst</p>"},{"id":"GXclear","name":"GXclear","value":"0","doc":null,"summary":null},{"id":"GXcopy","name":"GXcopy","value":"3","doc":"src AND NOT dst","summary":"<p>src AND NOT dst</p>"},{"id":"GXcopyInverted","name":"GXcopyInverted","value":"12","doc":"src OR NOT dst","summary":"<p>src OR NOT dst</p>"},{"id":"GXequiv","name":"GXequiv","value":"9","doc":"NOT src AND NOT dst","summary":"<p>NOT src AND NOT dst</p>"},{"id":"GXinvert","name":"GXinvert","value":"10","doc":"NOT src XOR dst","summary":"<p>NOT src XOR dst</p>"},{"id":"GXnand","name":"GXnand","value":"14","doc":"NOT src OR dst","summary":"<p>NOT src OR dst</p>"},{"id":"GXnoop","name":"GXnoop","value":"5","doc":" NOT src AND dst","summary":"<p>NOT src AND dst</p>"},{"id":"GXnor","name":"GXnor","value":"8","doc":"src OR dst","summary":"<p>src OR dst</p>"},{"id":"GXor","name":"GXor","value":"7","doc":"src XOR dst","summary":"<p>src XOR dst</p>"},{"id":"GXorInverted","name":"GXorInverted","value":"13","doc":"NOT src","summary":"<p>NOT src</p>"},{"id":"GXorReverse","name":"GXorReverse","value":"11","doc":"NOT dst","summary":"<p>NOT dst</p>"},{"id":"GXset","name":"GXset","value":"15","doc":"NOT src OR NOT dst","summary":"<p>NOT src OR NOT dst</p>"},{"id":"GXxor","name":"GXxor","value":"6","doc":"dst","summary":"<p>dst</p>"},{"id":"HostDelete","name":"HostDelete","value":"1","doc":null,"summary":null},{"id":"HostInsert","name":"HostInsert","value":"0","doc":null,"summary":null},{"id":"IncludeInferiors","name":"IncludeInferiors","value":"1","doc":null,"summary":null},{"id":"InputFocus","name":"InputFocus","value":"1_i64","doc":"destination window in SendEvent","summary":"<p>destination window in SendEvent</p>"},{"id":"InputOnly","name":"InputOnly","value":"2","doc":null,"summary":null},{"id":"InputOutput","name":"InputOutput","value":"1","doc":null,"summary":null},{"id":"IsUnmapped","name":"IsUnmapped","value":"0","doc":null,"summary":null},{"id":"IsUnviewable","name":"IsUnviewable","value":"1","doc":null,"summary":null},{"id":"IsViewable","name":"IsViewable","value":"2","doc":null,"summary":null},{"id":"JoinBevel","name":"JoinBevel","value":"2","doc":null,"summary":null},{"id":"JoinMiter","name":"JoinMiter","value":"0","doc":null,"summary":null},{"id":"JoinRound","name":"JoinRound","value":"1","doc":null,"summary":null},{"id":"KBAutoRepeatMode","name":"KBAutoRepeatMode","value":"(1_i64 << 0)","doc":null,"summary":null},{"id":"KBBellDuration","name":"KBBellDuration","value":"(1_i64 << 0)","doc":null,"summary":null},{"id":"KBBellPercent","name":"KBBellPercent","value":"(1_i64 << 0)","doc":null,"summary":null},{"id":"KBBellPitch","name":"KBBellPitch","value":"(1_i64 << 0)","doc":null,"summary":null},{"id":"KBKey","name":"KBKey","value":"(1_i64 << 0)","doc":null,"summary":null},{"id":"KBKeyClickPercent","name":"KBKeyClickPercent","value":"(1_i64 << 0)","doc":null,"summary":null},{"id":"KBLed","name":"KBLed","value":"(1_i64 << 0)","doc":null,"summary":null},{"id":"KBLedMode","name":"KBLedMode","value":"(1_i64 << 0)","doc":null,"summary":null},{"id":"KeymapNotify","name":"KeymapNotify","value":"11","doc":null,"summary":null},{"id":"KeymapStateMask","name":"KeymapStateMask","value":"(1_i64 << 14)","doc":null,"summary":null},{"id":"KeyPress","name":"KeyPress","value":"2","doc":null,"summary":null},{"id":"KeyPressMask","name":"KeyPressMask","value":"(1_i64 << 0)","doc":null,"summary":null},{"id":"KeyRelease","name":"KeyRelease","value":"3","doc":null,"summary":null},{"id":"KeyReleaseMask","name":"KeyReleaseMask","value":"(1_i64 << 1)","doc":null,"summary":null},{"id":"LASTEvent","name":"LASTEvent","value":"36","doc":null,"summary":null},{"id":"LastExtensionError","name":"LastExtensionError","value":"255","doc":null,"summary":null},{"id":"LeaveNotify","name":"LeaveNotify","value":"8","doc":null,"summary":null},{"id":"LeaveWindowMask","name":"LeaveWindowMask","value":"(1_i64 << 5)","doc":null,"summary":null},{"id":"LedModeOff","name":"LedModeOff","value":"0","doc":null,"summary":null},{"id":"LedModeOn","name":"LedModeOn","value":"1","doc":null,"summary":null},{"id":"LineDoubleDash","name":"LineDoubleDash","value":"2","doc":null,"summary":null},{"id":"LineOnOffDash","name":"LineOnOffDash","value":"1","doc":null,"summary":null},{"id":"LineSolid","name":"LineSolid","value":"0","doc":null,"summary":null},{"id":"LockMapIndex","name":"LockMapIndex","value":"1","doc":null,"summary":null},{"id":"LockMask","name":"LockMask","value":"(1 << 1)","doc":null,"summary":null},{"id":"LONG64","name":"LONG64","value":"true","doc":null,"summary":null},{"id":"LowerHighest","name":"LowerHighest","value":"1","doc":null,"summary":null},{"id":"LSBFirst","name":"LSBFirst","value":"0","doc":null,"summary":null},{"id":"MapNotify","name":"MapNotify","value":"19","doc":null,"summary":null},{"id":"MappingBusy","name":"MappingBusy","value":"1","doc":null,"summary":null},{"id":"MappingFailed","name":"MappingFailed","value":"2","doc":null,"summary":null},{"id":"MappingKeyboard","name":"MappingKeyboard","value":"1","doc":null,"summary":null},{"id":"MappingModifier","name":"MappingModifier","value":"0","doc":null,"summary":null},{"id":"MappingNotify","name":"MappingNotify","value":"34","doc":null,"summary":null},{"id":"MappingPointer","name":"MappingPointer","value":"2","doc":null,"summary":null},{"id":"MappingSuccess","name":"MappingSuccess","value":"0","doc":null,"summary":null},{"id":"MapRequest","name":"MapRequest","value":"20","doc":null,"summary":null},{"id":"Mod1MapIndex","name":"Mod1MapIndex","value":"3","doc":null,"summary":null},{"id":"Mod1Mask","name":"Mod1Mask","value":"(1 << 3)","doc":null,"summary":null},{"id":"Mod2MapIndex","name":"Mod2MapIndex","value":"4","doc":null,"summary":null},{"id":"Mod2Mask","name":"Mod2Mask","value":"(1 << 4)","doc":null,"summary":null},{"id":"Mod3MapIndex","name":"Mod3MapIndex","value":"5","doc":null,"summary":null},{"id":"Mod3Mask","name":"Mod3Mask","value":"(1 << 5)","doc":null,"summary":null},{"id":"Mod4MapIndex","name":"Mod4MapIndex","value":"6","doc":null,"summary":null},{"id":"Mod4Mask","name":"Mod4Mask","value":"(1 << 6)","doc":null,"summary":null},{"id":"Mod5MapIndex","name":"Mod5MapIndex","value":"7","doc":null,"summary":null},{"id":"Mod5Mask","name":"Mod5Mask","value":"(1 << 7)","doc":null,"summary":null},{"id":"MotionNotify","name":"MotionNotify","value":"6","doc":null,"summary":null},{"id":"MSBFirst","name":"MSBFirst","value":"1","doc":null,"summary":null},{"id":"MUSTCOPY","name":"MUSTCOPY","value":"true","doc":"Stuff to handle large architecture machines; the constants were generated\non a 32-bit machine and must correspond to the protocol.","summary":"<p>Stuff to handle large architecture machines; the constants were generated on a 32-bit machine and must correspond to the protocol.</p>"},{"id":"NoEventMask","name":"NoEventMask","value":"0_i64","doc":null,"summary":null},{"id":"NoExpose","name":"NoExpose","value":"14","doc":null,"summary":null},{"id":"Nonconvex","name":"Nonconvex","value":"1","doc":"paths may intersect","summary":"<p>paths may intersect</p>"},{"id":"None","name":"None","value":"0_i64","doc":null,"summary":null},{"id":"NorthEastGravity","name":"NorthEastGravity","value":"3","doc":null,"summary":null},{"id":"NorthGravity","name":"NorthGravity","value":"2","doc":null,"summary":null},{"id":"NorthWestGravity","name":"NorthWestGravity","value":"1","doc":null,"summary":null},{"id":"NoSymbol","name":"NoSymbol","value":"0_i64","doc":"special Time","summary":"<p>special Time</p>"},{"id":"NotifyAncestor","name":"NotifyAncestor","value":"0","doc":null,"summary":null},{"id":"NotifyDetailNone","name":"NotifyDetailNone","value":"7","doc":null,"summary":null},{"id":"NotifyGrab","name":"NotifyGrab","value":"1","doc":null,"summary":null},{"id":"NotifyHint","name":"NotifyHint","value":"1","doc":null,"summary":null},{"id":"NotifyInferior","name":"NotifyInferior","value":"2","doc":null,"summary":null},{"id":"NotifyNonlinear","name":"NotifyNonlinear","value":"3","doc":null,"summary":null},{"id":"NotifyNonlinearVirtual","name":"NotifyNonlinearVirtual","value":"4","doc":null,"summary":null},{"id":"NotifyNormal","name":"NotifyNormal","value":"0","doc":null,"summary":null},{"id":"NotifyPointer","name":"NotifyPointer","value":"5","doc":null,"summary":null},{"id":"NotifyPointerRoot","name":"NotifyPointerRoot","value":"6","doc":null,"summary":null},{"id":"NotifyUngrab","name":"NotifyUngrab","value":"2","doc":null,"summary":null},{"id":"NotifyVirtual","name":"NotifyVirtual","value":"1","doc":null,"summary":null},{"id":"NotifyWhileGrabbed","name":"NotifyWhileGrabbed","value":"3","doc":null,"summary":null},{"id":"NotUseful","name":"NotUseful","value":"0","doc":null,"summary":null},{"id":"Opposite","name":"Opposite","value":"4","doc":null,"summary":null},{"id":"OwnerGrabButtonMask","name":"OwnerGrabButtonMask","value":"(1_i64 << 24)","doc":null,"summary":null},{"id":"ParentRelative","name":"ParentRelative","value":"1_i64","doc":"universal null resource or null atom","summary":"<p>universal null resource or null atom</p>"},{"id":"PlaceOnBottom","name":"PlaceOnBottom","value":"1","doc":null,"summary":null},{"id":"PlaceOnTop","name":"PlaceOnTop","value":"0","doc":null,"summary":null},{"id":"PointerMotionHintMask","name":"PointerMotionHintMask","value":"(1_i64 << 7)","doc":null,"summary":null},{"id":"PointerMotionMask","name":"PointerMotionMask","value":"(1_i64 << 6)","doc":null,"summary":null},{"id":"PointerRoot","name":"PointerRoot","value":"1_i64","doc":"destination window in SendEvent","summary":"<p>destination window in SendEvent</p>"},{"id":"PointerWindow","name":"PointerWindow","value":"0_i64","doc":null,"summary":null},{"id":"PreferBlanking","name":"PreferBlanking","value":"1","doc":null,"summary":null},{"id":"PropertyChangeMask","name":"PropertyChangeMask","value":"(1_i64 << 22)","doc":null,"summary":null},{"id":"PropertyDelete","name":"PropertyDelete","value":"1","doc":null,"summary":null},{"id":"PropertyNewValue","name":"PropertyNewValue","value":"0","doc":null,"summary":null},{"id":"PropertyNotify","name":"PropertyNotify","value":"28","doc":null,"summary":null},{"id":"PropModeAppend","name":"PropModeAppend","value":"2","doc":null,"summary":null},{"id":"PropModePrepend","name":"PropModePrepend","value":"1","doc":null,"summary":null},{"id":"PropModeReplace","name":"PropModeReplace","value":"0","doc":null,"summary":null},{"id":"PseudoColor","name":"PseudoColor","value":"3","doc":null,"summary":null},{"id":"RaiseLowest","name":"RaiseLowest","value":"0","doc":null,"summary":null},{"id":"ReparentNotify","name":"ReparentNotify","value":"21","doc":null,"summary":null},{"id":"ReplayKeyboard","name":"ReplayKeyboard","value":"5","doc":null,"summary":null},{"id":"ReplayPointer","name":"ReplayPointer","value":"2","doc":null,"summary":null},{"id":"ResizeRedirectMask","name":"ResizeRedirectMask","value":"(1_i64 << 18)","doc":null,"summary":null},{"id":"ResizeRequest","name":"ResizeRequest","value":"25","doc":null,"summary":null},{"id":"RetainPermanent","name":"RetainPermanent","value":"1","doc":null,"summary":null},{"id":"RetainTemporary","name":"RetainTemporary","value":"2","doc":null,"summary":null},{"id":"RevertToNone","name":"RevertToNone","value":"None","doc":null,"summary":null},{"id":"RevertToParent","name":"RevertToParent","value":"2","doc":null,"summary":null},{"id":"RevertToPointerRoot","name":"RevertToPointerRoot","value":"PointerRoot","doc":null,"summary":null},{"id":"ScreenSaverActive","name":"ScreenSaverActive","value":"1","doc":null,"summary":null},{"id":"ScreenSaverReset","name":"ScreenSaverReset","value":"0","doc":null,"summary":null},{"id":"SelectionClear","name":"SelectionClear","value":"29","doc":null,"summary":null},{"id":"SelectionNotify","name":"SelectionNotify","value":"31","doc":null,"summary":null},{"id":"SelectionRequest","name":"SelectionRequest","value":"30","doc":null,"summary":null},{"id":"SetModeDelete","name":"SetModeDelete","value":"1","doc":null,"summary":null},{"id":"SetModeInsert","name":"SetModeInsert","value":"0","doc":null,"summary":null},{"id":"ShiftMapIndex","name":"ShiftMapIndex","value":"0","doc":"modifier names.  Used to build a SetModifierMapping request or\n  to read a GetModifierMapping request.  These correspond to the\n  masks defined above.","summary":"<p>modifier names.</p>"},{"id":"ShiftMask","name":"ShiftMask","value":"(1 << 0)","doc":null,"summary":null},{"id":"SouthEastGravity","name":"SouthEastGravity","value":"9","doc":null,"summary":null},{"id":"SouthGravity","name":"SouthGravity","value":"8","doc":null,"summary":null},{"id":"SouthWestGravity","name":"SouthWestGravity","value":"7","doc":null,"summary":null},{"id":"StaticColor","name":"StaticColor","value":"2","doc":null,"summary":null},{"id":"StaticGravity","name":"StaticGravity","value":"10","doc":null,"summary":null},{"id":"StaticGray","name":"StaticGray","value":"0","doc":null,"summary":null},{"id":"StippleShape","name":"StippleShape","value":"2","doc":"size tiled fastest","summary":"<p>size tiled fastest</p>"},{"id":"StructureNotifyMask","name":"StructureNotifyMask","value":"(1_i64 << 17)","doc":null,"summary":null},{"id":"SubstructureNotifyMask","name":"SubstructureNotifyMask","value":"(1_i64 << 19)","doc":null,"summary":null},{"id":"SubstructureRedirectMask","name":"SubstructureRedirectMask","value":"(1_i64 << 20)","doc":null,"summary":null},{"id":"Success","name":"Success","value":"0","doc":null,"summary":null},{"id":"SyncBoth","name":"SyncBoth","value":"7","doc":null,"summary":null},{"id":"SyncKeyboard","name":"SyncKeyboard","value":"4","doc":null,"summary":null},{"id":"SyncPointer","name":"SyncPointer","value":"1","doc":null,"summary":null},{"id":"TileShape","name":"TileShape","value":"1","doc":"largest size that can be displayed","summary":"<p>largest size that can be displayed</p>"},{"id":"TopIf","name":"TopIf","value":"2","doc":null,"summary":null},{"id":"TrueColor","name":"TrueColor","value":"4","doc":null,"summary":null},{"id":"UnmapGravity","name":"UnmapGravity","value":"0","doc":null,"summary":null},{"id":"UnmapNotify","name":"UnmapNotify","value":"18","doc":null,"summary":null},{"id":"Unsorted","name":"Unsorted","value":"0","doc":null,"summary":null},{"id":"VisibilityChangeMask","name":"VisibilityChangeMask","value":"(1_i64 << 16)","doc":null,"summary":null},{"id":"VisibilityFullyObscured","name":"VisibilityFullyObscured","value":"2","doc":null,"summary":null},{"id":"VisibilityNotify","name":"VisibilityNotify","value":"15","doc":null,"summary":null},{"id":"VisibilityPartiallyObscured","name":"VisibilityPartiallyObscured","value":"1","doc":null,"summary":null},{"id":"VisibilityUnobscured","name":"VisibilityUnobscured","value":"0","doc":null,"summary":null},{"id":"WestGravity","name":"WestGravity","value":"4","doc":null,"summary":null},{"id":"WhenMapped","name":"WhenMapped","value":"1","doc":null,"summary":null},{"id":"WindingRule","name":"WindingRule","value":"1","doc":null,"summary":null},{"id":"WORLD64","name":"WORLD64","value":"false","doc":null,"summary":null},{"id":"X_PROTOCOL","name":"X_PROTOCOL","value":"11","doc":null,"summary":null},{"id":"X_PROTOCOL_REVISION","name":"X_PROTOCOL_REVISION","value":"0","doc":"current protocol version","summary":"<p>current protocol version</p>"},{"id":"XA_ARC","name":"XA_ARC","value":"3","doc":null,"summary":null},{"id":"XA_ATOM","name":"XA_ATOM","value":"4","doc":null,"summary":null},{"id":"XA_BITMAP","name":"XA_BITMAP","value":"5","doc":null,"summary":null},{"id":"XA_CAP_HEIGHT","name":"XA_CAP_HEIGHT","value":"66","doc":null,"summary":null},{"id":"XA_CARDINAL","name":"XA_CARDINAL","value":"6","doc":null,"summary":null},{"id":"XA_COLORMAP","name":"XA_COLORMAP","value":"7","doc":null,"summary":null},{"id":"XA_COPYRIGHT","name":"XA_COPYRIGHT","value":"61","doc":null,"summary":null},{"id":"XA_CURSOR","name":"XA_CURSOR","value":"8","doc":null,"summary":null},{"id":"XA_CUT_BUFFER0","name":"XA_CUT_BUFFER0","value":"9","doc":null,"summary":null},{"id":"XA_CUT_BUFFER1","name":"XA_CUT_BUFFER1","value":"10","doc":null,"summary":null},{"id":"XA_CUT_BUFFER2","name":"XA_CUT_BUFFER2","value":"11","doc":null,"summary":null},{"id":"XA_CUT_BUFFER3","name":"XA_CUT_BUFFER3","value":"12","doc":null,"summary":null},{"id":"XA_CUT_BUFFER4","name":"XA_CUT_BUFFER4","value":"13","doc":null,"summary":null},{"id":"XA_CUT_BUFFER5","name":"XA_CUT_BUFFER5","value":"14","doc":null,"summary":null},{"id":"XA_CUT_BUFFER6","name":"XA_CUT_BUFFER6","value":"15","doc":null,"summary":null},{"id":"XA_CUT_BUFFER7","name":"XA_CUT_BUFFER7","value":"16","doc":null,"summary":null},{"id":"XA_DRAWABLE","name":"XA_DRAWABLE","value":"17","doc":null,"summary":null},{"id":"XA_END_SPACE","name":"XA_END_SPACE","value":"46","doc":null,"summary":null},{"id":"XA_FAMILY_NAME","name":"XA_FAMILY_NAME","value":"64","doc":null,"summary":null},{"id":"XA_FONT","name":"XA_FONT","value":"18","doc":null,"summary":null},{"id":"XA_FONT_NAME","name":"XA_FONT_NAME","value":"63","doc":null,"summary":null},{"id":"XA_FULL_NAME","name":"XA_FULL_NAME","value":"65","doc":null,"summary":null},{"id":"XA_INTEGER","name":"XA_INTEGER","value":"19","doc":null,"summary":null},{"id":"XA_ITALIC_ANGLE","name":"XA_ITALIC_ANGLE","value":"55","doc":null,"summary":null},{"id":"XA_LAST_PREDEFINED","name":"XA_LAST_PREDEFINED","value":"68","doc":null,"summary":null},{"id":"XA_MAX_SPACE","name":"XA_MAX_SPACE","value":"45","doc":null,"summary":null},{"id":"XA_MIN_SPACE","name":"XA_MIN_SPACE","value":"43","doc":null,"summary":null},{"id":"XA_NORM_SPACE","name":"XA_NORM_SPACE","value":"44","doc":null,"summary":null},{"id":"XA_NOTICE","name":"XA_NOTICE","value":"62","doc":null,"summary":null},{"id":"XA_PIXMAP","name":"XA_PIXMAP","value":"20","doc":null,"summary":null},{"id":"XA_POINT","name":"XA_POINT","value":"21","doc":null,"summary":null},{"id":"XA_POINT_SIZE","name":"XA_POINT_SIZE","value":"59","doc":null,"summary":null},{"id":"XA_PRIMARY","name":"XA_PRIMARY","value":"1","doc":null,"summary":null},{"id":"XA_QUAD_WIDTH","name":"XA_QUAD_WIDTH","value":"57","doc":null,"summary":null},{"id":"XA_RECTANGLE","name":"XA_RECTANGLE","value":"22","doc":null,"summary":null},{"id":"XA_RESOLUTION","name":"XA_RESOLUTION","value":"60","doc":null,"summary":null},{"id":"XA_RESOURCE_MANAGER","name":"XA_RESOURCE_MANAGER","value":"23","doc":null,"summary":null},{"id":"XA_RGB_BEST_MAP","name":"XA_RGB_BEST_MAP","value":"25","doc":null,"summary":null},{"id":"XA_RGB_BLUE_MAP","name":"XA_RGB_BLUE_MAP","value":"26","doc":null,"summary":null},{"id":"XA_RGB_COLOR_MAP","name":"XA_RGB_COLOR_MAP","value":"24","doc":null,"summary":null},{"id":"XA_RGB_DEFAULT_MAP","name":"XA_RGB_DEFAULT_MAP","value":"27","doc":null,"summary":null},{"id":"XA_RGB_GRAY_MAP","name":"XA_RGB_GRAY_MAP","value":"28","doc":null,"summary":null},{"id":"XA_RGB_GREEN_MAP","name":"XA_RGB_GREEN_MAP","value":"29","doc":null,"summary":null},{"id":"XA_RGB_RED_MAP","name":"XA_RGB_RED_MAP","value":"30","doc":null,"summary":null},{"id":"XA_SECONDARY","name":"XA_SECONDARY","value":"2","doc":null,"summary":null},{"id":"XA_STRIKEOUT_ASCENT","name":"XA_STRIKEOUT_ASCENT","value":"53","doc":null,"summary":null},{"id":"XA_STRIKEOUT_DESCENT","name":"XA_STRIKEOUT_DESCENT","value":"54","doc":null,"summary":null},{"id":"XA_STRING","name":"XA_STRING","value":"31","doc":null,"summary":null},{"id":"XA_SUBSCRIPT_X","name":"XA_SUBSCRIPT_X","value":"49","doc":null,"summary":null},{"id":"XA_SUBSCRIPT_Y","name":"XA_SUBSCRIPT_Y","value":"50","doc":null,"summary":null},{"id":"XA_SUPERSCRIPT_X","name":"XA_SUPERSCRIPT_X","value":"47","doc":null,"summary":null},{"id":"XA_SUPERSCRIPT_Y","name":"XA_SUPERSCRIPT_Y","value":"48","doc":null,"summary":null},{"id":"XA_UNDERLINE_POSITION","name":"XA_UNDERLINE_POSITION","value":"51","doc":null,"summary":null},{"id":"XA_UNDERLINE_THICKNESS","name":"XA_UNDERLINE_THICKNESS","value":"52","doc":null,"summary":null},{"id":"XA_VISUALID","name":"XA_VISUALID","value":"32","doc":null,"summary":null},{"id":"XA_WEIGHT","name":"XA_WEIGHT","value":"58","doc":null,"summary":null},{"id":"XA_WINDOW","name":"XA_WINDOW","value":"33","doc":null,"summary":null},{"id":"XA_WM_CLASS","name":"XA_WM_CLASS","value":"67","doc":null,"summary":null},{"id":"XA_WM_CLIENT_MACHINE","name":"XA_WM_CLIENT_MACHINE","value":"36","doc":null,"summary":null},{"id":"XA_WM_COMMAND","name":"XA_WM_COMMAND","value":"34","doc":null,"summary":null},{"id":"XA_WM_HINTS","name":"XA_WM_HINTS","value":"35","doc":null,"summary":null},{"id":"XA_WM_ICON_NAME","name":"XA_WM_ICON_NAME","value":"37","doc":null,"summary":null},{"id":"XA_WM_ICON_SIZE","name":"XA_WM_ICON_SIZE","value":"38","doc":null,"summary":null},{"id":"XA_WM_NAME","name":"XA_WM_NAME","value":"39","doc":null,"summary":null},{"id":"XA_WM_NORMAL_HINTS","name":"XA_WM_NORMAL_HINTS","value":"40","doc":null,"summary":null},{"id":"XA_WM_SIZE_HINTS","name":"XA_WM_SIZE_HINTS","value":"41","doc":null,"summary":null},{"id":"XA_WM_TRANSIENT_FOR","name":"XA_WM_TRANSIENT_FOR","value":"68","doc":null,"summary":null},{"id":"XA_WM_ZOOM_HINTS","name":"XA_WM_ZOOM_HINTS","value":"42","doc":null,"summary":null},{"id":"XA_X_HEIGHT","name":"XA_X_HEIGHT","value":"56","doc":null,"summary":null},{"id":"XC_ARROW","name":"XC_ARROW","value":"2_u32","doc":null,"summary":null},{"id":"XC_BASED_ARROW_DOWN","name":"XC_BASED_ARROW_DOWN","value":"4_u32","doc":null,"summary":null},{"id":"XC_BASED_ARROW_UP","name":"XC_BASED_ARROW_UP","value":"6_u32","doc":null,"summary":null},{"id":"XC_BOAT","name":"XC_BOAT","value":"8_u32","doc":null,"summary":null},{"id":"XC_BOGOSITY","name":"XC_BOGOSITY","value":"10_u32","doc":null,"summary":null},{"id":"XC_BOTTOM_LEFT_CORNER","name":"XC_BOTTOM_LEFT_CORNER","value":"12_u32","doc":null,"summary":null},{"id":"XC_BOTTOM_RIGHT_CORNER","name":"XC_BOTTOM_RIGHT_CORNER","value":"14_u32","doc":null,"summary":null},{"id":"XC_BOTTOM_SIDE","name":"XC_BOTTOM_SIDE","value":"16_u32","doc":null,"summary":null},{"id":"XC_BOTTOM_TEE","name":"XC_BOTTOM_TEE","value":"18_u32","doc":null,"summary":null},{"id":"XC_BOX_SPIRAL","name":"XC_BOX_SPIRAL","value":"20_u32","doc":null,"summary":null},{"id":"XC_CENTER_PTR","name":"XC_CENTER_PTR","value":"22_u32","doc":null,"summary":null},{"id":"XC_CIRCLE","name":"XC_CIRCLE","value":"24_u32","doc":null,"summary":null},{"id":"XC_CLOCK","name":"XC_CLOCK","value":"26_u32","doc":null,"summary":null},{"id":"XC_COFFEE_MUG","name":"XC_COFFEE_MUG","value":"28_u32","doc":null,"summary":null},{"id":"XC_CROSS","name":"XC_CROSS","value":"30_u32","doc":null,"summary":null},{"id":"XC_CROSS_REVERSE","name":"XC_CROSS_REVERSE","value":"32_u32","doc":null,"summary":null},{"id":"XC_CROSSHAIR","name":"XC_CROSSHAIR","value":"34_u32","doc":null,"summary":null},{"id":"XC_DIAMOND_CROSS","name":"XC_DIAMOND_CROSS","value":"36_u32","doc":null,"summary":null},{"id":"XC_DOT","name":"XC_DOT","value":"38_u32","doc":null,"summary":null},{"id":"XC_DOTBOX","name":"XC_DOTBOX","value":"40_u32","doc":null,"summary":null},{"id":"XC_DOUBLE_ARROW","name":"XC_DOUBLE_ARROW","value":"42_u32","doc":null,"summary":null},{"id":"XC_DRAFT_LARGE","name":"XC_DRAFT_LARGE","value":"44_u32","doc":null,"summary":null},{"id":"XC_DRAFT_SMALL","name":"XC_DRAFT_SMALL","value":"46_u32","doc":null,"summary":null},{"id":"XC_DRAPED_BOX","name":"XC_DRAPED_BOX","value":"48_u32","doc":null,"summary":null},{"id":"XC_EXCHANGE","name":"XC_EXCHANGE","value":"50_u32","doc":null,"summary":null},{"id":"XC_FLEUR","name":"XC_FLEUR","value":"52_u32","doc":null,"summary":null},{"id":"XC_GOBBLER","name":"XC_GOBBLER","value":"54_u32","doc":null,"summary":null},{"id":"XC_GUMBY","name":"XC_GUMBY","value":"56_u32","doc":null,"summary":null},{"id":"XC_HAND1","name":"XC_HAND1","value":"58_u32","doc":null,"summary":null},{"id":"XC_HAND2","name":"XC_HAND2","value":"60_u32","doc":null,"summary":null},{"id":"XC_HEART","name":"XC_HEART","value":"62_u32","doc":null,"summary":null},{"id":"XC_ICON","name":"XC_ICON","value":"64_u32","doc":null,"summary":null},{"id":"XC_IRON_CROSS","name":"XC_IRON_CROSS","value":"66_u32","doc":null,"summary":null},{"id":"XC_LEFT_PTR","name":"XC_LEFT_PTR","value":"68_u32","doc":null,"summary":null},{"id":"XC_LEFT_SIDE","name":"XC_LEFT_SIDE","value":"70_u32","doc":null,"summary":null},{"id":"XC_LEFT_TEE","name":"XC_LEFT_TEE","value":"72_u32","doc":null,"summary":null},{"id":"XC_LEFTBUTTON","name":"XC_LEFTBUTTON","value":"74_u32","doc":null,"summary":null},{"id":"XC_LL_ANGLE","name":"XC_LL_ANGLE","value":"76_u32","doc":null,"summary":null},{"id":"XC_LR_ANGLE","name":"XC_LR_ANGLE","value":"78_u32","doc":null,"summary":null},{"id":"XC_MAN","name":"XC_MAN","value":"80_u32","doc":null,"summary":null},{"id":"XC_MIDDLEBUTTON","name":"XC_MIDDLEBUTTON","value":"82_u32","doc":null,"summary":null},{"id":"XC_MOUSE","name":"XC_MOUSE","value":"84_u32","doc":null,"summary":null},{"id":"XC_NUM_GLYPHS","name":"XC_NUM_GLYPHS","value":"154","doc":null,"summary":null},{"id":"XC_PENCIL","name":"XC_PENCIL","value":"86_u32","doc":null,"summary":null},{"id":"XC_PIRATE","name":"XC_PIRATE","value":"88_u32","doc":null,"summary":null},{"id":"XC_PLUS","name":"XC_PLUS","value":"90_u32","doc":null,"summary":null},{"id":"XC_QUESTION_ARROW","name":"XC_QUESTION_ARROW","value":"92_u32","doc":null,"summary":null},{"id":"XC_RIGHT_PTR","name":"XC_RIGHT_PTR","value":"94_u32","doc":null,"summary":null},{"id":"XC_RIGHT_SIDE","name":"XC_RIGHT_SIDE","value":"96_u32","doc":null,"summary":null},{"id":"XC_RIGHT_TEE","name":"XC_RIGHT_TEE","value":"98_u32","doc":null,"summary":null},{"id":"XC_RIGHTBUTTON","name":"XC_RIGHTBUTTON","value":"100_u32","doc":null,"summary":null},{"id":"XC_RTL_LOGO","name":"XC_RTL_LOGO","value":"102_u32","doc":null,"summary":null},{"id":"XC_SAILBOAT","name":"XC_SAILBOAT","value":"104_u32","doc":null,"summary":null},{"id":"XC_SB_DOWN_ARROW","name":"XC_SB_DOWN_ARROW","value":"106_u32","doc":null,"summary":null},{"id":"XC_SB_H_DOUBLE_ARROW","name":"XC_SB_H_DOUBLE_ARROW","value":"108_u32","doc":null,"summary":null},{"id":"XC_SB_LEFT_ARROW","name":"XC_SB_LEFT_ARROW","value":"110_u32","doc":null,"summary":null},{"id":"XC_SB_RIGHT_ARROW","name":"XC_SB_RIGHT_ARROW","value":"112_u32","doc":null,"summary":null},{"id":"XC_SB_UP_ARROW","name":"XC_SB_UP_ARROW","value":"114_u32","doc":null,"summary":null},{"id":"XC_SB_V_DOUBLE_ARROW","name":"XC_SB_V_DOUBLE_ARROW","value":"116_u32","doc":null,"summary":null},{"id":"XC_SHUTTLE","name":"XC_SHUTTLE","value":"118_u32","doc":null,"summary":null},{"id":"XC_SIZING","name":"XC_SIZING","value":"120_u32","doc":null,"summary":null},{"id":"XC_SPIDER","name":"XC_SPIDER","value":"122_u32","doc":null,"summary":null},{"id":"XC_SPRAYCAN","name":"XC_SPRAYCAN","value":"124_u32","doc":null,"summary":null},{"id":"XC_STAR","name":"XC_STAR","value":"126_u32","doc":null,"summary":null},{"id":"XC_TARGET","name":"XC_TARGET","value":"128_u32","doc":null,"summary":null},{"id":"XC_TCROSS","name":"XC_TCROSS","value":"130_u32","doc":null,"summary":null},{"id":"XC_TOP_LEFT_ARROW","name":"XC_TOP_LEFT_ARROW","value":"132_u32","doc":null,"summary":null},{"id":"XC_TOP_LEFT_CORNER","name":"XC_TOP_LEFT_CORNER","value":"134_u32","doc":null,"summary":null},{"id":"XC_TOP_RIGHT_CORNER","name":"XC_TOP_RIGHT_CORNER","value":"136_u32","doc":null,"summary":null},{"id":"XC_TOP_SIDE","name":"XC_TOP_SIDE","value":"138_u32","doc":null,"summary":null},{"id":"XC_TOP_TEE","name":"XC_TOP_TEE","value":"140_u32","doc":null,"summary":null},{"id":"XC_TREK","name":"XC_TREK","value":"142_u32","doc":null,"summary":null},{"id":"XC_UL_ANGLE","name":"XC_UL_ANGLE","value":"144_u32","doc":null,"summary":null},{"id":"XC_UMBRELLA","name":"XC_UMBRELLA","value":"146_u32","doc":null,"summary":null},{"id":"XC_UR_ANGLE","name":"XC_UR_ANGLE","value":"148_u32","doc":null,"summary":null},{"id":"XC_WATCH","name":"XC_WATCH","value":"150_u32","doc":null,"summary":null},{"id":"XC_X_CURSOR","name":"XC_X_CURSOR","value":"0_u32","doc":null,"summary":null},{"id":"XC_XTERM","name":"XC_XTERM","value":"152_u32","doc":null,"summary":null},{"id":"XK_0","name":"XK_0","value":"48","doc":"U+002F SOLIDUS","summary":"<p>U+002F SOLIDUS</p>"},{"id":"XK_1","name":"XK_1","value":"49","doc":"U+0030 DIGIT ZERO","summary":"<p>U+0030 DIGIT ZERO</p>"},{"id":"XK_2","name":"XK_2","value":"50","doc":"U+0031 DIGIT ONE","summary":"<p>U+0031 DIGIT ONE</p>"},{"id":"XK_3","name":"XK_3","value":"51","doc":"U+0032 DIGIT TWO","summary":"<p>U+0032 DIGIT TWO</p>"},{"id":"XK_3270","name":"XK_3270","value":"false","doc":null,"summary":null},{"id":"XK_4","name":"XK_4","value":"52","doc":"U+0033 DIGIT THREE","summary":"<p>U+0033 DIGIT THREE</p>"},{"id":"XK_5","name":"XK_5","value":"53","doc":"U+0034 DIGIT FOUR","summary":"<p>U+0034 DIGIT FOUR</p>"},{"id":"XK_6","name":"XK_6","value":"54","doc":"U+0035 DIGIT FIVE","summary":"<p>U+0035 DIGIT FIVE</p>"},{"id":"XK_7","name":"XK_7","value":"55","doc":"U+0036 DIGIT SIX","summary":"<p>U+0036 DIGIT SIX</p>"},{"id":"XK_8","name":"XK_8","value":"56","doc":"U+0037 DIGIT SEVEN","summary":"<p>U+0037 DIGIT SEVEN</p>"},{"id":"XK_9","name":"XK_9","value":"57","doc":"U+0038 DIGIT EIGHT","summary":"<p>U+0038 DIGIT EIGHT</p>"},{"id":"XK_a","name":"XK_a","value":"97","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_A","name":"XK_A","value":"65","doc":"U+0040 COMMERCIAL AT","summary":"<p>U+0040 COMMERCIAL AT</p>"},{"id":"XK_aacute","name":"XK_aacute","value":"225","doc":"U+00E0 LATIN SMALL LETTER A WITH GRAVE","summary":"<p>U+00E0 LATIN SMALL LETTER A WITH GRAVE</p>"},{"id":"XK_Aacute","name":"XK_Aacute","value":"193","doc":"U+00C0 LATIN CAPITAL LETTER A WITH GRAVE","summary":"<p>U+00C0 LATIN CAPITAL LETTER A WITH GRAVE</p>"},{"id":"XK_Abelowdot","name":"XK_Abelowdot","value":"16785056","doc":null,"summary":null},{"id":"XK_abelowdot","name":"XK_abelowdot","value":"16785057","doc":"U+1EA0 LATIN CAPITAL LETTER A WITH DOT BELOW","summary":"<p>U+1EA0 LATIN CAPITAL LETTER A WITH DOT BELOW</p>"},{"id":"XK_abovedot","name":"XK_abovedot","value":"511","doc":"U+0163 LATIN SMALL LETTER T WITH CEDILLA","summary":"<p>U+0163 LATIN SMALL LETTER T WITH CEDILLA</p>"},{"id":"XK_Abreve","name":"XK_Abreve","value":"451","doc":"U+0154 LATIN CAPITAL LETTER R WITH ACUTE","summary":"<p>U+0154 LATIN CAPITAL LETTER R WITH ACUTE</p>"},{"id":"XK_abreve","name":"XK_abreve","value":"483","doc":"U+0155 LATIN SMALL LETTER R WITH ACUTE","summary":"<p>U+0155 LATIN SMALL LETTER R WITH ACUTE</p>"},{"id":"XK_abreveacute","name":"XK_abreveacute","value":"16785071","doc":"U+1EAE LATIN CAPITAL LETTER A WITH BREVE AND ACUTE","summary":"<p>U+1EAE LATIN CAPITAL LETTER A WITH BREVE AND ACUTE</p>"},{"id":"XK_Abreveacute","name":"XK_Abreveacute","value":"16785070","doc":"U+1EAD LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW","summary":"<p>U+1EAD LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW</p>"},{"id":"XK_abrevebelowdot","name":"XK_abrevebelowdot","value":"16785079","doc":"U+1EB6 LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW","summary":"<p>U+1EB6 LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW</p>"},{"id":"XK_Abrevebelowdot","name":"XK_Abrevebelowdot","value":"16785078","doc":"U+1EB5 LATIN SMALL LETTER A WITH BREVE AND TILDE","summary":"<p>U+1EB5 LATIN SMALL LETTER A WITH BREVE AND TILDE</p>"},{"id":"XK_abrevegrave","name":"XK_abrevegrave","value":"16785073","doc":"U+1EB0 LATIN CAPITAL LETTER A WITH BREVE AND GRAVE","summary":"<p>U+1EB0 LATIN CAPITAL LETTER A WITH BREVE AND GRAVE</p>"},{"id":"XK_Abrevegrave","name":"XK_Abrevegrave","value":"16785072","doc":"U+1EAF LATIN SMALL LETTER A WITH BREVE AND ACUTE","summary":"<p>U+1EAF LATIN SMALL LETTER A WITH BREVE AND ACUTE</p>"},{"id":"XK_Abrevehook","name":"XK_Abrevehook","value":"16785074","doc":"U+1EB1 LATIN SMALL LETTER A WITH BREVE AND GRAVE","summary":"<p>U+1EB1 LATIN SMALL LETTER A WITH BREVE AND GRAVE</p>"},{"id":"XK_abrevehook","name":"XK_abrevehook","value":"16785075","doc":"U+1EB2 LATIN CAPITAL LETTER A WITH BREVE AND HOOK ABOVE","summary":"<p>U+1EB2 LATIN CAPITAL LETTER A WITH BREVE AND HOOK ABOVE</p>"},{"id":"XK_Abrevetilde","name":"XK_Abrevetilde","value":"16785076","doc":"U+1EB3 LATIN SMALL LETTER A WITH BREVE AND HOOK ABOVE","summary":"<p>U+1EB3 LATIN SMALL LETTER A WITH BREVE AND HOOK ABOVE</p>"},{"id":"XK_abrevetilde","name":"XK_abrevetilde","value":"16785077","doc":"U+1EB4 LATIN CAPITAL LETTER A WITH BREVE AND TILDE","summary":"<p>U+1EB4 LATIN CAPITAL LETTER A WITH BREVE AND TILDE</p>"},{"id":"XK_AccessX_Enable","name":"XK_AccessX_Enable","value":"65136","doc":null,"summary":null},{"id":"XK_AccessX_Feedback_Enable","name":"XK_AccessX_Feedback_Enable","value":"65137","doc":null,"summary":null},{"id":"XK_Acircumflex","name":"XK_Acircumflex","value":"194","doc":"U+00C1 LATIN CAPITAL LETTER A WITH ACUTE","summary":"<p>U+00C1 LATIN CAPITAL LETTER A WITH ACUTE</p>"},{"id":"XK_acircumflex","name":"XK_acircumflex","value":"226","doc":"U+00E1 LATIN SMALL LETTER A WITH ACUTE","summary":"<p>U+00E1 LATIN SMALL LETTER A WITH ACUTE</p>"},{"id":"XK_Acircumflexacute","name":"XK_Acircumflexacute","value":"16785060","doc":"U+1EA3 LATIN SMALL LETTER A WITH HOOK ABOVE","summary":"<p>U+1EA3 LATIN SMALL LETTER A WITH HOOK ABOVE</p>"},{"id":"XK_acircumflexacute","name":"XK_acircumflexacute","value":"16785061","doc":"U+1EA4 LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE","summary":"<p>U+1EA4 LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE</p>"},{"id":"XK_acircumflexbelowdot","name":"XK_acircumflexbelowdot","value":"16785069","doc":"U+1EAC LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW","summary":"<p>U+1EAC LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW</p>"},{"id":"XK_Acircumflexbelowdot","name":"XK_Acircumflexbelowdot","value":"16785068","doc":"U+1EAB LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE","summary":"<p>U+1EAB LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE</p>"},{"id":"XK_Acircumflexgrave","name":"XK_Acircumflexgrave","value":"16785062","doc":"U+1EA5 LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE","summary":"<p>U+1EA5 LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE</p>"},{"id":"XK_acircumflexgrave","name":"XK_acircumflexgrave","value":"16785063","doc":"U+1EA6 LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE","summary":"<p>U+1EA6 LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE</p>"},{"id":"XK_Acircumflexhook","name":"XK_Acircumflexhook","value":"16785064","doc":"U+1EA7 LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE","summary":"<p>U+1EA7 LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE</p>"},{"id":"XK_acircumflexhook","name":"XK_acircumflexhook","value":"16785065","doc":"U+1EA8 LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE","summary":"<p>U+1EA8 LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE</p>"},{"id":"XK_acircumflextilde","name":"XK_acircumflextilde","value":"16785067","doc":"U+1EAA LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE","summary":"<p>U+1EAA LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE</p>"},{"id":"XK_Acircumflextilde","name":"XK_Acircumflextilde","value":"16785066","doc":"U+1EA9 LATIN SMALL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE","summary":"<p>U+1EA9 LATIN SMALL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE</p>"},{"id":"XK_acute","name":"XK_acute","value":"180","doc":"U+00B3 SUPERSCRIPT THREE","summary":"<p>U+00B3 SUPERSCRIPT THREE</p>"},{"id":"XK_adiaeresis","name":"XK_adiaeresis","value":"228","doc":"U+00E3 LATIN SMALL LETTER A WITH TILDE","summary":"<p>U+00E3 LATIN SMALL LETTER A WITH TILDE</p>"},{"id":"XK_Adiaeresis","name":"XK_Adiaeresis","value":"196","doc":"U+00C3 LATIN CAPITAL LETTER A WITH TILDE","summary":"<p>U+00C3 LATIN CAPITAL LETTER A WITH TILDE</p>"},{"id":"XK_AE","name":"XK_AE","value":"198","doc":"U+00C5 LATIN CAPITAL LETTER A WITH RING ABOVE","summary":"<p>U+00C5 LATIN CAPITAL LETTER A WITH RING ABOVE</p>"},{"id":"XK_ae","name":"XK_ae","value":"230","doc":"U+00E5 LATIN SMALL LETTER A WITH RING ABOVE","summary":"<p>U+00E5 LATIN SMALL LETTER A WITH RING ABOVE</p>"},{"id":"XK_agrave","name":"XK_agrave","value":"224","doc":"U+00DF LATIN SMALL LETTER SHARP S","summary":"<p>U+00DF LATIN SMALL LETTER SHARP S</p>"},{"id":"XK_Agrave","name":"XK_Agrave","value":"192","doc":"U+00BF INVERTED QUESTION MARK","summary":"<p>U+00BF INVERTED QUESTION MARK</p>"},{"id":"XK_Ahook","name":"XK_Ahook","value":"16785058","doc":"U+1EA1 LATIN SMALL LETTER A WITH DOT BELOW","summary":"<p>U+1EA1 LATIN SMALL LETTER A WITH DOT BELOW</p>"},{"id":"XK_ahook","name":"XK_ahook","value":"16785059","doc":"U+1EA2 LATIN CAPITAL LETTER A WITH HOOK ABOVE","summary":"<p>U+1EA2 LATIN CAPITAL LETTER A WITH HOOK ABOVE</p>"},{"id":"XK_Alt_L","name":"XK_Alt_L","value":"65513","doc":"Right meta","summary":"<p>Right meta</p>"},{"id":"XK_Alt_R","name":"XK_Alt_R","value":"65514","doc":"Left alt","summary":"<p>Left alt</p>"},{"id":"XK_amacron","name":"XK_amacron","value":"992","doc":"U+016A LATIN CAPITAL LETTER U WITH MACRON","summary":"<p>U+016A LATIN CAPITAL LETTER U WITH MACRON</p>"},{"id":"XK_Amacron","name":"XK_Amacron","value":"960","doc":"U+014B LATIN SMALL LETTER ENG","summary":"<p>U+014B LATIN SMALL LETTER ENG</p>"},{"id":"XK_ampersand","name":"XK_ampersand","value":"38","doc":"U+0025 PERCENT SIGN","summary":"<p>U+0025 PERCENT SIGN</p>"},{"id":"XK_aogonek","name":"XK_aogonek","value":"433","doc":"U+017B LATIN CAPITAL LETTER Z WITH DOT ABOVE","summary":"<p>U+017B LATIN CAPITAL LETTER Z WITH DOT ABOVE</p>"},{"id":"XK_Aogonek","name":"XK_Aogonek","value":"417","doc":null,"summary":null},{"id":"XK_APL","name":"XK_APL","value":"false","doc":null,"summary":null},{"id":"XK_apostrophe","name":"XK_apostrophe","value":"39","doc":"U+0026 AMPERSAND","summary":"<p>U+0026 AMPERSAND</p>"},{"id":"XK_approxeq","name":"XK_approxeq","value":"16785992","doc":"U+2235 BECAUSE","summary":"<p>U+2235 BECAUSE</p>"},{"id":"XK_ARABIC","name":"XK_ARABIC","value":"true","doc":null,"summary":null},{"id":"XK_Arabic_0","name":"XK_Arabic_0","value":"16778848","doc":"U+06D4 ARABIC FULL STOP","summary":"<p>U+06D4 ARABIC FULL STOP</p>"},{"id":"XK_Arabic_1","name":"XK_Arabic_1","value":"16778849","doc":"U+0660 ARABIC-INDIC DIGIT ZERO","summary":"<p>U+0660 ARABIC-INDIC DIGIT ZERO</p>"},{"id":"XK_Arabic_2","name":"XK_Arabic_2","value":"16778850","doc":"U+0661 ARABIC-INDIC DIGIT ONE","summary":"<p>U+0661 ARABIC-INDIC DIGIT ONE</p>"},{"id":"XK_Arabic_3","name":"XK_Arabic_3","value":"16778851","doc":"U+0662 ARABIC-INDIC DIGIT TWO","summary":"<p>U+0662 ARABIC-INDIC DIGIT TWO</p>"},{"id":"XK_Arabic_4","name":"XK_Arabic_4","value":"16778852","doc":"U+0663 ARABIC-INDIC DIGIT THREE","summary":"<p>U+0663 ARABIC-INDIC DIGIT THREE</p>"},{"id":"XK_Arabic_5","name":"XK_Arabic_5","value":"16778853","doc":"U+0664 ARABIC-INDIC DIGIT FOUR","summary":"<p>U+0664 ARABIC-INDIC DIGIT FOUR</p>"},{"id":"XK_Arabic_6","name":"XK_Arabic_6","value":"16778854","doc":"U+0665 ARABIC-INDIC DIGIT FIVE","summary":"<p>U+0665 ARABIC-INDIC DIGIT FIVE</p>"},{"id":"XK_Arabic_7","name":"XK_Arabic_7","value":"16778855","doc":"U+0666 ARABIC-INDIC DIGIT SIX","summary":"<p>U+0666 ARABIC-INDIC DIGIT SIX</p>"},{"id":"XK_Arabic_8","name":"XK_Arabic_8","value":"16778856","doc":"U+0667 ARABIC-INDIC DIGIT SEVEN","summary":"<p>U+0667 ARABIC-INDIC DIGIT SEVEN</p>"},{"id":"XK_Arabic_9","name":"XK_Arabic_9","value":"16778857","doc":"U+0668 ARABIC-INDIC DIGIT EIGHT","summary":"<p>U+0668 ARABIC-INDIC DIGIT EIGHT</p>"},{"id":"XK_Arabic_ain","name":"XK_Arabic_ain","value":"1497","doc":"U+0638 ARABIC LETTER ZAH","summary":"<p>U+0638 ARABIC LETTER ZAH</p>"},{"id":"XK_Arabic_alef","name":"XK_Arabic_alef","value":"1479","doc":"U+0626 ARABIC LETTER YEH WITH HAMZA ABOVE","summary":"<p>U+0626 ARABIC LETTER YEH WITH HAMZA ABOVE</p>"},{"id":"XK_Arabic_alefmaksura","name":"XK_Arabic_alefmaksura","value":"1513","doc":"U+0648 ARABIC LETTER WAW","summary":"<p>U+0648 ARABIC LETTER WAW</p>"},{"id":"XK_Arabic_beh","name":"XK_Arabic_beh","value":"1480","doc":"U+0627 ARABIC LETTER ALEF","summary":"<p>U+0627 ARABIC LETTER ALEF</p>"},{"id":"XK_Arabic_comma","name":"XK_Arabic_comma","value":"1452","doc":"U+0691 ARABIC LETTER RREH","summary":"<p>U+0691 ARABIC LETTER RREH</p>"},{"id":"XK_Arabic_dad","name":"XK_Arabic_dad","value":"1494","doc":"U+0635 ARABIC LETTER SAD","summary":"<p>U+0635 ARABIC LETTER SAD</p>"},{"id":"XK_Arabic_dal","name":"XK_Arabic_dal","value":"1487","doc":"U+062E ARABIC LETTER KHAH","summary":"<p>U+062E ARABIC LETTER KHAH</p>"},{"id":"XK_Arabic_damma","name":"XK_Arabic_damma","value":"1519","doc":"U+064E ARABIC FATHA","summary":"<p>U+064E ARABIC FATHA</p>"},{"id":"XK_Arabic_dammatan","name":"XK_Arabic_dammatan","value":"1516","doc":"U+064B ARABIC FATHATAN","summary":"<p>U+064B ARABIC FATHATAN</p>"},{"id":"XK_Arabic_ddal","name":"XK_Arabic_ddal","value":"16778888","doc":"U+0686 ARABIC LETTER TCHEH","summary":"<p>U+0686 ARABIC LETTER TCHEH</p>"},{"id":"XK_Arabic_farsi_yeh","name":"XK_Arabic_farsi_yeh","value":"16778956","doc":"U+06CC ARABIC LETTER FARSI YEH","summary":"<p>U+06CC ARABIC LETTER FARSI YEH</p>"},{"id":"XK_Arabic_fatha","name":"XK_Arabic_fatha","value":"1518","doc":"U+064D ARABIC KASRATAN","summary":"<p>U+064D ARABIC KASRATAN</p>"},{"id":"XK_Arabic_fathatan","name":"XK_Arabic_fathatan","value":"1515","doc":"U+064A ARABIC LETTER YEH","summary":"<p>U+064A ARABIC LETTER YEH</p>"},{"id":"XK_Arabic_feh","name":"XK_Arabic_feh","value":"1505","doc":"U+0640 ARABIC TATWEEL","summary":"<p>U+0640 ARABIC TATWEEL</p>"},{"id":"XK_Arabic_fullstop","name":"XK_Arabic_fullstop","value":"16778964","doc":"U+060C ARABIC COMMA","summary":"<p>U+060C ARABIC COMMA</p>"},{"id":"XK_Arabic_gaf","name":"XK_Arabic_gaf","value":"16778927","doc":"U+06A9 ARABIC LETTER KEHEH","summary":"<p>U+06A9 ARABIC LETTER KEHEH</p>"},{"id":"XK_Arabic_ghain","name":"XK_Arabic_ghain","value":"1498","doc":"U+0639 ARABIC LETTER AIN","summary":"<p>U+0639 ARABIC LETTER AIN</p>"},{"id":"XK_Arabic_ha","name":"XK_Arabic_ha","value":"1511","doc":"U+0646 ARABIC LETTER NOON","summary":"<p>U+0646 ARABIC LETTER NOON</p>"},{"id":"XK_Arabic_hah","name":"XK_Arabic_hah","value":"1485","doc":"U+062C ARABIC LETTER JEEM","summary":"<p>U+062C ARABIC LETTER JEEM</p>"},{"id":"XK_Arabic_hamza","name":"XK_Arabic_hamza","value":"1473","doc":"U+061F ARABIC QUESTION MARK","summary":"<p>U+061F ARABIC QUESTION MARK</p>"},{"id":"XK_Arabic_hamza_above","name":"XK_Arabic_hamza_above","value":"16778836","doc":"U+0653 ARABIC MADDAH ABOVE","summary":"<p>U+0653 ARABIC MADDAH ABOVE</p>"},{"id":"XK_Arabic_hamza_below","name":"XK_Arabic_hamza_below","value":"16778837","doc":"U+0654 ARABIC HAMZA ABOVE","summary":"<p>U+0654 ARABIC HAMZA ABOVE</p>"},{"id":"XK_Arabic_hamzaonalef","name":"XK_Arabic_hamzaonalef","value":"1475","doc":"U+0622 ARABIC LETTER ALEF WITH MADDA ABOVE","summary":"<p>U+0622 ARABIC LETTER ALEF WITH MADDA ABOVE</p>"},{"id":"XK_Arabic_hamzaonwaw","name":"XK_Arabic_hamzaonwaw","value":"1476","doc":"U+0623 ARABIC LETTER ALEF WITH HAMZA ABOVE","summary":"<p>U+0623 ARABIC LETTER ALEF WITH HAMZA ABOVE</p>"},{"id":"XK_Arabic_hamzaonyeh","name":"XK_Arabic_hamzaonyeh","value":"1478","doc":"U+0625 ARABIC LETTER ALEF WITH HAMZA BELOW","summary":"<p>U+0625 ARABIC LETTER ALEF WITH HAMZA BELOW</p>"},{"id":"XK_Arabic_hamzaunderalef","name":"XK_Arabic_hamzaunderalef","value":"1477","doc":"U+0624 ARABIC LETTER WAW WITH HAMZA ABOVE","summary":"<p>U+0624 ARABIC LETTER WAW WITH HAMZA ABOVE</p>"},{"id":"XK_Arabic_heh","name":"XK_Arabic_heh","value":"1511","doc":"U+0647 ARABIC LETTER HEH","summary":"<p>U+0647 ARABIC LETTER HEH</p>"},{"id":"XK_Arabic_heh_doachashmee","name":"XK_Arabic_heh_doachashmee","value":"16778942","doc":"U+06BA ARABIC LETTER NOON GHUNNA","summary":"<p>U+06BA ARABIC LETTER NOON GHUNNA</p>"},{"id":"XK_Arabic_heh_goal","name":"XK_Arabic_heh_goal","value":"16778945","doc":"U+06D2 ARABIC LETTER YEH BARREE","summary":"<p>U+06D2 ARABIC LETTER YEH BARREE</p>"},{"id":"XK_Arabic_jeem","name":"XK_Arabic_jeem","value":"1484","doc":"U+062B ARABIC LETTER THEH","summary":"<p>U+062B ARABIC LETTER THEH</p>"},{"id":"XK_Arabic_jeh","name":"XK_Arabic_jeh","value":"16778904","doc":"U+0655 ARABIC HAMZA BELOW","summary":"<p>U+0655 ARABIC HAMZA BELOW</p>"},{"id":"XK_Arabic_kaf","name":"XK_Arabic_kaf","value":"1507","doc":"U+0642 ARABIC LETTER QAF","summary":"<p>U+0642 ARABIC LETTER QAF</p>"},{"id":"XK_Arabic_kasra","name":"XK_Arabic_kasra","value":"1520","doc":"U+064F ARABIC DAMMA","summary":"<p>U+064F ARABIC DAMMA</p>"},{"id":"XK_Arabic_kasratan","name":"XK_Arabic_kasratan","value":"1517","doc":"U+064C ARABIC DAMMATAN","summary":"<p>U+064C ARABIC DAMMATAN</p>"},{"id":"XK_Arabic_keheh","name":"XK_Arabic_keheh","value":"16778921","doc":"U+06A4 ARABIC LETTER VEH","summary":"<p>U+06A4 ARABIC LETTER VEH</p>"},{"id":"XK_Arabic_khah","name":"XK_Arabic_khah","value":"1486","doc":"U+062D ARABIC LETTER HAH","summary":"<p>U+062D ARABIC LETTER HAH</p>"},{"id":"XK_Arabic_lam","name":"XK_Arabic_lam","value":"1508","doc":"U+0643 ARABIC LETTER KAF","summary":"<p>U+0643 ARABIC LETTER KAF</p>"},{"id":"XK_Arabic_madda_above","name":"XK_Arabic_madda_above","value":"16778835","doc":"U+0652 ARABIC SUKUN","summary":"<p>U+0652 ARABIC SUKUN</p>"},{"id":"XK_Arabic_maddaonalef","name":"XK_Arabic_maddaonalef","value":"1474","doc":"U+0621 ARABIC LETTER HAMZA","summary":"<p>U+0621 ARABIC LETTER HAMZA</p>"},{"id":"XK_Arabic_meem","name":"XK_Arabic_meem","value":"1509","doc":"U+0644 ARABIC LETTER LAM","summary":"<p>U+0644 ARABIC LETTER LAM</p>"},{"id":"XK_Arabic_noon","name":"XK_Arabic_noon","value":"1510","doc":"U+0645 ARABIC LETTER MEEM","summary":"<p>U+0645 ARABIC LETTER MEEM</p>"},{"id":"XK_Arabic_noon_ghunna","name":"XK_Arabic_noon_ghunna","value":"16778938","doc":"U+06AF ARABIC LETTER GAF","summary":"<p>U+06AF ARABIC LETTER GAF</p>"},{"id":"XK_Arabic_peh","name":"XK_Arabic_peh","value":"16778878","doc":"U+0679 ARABIC LETTER TTEH","summary":"<p>U+0679 ARABIC LETTER TTEH</p>"},{"id":"XK_Arabic_percent","name":"XK_Arabic_percent","value":"16778858","doc":"U+06F9 EXTENDED ARABIC-INDIC DIGIT NINE","summary":"<p>U+06F9 EXTENDED ARABIC-INDIC DIGIT NINE</p>"},{"id":"XK_Arabic_qaf","name":"XK_Arabic_qaf","value":"1506","doc":"U+0641 ARABIC LETTER FEH","summary":"<p>U+0641 ARABIC LETTER FEH</p>"},{"id":"XK_Arabic_question_mark","name":"XK_Arabic_question_mark","value":"1471","doc":"U+061B ARABIC SEMICOLON","summary":"<p>U+061B ARABIC SEMICOLON</p>"},{"id":"XK_Arabic_ra","name":"XK_Arabic_ra","value":"1489","doc":"U+0630 ARABIC LETTER THAL","summary":"<p>U+0630 ARABIC LETTER THAL</p>"},{"id":"XK_Arabic_rreh","name":"XK_Arabic_rreh","value":"16778897","doc":"U+0688 ARABIC LETTER DDAL","summary":"<p>U+0688 ARABIC LETTER DDAL</p>"},{"id":"XK_Arabic_sad","name":"XK_Arabic_sad","value":"1493","doc":"U+0634 ARABIC LETTER SHEEN","summary":"<p>U+0634 ARABIC LETTER SHEEN</p>"},{"id":"XK_Arabic_seen","name":"XK_Arabic_seen","value":"1491","doc":"U+0632 ARABIC LETTER ZAIN","summary":"<p>U+0632 ARABIC LETTER ZAIN</p>"},{"id":"XK_Arabic_semicolon","name":"XK_Arabic_semicolon","value":"1467","doc":"U+0669 ARABIC-INDIC DIGIT NINE","summary":"<p>U+0669 ARABIC-INDIC DIGIT NINE</p>"},{"id":"XK_Arabic_shadda","name":"XK_Arabic_shadda","value":"1521","doc":"U+0650 ARABIC KASRA","summary":"<p>U+0650 ARABIC KASRA</p>"},{"id":"XK_Arabic_sheen","name":"XK_Arabic_sheen","value":"1492","doc":"U+0633 ARABIC LETTER SEEN","summary":"<p>U+0633 ARABIC LETTER SEEN</p>"},{"id":"XK_Arabic_sukun","name":"XK_Arabic_sukun","value":"1522","doc":"U+0651 ARABIC SHADDA","summary":"<p>U+0651 ARABIC SHADDA</p>"},{"id":"XK_Arabic_superscript_alef","name":"XK_Arabic_superscript_alef","value":"16778864","doc":"U+066A ARABIC PERCENT SIGN","summary":"<p>U+066A ARABIC PERCENT SIGN</p>"},{"id":"XK_Arabic_switch","name":"XK_Arabic_switch","value":"65406","doc":"U+06C1 ARABIC LETTER HEH GOAL","summary":"<p>U+06C1 ARABIC LETTER HEH GOAL</p>"},{"id":"XK_Arabic_tah","name":"XK_Arabic_tah","value":"1495","doc":"U+0636 ARABIC LETTER DAD","summary":"<p>U+0636 ARABIC LETTER DAD</p>"},{"id":"XK_Arabic_tatweel","name":"XK_Arabic_tatweel","value":"1504","doc":"U+063A ARABIC LETTER GHAIN","summary":"<p>U+063A ARABIC LETTER GHAIN</p>"},{"id":"XK_Arabic_tcheh","name":"XK_Arabic_tcheh","value":"16778886","doc":"U+067E ARABIC LETTER PEH","summary":"<p>U+067E ARABIC LETTER PEH</p>"},{"id":"XK_Arabic_teh","name":"XK_Arabic_teh","value":"1482","doc":"U+0629 ARABIC LETTER TEH MARBUTA","summary":"<p>U+0629 ARABIC LETTER TEH MARBUTA</p>"},{"id":"XK_Arabic_tehmarbuta","name":"XK_Arabic_tehmarbuta","value":"1481","doc":"U+0628 ARABIC LETTER BEH","summary":"<p>U+0628 ARABIC LETTER BEH</p>"},{"id":"XK_Arabic_thal","name":"XK_Arabic_thal","value":"1488","doc":"U+062F ARABIC LETTER DAL","summary":"<p>U+062F ARABIC LETTER DAL</p>"},{"id":"XK_Arabic_theh","name":"XK_Arabic_theh","value":"1483","doc":"U+062A ARABIC LETTER TEH","summary":"<p>U+062A ARABIC LETTER TEH</p>"},{"id":"XK_Arabic_tteh","name":"XK_Arabic_tteh","value":"16778873","doc":"U+0670 ARABIC LETTER SUPERSCRIPT ALEF","summary":"<p>U+0670 ARABIC LETTER SUPERSCRIPT ALEF</p>"},{"id":"XK_Arabic_veh","name":"XK_Arabic_veh","value":"16778916","doc":"U+0698 ARABIC LETTER JEH","summary":"<p>U+0698 ARABIC LETTER JEH</p>"},{"id":"XK_Arabic_waw","name":"XK_Arabic_waw","value":"1512","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Arabic_yeh","name":"XK_Arabic_yeh","value":"1514","doc":"U+0649 ARABIC LETTER ALEF MAKSURA","summary":"<p>U+0649 ARABIC LETTER ALEF MAKSURA</p>"},{"id":"XK_Arabic_yeh_baree","name":"XK_Arabic_yeh_baree","value":"16778962","doc":"U+06CC ARABIC LETTER FARSI YEH","summary":"<p>U+06CC ARABIC LETTER FARSI YEH</p>"},{"id":"XK_Arabic_zah","name":"XK_Arabic_zah","value":"1496","doc":"U+0637 ARABIC LETTER TAH","summary":"<p>U+0637 ARABIC LETTER TAH</p>"},{"id":"XK_Arabic_zain","name":"XK_Arabic_zain","value":"1490","doc":"U+0631 ARABIC LETTER REH","summary":"<p>U+0631 ARABIC LETTER REH</p>"},{"id":"XK_aring","name":"XK_aring","value":"229","doc":"U+00E4 LATIN SMALL LETTER A WITH DIAERESIS","summary":"<p>U+00E4 LATIN SMALL LETTER A WITH DIAERESIS</p>"},{"id":"XK_Aring","name":"XK_Aring","value":"197","doc":"U+00C4 LATIN CAPITAL LETTER A WITH DIAERESIS","summary":"<p>U+00C4 LATIN CAPITAL LETTER A WITH DIAERESIS</p>"},{"id":"XK_ARMENIAN","name":"XK_ARMENIAN","value":"true","doc":null,"summary":null},{"id":"XK_Armenian_accent","name":"XK_Armenian_accent","value":"16778587","doc":"U+055C ARMENIAN EXCLAMATION MARK","summary":"<p>U+055C ARMENIAN EXCLAMATION MARK</p>"},{"id":"XK_Armenian_amanak","name":"XK_Armenian_amanak","value":"16778588","doc":"U+055C ARMENIAN EXCLAMATION MARK","summary":"<p>U+055C ARMENIAN EXCLAMATION MARK</p>"},{"id":"XK_Armenian_apostrophe","name":"XK_Armenian_apostrophe","value":"16778586","doc":"U+0586 ARMENIAN SMALL LETTER FEH","summary":"<p>U+0586 ARMENIAN SMALL LETTER FEH</p>"},{"id":"XK_Armenian_at","name":"XK_Armenian_at","value":"16778600","doc":"U+0538 ARMENIAN CAPITAL LETTER ET","summary":"<p>U+0538 ARMENIAN CAPITAL LETTER ET</p>"},{"id":"XK_Armenian_AT","name":"XK_Armenian_AT","value":"16778552","doc":"U+0567 ARMENIAN SMALL LETTER EH","summary":"<p>U+0567 ARMENIAN SMALL LETTER EH</p>"},{"id":"XK_Armenian_ayb","name":"XK_Armenian_ayb","value":"16778593","doc":"U+0531 ARMENIAN CAPITAL LETTER AYB","summary":"<p>U+0531 ARMENIAN CAPITAL LETTER AYB</p>"},{"id":"XK_Armenian_AYB","name":"XK_Armenian_AYB","value":"16778545","doc":"U+055E ARMENIAN QUESTION MARK","summary":"<p>U+055E ARMENIAN QUESTION MARK</p>"},{"id":"XK_Armenian_BEN","name":"XK_Armenian_BEN","value":"16778546","doc":"U+0561 ARMENIAN SMALL LETTER AYB","summary":"<p>U+0561 ARMENIAN SMALL LETTER AYB</p>"},{"id":"XK_Armenian_ben","name":"XK_Armenian_ben","value":"16778594","doc":"U+0532 ARMENIAN CAPITAL LETTER BEN","summary":"<p>U+0532 ARMENIAN CAPITAL LETTER BEN</p>"},{"id":"XK_Armenian_but","name":"XK_Armenian_but","value":"16778589","doc":"U+055D ARMENIAN COMMA","summary":"<p>U+055D ARMENIAN COMMA</p>"},{"id":"XK_Armenian_CHA","name":"XK_Armenian_CHA","value":"16778569","doc":"U+0578 ARMENIAN SMALL LETTER VO","summary":"<p>U+0578 ARMENIAN SMALL LETTER VO</p>"},{"id":"XK_Armenian_cha","name":"XK_Armenian_cha","value":"16778617","doc":"U+0549 ARMENIAN CAPITAL LETTER CHA","summary":"<p>U+0549 ARMENIAN CAPITAL LETTER CHA</p>"},{"id":"XK_Armenian_da","name":"XK_Armenian_da","value":"16778596","doc":"U+0534 ARMENIAN CAPITAL LETTER DA","summary":"<p>U+0534 ARMENIAN CAPITAL LETTER DA</p>"},{"id":"XK_Armenian_DA","name":"XK_Armenian_DA","value":"16778548","doc":"U+0563 ARMENIAN SMALL LETTER GIM","summary":"<p>U+0563 ARMENIAN SMALL LETTER GIM</p>"},{"id":"XK_Armenian_dza","name":"XK_Armenian_dza","value":"16778609","doc":"U+0541 ARMENIAN CAPITAL LETTER JA","summary":"<p>U+0541 ARMENIAN CAPITAL LETTER JA</p>"},{"id":"XK_Armenian_DZA","name":"XK_Armenian_DZA","value":"16778561","doc":"U+0570 ARMENIAN SMALL LETTER HO","summary":"<p>U+0570 ARMENIAN SMALL LETTER HO</p>"},{"id":"XK_Armenian_e","name":"XK_Armenian_e","value":"16778599","doc":"U+0537 ARMENIAN CAPITAL LETTER EH","summary":"<p>U+0537 ARMENIAN CAPITAL LETTER EH</p>"},{"id":"XK_Armenian_E","name":"XK_Armenian_E","value":"16778551","doc":"U+0566 ARMENIAN SMALL LETTER ZA","summary":"<p>U+0566 ARMENIAN SMALL LETTER ZA</p>"},{"id":"XK_Armenian_exclam","name":"XK_Armenian_exclam","value":"16778588","doc":"U+058A ARMENIAN HYPHEN","summary":"<p>U+058A ARMENIAN HYPHEN</p>"},{"id":"XK_Armenian_fe","name":"XK_Armenian_fe","value":"16778630","doc":"U+0556 ARMENIAN CAPITAL LETTER FEH","summary":"<p>U+0556 ARMENIAN CAPITAL LETTER FEH</p>"},{"id":"XK_Armenian_FE","name":"XK_Armenian_FE","value":"16778582","doc":"U+0585 ARMENIAN SMALL LETTER OH","summary":"<p>U+0585 ARMENIAN SMALL LETTER OH</p>"},{"id":"XK_Armenian_full_stop","name":"XK_Armenian_full_stop","value":"16778633","doc":"U+0587 ARMENIAN SMALL LIGATURE ECH YIWN","summary":"<p>U+0587 ARMENIAN SMALL LIGATURE ECH YIWN</p>"},{"id":"XK_Armenian_GHAT","name":"XK_Armenian_GHAT","value":"16778562","doc":"U+0571 ARMENIAN SMALL LETTER JA","summary":"<p>U+0571 ARMENIAN SMALL LETTER JA</p>"},{"id":"XK_Armenian_ghat","name":"XK_Armenian_ghat","value":"16778610","doc":"U+0542 ARMENIAN CAPITAL LETTER GHAD","summary":"<p>U+0542 ARMENIAN CAPITAL LETTER GHAD</p>"},{"id":"XK_Armenian_GIM","name":"XK_Armenian_GIM","value":"16778547","doc":"U+0562 ARMENIAN SMALL LETTER BEN","summary":"<p>U+0562 ARMENIAN SMALL LETTER BEN</p>"},{"id":"XK_Armenian_gim","name":"XK_Armenian_gim","value":"16778595","doc":"U+0533 ARMENIAN CAPITAL LETTER GIM","summary":"<p>U+0533 ARMENIAN CAPITAL LETTER GIM</p>"},{"id":"XK_Armenian_hi","name":"XK_Armenian_hi","value":"16778613","doc":"U+0545 ARMENIAN CAPITAL LETTER YI","summary":"<p>U+0545 ARMENIAN CAPITAL LETTER YI</p>"},{"id":"XK_Armenian_HI","name":"XK_Armenian_HI","value":"16778565","doc":"U+0574 ARMENIAN SMALL LETTER MEN","summary":"<p>U+0574 ARMENIAN SMALL LETTER MEN</p>"},{"id":"XK_Armenian_HO","name":"XK_Armenian_HO","value":"16778560","doc":"U+056F ARMENIAN SMALL LETTER KEN","summary":"<p>U+056F ARMENIAN SMALL LETTER KEN</p>"},{"id":"XK_Armenian_ho","name":"XK_Armenian_ho","value":"16778608","doc":"U+0540 ARMENIAN CAPITAL LETTER HO","summary":"<p>U+0540 ARMENIAN CAPITAL LETTER HO</p>"},{"id":"XK_Armenian_hyphen","name":"XK_Armenian_hyphen","value":"16778634","doc":"U+055D ARMENIAN COMMA","summary":"<p>U+055D ARMENIAN COMMA</p>"},{"id":"XK_Armenian_ini","name":"XK_Armenian_ini","value":"16778603","doc":"U+053B ARMENIAN CAPITAL LETTER INI","summary":"<p>U+053B ARMENIAN CAPITAL LETTER INI</p>"},{"id":"XK_Armenian_INI","name":"XK_Armenian_INI","value":"16778555","doc":"U+056A ARMENIAN SMALL LETTER ZHE","summary":"<p>U+056A ARMENIAN SMALL LETTER ZHE</p>"},{"id":"XK_Armenian_je","name":"XK_Armenian_je","value":"16778619","doc":"U+054B ARMENIAN CAPITAL LETTER JHEH","summary":"<p>U+054B ARMENIAN CAPITAL LETTER JHEH</p>"},{"id":"XK_Armenian_JE","name":"XK_Armenian_JE","value":"16778571","doc":"U+057A ARMENIAN SMALL LETTER PEH","summary":"<p>U+057A ARMENIAN SMALL LETTER PEH</p>"},{"id":"XK_Armenian_KE","name":"XK_Armenian_KE","value":"16778580","doc":"U+0583 ARMENIAN SMALL LETTER PIWR","summary":"<p>U+0583 ARMENIAN SMALL LETTER PIWR</p>"},{"id":"XK_Armenian_ke","name":"XK_Armenian_ke","value":"16778628","doc":"U+0554 ARMENIAN CAPITAL LETTER KEH","summary":"<p>U+0554 ARMENIAN CAPITAL LETTER KEH</p>"},{"id":"XK_Armenian_KEN","name":"XK_Armenian_KEN","value":"16778559","doc":"U+056E ARMENIAN SMALL LETTER CA","summary":"<p>U+056E ARMENIAN SMALL LETTER CA</p>"},{"id":"XK_Armenian_ken","name":"XK_Armenian_ken","value":"16778607","doc":"U+053F ARMENIAN CAPITAL LETTER KEN","summary":"<p>U+053F ARMENIAN CAPITAL LETTER KEN</p>"},{"id":"XK_Armenian_khe","name":"XK_Armenian_khe","value":"16778605","doc":"U+053D ARMENIAN CAPITAL LETTER XEH","summary":"<p>U+053D ARMENIAN CAPITAL LETTER XEH</p>"},{"id":"XK_Armenian_KHE","name":"XK_Armenian_KHE","value":"16778557","doc":"U+056C ARMENIAN SMALL LETTER LIWN","summary":"<p>U+056C ARMENIAN SMALL LETTER LIWN</p>"},{"id":"XK_Armenian_ligature_ew","name":"XK_Armenian_ligature_ew","value":"16778631","doc":null,"summary":null},{"id":"XK_Armenian_lyun","name":"XK_Armenian_lyun","value":"16778604","doc":"U+053C ARMENIAN CAPITAL LETTER LIWN","summary":"<p>U+053C ARMENIAN CAPITAL LETTER LIWN</p>"},{"id":"XK_Armenian_LYUN","name":"XK_Armenian_LYUN","value":"16778556","doc":"U+056B ARMENIAN SMALL LETTER INI","summary":"<p>U+056B ARMENIAN SMALL LETTER INI</p>"},{"id":"XK_Armenian_men","name":"XK_Armenian_men","value":"16778612","doc":"U+0544 ARMENIAN CAPITAL LETTER MEN","summary":"<p>U+0544 ARMENIAN CAPITAL LETTER MEN</p>"},{"id":"XK_Armenian_MEN","name":"XK_Armenian_MEN","value":"16778564","doc":"U+0573 ARMENIAN SMALL LETTER CHEH","summary":"<p>U+0573 ARMENIAN SMALL LETTER CHEH</p>"},{"id":"XK_Armenian_nu","name":"XK_Armenian_nu","value":"16778614","doc":"U+0546 ARMENIAN CAPITAL LETTER NOW","summary":"<p>U+0546 ARMENIAN CAPITAL LETTER NOW</p>"},{"id":"XK_Armenian_NU","name":"XK_Armenian_NU","value":"16778566","doc":"U+0575 ARMENIAN SMALL LETTER YI","summary":"<p>U+0575 ARMENIAN SMALL LETTER YI</p>"},{"id":"XK_Armenian_O","name":"XK_Armenian_O","value":"16778581","doc":"U+0584 ARMENIAN SMALL LETTER KEH","summary":"<p>U+0584 ARMENIAN SMALL LETTER KEH</p>"},{"id":"XK_Armenian_o","name":"XK_Armenian_o","value":"16778629","doc":"U+0555 ARMENIAN CAPITAL LETTER OH","summary":"<p>U+0555 ARMENIAN CAPITAL LETTER OH</p>"},{"id":"XK_Armenian_paruyk","name":"XK_Armenian_paruyk","value":"16778590","doc":"U+055E ARMENIAN QUESTION MARK","summary":"<p>U+055E ARMENIAN QUESTION MARK</p>"},{"id":"XK_Armenian_pe","name":"XK_Armenian_pe","value":"16778618","doc":"U+054A ARMENIAN CAPITAL LETTER PEH","summary":"<p>U+054A ARMENIAN CAPITAL LETTER PEH</p>"},{"id":"XK_Armenian_PE","name":"XK_Armenian_PE","value":"16778570","doc":"U+0579 ARMENIAN SMALL LETTER CHA","summary":"<p>U+0579 ARMENIAN SMALL LETTER CHA</p>"},{"id":"XK_Armenian_pyur","name":"XK_Armenian_pyur","value":"16778627","doc":"U+0553 ARMENIAN CAPITAL LETTER PIWR","summary":"<p>U+0553 ARMENIAN CAPITAL LETTER PIWR</p>"},{"id":"XK_Armenian_PYUR","name":"XK_Armenian_PYUR","value":"16778579","doc":"U+0582 ARMENIAN SMALL LETTER YIWN","summary":"<p>U+0582 ARMENIAN SMALL LETTER YIWN</p>"},{"id":"XK_Armenian_question","name":"XK_Armenian_question","value":"16778590","doc":"U+055B ARMENIAN EMPHASIS MARK","summary":"<p>U+055B ARMENIAN EMPHASIS MARK</p>"},{"id":"XK_Armenian_ra","name":"XK_Armenian_ra","value":"16778620","doc":"U+054C ARMENIAN CAPITAL LETTER RA","summary":"<p>U+054C ARMENIAN CAPITAL LETTER RA</p>"},{"id":"XK_Armenian_RA","name":"XK_Armenian_RA","value":"16778572","doc":"U+057B ARMENIAN SMALL LETTER JHEH","summary":"<p>U+057B ARMENIAN SMALL LETTER JHEH</p>"},{"id":"XK_Armenian_RE","name":"XK_Armenian_RE","value":"16778576","doc":"U+057F ARMENIAN SMALL LETTER TIWN","summary":"<p>U+057F ARMENIAN SMALL LETTER TIWN</p>"},{"id":"XK_Armenian_re","name":"XK_Armenian_re","value":"16778624","doc":"U+0550 ARMENIAN CAPITAL LETTER REH","summary":"<p>U+0550 ARMENIAN CAPITAL LETTER REH</p>"},{"id":"XK_Armenian_SE","name":"XK_Armenian_SE","value":"16778573","doc":"U+057C ARMENIAN SMALL LETTER RA","summary":"<p>U+057C ARMENIAN SMALL LETTER RA</p>"},{"id":"XK_Armenian_se","name":"XK_Armenian_se","value":"16778621","doc":"U+054D ARMENIAN CAPITAL LETTER SEH","summary":"<p>U+054D ARMENIAN CAPITAL LETTER SEH</p>"},{"id":"XK_Armenian_separation_mark","name":"XK_Armenian_separation_mark","value":"16778589","doc":"U+0589 ARMENIAN FULL STOP","summary":"<p>U+0589 ARMENIAN FULL STOP</p>"},{"id":"XK_Armenian_sha","name":"XK_Armenian_sha","value":"16778615","doc":"U+0547 ARMENIAN CAPITAL LETTER SHA","summary":"<p>U+0547 ARMENIAN CAPITAL LETTER SHA</p>"},{"id":"XK_Armenian_SHA","name":"XK_Armenian_SHA","value":"16778567","doc":"U+0576 ARMENIAN SMALL LETTER NOW","summary":"<p>U+0576 ARMENIAN SMALL LETTER NOW</p>"},{"id":"XK_Armenian_shesht","name":"XK_Armenian_shesht","value":"16778587","doc":"U+055B ARMENIAN EMPHASIS MARK","summary":"<p>U+055B ARMENIAN EMPHASIS MARK</p>"},{"id":"XK_Armenian_TCHE","name":"XK_Armenian_TCHE","value":"16778563","doc":"U+0572 ARMENIAN SMALL LETTER GHAD","summary":"<p>U+0572 ARMENIAN SMALL LETTER GHAD</p>"},{"id":"XK_Armenian_tche","name":"XK_Armenian_tche","value":"16778611","doc":"U+0543 ARMENIAN CAPITAL LETTER CHEH","summary":"<p>U+0543 ARMENIAN CAPITAL LETTER CHEH</p>"},{"id":"XK_Armenian_to","name":"XK_Armenian_to","value":"16778601","doc":"U+0539 ARMENIAN CAPITAL LETTER TO","summary":"<p>U+0539 ARMENIAN CAPITAL LETTER TO</p>"},{"id":"XK_Armenian_TO","name":"XK_Armenian_TO","value":"16778553","doc":"U+0568 ARMENIAN SMALL LETTER ET","summary":"<p>U+0568 ARMENIAN SMALL LETTER ET</p>"},{"id":"XK_Armenian_tsa","name":"XK_Armenian_tsa","value":"16778606","doc":"U+053E ARMENIAN CAPITAL LETTER CA","summary":"<p>U+053E ARMENIAN CAPITAL LETTER CA</p>"},{"id":"XK_Armenian_TSA","name":"XK_Armenian_TSA","value":"16778558","doc":"U+056D ARMENIAN SMALL LETTER XEH","summary":"<p>U+056D ARMENIAN SMALL LETTER XEH</p>"},{"id":"XK_Armenian_tso","name":"XK_Armenian_tso","value":"16778625","doc":"U+0551 ARMENIAN CAPITAL LETTER CO","summary":"<p>U+0551 ARMENIAN CAPITAL LETTER CO</p>"},{"id":"XK_Armenian_TSO","name":"XK_Armenian_TSO","value":"16778577","doc":"U+0580 ARMENIAN SMALL LETTER REH","summary":"<p>U+0580 ARMENIAN SMALL LETTER REH</p>"},{"id":"XK_Armenian_TYUN","name":"XK_Armenian_TYUN","value":"16778575","doc":"U+057E ARMENIAN SMALL LETTER VEW","summary":"<p>U+057E ARMENIAN SMALL LETTER VEW</p>"},{"id":"XK_Armenian_tyun","name":"XK_Armenian_tyun","value":"16778623","doc":"U+054F ARMENIAN CAPITAL LETTER TIWN","summary":"<p>U+054F ARMENIAN CAPITAL LETTER TIWN</p>"},{"id":"XK_Armenian_verjaket","name":"XK_Armenian_verjaket","value":"16778633","doc":"U+0589 ARMENIAN FULL STOP","summary":"<p>U+0589 ARMENIAN FULL STOP</p>"},{"id":"XK_Armenian_VEV","name":"XK_Armenian_VEV","value":"16778574","doc":"U+057D ARMENIAN SMALL LETTER SEH","summary":"<p>U+057D ARMENIAN SMALL LETTER SEH</p>"},{"id":"XK_Armenian_vev","name":"XK_Armenian_vev","value":"16778622","doc":"U+054E ARMENIAN CAPITAL LETTER VEW","summary":"<p>U+054E ARMENIAN CAPITAL LETTER VEW</p>"},{"id":"XK_Armenian_VO","name":"XK_Armenian_VO","value":"16778568","doc":"U+0577 ARMENIAN SMALL LETTER SHA","summary":"<p>U+0577 ARMENIAN SMALL LETTER SHA</p>"},{"id":"XK_Armenian_vo","name":"XK_Armenian_vo","value":"16778616","doc":"U+0548 ARMENIAN CAPITAL LETTER VO","summary":"<p>U+0548 ARMENIAN CAPITAL LETTER VO</p>"},{"id":"XK_Armenian_VYUN","name":"XK_Armenian_VYUN","value":"16778578","doc":"U+0581 ARMENIAN SMALL LETTER CO","summary":"<p>U+0581 ARMENIAN SMALL LETTER CO</p>"},{"id":"XK_Armenian_vyun","name":"XK_Armenian_vyun","value":"16778626","doc":"U+0552 ARMENIAN CAPITAL LETTER YIWN","summary":"<p>U+0552 ARMENIAN CAPITAL LETTER YIWN</p>"},{"id":"XK_Armenian_YECH","name":"XK_Armenian_YECH","value":"16778549","doc":"U+0564 ARMENIAN SMALL LETTER DA","summary":"<p>U+0564 ARMENIAN SMALL LETTER DA</p>"},{"id":"XK_Armenian_yech","name":"XK_Armenian_yech","value":"16778597","doc":"U+0535 ARMENIAN CAPITAL LETTER ECH","summary":"<p>U+0535 ARMENIAN CAPITAL LETTER ECH</p>"},{"id":"XK_Armenian_yentamna","name":"XK_Armenian_yentamna","value":"16778634","doc":"U+058A ARMENIAN HYPHEN","summary":"<p>U+058A ARMENIAN HYPHEN</p>"},{"id":"XK_Armenian_za","name":"XK_Armenian_za","value":"16778598","doc":"U+0536 ARMENIAN CAPITAL LETTER ZA","summary":"<p>U+0536 ARMENIAN CAPITAL LETTER ZA</p>"},{"id":"XK_Armenian_ZA","name":"XK_Armenian_ZA","value":"16778550","doc":"U+0565 ARMENIAN SMALL LETTER ECH","summary":"<p>U+0565 ARMENIAN SMALL LETTER ECH</p>"},{"id":"XK_Armenian_ZHE","name":"XK_Armenian_ZHE","value":"16778554","doc":"U+0569 ARMENIAN SMALL LETTER TO","summary":"<p>U+0569 ARMENIAN SMALL LETTER TO</p>"},{"id":"XK_Armenian_zhe","name":"XK_Armenian_zhe","value":"16778602","doc":"U+053A ARMENIAN CAPITAL LETTER ZHE","summary":"<p>U+053A ARMENIAN CAPITAL LETTER ZHE</p>"},{"id":"XK_asciicircum","name":"XK_asciicircum","value":"94","doc":"U+005D RIGHT SQUARE BRACKET","summary":"<p>U+005D RIGHT SQUARE BRACKET</p>"},{"id":"XK_asciitilde","name":"XK_asciitilde","value":"126","doc":"U+007D RIGHT CURLY BRACKET","summary":"<p>U+007D RIGHT CURLY BRACKET</p>"},{"id":"XK_asterisk","name":"XK_asterisk","value":"42","doc":"U+0029 RIGHT PARENTHESIS","summary":"<p>U+0029 RIGHT PARENTHESIS</p>"},{"id":"XK_at","name":"XK_at","value":"64","doc":"U+003F QUESTION MARK","summary":"<p>U+003F QUESTION MARK</p>"},{"id":"XK_atilde","name":"XK_atilde","value":"227","doc":"U+00E2 LATIN SMALL LETTER A WITH CIRCUMFLEX","summary":"<p>U+00E2 LATIN SMALL LETTER A WITH CIRCUMFLEX</p>"},{"id":"XK_Atilde","name":"XK_Atilde","value":"195","doc":"U+00C2 LATIN CAPITAL LETTER A WITH CIRCUMFLEX","summary":"<p>U+00C2 LATIN CAPITAL LETTER A WITH CIRCUMFLEX</p>"},{"id":"XK_AudibleBell_Enable","name":"XK_AudibleBell_Enable","value":"65146","doc":null,"summary":null},{"id":"XK_B","name":"XK_B","value":"66","doc":"U+0041 LATIN CAPITAL LETTER A","summary":"<p>U+0041 LATIN CAPITAL LETTER A</p>"},{"id":"XK_b","name":"XK_b","value":"98","doc":"U+0061 LATIN SMALL LETTER A","summary":"<p>U+0061 LATIN SMALL LETTER A</p>"},{"id":"XK_babovedot","name":"XK_babovedot","value":"16784899","doc":"U+1E02 LATIN CAPITAL LETTER B WITH DOT ABOVE","summary":"<p>U+1E02 LATIN CAPITAL LETTER B WITH DOT ABOVE</p>"},{"id":"XK_Babovedot","name":"XK_Babovedot","value":"16784898","doc":"U+0177 LATIN SMALL LETTER Y WITH CIRCUMFLEX","summary":"<p>U+0177 LATIN SMALL LETTER Y WITH CIRCUMFLEX</p>"},{"id":"XK_backslash","name":"XK_backslash","value":"92","doc":"U+005B LEFT SQUARE BRACKET","summary":"<p>U+005B LEFT SQUARE BRACKET</p>"},{"id":"XK_BackSpace","name":"XK_BackSpace","value":"65288","doc":null,"summary":null},{"id":"XK_bar","name":"XK_bar","value":"124","doc":"U+007B LEFT CURLY BRACKET","summary":"<p>U+007B LEFT CURLY BRACKET</p>"},{"id":"XK_because","name":"XK_because","value":"16785973","doc":"U+222D TRIPLE INTEGRAL","summary":"<p>U+222D TRIPLE INTEGRAL</p>"},{"id":"XK_Begin","name":"XK_Begin","value":"65368","doc":"EOL","summary":"<p>EOL</p>"},{"id":"XK_BounceKeys_Enable","name":"XK_BounceKeys_Enable","value":"65140","doc":null,"summary":null},{"id":"XK_braceleft","name":"XK_braceleft","value":"123","doc":"U+007A LATIN SMALL LETTER Z","summary":"<p>U+007A LATIN SMALL LETTER Z</p>"},{"id":"XK_braceright","name":"XK_braceright","value":"125","doc":"U+007C VERTICAL LINE","summary":"<p>U+007C VERTICAL LINE</p>"},{"id":"XK_bracketleft","name":"XK_bracketleft","value":"91","doc":"U+005A LATIN CAPITAL LETTER Z","summary":"<p>U+005A LATIN CAPITAL LETTER Z</p>"},{"id":"XK_bracketright","name":"XK_bracketright","value":"93","doc":"U+005C REVERSE SOLIDUS","summary":"<p>U+005C REVERSE SOLIDUS</p>"},{"id":"XK_BRAILLE","name":"XK_BRAILLE","value":"true","doc":null,"summary":null},{"id":"XK_braille_blank","name":"XK_braille_blank","value":"16787456","doc":null,"summary":null},{"id":"XK_braille_dot_1","name":"XK_braille_dot_1","value":"65521","doc":null,"summary":null},{"id":"XK_braille_dot_10","name":"XK_braille_dot_10","value":"65530","doc":null,"summary":null},{"id":"XK_braille_dot_2","name":"XK_braille_dot_2","value":"65522","doc":null,"summary":null},{"id":"XK_braille_dot_3","name":"XK_braille_dot_3","value":"65523","doc":null,"summary":null},{"id":"XK_braille_dot_4","name":"XK_braille_dot_4","value":"65524","doc":null,"summary":null},{"id":"XK_braille_dot_5","name":"XK_braille_dot_5","value":"65525","doc":null,"summary":null},{"id":"XK_braille_dot_6","name":"XK_braille_dot_6","value":"65526","doc":null,"summary":null},{"id":"XK_braille_dot_7","name":"XK_braille_dot_7","value":"65527","doc":null,"summary":null},{"id":"XK_braille_dot_8","name":"XK_braille_dot_8","value":"65528","doc":null,"summary":null},{"id":"XK_braille_dot_9","name":"XK_braille_dot_9","value":"65529","doc":null,"summary":null},{"id":"XK_braille_dots_1","name":"XK_braille_dots_1","value":"16787457","doc":"U+2800 BRAILLE PATTERN BLANK","summary":"<p>U+2800 BRAILLE PATTERN BLANK</p>"},{"id":"XK_braille_dots_12","name":"XK_braille_dots_12","value":"16787459","doc":"U+2802 BRAILLE PATTERN DOTS-2","summary":"<p>U+2802 BRAILLE PATTERN DOTS-2</p>"},{"id":"XK_braille_dots_123","name":"XK_braille_dots_123","value":"16787463","doc":"U+2806 BRAILLE PATTERN DOTS-23","summary":"<p>U+2806 BRAILLE PATTERN DOTS-23</p>"},{"id":"XK_braille_dots_1234","name":"XK_braille_dots_1234","value":"16787471","doc":"U+280e BRAILLE PATTERN DOTS-234","summary":"<p>U+280e BRAILLE PATTERN DOTS-234</p>"},{"id":"XK_braille_dots_12345","name":"XK_braille_dots_12345","value":"16787487","doc":"U+281e BRAILLE PATTERN DOTS-2345","summary":"<p>U+281e BRAILLE PATTERN DOTS-2345</p>"},{"id":"XK_braille_dots_123456","name":"XK_braille_dots_123456","value":"16787519","doc":"U+283e BRAILLE PATTERN DOTS-23456","summary":"<p>U+283e BRAILLE PATTERN DOTS-23456</p>"},{"id":"XK_braille_dots_1234567","name":"XK_braille_dots_1234567","value":"16787583","doc":"U+287e BRAILLE PATTERN DOTS-234567","summary":"<p>U+287e BRAILLE PATTERN DOTS-234567</p>"},{"id":"XK_braille_dots_12345678","name":"XK_braille_dots_12345678","value":"16787711","doc":"U+28fe BRAILLE PATTERN DOTS-2345678","summary":"<p>U+28fe BRAILLE PATTERN DOTS-2345678</p>"},{"id":"XK_braille_dots_1234568","name":"XK_braille_dots_1234568","value":"16787647","doc":"U+28be BRAILLE PATTERN DOTS-234568","summary":"<p>U+28be BRAILLE PATTERN DOTS-234568</p>"},{"id":"XK_braille_dots_123457","name":"XK_braille_dots_123457","value":"16787551","doc":"U+285e BRAILLE PATTERN DOTS-23457","summary":"<p>U+285e BRAILLE PATTERN DOTS-23457</p>"},{"id":"XK_braille_dots_1234578","name":"XK_braille_dots_1234578","value":"16787679","doc":"U+28de BRAILLE PATTERN DOTS-234578","summary":"<p>U+28de BRAILLE PATTERN DOTS-234578</p>"},{"id":"XK_braille_dots_123458","name":"XK_braille_dots_123458","value":"16787615","doc":"U+289e BRAILLE PATTERN DOTS-23458","summary":"<p>U+289e BRAILLE PATTERN DOTS-23458</p>"},{"id":"XK_braille_dots_12346","name":"XK_braille_dots_12346","value":"16787503","doc":"U+282e BRAILLE PATTERN DOTS-2346","summary":"<p>U+282e BRAILLE PATTERN DOTS-2346</p>"},{"id":"XK_braille_dots_123467","name":"XK_braille_dots_123467","value":"16787567","doc":"U+286e BRAILLE PATTERN DOTS-23467","summary":"<p>U+286e BRAILLE PATTERN DOTS-23467</p>"},{"id":"XK_braille_dots_1234678","name":"XK_braille_dots_1234678","value":"16787695","doc":"U+28ee BRAILLE PATTERN DOTS-234678","summary":"<p>U+28ee BRAILLE PATTERN DOTS-234678</p>"},{"id":"XK_braille_dots_123468","name":"XK_braille_dots_123468","value":"16787631","doc":"U+28ae BRAILLE PATTERN DOTS-23468","summary":"<p>U+28ae BRAILLE PATTERN DOTS-23468</p>"},{"id":"XK_braille_dots_12347","name":"XK_braille_dots_12347","value":"16787535","doc":"U+284e BRAILLE PATTERN DOTS-2347","summary":"<p>U+284e BRAILLE PATTERN DOTS-2347</p>"},{"id":"XK_braille_dots_123478","name":"XK_braille_dots_123478","value":"16787663","doc":"U+28ce BRAILLE PATTERN DOTS-23478","summary":"<p>U+28ce BRAILLE PATTERN DOTS-23478</p>"},{"id":"XK_braille_dots_12348","name":"XK_braille_dots_12348","value":"16787599","doc":"U+288e BRAILLE PATTERN DOTS-2348","summary":"<p>U+288e BRAILLE PATTERN DOTS-2348</p>"},{"id":"XK_braille_dots_1235","name":"XK_braille_dots_1235","value":"16787479","doc":"U+2816 BRAILLE PATTERN DOTS-235","summary":"<p>U+2816 BRAILLE PATTERN DOTS-235</p>"},{"id":"XK_braille_dots_12356","name":"XK_braille_dots_12356","value":"16787511","doc":"U+2836 BRAILLE PATTERN DOTS-2356","summary":"<p>U+2836 BRAILLE PATTERN DOTS-2356</p>"},{"id":"XK_braille_dots_123567","name":"XK_braille_dots_123567","value":"16787575","doc":"U+2876 BRAILLE PATTERN DOTS-23567","summary":"<p>U+2876 BRAILLE PATTERN DOTS-23567</p>"},{"id":"XK_braille_dots_1235678","name":"XK_braille_dots_1235678","value":"16787703","doc":"U+28f6 BRAILLE PATTERN DOTS-235678","summary":"<p>U+28f6 BRAILLE PATTERN DOTS-235678</p>"},{"id":"XK_braille_dots_123568","name":"XK_braille_dots_123568","value":"16787639","doc":"U+28b6 BRAILLE PATTERN DOTS-23568","summary":"<p>U+28b6 BRAILLE PATTERN DOTS-23568</p>"},{"id":"XK_braille_dots_12357","name":"XK_braille_dots_12357","value":"16787543","doc":"U+2856 BRAILLE PATTERN DOTS-2357","summary":"<p>U+2856 BRAILLE PATTERN DOTS-2357</p>"},{"id":"XK_braille_dots_123578","name":"XK_braille_dots_123578","value":"16787671","doc":"U+28d6 BRAILLE PATTERN DOTS-23578","summary":"<p>U+28d6 BRAILLE PATTERN DOTS-23578</p>"},{"id":"XK_braille_dots_12358","name":"XK_braille_dots_12358","value":"16787607","doc":"U+2896 BRAILLE PATTERN DOTS-2358","summary":"<p>U+2896 BRAILLE PATTERN DOTS-2358</p>"},{"id":"XK_braille_dots_1236","name":"XK_braille_dots_1236","value":"16787495","doc":"U+2826 BRAILLE PATTERN DOTS-236","summary":"<p>U+2826 BRAILLE PATTERN DOTS-236</p>"},{"id":"XK_braille_dots_12367","name":"XK_braille_dots_12367","value":"16787559","doc":"U+2866 BRAILLE PATTERN DOTS-2367","summary":"<p>U+2866 BRAILLE PATTERN DOTS-2367</p>"},{"id":"XK_braille_dots_123678","name":"XK_braille_dots_123678","value":"16787687","doc":"U+28e6 BRAILLE PATTERN DOTS-23678","summary":"<p>U+28e6 BRAILLE PATTERN DOTS-23678</p>"},{"id":"XK_braille_dots_12368","name":"XK_braille_dots_12368","value":"16787623","doc":"U+28a6 BRAILLE PATTERN DOTS-2368","summary":"<p>U+28a6 BRAILLE PATTERN DOTS-2368</p>"},{"id":"XK_braille_dots_1237","name":"XK_braille_dots_1237","value":"16787527","doc":"U+2846 BRAILLE PATTERN DOTS-237","summary":"<p>U+2846 BRAILLE PATTERN DOTS-237</p>"},{"id":"XK_braille_dots_12378","name":"XK_braille_dots_12378","value":"16787655","doc":"U+28c6 BRAILLE PATTERN DOTS-2378","summary":"<p>U+28c6 BRAILLE PATTERN DOTS-2378</p>"},{"id":"XK_braille_dots_1238","name":"XK_braille_dots_1238","value":"16787591","doc":"U+2886 BRAILLE PATTERN DOTS-238","summary":"<p>U+2886 BRAILLE PATTERN DOTS-238</p>"},{"id":"XK_braille_dots_124","name":"XK_braille_dots_124","value":"16787467","doc":"U+280a BRAILLE PATTERN DOTS-24","summary":"<p>U+280a BRAILLE PATTERN DOTS-24</p>"},{"id":"XK_braille_dots_1245","name":"XK_braille_dots_1245","value":"16787483","doc":"U+281a BRAILLE PATTERN DOTS-245","summary":"<p>U+281a BRAILLE PATTERN DOTS-245</p>"},{"id":"XK_braille_dots_12456","name":"XK_braille_dots_12456","value":"16787515","doc":"U+283a BRAILLE PATTERN DOTS-2456","summary":"<p>U+283a BRAILLE PATTERN DOTS-2456</p>"},{"id":"XK_braille_dots_124567","name":"XK_braille_dots_124567","value":"16787579","doc":"U+287a BRAILLE PATTERN DOTS-24567","summary":"<p>U+287a BRAILLE PATTERN DOTS-24567</p>"},{"id":"XK_braille_dots_1245678","name":"XK_braille_dots_1245678","value":"16787707","doc":"U+28fa BRAILLE PATTERN DOTS-245678","summary":"<p>U+28fa BRAILLE PATTERN DOTS-245678</p>"},{"id":"XK_braille_dots_124568","name":"XK_braille_dots_124568","value":"16787643","doc":"U+28ba BRAILLE PATTERN DOTS-24568","summary":"<p>U+28ba BRAILLE PATTERN DOTS-24568</p>"},{"id":"XK_braille_dots_12457","name":"XK_braille_dots_12457","value":"16787547","doc":"U+285a BRAILLE PATTERN DOTS-2457","summary":"<p>U+285a BRAILLE PATTERN DOTS-2457</p>"},{"id":"XK_braille_dots_124578","name":"XK_braille_dots_124578","value":"16787675","doc":"U+28da BRAILLE PATTERN DOTS-24578","summary":"<p>U+28da BRAILLE PATTERN DOTS-24578</p>"},{"id":"XK_braille_dots_12458","name":"XK_braille_dots_12458","value":"16787611","doc":"U+289a BRAILLE PATTERN DOTS-2458","summary":"<p>U+289a BRAILLE PATTERN DOTS-2458</p>"},{"id":"XK_braille_dots_1246","name":"XK_braille_dots_1246","value":"16787499","doc":"U+282a BRAILLE PATTERN DOTS-246","summary":"<p>U+282a BRAILLE PATTERN DOTS-246</p>"},{"id":"XK_braille_dots_12467","name":"XK_braille_dots_12467","value":"16787563","doc":"U+286a BRAILLE PATTERN DOTS-2467","summary":"<p>U+286a BRAILLE PATTERN DOTS-2467</p>"},{"id":"XK_braille_dots_124678","name":"XK_braille_dots_124678","value":"16787691","doc":"U+28ea BRAILLE PATTERN DOTS-24678","summary":"<p>U+28ea BRAILLE PATTERN DOTS-24678</p>"},{"id":"XK_braille_dots_12468","name":"XK_braille_dots_12468","value":"16787627","doc":"U+28aa BRAILLE PATTERN DOTS-2468","summary":"<p>U+28aa BRAILLE PATTERN DOTS-2468</p>"},{"id":"XK_braille_dots_1247","name":"XK_braille_dots_1247","value":"16787531","doc":"U+284a BRAILLE PATTERN DOTS-247","summary":"<p>U+284a BRAILLE PATTERN DOTS-247</p>"},{"id":"XK_braille_dots_12478","name":"XK_braille_dots_12478","value":"16787659","doc":"U+28ca BRAILLE PATTERN DOTS-2478","summary":"<p>U+28ca BRAILLE PATTERN DOTS-2478</p>"},{"id":"XK_braille_dots_1248","name":"XK_braille_dots_1248","value":"16787595","doc":"U+288a BRAILLE PATTERN DOTS-248","summary":"<p>U+288a BRAILLE PATTERN DOTS-248</p>"},{"id":"XK_braille_dots_125","name":"XK_braille_dots_125","value":"16787475","doc":"U+2812 BRAILLE PATTERN DOTS-25","summary":"<p>U+2812 BRAILLE PATTERN DOTS-25</p>"},{"id":"XK_braille_dots_1256","name":"XK_braille_dots_1256","value":"16787507","doc":"U+2832 BRAILLE PATTERN DOTS-256","summary":"<p>U+2832 BRAILLE PATTERN DOTS-256</p>"},{"id":"XK_braille_dots_12567","name":"XK_braille_dots_12567","value":"16787571","doc":"U+2872 BRAILLE PATTERN DOTS-2567","summary":"<p>U+2872 BRAILLE PATTERN DOTS-2567</p>"},{"id":"XK_braille_dots_125678","name":"XK_braille_dots_125678","value":"16787699","doc":"U+28f2 BRAILLE PATTERN DOTS-25678","summary":"<p>U+28f2 BRAILLE PATTERN DOTS-25678</p>"},{"id":"XK_braille_dots_12568","name":"XK_braille_dots_12568","value":"16787635","doc":"U+28b2 BRAILLE PATTERN DOTS-2568","summary":"<p>U+28b2 BRAILLE PATTERN DOTS-2568</p>"},{"id":"XK_braille_dots_1257","name":"XK_braille_dots_1257","value":"16787539","doc":"U+2852 BRAILLE PATTERN DOTS-257","summary":"<p>U+2852 BRAILLE PATTERN DOTS-257</p>"},{"id":"XK_braille_dots_12578","name":"XK_braille_dots_12578","value":"16787667","doc":"U+28d2 BRAILLE PATTERN DOTS-2578","summary":"<p>U+28d2 BRAILLE PATTERN DOTS-2578</p>"},{"id":"XK_braille_dots_1258","name":"XK_braille_dots_1258","value":"16787603","doc":"U+2892 BRAILLE PATTERN DOTS-258","summary":"<p>U+2892 BRAILLE PATTERN DOTS-258</p>"},{"id":"XK_braille_dots_126","name":"XK_braille_dots_126","value":"16787491","doc":"U+2822 BRAILLE PATTERN DOTS-26","summary":"<p>U+2822 BRAILLE PATTERN DOTS-26</p>"},{"id":"XK_braille_dots_1267","name":"XK_braille_dots_1267","value":"16787555","doc":"U+2862 BRAILLE PATTERN DOTS-267","summary":"<p>U+2862 BRAILLE PATTERN DOTS-267</p>"},{"id":"XK_braille_dots_12678","name":"XK_braille_dots_12678","value":"16787683","doc":"U+28e2 BRAILLE PATTERN DOTS-2678","summary":"<p>U+28e2 BRAILLE PATTERN DOTS-2678</p>"},{"id":"XK_braille_dots_1268","name":"XK_braille_dots_1268","value":"16787619","doc":"U+28a2 BRAILLE PATTERN DOTS-268","summary":"<p>U+28a2 BRAILLE PATTERN DOTS-268</p>"},{"id":"XK_braille_dots_127","name":"XK_braille_dots_127","value":"16787523","doc":"U+2842 BRAILLE PATTERN DOTS-27","summary":"<p>U+2842 BRAILLE PATTERN DOTS-27</p>"},{"id":"XK_braille_dots_1278","name":"XK_braille_dots_1278","value":"16787651","doc":"U+28c2 BRAILLE PATTERN DOTS-278","summary":"<p>U+28c2 BRAILLE PATTERN DOTS-278</p>"},{"id":"XK_braille_dots_128","name":"XK_braille_dots_128","value":"16787587","doc":"U+2882 BRAILLE PATTERN DOTS-28","summary":"<p>U+2882 BRAILLE PATTERN DOTS-28</p>"},{"id":"XK_braille_dots_13","name":"XK_braille_dots_13","value":"16787461","doc":"U+2804 BRAILLE PATTERN DOTS-3","summary":"<p>U+2804 BRAILLE PATTERN DOTS-3</p>"},{"id":"XK_braille_dots_134","name":"XK_braille_dots_134","value":"16787469","doc":"U+280c BRAILLE PATTERN DOTS-34","summary":"<p>U+280c BRAILLE PATTERN DOTS-34</p>"},{"id":"XK_braille_dots_1345","name":"XK_braille_dots_1345","value":"16787485","doc":"U+281c BRAILLE PATTERN DOTS-345","summary":"<p>U+281c BRAILLE PATTERN DOTS-345</p>"},{"id":"XK_braille_dots_13456","name":"XK_braille_dots_13456","value":"16787517","doc":"U+283c BRAILLE PATTERN DOTS-3456","summary":"<p>U+283c BRAILLE PATTERN DOTS-3456</p>"},{"id":"XK_braille_dots_134567","name":"XK_braille_dots_134567","value":"16787581","doc":"U+287c BRAILLE PATTERN DOTS-34567","summary":"<p>U+287c BRAILLE PATTERN DOTS-34567</p>"},{"id":"XK_braille_dots_1345678","name":"XK_braille_dots_1345678","value":"16787709","doc":"U+28fc BRAILLE PATTERN DOTS-345678","summary":"<p>U+28fc BRAILLE PATTERN DOTS-345678</p>"},{"id":"XK_braille_dots_134568","name":"XK_braille_dots_134568","value":"16787645","doc":"U+28bc BRAILLE PATTERN DOTS-34568","summary":"<p>U+28bc BRAILLE PATTERN DOTS-34568</p>"},{"id":"XK_braille_dots_13457","name":"XK_braille_dots_13457","value":"16787549","doc":"U+285c BRAILLE PATTERN DOTS-3457","summary":"<p>U+285c BRAILLE PATTERN DOTS-3457</p>"},{"id":"XK_braille_dots_134578","name":"XK_braille_dots_134578","value":"16787677","doc":"U+28dc BRAILLE PATTERN DOTS-34578","summary":"<p>U+28dc BRAILLE PATTERN DOTS-34578</p>"},{"id":"XK_braille_dots_13458","name":"XK_braille_dots_13458","value":"16787613","doc":"U+289c BRAILLE PATTERN DOTS-3458","summary":"<p>U+289c BRAILLE PATTERN DOTS-3458</p>"},{"id":"XK_braille_dots_1346","name":"XK_braille_dots_1346","value":"16787501","doc":"U+282c BRAILLE PATTERN DOTS-346","summary":"<p>U+282c BRAILLE PATTERN DOTS-346</p>"},{"id":"XK_braille_dots_13467","name":"XK_braille_dots_13467","value":"16787565","doc":"U+286c BRAILLE PATTERN DOTS-3467","summary":"<p>U+286c BRAILLE PATTERN DOTS-3467</p>"},{"id":"XK_braille_dots_134678","name":"XK_braille_dots_134678","value":"16787693","doc":"U+28ec BRAILLE PATTERN DOTS-34678","summary":"<p>U+28ec BRAILLE PATTERN DOTS-34678</p>"},{"id":"XK_braille_dots_13468","name":"XK_braille_dots_13468","value":"16787629","doc":"U+28ac BRAILLE PATTERN DOTS-3468","summary":"<p>U+28ac BRAILLE PATTERN DOTS-3468</p>"},{"id":"XK_braille_dots_1347","name":"XK_braille_dots_1347","value":"16787533","doc":"U+284c BRAILLE PATTERN DOTS-347","summary":"<p>U+284c BRAILLE PATTERN DOTS-347</p>"},{"id":"XK_braille_dots_13478","name":"XK_braille_dots_13478","value":"16787661","doc":"U+28cc BRAILLE PATTERN DOTS-3478","summary":"<p>U+28cc BRAILLE PATTERN DOTS-3478</p>"},{"id":"XK_braille_dots_1348","name":"XK_braille_dots_1348","value":"16787597","doc":"U+288c BRAILLE PATTERN DOTS-348","summary":"<p>U+288c BRAILLE PATTERN DOTS-348</p>"},{"id":"XK_braille_dots_135","name":"XK_braille_dots_135","value":"16787477","doc":"U+2814 BRAILLE PATTERN DOTS-35","summary":"<p>U+2814 BRAILLE PATTERN DOTS-35</p>"},{"id":"XK_braille_dots_1356","name":"XK_braille_dots_1356","value":"16787509","doc":"U+2834 BRAILLE PATTERN DOTS-356","summary":"<p>U+2834 BRAILLE PATTERN DOTS-356</p>"},{"id":"XK_braille_dots_13567","name":"XK_braille_dots_13567","value":"16787573","doc":"U+2874 BRAILLE PATTERN DOTS-3567","summary":"<p>U+2874 BRAILLE PATTERN DOTS-3567</p>"},{"id":"XK_braille_dots_135678","name":"XK_braille_dots_135678","value":"16787701","doc":"U+28f4 BRAILLE PATTERN DOTS-35678","summary":"<p>U+28f4 BRAILLE PATTERN DOTS-35678</p>"},{"id":"XK_braille_dots_13568","name":"XK_braille_dots_13568","value":"16787637","doc":"U+28b4 BRAILLE PATTERN DOTS-3568","summary":"<p>U+28b4 BRAILLE PATTERN DOTS-3568</p>"},{"id":"XK_braille_dots_1357","name":"XK_braille_dots_1357","value":"16787541","doc":"U+2854 BRAILLE PATTERN DOTS-357","summary":"<p>U+2854 BRAILLE PATTERN DOTS-357</p>"},{"id":"XK_braille_dots_13578","name":"XK_braille_dots_13578","value":"16787669","doc":"U+28d4 BRAILLE PATTERN DOTS-3578","summary":"<p>U+28d4 BRAILLE PATTERN DOTS-3578</p>"},{"id":"XK_braille_dots_1358","name":"XK_braille_dots_1358","value":"16787605","doc":"U+2894 BRAILLE PATTERN DOTS-358","summary":"<p>U+2894 BRAILLE PATTERN DOTS-358</p>"},{"id":"XK_braille_dots_136","name":"XK_braille_dots_136","value":"16787493","doc":"U+2824 BRAILLE PATTERN DOTS-36","summary":"<p>U+2824 BRAILLE PATTERN DOTS-36</p>"},{"id":"XK_braille_dots_1367","name":"XK_braille_dots_1367","value":"16787557","doc":"U+2864 BRAILLE PATTERN DOTS-367","summary":"<p>U+2864 BRAILLE PATTERN DOTS-367</p>"},{"id":"XK_braille_dots_13678","name":"XK_braille_dots_13678","value":"16787685","doc":"U+28e4 BRAILLE PATTERN DOTS-3678","summary":"<p>U+28e4 BRAILLE PATTERN DOTS-3678</p>"},{"id":"XK_braille_dots_1368","name":"XK_braille_dots_1368","value":"16787621","doc":"U+28a4 BRAILLE PATTERN DOTS-368","summary":"<p>U+28a4 BRAILLE PATTERN DOTS-368</p>"},{"id":"XK_braille_dots_137","name":"XK_braille_dots_137","value":"16787525","doc":"U+2844 BRAILLE PATTERN DOTS-37","summary":"<p>U+2844 BRAILLE PATTERN DOTS-37</p>"},{"id":"XK_braille_dots_1378","name":"XK_braille_dots_1378","value":"16787653","doc":"U+28c4 BRAILLE PATTERN DOTS-378","summary":"<p>U+28c4 BRAILLE PATTERN DOTS-378</p>"},{"id":"XK_braille_dots_138","name":"XK_braille_dots_138","value":"16787589","doc":"U+2884 BRAILLE PATTERN DOTS-38","summary":"<p>U+2884 BRAILLE PATTERN DOTS-38</p>"},{"id":"XK_braille_dots_14","name":"XK_braille_dots_14","value":"16787465","doc":"U+2808 BRAILLE PATTERN DOTS-4","summary":"<p>U+2808 BRAILLE PATTERN DOTS-4</p>"},{"id":"XK_braille_dots_145","name":"XK_braille_dots_145","value":"16787481","doc":"U+2818 BRAILLE PATTERN DOTS-45","summary":"<p>U+2818 BRAILLE PATTERN DOTS-45</p>"},{"id":"XK_braille_dots_1456","name":"XK_braille_dots_1456","value":"16787513","doc":"U+2838 BRAILLE PATTERN DOTS-456","summary":"<p>U+2838 BRAILLE PATTERN DOTS-456</p>"},{"id":"XK_braille_dots_14567","name":"XK_braille_dots_14567","value":"16787577","doc":"U+2878 BRAILLE PATTERN DOTS-4567","summary":"<p>U+2878 BRAILLE PATTERN DOTS-4567</p>"},{"id":"XK_braille_dots_145678","name":"XK_braille_dots_145678","value":"16787705","doc":"U+28f8 BRAILLE PATTERN DOTS-45678","summary":"<p>U+28f8 BRAILLE PATTERN DOTS-45678</p>"},{"id":"XK_braille_dots_14568","name":"XK_braille_dots_14568","value":"16787641","doc":"U+28b8 BRAILLE PATTERN DOTS-4568","summary":"<p>U+28b8 BRAILLE PATTERN DOTS-4568</p>"},{"id":"XK_braille_dots_1457","name":"XK_braille_dots_1457","value":"16787545","doc":"U+2858 BRAILLE PATTERN DOTS-457","summary":"<p>U+2858 BRAILLE PATTERN DOTS-457</p>"},{"id":"XK_braille_dots_14578","name":"XK_braille_dots_14578","value":"16787673","doc":"U+28d8 BRAILLE PATTERN DOTS-4578","summary":"<p>U+28d8 BRAILLE PATTERN DOTS-4578</p>"},{"id":"XK_braille_dots_1458","name":"XK_braille_dots_1458","value":"16787609","doc":"U+2898 BRAILLE PATTERN DOTS-458","summary":"<p>U+2898 BRAILLE PATTERN DOTS-458</p>"},{"id":"XK_braille_dots_146","name":"XK_braille_dots_146","value":"16787497","doc":"U+2828 BRAILLE PATTERN DOTS-46","summary":"<p>U+2828 BRAILLE PATTERN DOTS-46</p>"},{"id":"XK_braille_dots_1467","name":"XK_braille_dots_1467","value":"16787561","doc":"U+2868 BRAILLE PATTERN DOTS-467","summary":"<p>U+2868 BRAILLE PATTERN DOTS-467</p>"},{"id":"XK_braille_dots_14678","name":"XK_braille_dots_14678","value":"16787689","doc":"U+28e8 BRAILLE PATTERN DOTS-4678","summary":"<p>U+28e8 BRAILLE PATTERN DOTS-4678</p>"},{"id":"XK_braille_dots_1468","name":"XK_braille_dots_1468","value":"16787625","doc":"U+28a8 BRAILLE PATTERN DOTS-468","summary":"<p>U+28a8 BRAILLE PATTERN DOTS-468</p>"},{"id":"XK_braille_dots_147","name":"XK_braille_dots_147","value":"16787529","doc":"U+2848 BRAILLE PATTERN DOTS-47","summary":"<p>U+2848 BRAILLE PATTERN DOTS-47</p>"},{"id":"XK_braille_dots_1478","name":"XK_braille_dots_1478","value":"16787657","doc":"U+28c8 BRAILLE PATTERN DOTS-478","summary":"<p>U+28c8 BRAILLE PATTERN DOTS-478</p>"},{"id":"XK_braille_dots_148","name":"XK_braille_dots_148","value":"16787593","doc":"U+2888 BRAILLE PATTERN DOTS-48","summary":"<p>U+2888 BRAILLE PATTERN DOTS-48</p>"},{"id":"XK_braille_dots_15","name":"XK_braille_dots_15","value":"16787473","doc":"U+2810 BRAILLE PATTERN DOTS-5","summary":"<p>U+2810 BRAILLE PATTERN DOTS-5</p>"},{"id":"XK_braille_dots_156","name":"XK_braille_dots_156","value":"16787505","doc":"U+2830 BRAILLE PATTERN DOTS-56","summary":"<p>U+2830 BRAILLE PATTERN DOTS-56</p>"},{"id":"XK_braille_dots_1567","name":"XK_braille_dots_1567","value":"16787569","doc":"U+2870 BRAILLE PATTERN DOTS-567","summary":"<p>U+2870 BRAILLE PATTERN DOTS-567</p>"},{"id":"XK_braille_dots_15678","name":"XK_braille_dots_15678","value":"16787697","doc":"U+28f0 BRAILLE PATTERN DOTS-5678","summary":"<p>U+28f0 BRAILLE PATTERN DOTS-5678</p>"},{"id":"XK_braille_dots_1568","name":"XK_braille_dots_1568","value":"16787633","doc":"U+28b0 BRAILLE PATTERN DOTS-568","summary":"<p>U+28b0 BRAILLE PATTERN DOTS-568</p>"},{"id":"XK_braille_dots_157","name":"XK_braille_dots_157","value":"16787537","doc":"U+2850 BRAILLE PATTERN DOTS-57","summary":"<p>U+2850 BRAILLE PATTERN DOTS-57</p>"},{"id":"XK_braille_dots_1578","name":"XK_braille_dots_1578","value":"16787665","doc":"U+28d0 BRAILLE PATTERN DOTS-578","summary":"<p>U+28d0 BRAILLE PATTERN DOTS-578</p>"},{"id":"XK_braille_dots_158","name":"XK_braille_dots_158","value":"16787601","doc":"U+2890 BRAILLE PATTERN DOTS-58","summary":"<p>U+2890 BRAILLE PATTERN DOTS-58</p>"},{"id":"XK_braille_dots_16","name":"XK_braille_dots_16","value":"16787489","doc":"U+2820 BRAILLE PATTERN DOTS-6","summary":"<p>U+2820 BRAILLE PATTERN DOTS-6</p>"},{"id":"XK_braille_dots_167","name":"XK_braille_dots_167","value":"16787553","doc":"U+2860 BRAILLE PATTERN DOTS-67","summary":"<p>U+2860 BRAILLE PATTERN DOTS-67</p>"},{"id":"XK_braille_dots_1678","name":"XK_braille_dots_1678","value":"16787681","doc":"U+28e0 BRAILLE PATTERN DOTS-678","summary":"<p>U+28e0 BRAILLE PATTERN DOTS-678</p>"},{"id":"XK_braille_dots_168","name":"XK_braille_dots_168","value":"16787617","doc":"U+28a0 BRAILLE PATTERN DOTS-68","summary":"<p>U+28a0 BRAILLE PATTERN DOTS-68</p>"},{"id":"XK_braille_dots_17","name":"XK_braille_dots_17","value":"16787521","doc":"U+2840 BRAILLE PATTERN DOTS-7","summary":"<p>U+2840 BRAILLE PATTERN DOTS-7</p>"},{"id":"XK_braille_dots_178","name":"XK_braille_dots_178","value":"16787649","doc":"U+28c0 BRAILLE PATTERN DOTS-78","summary":"<p>U+28c0 BRAILLE PATTERN DOTS-78</p>"},{"id":"XK_braille_dots_18","name":"XK_braille_dots_18","value":"16787585","doc":"U+2880 BRAILLE PATTERN DOTS-8","summary":"<p>U+2880 BRAILLE PATTERN DOTS-8</p>"},{"id":"XK_braille_dots_2","name":"XK_braille_dots_2","value":"16787458","doc":"U+2801 BRAILLE PATTERN DOTS-1","summary":"<p>U+2801 BRAILLE PATTERN DOTS-1</p>"},{"id":"XK_braille_dots_23","name":"XK_braille_dots_23","value":"16787462","doc":"U+2805 BRAILLE PATTERN DOTS-13","summary":"<p>U+2805 BRAILLE PATTERN DOTS-13</p>"},{"id":"XK_braille_dots_234","name":"XK_braille_dots_234","value":"16787470","doc":"U+280d BRAILLE PATTERN DOTS-134","summary":"<p>U+280d BRAILLE PATTERN DOTS-134</p>"},{"id":"XK_braille_dots_2345","name":"XK_braille_dots_2345","value":"16787486","doc":"U+281d BRAILLE PATTERN DOTS-1345","summary":"<p>U+281d BRAILLE PATTERN DOTS-1345</p>"},{"id":"XK_braille_dots_23456","name":"XK_braille_dots_23456","value":"16787518","doc":"U+283d BRAILLE PATTERN DOTS-13456","summary":"<p>U+283d BRAILLE PATTERN DOTS-13456</p>"},{"id":"XK_braille_dots_234567","name":"XK_braille_dots_234567","value":"16787582","doc":"U+287d BRAILLE PATTERN DOTS-134567","summary":"<p>U+287d BRAILLE PATTERN DOTS-134567</p>"},{"id":"XK_braille_dots_2345678","name":"XK_braille_dots_2345678","value":"16787710","doc":"U+28fd BRAILLE PATTERN DOTS-1345678","summary":"<p>U+28fd BRAILLE PATTERN DOTS-1345678</p>"},{"id":"XK_braille_dots_234568","name":"XK_braille_dots_234568","value":"16787646","doc":"U+28bd BRAILLE PATTERN DOTS-134568","summary":"<p>U+28bd BRAILLE PATTERN DOTS-134568</p>"},{"id":"XK_braille_dots_23457","name":"XK_braille_dots_23457","value":"16787550","doc":"U+285d BRAILLE PATTERN DOTS-13457","summary":"<p>U+285d BRAILLE PATTERN DOTS-13457</p>"},{"id":"XK_braille_dots_234578","name":"XK_braille_dots_234578","value":"16787678","doc":"U+28dd BRAILLE PATTERN DOTS-134578","summary":"<p>U+28dd BRAILLE PATTERN DOTS-134578</p>"},{"id":"XK_braille_dots_23458","name":"XK_braille_dots_23458","value":"16787614","doc":"U+289d BRAILLE PATTERN DOTS-13458","summary":"<p>U+289d BRAILLE PATTERN DOTS-13458</p>"},{"id":"XK_braille_dots_2346","name":"XK_braille_dots_2346","value":"16787502","doc":"U+282d BRAILLE PATTERN DOTS-1346","summary":"<p>U+282d BRAILLE PATTERN DOTS-1346</p>"},{"id":"XK_braille_dots_23467","name":"XK_braille_dots_23467","value":"16787566","doc":"U+286d BRAILLE PATTERN DOTS-13467","summary":"<p>U+286d BRAILLE PATTERN DOTS-13467</p>"},{"id":"XK_braille_dots_234678","name":"XK_braille_dots_234678","value":"16787694","doc":"U+28ed BRAILLE PATTERN DOTS-134678","summary":"<p>U+28ed BRAILLE PATTERN DOTS-134678</p>"},{"id":"XK_braille_dots_23468","name":"XK_braille_dots_23468","value":"16787630","doc":"U+28ad BRAILLE PATTERN DOTS-13468","summary":"<p>U+28ad BRAILLE PATTERN DOTS-13468</p>"},{"id":"XK_braille_dots_2347","name":"XK_braille_dots_2347","value":"16787534","doc":"U+284d BRAILLE PATTERN DOTS-1347","summary":"<p>U+284d BRAILLE PATTERN DOTS-1347</p>"},{"id":"XK_braille_dots_23478","name":"XK_braille_dots_23478","value":"16787662","doc":"U+28cd BRAILLE PATTERN DOTS-13478","summary":"<p>U+28cd BRAILLE PATTERN DOTS-13478</p>"},{"id":"XK_braille_dots_2348","name":"XK_braille_dots_2348","value":"16787598","doc":"U+288d BRAILLE PATTERN DOTS-1348","summary":"<p>U+288d BRAILLE PATTERN DOTS-1348</p>"},{"id":"XK_braille_dots_235","name":"XK_braille_dots_235","value":"16787478","doc":"U+2815 BRAILLE PATTERN DOTS-135","summary":"<p>U+2815 BRAILLE PATTERN DOTS-135</p>"},{"id":"XK_braille_dots_2356","name":"XK_braille_dots_2356","value":"16787510","doc":"U+2835 BRAILLE PATTERN DOTS-1356","summary":"<p>U+2835 BRAILLE PATTERN DOTS-1356</p>"},{"id":"XK_braille_dots_23567","name":"XK_braille_dots_23567","value":"16787574","doc":"U+2875 BRAILLE PATTERN DOTS-13567","summary":"<p>U+2875 BRAILLE PATTERN DOTS-13567</p>"},{"id":"XK_braille_dots_235678","name":"XK_braille_dots_235678","value":"16787702","doc":"U+28f5 BRAILLE PATTERN DOTS-135678","summary":"<p>U+28f5 BRAILLE PATTERN DOTS-135678</p>"},{"id":"XK_braille_dots_23568","name":"XK_braille_dots_23568","value":"16787638","doc":"U+28b5 BRAILLE PATTERN DOTS-13568","summary":"<p>U+28b5 BRAILLE PATTERN DOTS-13568</p>"},{"id":"XK_braille_dots_2357","name":"XK_braille_dots_2357","value":"16787542","doc":"U+2855 BRAILLE PATTERN DOTS-1357","summary":"<p>U+2855 BRAILLE PATTERN DOTS-1357</p>"},{"id":"XK_braille_dots_23578","name":"XK_braille_dots_23578","value":"16787670","doc":"U+28d5 BRAILLE PATTERN DOTS-13578","summary":"<p>U+28d5 BRAILLE PATTERN DOTS-13578</p>"},{"id":"XK_braille_dots_2358","name":"XK_braille_dots_2358","value":"16787606","doc":"U+2895 BRAILLE PATTERN DOTS-1358","summary":"<p>U+2895 BRAILLE PATTERN DOTS-1358</p>"},{"id":"XK_braille_dots_236","name":"XK_braille_dots_236","value":"16787494","doc":"U+2825 BRAILLE PATTERN DOTS-136","summary":"<p>U+2825 BRAILLE PATTERN DOTS-136</p>"},{"id":"XK_braille_dots_2367","name":"XK_braille_dots_2367","value":"16787558","doc":"U+2865 BRAILLE PATTERN DOTS-1367","summary":"<p>U+2865 BRAILLE PATTERN DOTS-1367</p>"},{"id":"XK_braille_dots_23678","name":"XK_braille_dots_23678","value":"16787686","doc":"U+28e5 BRAILLE PATTERN DOTS-13678","summary":"<p>U+28e5 BRAILLE PATTERN DOTS-13678</p>"},{"id":"XK_braille_dots_2368","name":"XK_braille_dots_2368","value":"16787622","doc":"U+28a5 BRAILLE PATTERN DOTS-1368","summary":"<p>U+28a5 BRAILLE PATTERN DOTS-1368</p>"},{"id":"XK_braille_dots_237","name":"XK_braille_dots_237","value":"16787526","doc":"U+2845 BRAILLE PATTERN DOTS-137","summary":"<p>U+2845 BRAILLE PATTERN DOTS-137</p>"},{"id":"XK_braille_dots_2378","name":"XK_braille_dots_2378","value":"16787654","doc":"U+28c5 BRAILLE PATTERN DOTS-1378","summary":"<p>U+28c5 BRAILLE PATTERN DOTS-1378</p>"},{"id":"XK_braille_dots_238","name":"XK_braille_dots_238","value":"16787590","doc":"U+2885 BRAILLE PATTERN DOTS-138","summary":"<p>U+2885 BRAILLE PATTERN DOTS-138</p>"},{"id":"XK_braille_dots_24","name":"XK_braille_dots_24","value":"16787466","doc":"U+2809 BRAILLE PATTERN DOTS-14","summary":"<p>U+2809 BRAILLE PATTERN DOTS-14</p>"},{"id":"XK_braille_dots_245","name":"XK_braille_dots_245","value":"16787482","doc":"U+2819 BRAILLE PATTERN DOTS-145","summary":"<p>U+2819 BRAILLE PATTERN DOTS-145</p>"},{"id":"XK_braille_dots_2456","name":"XK_braille_dots_2456","value":"16787514","doc":"U+2839 BRAILLE PATTERN DOTS-1456","summary":"<p>U+2839 BRAILLE PATTERN DOTS-1456</p>"},{"id":"XK_braille_dots_24567","name":"XK_braille_dots_24567","value":"16787578","doc":"U+2879 BRAILLE PATTERN DOTS-14567","summary":"<p>U+2879 BRAILLE PATTERN DOTS-14567</p>"},{"id":"XK_braille_dots_245678","name":"XK_braille_dots_245678","value":"16787706","doc":"U+28f9 BRAILLE PATTERN DOTS-145678","summary":"<p>U+28f9 BRAILLE PATTERN DOTS-145678</p>"},{"id":"XK_braille_dots_24568","name":"XK_braille_dots_24568","value":"16787642","doc":"U+28b9 BRAILLE PATTERN DOTS-14568","summary":"<p>U+28b9 BRAILLE PATTERN DOTS-14568</p>"},{"id":"XK_braille_dots_2457","name":"XK_braille_dots_2457","value":"16787546","doc":"U+2859 BRAILLE PATTERN DOTS-1457","summary":"<p>U+2859 BRAILLE PATTERN DOTS-1457</p>"},{"id":"XK_braille_dots_24578","name":"XK_braille_dots_24578","value":"16787674","doc":"U+28d9 BRAILLE PATTERN DOTS-14578","summary":"<p>U+28d9 BRAILLE PATTERN DOTS-14578</p>"},{"id":"XK_braille_dots_2458","name":"XK_braille_dots_2458","value":"16787610","doc":"U+2899 BRAILLE PATTERN DOTS-1458","summary":"<p>U+2899 BRAILLE PATTERN DOTS-1458</p>"},{"id":"XK_braille_dots_246","name":"XK_braille_dots_246","value":"16787498","doc":"U+2829 BRAILLE PATTERN DOTS-146","summary":"<p>U+2829 BRAILLE PATTERN DOTS-146</p>"},{"id":"XK_braille_dots_2467","name":"XK_braille_dots_2467","value":"16787562","doc":"U+2869 BRAILLE PATTERN DOTS-1467","summary":"<p>U+2869 BRAILLE PATTERN DOTS-1467</p>"},{"id":"XK_braille_dots_24678","name":"XK_braille_dots_24678","value":"16787690","doc":"U+28e9 BRAILLE PATTERN DOTS-14678","summary":"<p>U+28e9 BRAILLE PATTERN DOTS-14678</p>"},{"id":"XK_braille_dots_2468","name":"XK_braille_dots_2468","value":"16787626","doc":"U+28a9 BRAILLE PATTERN DOTS-1468","summary":"<p>U+28a9 BRAILLE PATTERN DOTS-1468</p>"},{"id":"XK_braille_dots_247","name":"XK_braille_dots_247","value":"16787530","doc":"U+2849 BRAILLE PATTERN DOTS-147","summary":"<p>U+2849 BRAILLE PATTERN DOTS-147</p>"},{"id":"XK_braille_dots_2478","name":"XK_braille_dots_2478","value":"16787658","doc":"U+28c9 BRAILLE PATTERN DOTS-1478","summary":"<p>U+28c9 BRAILLE PATTERN DOTS-1478</p>"},{"id":"XK_braille_dots_248","name":"XK_braille_dots_248","value":"16787594","doc":"U+2889 BRAILLE PATTERN DOTS-148","summary":"<p>U+2889 BRAILLE PATTERN DOTS-148</p>"},{"id":"XK_braille_dots_25","name":"XK_braille_dots_25","value":"16787474","doc":"U+2811 BRAILLE PATTERN DOTS-15","summary":"<p>U+2811 BRAILLE PATTERN DOTS-15</p>"},{"id":"XK_braille_dots_256","name":"XK_braille_dots_256","value":"16787506","doc":"U+2831 BRAILLE PATTERN DOTS-156","summary":"<p>U+2831 BRAILLE PATTERN DOTS-156</p>"},{"id":"XK_braille_dots_2567","name":"XK_braille_dots_2567","value":"16787570","doc":"U+2871 BRAILLE PATTERN DOTS-1567","summary":"<p>U+2871 BRAILLE PATTERN DOTS-1567</p>"},{"id":"XK_braille_dots_25678","name":"XK_braille_dots_25678","value":"16787698","doc":"U+28f1 BRAILLE PATTERN DOTS-15678","summary":"<p>U+28f1 BRAILLE PATTERN DOTS-15678</p>"},{"id":"XK_braille_dots_2568","name":"XK_braille_dots_2568","value":"16787634","doc":"U+28b1 BRAILLE PATTERN DOTS-1568","summary":"<p>U+28b1 BRAILLE PATTERN DOTS-1568</p>"},{"id":"XK_braille_dots_257","name":"XK_braille_dots_257","value":"16787538","doc":"U+2851 BRAILLE PATTERN DOTS-157","summary":"<p>U+2851 BRAILLE PATTERN DOTS-157</p>"},{"id":"XK_braille_dots_2578","name":"XK_braille_dots_2578","value":"16787666","doc":"U+28d1 BRAILLE PATTERN DOTS-1578","summary":"<p>U+28d1 BRAILLE PATTERN DOTS-1578</p>"},{"id":"XK_braille_dots_258","name":"XK_braille_dots_258","value":"16787602","doc":"U+2891 BRAILLE PATTERN DOTS-158","summary":"<p>U+2891 BRAILLE PATTERN DOTS-158</p>"},{"id":"XK_braille_dots_26","name":"XK_braille_dots_26","value":"16787490","doc":"U+2821 BRAILLE PATTERN DOTS-16","summary":"<p>U+2821 BRAILLE PATTERN DOTS-16</p>"},{"id":"XK_braille_dots_267","name":"XK_braille_dots_267","value":"16787554","doc":"U+2861 BRAILLE PATTERN DOTS-167","summary":"<p>U+2861 BRAILLE PATTERN DOTS-167</p>"},{"id":"XK_braille_dots_2678","name":"XK_braille_dots_2678","value":"16787682","doc":"U+28e1 BRAILLE PATTERN DOTS-1678","summary":"<p>U+28e1 BRAILLE PATTERN DOTS-1678</p>"},{"id":"XK_braille_dots_268","name":"XK_braille_dots_268","value":"16787618","doc":"U+28a1 BRAILLE PATTERN DOTS-168","summary":"<p>U+28a1 BRAILLE PATTERN DOTS-168</p>"},{"id":"XK_braille_dots_27","name":"XK_braille_dots_27","value":"16787522","doc":"U+2841 BRAILLE PATTERN DOTS-17","summary":"<p>U+2841 BRAILLE PATTERN DOTS-17</p>"},{"id":"XK_braille_dots_278","name":"XK_braille_dots_278","value":"16787650","doc":"U+28c1 BRAILLE PATTERN DOTS-178","summary":"<p>U+28c1 BRAILLE PATTERN DOTS-178</p>"},{"id":"XK_braille_dots_28","name":"XK_braille_dots_28","value":"16787586","doc":"U+2881 BRAILLE PATTERN DOTS-18","summary":"<p>U+2881 BRAILLE PATTERN DOTS-18</p>"},{"id":"XK_braille_dots_3","name":"XK_braille_dots_3","value":"16787460","doc":"U+2803 BRAILLE PATTERN DOTS-12","summary":"<p>U+2803 BRAILLE PATTERN DOTS-12</p>"},{"id":"XK_braille_dots_34","name":"XK_braille_dots_34","value":"16787468","doc":"U+280b BRAILLE PATTERN DOTS-124","summary":"<p>U+280b BRAILLE PATTERN DOTS-124</p>"},{"id":"XK_braille_dots_345","name":"XK_braille_dots_345","value":"16787484","doc":"U+281b BRAILLE PATTERN DOTS-1245","summary":"<p>U+281b BRAILLE PATTERN DOTS-1245</p>"},{"id":"XK_braille_dots_3456","name":"XK_braille_dots_3456","value":"16787516","doc":"U+283b BRAILLE PATTERN DOTS-12456","summary":"<p>U+283b BRAILLE PATTERN DOTS-12456</p>"},{"id":"XK_braille_dots_34567","name":"XK_braille_dots_34567","value":"16787580","doc":"U+287b BRAILLE PATTERN DOTS-124567","summary":"<p>U+287b BRAILLE PATTERN DOTS-124567</p>"},{"id":"XK_braille_dots_345678","name":"XK_braille_dots_345678","value":"16787708","doc":"U+28fb BRAILLE PATTERN DOTS-1245678","summary":"<p>U+28fb BRAILLE PATTERN DOTS-1245678</p>"},{"id":"XK_braille_dots_34568","name":"XK_braille_dots_34568","value":"16787644","doc":"U+28bb BRAILLE PATTERN DOTS-124568","summary":"<p>U+28bb BRAILLE PATTERN DOTS-124568</p>"},{"id":"XK_braille_dots_3457","name":"XK_braille_dots_3457","value":"16787548","doc":"U+285b BRAILLE PATTERN DOTS-12457","summary":"<p>U+285b BRAILLE PATTERN DOTS-12457</p>"},{"id":"XK_braille_dots_34578","name":"XK_braille_dots_34578","value":"16787676","doc":"U+28db BRAILLE PATTERN DOTS-124578","summary":"<p>U+28db BRAILLE PATTERN DOTS-124578</p>"},{"id":"XK_braille_dots_3458","name":"XK_braille_dots_3458","value":"16787612","doc":"U+289b BRAILLE PATTERN DOTS-12458","summary":"<p>U+289b BRAILLE PATTERN DOTS-12458</p>"},{"id":"XK_braille_dots_346","name":"XK_braille_dots_346","value":"16787500","doc":"U+282b BRAILLE PATTERN DOTS-1246","summary":"<p>U+282b BRAILLE PATTERN DOTS-1246</p>"},{"id":"XK_braille_dots_3467","name":"XK_braille_dots_3467","value":"16787564","doc":"U+286b BRAILLE PATTERN DOTS-12467","summary":"<p>U+286b BRAILLE PATTERN DOTS-12467</p>"},{"id":"XK_braille_dots_34678","name":"XK_braille_dots_34678","value":"16787692","doc":"U+28eb BRAILLE PATTERN DOTS-124678","summary":"<p>U+28eb BRAILLE PATTERN DOTS-124678</p>"},{"id":"XK_braille_dots_3468","name":"XK_braille_dots_3468","value":"16787628","doc":"U+28ab BRAILLE PATTERN DOTS-12468","summary":"<p>U+28ab BRAILLE PATTERN DOTS-12468</p>"},{"id":"XK_braille_dots_347","name":"XK_braille_dots_347","value":"16787532","doc":"U+284b BRAILLE PATTERN DOTS-1247","summary":"<p>U+284b BRAILLE PATTERN DOTS-1247</p>"},{"id":"XK_braille_dots_3478","name":"XK_braille_dots_3478","value":"16787660","doc":"U+28cb BRAILLE PATTERN DOTS-12478","summary":"<p>U+28cb BRAILLE PATTERN DOTS-12478</p>"},{"id":"XK_braille_dots_348","name":"XK_braille_dots_348","value":"16787596","doc":"U+288b BRAILLE PATTERN DOTS-1248","summary":"<p>U+288b BRAILLE PATTERN DOTS-1248</p>"},{"id":"XK_braille_dots_35","name":"XK_braille_dots_35","value":"16787476","doc":"U+2813 BRAILLE PATTERN DOTS-125","summary":"<p>U+2813 BRAILLE PATTERN DOTS-125</p>"},{"id":"XK_braille_dots_356","name":"XK_braille_dots_356","value":"16787508","doc":"U+2833 BRAILLE PATTERN DOTS-1256","summary":"<p>U+2833 BRAILLE PATTERN DOTS-1256</p>"},{"id":"XK_braille_dots_3567","name":"XK_braille_dots_3567","value":"16787572","doc":"U+2873 BRAILLE PATTERN DOTS-12567","summary":"<p>U+2873 BRAILLE PATTERN DOTS-12567</p>"},{"id":"XK_braille_dots_35678","name":"XK_braille_dots_35678","value":"16787700","doc":"U+28f3 BRAILLE PATTERN DOTS-125678","summary":"<p>U+28f3 BRAILLE PATTERN DOTS-125678</p>"},{"id":"XK_braille_dots_3568","name":"XK_braille_dots_3568","value":"16787636","doc":"U+28b3 BRAILLE PATTERN DOTS-12568","summary":"<p>U+28b3 BRAILLE PATTERN DOTS-12568</p>"},{"id":"XK_braille_dots_357","name":"XK_braille_dots_357","value":"16787540","doc":"U+2853 BRAILLE PATTERN DOTS-1257","summary":"<p>U+2853 BRAILLE PATTERN DOTS-1257</p>"},{"id":"XK_braille_dots_3578","name":"XK_braille_dots_3578","value":"16787668","doc":"U+28d3 BRAILLE PATTERN DOTS-12578","summary":"<p>U+28d3 BRAILLE PATTERN DOTS-12578</p>"},{"id":"XK_braille_dots_358","name":"XK_braille_dots_358","value":"16787604","doc":"U+2893 BRAILLE PATTERN DOTS-1258","summary":"<p>U+2893 BRAILLE PATTERN DOTS-1258</p>"},{"id":"XK_braille_dots_36","name":"XK_braille_dots_36","value":"16787492","doc":"U+2823 BRAILLE PATTERN DOTS-126","summary":"<p>U+2823 BRAILLE PATTERN DOTS-126</p>"},{"id":"XK_braille_dots_367","name":"XK_braille_dots_367","value":"16787556","doc":"U+2863 BRAILLE PATTERN DOTS-1267","summary":"<p>U+2863 BRAILLE PATTERN DOTS-1267</p>"},{"id":"XK_braille_dots_3678","name":"XK_braille_dots_3678","value":"16787684","doc":"U+28e3 BRAILLE PATTERN DOTS-12678","summary":"<p>U+28e3 BRAILLE PATTERN DOTS-12678</p>"},{"id":"XK_braille_dots_368","name":"XK_braille_dots_368","value":"16787620","doc":"U+28a3 BRAILLE PATTERN DOTS-1268","summary":"<p>U+28a3 BRAILLE PATTERN DOTS-1268</p>"},{"id":"XK_braille_dots_37","name":"XK_braille_dots_37","value":"16787524","doc":"U+2843 BRAILLE PATTERN DOTS-127","summary":"<p>U+2843 BRAILLE PATTERN DOTS-127</p>"},{"id":"XK_braille_dots_378","name":"XK_braille_dots_378","value":"16787652","doc":"U+28c3 BRAILLE PATTERN DOTS-1278","summary":"<p>U+28c3 BRAILLE PATTERN DOTS-1278</p>"},{"id":"XK_braille_dots_38","name":"XK_braille_dots_38","value":"16787588","doc":"U+2883 BRAILLE PATTERN DOTS-128","summary":"<p>U+2883 BRAILLE PATTERN DOTS-128</p>"},{"id":"XK_braille_dots_4","name":"XK_braille_dots_4","value":"16787464","doc":"U+2807 BRAILLE PATTERN DOTS-123","summary":"<p>U+2807 BRAILLE PATTERN DOTS-123</p>"},{"id":"XK_braille_dots_45","name":"XK_braille_dots_45","value":"16787480","doc":"U+2817 BRAILLE PATTERN DOTS-1235","summary":"<p>U+2817 BRAILLE PATTERN DOTS-1235</p>"},{"id":"XK_braille_dots_456","name":"XK_braille_dots_456","value":"16787512","doc":"U+2837 BRAILLE PATTERN DOTS-12356","summary":"<p>U+2837 BRAILLE PATTERN DOTS-12356</p>"},{"id":"XK_braille_dots_4567","name":"XK_braille_dots_4567","value":"16787576","doc":"U+2877 BRAILLE PATTERN DOTS-123567","summary":"<p>U+2877 BRAILLE PATTERN DOTS-123567</p>"},{"id":"XK_braille_dots_45678","name":"XK_braille_dots_45678","value":"16787704","doc":"U+28f7 BRAILLE PATTERN DOTS-1235678","summary":"<p>U+28f7 BRAILLE PATTERN DOTS-1235678</p>"},{"id":"XK_braille_dots_4568","name":"XK_braille_dots_4568","value":"16787640","doc":"U+28b7 BRAILLE PATTERN DOTS-123568","summary":"<p>U+28b7 BRAILLE PATTERN DOTS-123568</p>"},{"id":"XK_braille_dots_457","name":"XK_braille_dots_457","value":"16787544","doc":"U+2857 BRAILLE PATTERN DOTS-12357","summary":"<p>U+2857 BRAILLE PATTERN DOTS-12357</p>"},{"id":"XK_braille_dots_4578","name":"XK_braille_dots_4578","value":"16787672","doc":"U+28d7 BRAILLE PATTERN DOTS-123578","summary":"<p>U+28d7 BRAILLE PATTERN DOTS-123578</p>"},{"id":"XK_braille_dots_458","name":"XK_braille_dots_458","value":"16787608","doc":"U+2897 BRAILLE PATTERN DOTS-12358","summary":"<p>U+2897 BRAILLE PATTERN DOTS-12358</p>"},{"id":"XK_braille_dots_46","name":"XK_braille_dots_46","value":"16787496","doc":"U+2827 BRAILLE PATTERN DOTS-1236","summary":"<p>U+2827 BRAILLE PATTERN DOTS-1236</p>"},{"id":"XK_braille_dots_467","name":"XK_braille_dots_467","value":"16787560","doc":"U+2867 BRAILLE PATTERN DOTS-12367","summary":"<p>U+2867 BRAILLE PATTERN DOTS-12367</p>"},{"id":"XK_braille_dots_4678","name":"XK_braille_dots_4678","value":"16787688","doc":"U+28e7 BRAILLE PATTERN DOTS-123678","summary":"<p>U+28e7 BRAILLE PATTERN DOTS-123678</p>"},{"id":"XK_braille_dots_468","name":"XK_braille_dots_468","value":"16787624","doc":"U+28a7 BRAILLE PATTERN DOTS-12368","summary":"<p>U+28a7 BRAILLE PATTERN DOTS-12368</p>"},{"id":"XK_braille_dots_47","name":"XK_braille_dots_47","value":"16787528","doc":"U+2847 BRAILLE PATTERN DOTS-1237","summary":"<p>U+2847 BRAILLE PATTERN DOTS-1237</p>"},{"id":"XK_braille_dots_478","name":"XK_braille_dots_478","value":"16787656","doc":"U+28c7 BRAILLE PATTERN DOTS-12378","summary":"<p>U+28c7 BRAILLE PATTERN DOTS-12378</p>"},{"id":"XK_braille_dots_48","name":"XK_braille_dots_48","value":"16787592","doc":"U+2887 BRAILLE PATTERN DOTS-1238","summary":"<p>U+2887 BRAILLE PATTERN DOTS-1238</p>"},{"id":"XK_braille_dots_5","name":"XK_braille_dots_5","value":"16787472","doc":"U+280f BRAILLE PATTERN DOTS-1234","summary":"<p>U+280f BRAILLE PATTERN DOTS-1234</p>"},{"id":"XK_braille_dots_56","name":"XK_braille_dots_56","value":"16787504","doc":"U+282f BRAILLE PATTERN DOTS-12346","summary":"<p>U+282f BRAILLE PATTERN DOTS-12346</p>"},{"id":"XK_braille_dots_567","name":"XK_braille_dots_567","value":"16787568","doc":"U+286f BRAILLE PATTERN DOTS-123467","summary":"<p>U+286f BRAILLE PATTERN DOTS-123467</p>"},{"id":"XK_braille_dots_5678","name":"XK_braille_dots_5678","value":"16787696","doc":"U+28ef BRAILLE PATTERN DOTS-1234678","summary":"<p>U+28ef BRAILLE PATTERN DOTS-1234678</p>"},{"id":"XK_braille_dots_568","name":"XK_braille_dots_568","value":"16787632","doc":"U+28af BRAILLE PATTERN DOTS-123468","summary":"<p>U+28af BRAILLE PATTERN DOTS-123468</p>"},{"id":"XK_braille_dots_57","name":"XK_braille_dots_57","value":"16787536","doc":"U+284f BRAILLE PATTERN DOTS-12347","summary":"<p>U+284f BRAILLE PATTERN DOTS-12347</p>"},{"id":"XK_braille_dots_578","name":"XK_braille_dots_578","value":"16787664","doc":"U+28cf BRAILLE PATTERN DOTS-123478","summary":"<p>U+28cf BRAILLE PATTERN DOTS-123478</p>"},{"id":"XK_braille_dots_58","name":"XK_braille_dots_58","value":"16787600","doc":"U+288f BRAILLE PATTERN DOTS-12348","summary":"<p>U+288f BRAILLE PATTERN DOTS-12348</p>"},{"id":"XK_braille_dots_6","name":"XK_braille_dots_6","value":"16787488","doc":"U+281f BRAILLE PATTERN DOTS-12345","summary":"<p>U+281f BRAILLE PATTERN DOTS-12345</p>"},{"id":"XK_braille_dots_67","name":"XK_braille_dots_67","value":"16787552","doc":"U+285f BRAILLE PATTERN DOTS-123457","summary":"<p>U+285f BRAILLE PATTERN DOTS-123457</p>"},{"id":"XK_braille_dots_678","name":"XK_braille_dots_678","value":"16787680","doc":"U+28df BRAILLE PATTERN DOTS-1234578","summary":"<p>U+28df BRAILLE PATTERN DOTS-1234578</p>"},{"id":"XK_braille_dots_68","name":"XK_braille_dots_68","value":"16787616","doc":"U+289f BRAILLE PATTERN DOTS-123458","summary":"<p>U+289f BRAILLE PATTERN DOTS-123458</p>"},{"id":"XK_braille_dots_7","name":"XK_braille_dots_7","value":"16787520","doc":"U+283f BRAILLE PATTERN DOTS-123456","summary":"<p>U+283f BRAILLE PATTERN DOTS-123456</p>"},{"id":"XK_braille_dots_78","name":"XK_braille_dots_78","value":"16787648","doc":"U+28bf BRAILLE PATTERN DOTS-1234568","summary":"<p>U+28bf BRAILLE PATTERN DOTS-1234568</p>"},{"id":"XK_braille_dots_8","name":"XK_braille_dots_8","value":"16787584","doc":"U+287f BRAILLE PATTERN DOTS-1234567","summary":"<p>U+287f BRAILLE PATTERN DOTS-1234567</p>"},{"id":"XK_Break","name":"XK_Break","value":"65387","doc":"Help","summary":"<p>Help</p>"},{"id":"XK_breve","name":"XK_breve","value":"418","doc":"U+0104 LATIN CAPITAL LETTER A WITH OGONEK","summary":"<p>U+0104 LATIN CAPITAL LETTER A WITH OGONEK</p>"},{"id":"XK_brokenbar","name":"XK_brokenbar","value":"166","doc":"U+00A5 YEN SIGN","summary":"<p>U+00A5 YEN SIGN</p>"},{"id":"XK_Byelorussian_SHORTU","name":"XK_Byelorussian_SHORTU","value":"1726","doc":"U+0490 CYRILLIC CAPITAL LETTER GHE WITH UPTURN","summary":"<p>U+0490 CYRILLIC CAPITAL LETTER GHE WITH UPTURN</p>"},{"id":"XK_Byelorussian_shortu","name":"XK_Byelorussian_shortu","value":"1710","doc":"U+0491 CYRILLIC SMALL LETTER GHE WITH UPTURN","summary":"<p>U+0491 CYRILLIC SMALL LETTER GHE WITH UPTURN</p>"},{"id":"XK_C","name":"XK_C","value":"67","doc":"U+0042 LATIN CAPITAL LETTER B","summary":"<p>U+0042 LATIN CAPITAL LETTER B</p>"},{"id":"XK_c","name":"XK_c","value":"99","doc":"U+0062 LATIN SMALL LETTER B","summary":"<p>U+0062 LATIN SMALL LETTER B</p>"},{"id":"XK_C_H","name":"XK_C_H","value":"65189","doc":null,"summary":null},{"id":"XK_C_h","name":"XK_C_h","value":"65188","doc":null,"summary":null},{"id":"XK_c_h","name":"XK_c_h","value":"65187","doc":null,"summary":null},{"id":"XK_cabovedot","name":"XK_cabovedot","value":"741","doc":"U+015C LATIN CAPITAL LETTER S WITH CIRCUMFLEX","summary":"<p>U+015C LATIN CAPITAL LETTER S WITH CIRCUMFLEX</p>"},{"id":"XK_Cabovedot","name":"XK_Cabovedot","value":"709","doc":"U+0135 LATIN SMALL LETTER J WITH CIRCUMFLEX","summary":"<p>U+0135 LATIN SMALL LETTER J WITH CIRCUMFLEX</p>"},{"id":"XK_cacute","name":"XK_cacute","value":"486","doc":"U+013A LATIN SMALL LETTER L WITH ACUTE","summary":"<p>U+013A LATIN SMALL LETTER L WITH ACUTE</p>"},{"id":"XK_Cacute","name":"XK_Cacute","value":"454","doc":"U+0139 LATIN CAPITAL LETTER L WITH ACUTE","summary":"<p>U+0139 LATIN CAPITAL LETTER L WITH ACUTE</p>"},{"id":"XK_Cancel","name":"XK_Cancel","value":"65385","doc":"Find, search","summary":"<p>Find, search</p>"},{"id":"XK_Caps_Lock","name":"XK_Caps_Lock","value":"65509","doc":"Right control","summary":"<p>Right control</p>"},{"id":"XK_caron","name":"XK_caron","value":"439","doc":"U+015B LATIN SMALL LETTER S WITH ACUTE","summary":"<p>U+015B LATIN SMALL LETTER S WITH ACUTE</p>"},{"id":"XK_CAUCASUS","name":"XK_CAUCASUS","value":"true","doc":null,"summary":null},{"id":"XK_ccaron","name":"XK_ccaron","value":"488","doc":"U+0107 LATIN SMALL LETTER C WITH ACUTE","summary":"<p>U+0107 LATIN SMALL LETTER C WITH ACUTE</p>"},{"id":"XK_Ccaron","name":"XK_Ccaron","value":"456","doc":"U+0106 LATIN CAPITAL LETTER C WITH ACUTE","summary":"<p>U+0106 LATIN CAPITAL LETTER C WITH ACUTE</p>"},{"id":"XK_Ccedilla","name":"XK_Ccedilla","value":"199","doc":"U+00C6 LATIN CAPITAL LETTER AE","summary":"<p>U+00C6 LATIN CAPITAL LETTER AE</p>"},{"id":"XK_ccedilla","name":"XK_ccedilla","value":"231","doc":"U+00E6 LATIN SMALL LETTER AE","summary":"<p>U+00E6 LATIN SMALL LETTER AE</p>"},{"id":"XK_Ccircumflex","name":"XK_Ccircumflex","value":"710","doc":"U+010A LATIN CAPITAL LETTER C WITH DOT ABOVE","summary":"<p>U+010A LATIN CAPITAL LETTER C WITH DOT ABOVE</p>"},{"id":"XK_ccircumflex","name":"XK_ccircumflex","value":"742","doc":"U+010B LATIN SMALL LETTER C WITH DOT ABOVE","summary":"<p>U+010B LATIN SMALL LETTER C WITH DOT ABOVE</p>"},{"id":"XK_cedilla","name":"XK_cedilla","value":"184","doc":"U+00B7 MIDDLE DOT","summary":"<p>U+00B7 MIDDLE DOT</p>"},{"id":"XK_cent","name":"XK_cent","value":"162","doc":"U+00A1 INVERTED EXCLAMATION MARK","summary":"<p>U+00A1 INVERTED EXCLAMATION MARK</p>"},{"id":"XK_ch","name":"XK_ch","value":"65184","doc":null,"summary":null},{"id":"XK_Ch","name":"XK_Ch","value":"65185","doc":null,"summary":null},{"id":"XK_CH","name":"XK_CH","value":"65186","doc":null,"summary":null},{"id":"XK_Clear","name":"XK_Clear","value":"65291","doc":"Linefeed, LF","summary":"<p>Linefeed, LF</p>"},{"id":"XK_Codeinput","name":"XK_Codeinput","value":"65335","doc":"Multi-key character compose","summary":"<p>Multi-key character compose</p>"},{"id":"XK_colon","name":"XK_colon","value":"58","doc":"U+0039 DIGIT NINE","summary":"<p>U+0039 DIGIT NINE</p>"},{"id":"XK_ColonSign","name":"XK_ColonSign","value":"16785569","doc":"U+20A0 EURO-CURRENCY SIGN","summary":"<p>U+20A0 EURO-CURRENCY SIGN</p>"},{"id":"XK_comma","name":"XK_comma","value":"44","doc":"U+002B PLUS SIGN","summary":"<p>U+002B PLUS SIGN</p>"},{"id":"XK_containsas","name":"XK_containsas","value":"16785931","doc":"U+2209 NOT AN ELEMENT OF","summary":"<p>U+2209 NOT AN ELEMENT OF</p>"},{"id":"XK_Control_L","name":"XK_Control_L","value":"65507","doc":"Right shift","summary":"<p>Right shift</p>"},{"id":"XK_Control_R","name":"XK_Control_R","value":"65508","doc":"Left control","summary":"<p>Left control</p>"},{"id":"XK_copyright","name":"XK_copyright","value":"169","doc":"U+00A8 DIAERESIS","summary":"<p>U+00A8 DIAERESIS</p>"},{"id":"XK_CruzeiroSign","name":"XK_CruzeiroSign","value":"16785570","doc":"U+20A1 COLON SIGN","summary":"<p>U+20A1 COLON SIGN</p>"},{"id":"XK_cuberoot","name":"XK_cuberoot","value":"16785947","doc":"U+221A SQUARE ROOT","summary":"<p>U+221A SQUARE ROOT</p>"},{"id":"XK_CURRENCY","name":"XK_CURRENCY","value":"true","doc":null,"summary":null},{"id":"XK_currency","name":"XK_currency","value":"164","doc":"U+00A3 POUND SIGN","summary":"<p>U+00A3 POUND SIGN</p>"},{"id":"XK_CYRILLIC","name":"XK_CYRILLIC","value":"true","doc":null,"summary":null},{"id":"XK_Cyrillic_A","name":"XK_Cyrillic_A","value":"1761","doc":"U+042E CYRILLIC CAPITAL LETTER YU","summary":"<p>U+042E CYRILLIC CAPITAL LETTER YU</p>"},{"id":"XK_Cyrillic_a","name":"XK_Cyrillic_a","value":"1729","doc":"U+044E CYRILLIC SMALL LETTER YU","summary":"<p>U+044E CYRILLIC SMALL LETTER YU</p>"},{"id":"XK_Cyrillic_BE","name":"XK_Cyrillic_BE","value":"1762","doc":"U+0410 CYRILLIC CAPITAL LETTER A","summary":"<p>U+0410 CYRILLIC CAPITAL LETTER A</p>"},{"id":"XK_Cyrillic_be","name":"XK_Cyrillic_be","value":"1730","doc":"U+0430 CYRILLIC SMALL LETTER A","summary":"<p>U+0430 CYRILLIC SMALL LETTER A</p>"},{"id":"XK_Cyrillic_che","name":"XK_Cyrillic_che","value":"1758","doc":"U+0449 CYRILLIC SMALL LETTER SHCHA","summary":"<p>U+0449 CYRILLIC SMALL LETTER SHCHA</p>"},{"id":"XK_Cyrillic_CHE","name":"XK_Cyrillic_CHE","value":"1790","doc":"U+0429 CYRILLIC CAPITAL LETTER SHCHA","summary":"<p>U+0429 CYRILLIC CAPITAL LETTER SHCHA</p>"},{"id":"XK_Cyrillic_che_descender","name":"XK_Cyrillic_che_descender","value":"16778423","doc":"U+04B6 CYRILLIC CAPITAL LETTER CHE WITH DESCENDER","summary":"<p>U+04B6 CYRILLIC CAPITAL LETTER CHE WITH DESCENDER</p>"},{"id":"XK_Cyrillic_CHE_descender","name":"XK_Cyrillic_CHE_descender","value":"16778422","doc":"U+04B3 CYRILLIC SMALL LETTER HA WITH DESCENDER","summary":"<p>U+04B3 CYRILLIC SMALL LETTER HA WITH DESCENDER</p>"},{"id":"XK_Cyrillic_che_vertstroke","name":"XK_Cyrillic_che_vertstroke","value":"16778425","doc":"U+04B8 CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE","summary":"<p>U+04B8 CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE</p>"},{"id":"XK_Cyrillic_CHE_vertstroke","name":"XK_Cyrillic_CHE_vertstroke","value":"16778424","doc":"U+04B7 CYRILLIC SMALL LETTER CHE WITH DESCENDER","summary":"<p>U+04B7 CYRILLIC SMALL LETTER CHE WITH DESCENDER</p>"},{"id":"XK_Cyrillic_de","name":"XK_Cyrillic_de","value":"1732","doc":"U+0446 CYRILLIC SMALL LETTER TSE","summary":"<p>U+0446 CYRILLIC SMALL LETTER TSE</p>"},{"id":"XK_Cyrillic_DE","name":"XK_Cyrillic_DE","value":"1764","doc":"U+0426 CYRILLIC CAPITAL LETTER TSE","summary":"<p>U+0426 CYRILLIC CAPITAL LETTER TSE</p>"},{"id":"XK_Cyrillic_DZHE","name":"XK_Cyrillic_DZHE","value":"1727","doc":"U+040E CYRILLIC CAPITAL LETTER SHORT U","summary":"<p>U+040E CYRILLIC CAPITAL LETTER SHORT U</p>"},{"id":"XK_Cyrillic_dzhe","name":"XK_Cyrillic_dzhe","value":"1711","doc":"U+045E CYRILLIC SMALL LETTER SHORT U","summary":"<p>U+045E CYRILLIC SMALL LETTER SHORT U</p>"},{"id":"XK_Cyrillic_E","name":"XK_Cyrillic_E","value":"1788","doc":"U+0428 CYRILLIC CAPITAL LETTER SHA","summary":"<p>U+0428 CYRILLIC CAPITAL LETTER SHA</p>"},{"id":"XK_Cyrillic_e","name":"XK_Cyrillic_e","value":"1756","doc":"U+0448 CYRILLIC SMALL LETTER SHA","summary":"<p>U+0448 CYRILLIC SMALL LETTER SHA</p>"},{"id":"XK_Cyrillic_EF","name":"XK_Cyrillic_EF","value":"1766","doc":"U+0415 CYRILLIC CAPITAL LETTER IE","summary":"<p>U+0415 CYRILLIC CAPITAL LETTER IE</p>"},{"id":"XK_Cyrillic_ef","name":"XK_Cyrillic_ef","value":"1734","doc":"U+0435 CYRILLIC SMALL LETTER IE","summary":"<p>U+0435 CYRILLIC SMALL LETTER IE</p>"},{"id":"XK_Cyrillic_EL","name":"XK_Cyrillic_EL","value":"1772","doc":"U+041A CYRILLIC CAPITAL LETTER KA","summary":"<p>U+041A CYRILLIC CAPITAL LETTER KA</p>"},{"id":"XK_Cyrillic_el","name":"XK_Cyrillic_el","value":"1740","doc":"U+043A CYRILLIC SMALL LETTER KA","summary":"<p>U+043A CYRILLIC SMALL LETTER KA</p>"},{"id":"XK_Cyrillic_em","name":"XK_Cyrillic_em","value":"1741","doc":"U+043B CYRILLIC SMALL LETTER EL","summary":"<p>U+043B CYRILLIC SMALL LETTER EL</p>"},{"id":"XK_Cyrillic_EM","name":"XK_Cyrillic_EM","value":"1773","doc":"U+041B CYRILLIC CAPITAL LETTER EL","summary":"<p>U+041B CYRILLIC CAPITAL LETTER EL</p>"},{"id":"XK_Cyrillic_EN","name":"XK_Cyrillic_EN","value":"1774","doc":"U+041C CYRILLIC CAPITAL LETTER EM","summary":"<p>U+041C CYRILLIC CAPITAL LETTER EM</p>"},{"id":"XK_Cyrillic_en","name":"XK_Cyrillic_en","value":"1742","doc":"U+043C CYRILLIC SMALL LETTER EM","summary":"<p>U+043C CYRILLIC SMALL LETTER EM</p>"},{"id":"XK_Cyrillic_EN_descender","name":"XK_Cyrillic_EN_descender","value":"16778402","doc":"U+049D CYRILLIC SMALL LETTER KA WITH VERTICAL STROKE","summary":"<p>U+049D CYRILLIC SMALL LETTER KA WITH VERTICAL STROKE</p>"},{"id":"XK_Cyrillic_en_descender","name":"XK_Cyrillic_en_descender","value":"16778403","doc":"U+04A2 CYRILLIC CAPITAL LETTER EN WITH DESCENDER","summary":"<p>U+04A2 CYRILLIC CAPITAL LETTER EN WITH DESCENDER</p>"},{"id":"XK_Cyrillic_er","name":"XK_Cyrillic_er","value":"1746","doc":"U+044F CYRILLIC SMALL LETTER YA","summary":"<p>U+044F CYRILLIC SMALL LETTER YA</p>"},{"id":"XK_Cyrillic_ER","name":"XK_Cyrillic_ER","value":"1778","doc":"U+042F CYRILLIC CAPITAL LETTER YA","summary":"<p>U+042F CYRILLIC CAPITAL LETTER YA</p>"},{"id":"XK_Cyrillic_es","name":"XK_Cyrillic_es","value":"1747","doc":"U+0440 CYRILLIC SMALL LETTER ER","summary":"<p>U+0440 CYRILLIC SMALL LETTER ER</p>"},{"id":"XK_Cyrillic_ES","name":"XK_Cyrillic_ES","value":"1779","doc":"U+0420 CYRILLIC CAPITAL LETTER ER","summary":"<p>U+0420 CYRILLIC CAPITAL LETTER ER</p>"},{"id":"XK_Cyrillic_GHE","name":"XK_Cyrillic_GHE","value":"1767","doc":"U+0424 CYRILLIC CAPITAL LETTER EF","summary":"<p>U+0424 CYRILLIC CAPITAL LETTER EF</p>"},{"id":"XK_Cyrillic_ghe","name":"XK_Cyrillic_ghe","value":"1735","doc":"U+0444 CYRILLIC SMALL LETTER EF","summary":"<p>U+0444 CYRILLIC SMALL LETTER EF</p>"},{"id":"XK_Cyrillic_GHE_bar","name":"XK_Cyrillic_GHE_bar","value":"16778386","doc":null,"summary":null},{"id":"XK_Cyrillic_ghe_bar","name":"XK_Cyrillic_ghe_bar","value":"16778387","doc":"U+0492 CYRILLIC CAPITAL LETTER GHE WITH STROKE","summary":"<p>U+0492 CYRILLIC CAPITAL LETTER GHE WITH STROKE</p>"},{"id":"XK_Cyrillic_ha","name":"XK_Cyrillic_ha","value":"1736","doc":"U+0433 CYRILLIC SMALL LETTER GHE","summary":"<p>U+0433 CYRILLIC SMALL LETTER GHE</p>"},{"id":"XK_Cyrillic_HA","name":"XK_Cyrillic_HA","value":"1768","doc":"U+0413 CYRILLIC CAPITAL LETTER GHE","summary":"<p>U+0413 CYRILLIC CAPITAL LETTER GHE</p>"},{"id":"XK_Cyrillic_HA_descender","name":"XK_Cyrillic_HA_descender","value":"16778418","doc":"U+04B1 CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE","summary":"<p>U+04B1 CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE</p>"},{"id":"XK_Cyrillic_ha_descender","name":"XK_Cyrillic_ha_descender","value":"16778419","doc":"U+04B2 CYRILLIC CAPITAL LETTER HA WITH DESCENDER","summary":"<p>U+04B2 CYRILLIC CAPITAL LETTER HA WITH DESCENDER</p>"},{"id":"XK_Cyrillic_HARDSIGN","name":"XK_Cyrillic_HARDSIGN","value":"1791","doc":"U+0427 CYRILLIC CAPITAL LETTER CHE","summary":"<p>U+0427 CYRILLIC CAPITAL LETTER CHE</p>"},{"id":"XK_Cyrillic_hardsign","name":"XK_Cyrillic_hardsign","value":"1759","doc":"U+0447 CYRILLIC SMALL LETTER CHE","summary":"<p>U+0447 CYRILLIC SMALL LETTER CHE</p>"},{"id":"XK_Cyrillic_i","name":"XK_Cyrillic_i","value":"1737","doc":"U+0445 CYRILLIC SMALL LETTER HA","summary":"<p>U+0445 CYRILLIC SMALL LETTER HA</p>"},{"id":"XK_Cyrillic_I","name":"XK_Cyrillic_I","value":"1769","doc":"U+0425 CYRILLIC CAPITAL LETTER HA","summary":"<p>U+0425 CYRILLIC CAPITAL LETTER HA</p>"},{"id":"XK_Cyrillic_i_macron","name":"XK_Cyrillic_i_macron","value":"16778467","doc":"U+04E2 CYRILLIC CAPITAL LETTER I WITH MACRON","summary":"<p>U+04E2 CYRILLIC CAPITAL LETTER I WITH MACRON</p>"},{"id":"XK_Cyrillic_I_macron","name":"XK_Cyrillic_I_macron","value":"16778466","doc":"U+04D9 CYRILLIC SMALL LETTER SCHWA","summary":"<p>U+04D9 CYRILLIC SMALL LETTER SCHWA</p>"},{"id":"XK_Cyrillic_IE","name":"XK_Cyrillic_IE","value":"1765","doc":"U+0414 CYRILLIC CAPITAL LETTER DE","summary":"<p>U+0414 CYRILLIC CAPITAL LETTER DE</p>"},{"id":"XK_Cyrillic_ie","name":"XK_Cyrillic_ie","value":"1733","doc":"U+0434 CYRILLIC SMALL LETTER DE","summary":"<p>U+0434 CYRILLIC SMALL LETTER DE</p>"},{"id":"XK_Cyrillic_io","name":"XK_Cyrillic_io","value":"1699","doc":"U+0453 CYRILLIC SMALL LETTER GJE","summary":"<p>U+0453 CYRILLIC SMALL LETTER GJE</p>"},{"id":"XK_Cyrillic_IO","name":"XK_Cyrillic_IO","value":"1715","doc":"U+0403 CYRILLIC CAPITAL LETTER GJE","summary":"<p>U+0403 CYRILLIC CAPITAL LETTER GJE</p>"},{"id":"XK_Cyrillic_je","name":"XK_Cyrillic_je","value":"1704","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Cyrillic_JE","name":"XK_Cyrillic_JE","value":"1720","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Cyrillic_KA","name":"XK_Cyrillic_KA","value":"1771","doc":"U+0419 CYRILLIC CAPITAL LETTER SHORT I","summary":"<p>U+0419 CYRILLIC CAPITAL LETTER SHORT I</p>"},{"id":"XK_Cyrillic_ka","name":"XK_Cyrillic_ka","value":"1739","doc":"U+0439 CYRILLIC SMALL LETTER SHORT I","summary":"<p>U+0439 CYRILLIC SMALL LETTER SHORT I</p>"},{"id":"XK_Cyrillic_ka_descender","name":"XK_Cyrillic_ka_descender","value":"16778395","doc":"U+049A CYRILLIC CAPITAL LETTER KA WITH DESCENDER","summary":"<p>U+049A CYRILLIC CAPITAL LETTER KA WITH DESCENDER</p>"},{"id":"XK_Cyrillic_KA_descender","name":"XK_Cyrillic_KA_descender","value":"16778394","doc":"U+0497 CYRILLIC SMALL LETTER ZHE WITH DESCENDER","summary":"<p>U+0497 CYRILLIC SMALL LETTER ZHE WITH DESCENDER</p>"},{"id":"XK_Cyrillic_ka_vertstroke","name":"XK_Cyrillic_ka_vertstroke","value":"16778397","doc":"U+049C CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE","summary":"<p>U+049C CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE</p>"},{"id":"XK_Cyrillic_KA_vertstroke","name":"XK_Cyrillic_KA_vertstroke","value":"16778396","doc":"U+049B CYRILLIC SMALL LETTER KA WITH DESCENDER","summary":"<p>U+049B CYRILLIC SMALL LETTER KA WITH DESCENDER</p>"},{"id":"XK_Cyrillic_LJE","name":"XK_Cyrillic_LJE","value":"1721","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Cyrillic_lje","name":"XK_Cyrillic_lje","value":"1705","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Cyrillic_NJE","name":"XK_Cyrillic_NJE","value":"1722","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Cyrillic_nje","name":"XK_Cyrillic_nje","value":"1706","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Cyrillic_o","name":"XK_Cyrillic_o","value":"1743","doc":"U+043D CYRILLIC SMALL LETTER EN","summary":"<p>U+043D CYRILLIC SMALL LETTER EN</p>"},{"id":"XK_Cyrillic_O","name":"XK_Cyrillic_O","value":"1775","doc":"U+041D CYRILLIC CAPITAL LETTER EN","summary":"<p>U+041D CYRILLIC CAPITAL LETTER EN</p>"},{"id":"XK_Cyrillic_O_bar","name":"XK_Cyrillic_O_bar","value":"16778472","doc":"U+04E3 CYRILLIC SMALL LETTER I WITH MACRON","summary":"<p>U+04E3 CYRILLIC SMALL LETTER I WITH MACRON</p>"},{"id":"XK_Cyrillic_o_bar","name":"XK_Cyrillic_o_bar","value":"16778473","doc":"U+04E8 CYRILLIC CAPITAL LETTER BARRED O","summary":"<p>U+04E8 CYRILLIC CAPITAL LETTER BARRED O</p>"},{"id":"XK_Cyrillic_PE","name":"XK_Cyrillic_PE","value":"1776","doc":"U+041E CYRILLIC CAPITAL LETTER O","summary":"<p>U+041E CYRILLIC CAPITAL LETTER O</p>"},{"id":"XK_Cyrillic_pe","name":"XK_Cyrillic_pe","value":"1744","doc":"U+043E CYRILLIC SMALL LETTER O","summary":"<p>U+043E CYRILLIC SMALL LETTER O</p>"},{"id":"XK_Cyrillic_SCHWA","name":"XK_Cyrillic_SCHWA","value":"16778456","doc":"U+04BB CYRILLIC SMALL LETTER SHHA","summary":"<p>U+04BB CYRILLIC SMALL LETTER SHHA</p>"},{"id":"XK_Cyrillic_schwa","name":"XK_Cyrillic_schwa","value":"16778457","doc":"U+04D8 CYRILLIC CAPITAL LETTER SCHWA","summary":"<p>U+04D8 CYRILLIC CAPITAL LETTER SCHWA</p>"},{"id":"XK_Cyrillic_SHA","name":"XK_Cyrillic_SHA","value":"1787","doc":"U+0417 CYRILLIC CAPITAL LETTER ZE","summary":"<p>U+0417 CYRILLIC CAPITAL LETTER ZE</p>"},{"id":"XK_Cyrillic_sha","name":"XK_Cyrillic_sha","value":"1755","doc":"U+0437 CYRILLIC SMALL LETTER ZE","summary":"<p>U+0437 CYRILLIC SMALL LETTER ZE</p>"},{"id":"XK_Cyrillic_SHCHA","name":"XK_Cyrillic_SHCHA","value":"1789","doc":"U+042D CYRILLIC CAPITAL LETTER E","summary":"<p>U+042D CYRILLIC CAPITAL LETTER E</p>"},{"id":"XK_Cyrillic_shcha","name":"XK_Cyrillic_shcha","value":"1757","doc":"U+044D CYRILLIC SMALL LETTER E","summary":"<p>U+044D CYRILLIC SMALL LETTER E</p>"},{"id":"XK_Cyrillic_shha","name":"XK_Cyrillic_shha","value":"16778427","doc":"U+04BA CYRILLIC CAPITAL LETTER SHHA","summary":"<p>U+04BA CYRILLIC CAPITAL LETTER SHHA</p>"},{"id":"XK_Cyrillic_SHHA","name":"XK_Cyrillic_SHHA","value":"16778426","doc":"U+04B9 CYRILLIC SMALL LETTER CHE WITH VERTICAL STROKE","summary":"<p>U+04B9 CYRILLIC SMALL LETTER CHE WITH VERTICAL STROKE</p>"},{"id":"XK_Cyrillic_SHORTI","name":"XK_Cyrillic_SHORTI","value":"1770","doc":"U+0418 CYRILLIC CAPITAL LETTER I","summary":"<p>U+0418 CYRILLIC CAPITAL LETTER I</p>"},{"id":"XK_Cyrillic_shorti","name":"XK_Cyrillic_shorti","value":"1738","doc":"U+0438 CYRILLIC SMALL LETTER I","summary":"<p>U+0438 CYRILLIC SMALL LETTER I</p>"},{"id":"XK_Cyrillic_SOFTSIGN","name":"XK_Cyrillic_SOFTSIGN","value":"1784","doc":"U+0412 CYRILLIC CAPITAL LETTER VE","summary":"<p>U+0412 CYRILLIC CAPITAL LETTER VE</p>"},{"id":"XK_Cyrillic_softsign","name":"XK_Cyrillic_softsign","value":"1752","doc":"U+0432 CYRILLIC SMALL LETTER VE","summary":"<p>U+0432 CYRILLIC SMALL LETTER VE</p>"},{"id":"XK_Cyrillic_te","name":"XK_Cyrillic_te","value":"1748","doc":"U+0441 CYRILLIC SMALL LETTER ES","summary":"<p>U+0441 CYRILLIC SMALL LETTER ES</p>"},{"id":"XK_Cyrillic_TE","name":"XK_Cyrillic_TE","value":"1780","doc":"U+0421 CYRILLIC CAPITAL LETTER ES","summary":"<p>U+0421 CYRILLIC CAPITAL LETTER ES</p>"},{"id":"XK_Cyrillic_tse","name":"XK_Cyrillic_tse","value":"1731","doc":"U+0431 CYRILLIC SMALL LETTER BE","summary":"<p>U+0431 CYRILLIC SMALL LETTER BE</p>"},{"id":"XK_Cyrillic_TSE","name":"XK_Cyrillic_TSE","value":"1763","doc":"U+0411 CYRILLIC CAPITAL LETTER BE","summary":"<p>U+0411 CYRILLIC CAPITAL LETTER BE</p>"},{"id":"XK_Cyrillic_u","name":"XK_Cyrillic_u","value":"1749","doc":"U+0442 CYRILLIC SMALL LETTER TE","summary":"<p>U+0442 CYRILLIC SMALL LETTER TE</p>"},{"id":"XK_Cyrillic_U","name":"XK_Cyrillic_U","value":"1781","doc":"U+0422 CYRILLIC CAPITAL LETTER TE","summary":"<p>U+0422 CYRILLIC CAPITAL LETTER TE</p>"},{"id":"XK_Cyrillic_u_macron","name":"XK_Cyrillic_u_macron","value":"16778479","doc":"U+04EE CYRILLIC CAPITAL LETTER U WITH MACRON","summary":"<p>U+04EE CYRILLIC CAPITAL LETTER U WITH MACRON</p>"},{"id":"XK_Cyrillic_U_macron","name":"XK_Cyrillic_U_macron","value":"16778478","doc":"U+04E9 CYRILLIC SMALL LETTER BARRED O","summary":"<p>U+04E9 CYRILLIC SMALL LETTER BARRED O</p>"},{"id":"XK_Cyrillic_u_straight","name":"XK_Cyrillic_u_straight","value":"16778415","doc":"U+04AE CYRILLIC CAPITAL LETTER STRAIGHT U","summary":"<p>U+04AE CYRILLIC CAPITAL LETTER STRAIGHT U</p>"},{"id":"XK_Cyrillic_U_straight","name":"XK_Cyrillic_U_straight","value":"16778414","doc":"U+04A3 CYRILLIC SMALL LETTER EN WITH DESCENDER","summary":"<p>U+04A3 CYRILLIC SMALL LETTER EN WITH DESCENDER</p>"},{"id":"XK_Cyrillic_U_straight_bar","name":"XK_Cyrillic_U_straight_bar","value":"16778416","doc":"U+04AF CYRILLIC SMALL LETTER STRAIGHT U","summary":"<p>U+04AF CYRILLIC SMALL LETTER STRAIGHT U</p>"},{"id":"XK_Cyrillic_u_straight_bar","name":"XK_Cyrillic_u_straight_bar","value":"16778417","doc":"U+04B0 CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE","summary":"<p>U+04B0 CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE</p>"},{"id":"XK_Cyrillic_ve","name":"XK_Cyrillic_ve","value":"1751","doc":"U+0436 CYRILLIC SMALL LETTER ZHE","summary":"<p>U+0436 CYRILLIC SMALL LETTER ZHE</p>"},{"id":"XK_Cyrillic_VE","name":"XK_Cyrillic_VE","value":"1783","doc":"U+0416 CYRILLIC CAPITAL LETTER ZHE","summary":"<p>U+0416 CYRILLIC CAPITAL LETTER ZHE</p>"},{"id":"XK_Cyrillic_ya","name":"XK_Cyrillic_ya","value":"1745","doc":"U+043F CYRILLIC SMALL LETTER PE","summary":"<p>U+043F CYRILLIC SMALL LETTER PE</p>"},{"id":"XK_Cyrillic_YA","name":"XK_Cyrillic_YA","value":"1777","doc":"U+041F CYRILLIC CAPITAL LETTER PE","summary":"<p>U+041F CYRILLIC CAPITAL LETTER PE</p>"},{"id":"XK_Cyrillic_YERU","name":"XK_Cyrillic_YERU","value":"1785","doc":"U+042C CYRILLIC CAPITAL LETTER SOFT SIGN","summary":"<p>U+042C CYRILLIC CAPITAL LETTER SOFT SIGN</p>"},{"id":"XK_Cyrillic_yeru","name":"XK_Cyrillic_yeru","value":"1753","doc":"U+044C CYRILLIC SMALL LETTER SOFT SIGN","summary":"<p>U+044C CYRILLIC SMALL LETTER SOFT SIGN</p>"},{"id":"XK_Cyrillic_yu","name":"XK_Cyrillic_yu","value":"1728","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Cyrillic_YU","name":"XK_Cyrillic_YU","value":"1760","doc":"U+044A CYRILLIC SMALL LETTER HARD SIGN","summary":"<p>U+044A CYRILLIC SMALL LETTER HARD SIGN</p>"},{"id":"XK_Cyrillic_ZE","name":"XK_Cyrillic_ZE","value":"1786","doc":"U+042B CYRILLIC CAPITAL LETTER YERU","summary":"<p>U+042B CYRILLIC CAPITAL LETTER YERU</p>"},{"id":"XK_Cyrillic_ze","name":"XK_Cyrillic_ze","value":"1754","doc":"U+044B CYRILLIC SMALL LETTER YERU","summary":"<p>U+044B CYRILLIC SMALL LETTER YERU</p>"},{"id":"XK_Cyrillic_zhe","name":"XK_Cyrillic_zhe","value":"1750","doc":"U+0443 CYRILLIC SMALL LETTER U","summary":"<p>U+0443 CYRILLIC SMALL LETTER U</p>"},{"id":"XK_Cyrillic_ZHE","name":"XK_Cyrillic_ZHE","value":"1782","doc":"U+0423 CYRILLIC CAPITAL LETTER U","summary":"<p>U+0423 CYRILLIC CAPITAL LETTER U</p>"},{"id":"XK_Cyrillic_ZHE_descender","name":"XK_Cyrillic_ZHE_descender","value":"16778390","doc":"U+0493 CYRILLIC SMALL LETTER GHE WITH STROKE","summary":"<p>U+0493 CYRILLIC SMALL LETTER GHE WITH STROKE</p>"},{"id":"XK_Cyrillic_zhe_descender","name":"XK_Cyrillic_zhe_descender","value":"16778391","doc":"U+0496 CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER","summary":"<p>U+0496 CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER</p>"},{"id":"XK_D","name":"XK_D","value":"68","doc":"U+0043 LATIN CAPITAL LETTER C","summary":"<p>U+0043 LATIN CAPITAL LETTER C</p>"},{"id":"XK_d","name":"XK_d","value":"100","doc":"U+0063 LATIN SMALL LETTER C","summary":"<p>U+0063 LATIN SMALL LETTER C</p>"},{"id":"XK_Dabovedot","name":"XK_Dabovedot","value":"16784906","doc":"U+1E03 LATIN SMALL LETTER B WITH DOT ABOVE","summary":"<p>U+1E03 LATIN SMALL LETTER B WITH DOT ABOVE</p>"},{"id":"XK_dabovedot","name":"XK_dabovedot","value":"16784907","doc":"U+1E0A LATIN CAPITAL LETTER D WITH DOT ABOVE","summary":"<p>U+1E0A LATIN CAPITAL LETTER D WITH DOT ABOVE</p>"},{"id":"XK_dcaron","name":"XK_dcaron","value":"495","doc":"U+011B LATIN SMALL LETTER E WITH CARON","summary":"<p>U+011B LATIN SMALL LETTER E WITH CARON</p>"},{"id":"XK_Dcaron","name":"XK_Dcaron","value":"463","doc":"U+011A LATIN CAPITAL LETTER E WITH CARON","summary":"<p>U+011A LATIN CAPITAL LETTER E WITH CARON</p>"},{"id":"XK_dead_A","name":"XK_dead_A","value":"65153","doc":null,"summary":null},{"id":"XK_dead_a","name":"XK_dead_a","value":"65152","doc":"dead vowels for universal syllable entry","summary":"<p>dead vowels for universal syllable entry</p>"},{"id":"XK_dead_abovecomma","name":"XK_dead_abovecomma","value":"65124","doc":null,"summary":null},{"id":"XK_dead_abovedot","name":"XK_dead_abovedot","value":"65110","doc":null,"summary":null},{"id":"XK_dead_abovereversedcomma","name":"XK_dead_abovereversedcomma","value":"65125","doc":"alias for dead_abovecomma","summary":"<p>alias for dead_abovecomma</p>"},{"id":"XK_dead_abovering","name":"XK_dead_abovering","value":"65112","doc":null,"summary":null},{"id":"XK_dead_aboveverticalline","name":"XK_dead_aboveverticalline","value":"65169","doc":null,"summary":null},{"id":"XK_dead_acute","name":"XK_dead_acute","value":"65105","doc":null,"summary":null},{"id":"XK_dead_belowbreve","name":"XK_dead_belowbreve","value":"65131","doc":null,"summary":null},{"id":"XK_dead_belowcircumflex","name":"XK_dead_belowcircumflex","value":"65129","doc":null,"summary":null},{"id":"XK_dead_belowcomma","name":"XK_dead_belowcomma","value":"65134","doc":null,"summary":null},{"id":"XK_dead_belowdiaeresis","name":"XK_dead_belowdiaeresis","value":"65132","doc":null,"summary":null},{"id":"XK_dead_belowdot","name":"XK_dead_belowdot","value":"65120","doc":null,"summary":null},{"id":"XK_dead_belowmacron","name":"XK_dead_belowmacron","value":"65128","doc":null,"summary":null},{"id":"XK_dead_belowring","name":"XK_dead_belowring","value":"65127","doc":null,"summary":null},{"id":"XK_dead_belowtilde","name":"XK_dead_belowtilde","value":"65130","doc":null,"summary":null},{"id":"XK_dead_belowverticalline","name":"XK_dead_belowverticalline","value":"65170","doc":null,"summary":null},{"id":"XK_dead_breve","name":"XK_dead_breve","value":"65109","doc":null,"summary":null},{"id":"XK_dead_capital_schwa","name":"XK_dead_capital_schwa","value":"65163","doc":null,"summary":null},{"id":"XK_dead_caron","name":"XK_dead_caron","value":"65114","doc":null,"summary":null},{"id":"XK_dead_cedilla","name":"XK_dead_cedilla","value":"65115","doc":null,"summary":null},{"id":"XK_dead_circumflex","name":"XK_dead_circumflex","value":"65106","doc":null,"summary":null},{"id":"XK_dead_currency","name":"XK_dead_currency","value":"65135","doc":null,"summary":null},{"id":"XK_dead_dasia","name":"XK_dead_dasia","value":"65125","doc":null,"summary":null},{"id":"XK_dead_diaeresis","name":"XK_dead_diaeresis","value":"65111","doc":null,"summary":null},{"id":"XK_dead_doubleacute","name":"XK_dead_doubleacute","value":"65113","doc":null,"summary":null},{"id":"XK_dead_doublegrave","name":"XK_dead_doublegrave","value":"65126","doc":"alias for dead_abovereversedcomma","summary":"<p>alias for dead_abovereversedcomma</p>"},{"id":"XK_dead_e","name":"XK_dead_e","value":"65154","doc":null,"summary":null},{"id":"XK_dead_E","name":"XK_dead_E","value":"65155","doc":null,"summary":null},{"id":"XK_dead_grave","name":"XK_dead_grave","value":"65104","doc":null,"summary":null},{"id":"XK_dead_greek","name":"XK_dead_greek","value":"65164","doc":null,"summary":null},{"id":"XK_dead_hook","name":"XK_dead_hook","value":"65121","doc":null,"summary":null},{"id":"XK_dead_horn","name":"XK_dead_horn","value":"65122","doc":null,"summary":null},{"id":"XK_dead_i","name":"XK_dead_i","value":"65156","doc":null,"summary":null},{"id":"XK_dead_I","name":"XK_dead_I","value":"65157","doc":null,"summary":null},{"id":"XK_dead_invertedbreve","name":"XK_dead_invertedbreve","value":"65133","doc":null,"summary":null},{"id":"XK_dead_iota","name":"XK_dead_iota","value":"65117","doc":null,"summary":null},{"id":"XK_dead_longsolidusoverlay","name":"XK_dead_longsolidusoverlay","value":"65171","doc":null,"summary":null},{"id":"XK_dead_lowline","name":"XK_dead_lowline","value":"65168","doc":"extra dead elements for German T3 layout","summary":"<p>extra dead elements for German T3 layout</p>"},{"id":"XK_dead_macron","name":"XK_dead_macron","value":"65108","doc":"alias for dead_tilde","summary":"<p>alias for dead_tilde</p>"},{"id":"XK_dead_O","name":"XK_dead_O","value":"65159","doc":null,"summary":null},{"id":"XK_dead_o","name":"XK_dead_o","value":"65158","doc":null,"summary":null},{"id":"XK_dead_ogonek","name":"XK_dead_ogonek","value":"65116","doc":null,"summary":null},{"id":"XK_dead_perispomeni","name":"XK_dead_perispomeni","value":"65107","doc":null,"summary":null},{"id":"XK_dead_psili","name":"XK_dead_psili","value":"65124","doc":null,"summary":null},{"id":"XK_dead_semivoiced_sound","name":"XK_dead_semivoiced_sound","value":"65119","doc":null,"summary":null},{"id":"XK_dead_small_schwa","name":"XK_dead_small_schwa","value":"65162","doc":null,"summary":null},{"id":"XK_dead_stroke","name":"XK_dead_stroke","value":"65123","doc":null,"summary":null},{"id":"XK_dead_tilde","name":"XK_dead_tilde","value":"65107","doc":null,"summary":null},{"id":"XK_dead_U","name":"XK_dead_U","value":"65161","doc":null,"summary":null},{"id":"XK_dead_u","name":"XK_dead_u","value":"65160","doc":null,"summary":null},{"id":"XK_dead_voiced_sound","name":"XK_dead_voiced_sound","value":"65118","doc":null,"summary":null},{"id":"XK_degree","name":"XK_degree","value":"176","doc":"U+00AF MACRON","summary":"<p>U+00AF MACRON</p>"},{"id":"XK_Delete","name":"XK_Delete","value":"65535","doc":null,"summary":null},{"id":"XK_diaeresis","name":"XK_diaeresis","value":"168","doc":"U+00A7 SECTION SIGN","summary":"<p>U+00A7 SECTION SIGN</p>"},{"id":"XK_dintegral","name":"XK_dintegral","value":"16785964","doc":"U+221C FOURTH ROOT","summary":"<p>U+221C FOURTH ROOT</p>"},{"id":"XK_division","name":"XK_division","value":"247","doc":"U+00F6 LATIN SMALL LETTER O WITH DIAERESIS","summary":"<p>U+00F6 LATIN SMALL LETTER O WITH DIAERESIS</p>"},{"id":"XK_dollar","name":"XK_dollar","value":"36","doc":"U+0023 NUMBER SIGN","summary":"<p>U+0023 NUMBER SIGN</p>"},{"id":"XK_DongSign","name":"XK_DongSign","value":"16785579","doc":"U+20AA NEW SHEQEL SIGN","summary":"<p>U+20AA NEW SHEQEL SIGN</p>"},{"id":"XK_doubleacute","name":"XK_doubleacute","value":"445","doc":"U+017A LATIN SMALL LETTER Z WITH ACUTE","summary":"<p>U+017A LATIN SMALL LETTER Z WITH ACUTE</p>"},{"id":"XK_Down","name":"XK_Down","value":"65364","doc":"Move right, right arrow","summary":"<p>Move right, right arrow</p>"},{"id":"XK_dstroke","name":"XK_dstroke","value":"496","doc":"U+010F LATIN SMALL LETTER D WITH CARON","summary":"<p>U+010F LATIN SMALL LETTER D WITH CARON</p>"},{"id":"XK_Dstroke","name":"XK_Dstroke","value":"464","doc":"U+010E LATIN CAPITAL LETTER D WITH CARON","summary":"<p>U+010E LATIN CAPITAL LETTER D WITH CARON</p>"},{"id":"XK_e","name":"XK_e","value":"101","doc":"U+0064 LATIN SMALL LETTER D","summary":"<p>U+0064 LATIN SMALL LETTER D</p>"},{"id":"XK_E","name":"XK_E","value":"69","doc":"U+0044 LATIN CAPITAL LETTER D","summary":"<p>U+0044 LATIN CAPITAL LETTER D</p>"},{"id":"XK_eabovedot","name":"XK_eabovedot","value":"1004","doc":"U+012F LATIN SMALL LETTER I WITH OGONEK","summary":"<p>U+012F LATIN SMALL LETTER I WITH OGONEK</p>"},{"id":"XK_Eabovedot","name":"XK_Eabovedot","value":"972","doc":"U+012E LATIN CAPITAL LETTER I WITH OGONEK","summary":"<p>U+012E LATIN CAPITAL LETTER I WITH OGONEK</p>"},{"id":"XK_Eacute","name":"XK_Eacute","value":"201","doc":"U+00C8 LATIN CAPITAL LETTER E WITH GRAVE","summary":"<p>U+00C8 LATIN CAPITAL LETTER E WITH GRAVE</p>"},{"id":"XK_eacute","name":"XK_eacute","value":"233","doc":"U+00E8 LATIN SMALL LETTER E WITH GRAVE","summary":"<p>U+00E8 LATIN SMALL LETTER E WITH GRAVE</p>"},{"id":"XK_ebelowdot","name":"XK_ebelowdot","value":"16785081","doc":"U+1EB8 LATIN CAPITAL LETTER E WITH DOT BELOW","summary":"<p>U+1EB8 LATIN CAPITAL LETTER E WITH DOT BELOW</p>"},{"id":"XK_Ebelowdot","name":"XK_Ebelowdot","value":"16785080","doc":"U+1EB7 LATIN SMALL LETTER A WITH BREVE AND DOT BELOW","summary":"<p>U+1EB7 LATIN SMALL LETTER A WITH BREVE AND DOT BELOW</p>"},{"id":"XK_ecaron","name":"XK_ecaron","value":"492","doc":"U+0119 LATIN SMALL LETTER E WITH OGONEK","summary":"<p>U+0119 LATIN SMALL LETTER E WITH OGONEK</p>"},{"id":"XK_Ecaron","name":"XK_Ecaron","value":"460","doc":"U+0118 LATIN CAPITAL LETTER E WITH OGONEK","summary":"<p>U+0118 LATIN CAPITAL LETTER E WITH OGONEK</p>"},{"id":"XK_Ecircumflex","name":"XK_Ecircumflex","value":"202","doc":"U+00C9 LATIN CAPITAL LETTER E WITH ACUTE","summary":"<p>U+00C9 LATIN CAPITAL LETTER E WITH ACUTE</p>"},{"id":"XK_ecircumflex","name":"XK_ecircumflex","value":"234","doc":"U+00E9 LATIN SMALL LETTER E WITH ACUTE","summary":"<p>U+00E9 LATIN SMALL LETTER E WITH ACUTE</p>"},{"id":"XK_ecircumflexacute","name":"XK_ecircumflexacute","value":"16785087","doc":"U+1EBE LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE","summary":"<p>U+1EBE LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE</p>"},{"id":"XK_Ecircumflexacute","name":"XK_Ecircumflexacute","value":"16785086","doc":"U+1EBD LATIN SMALL LETTER E WITH TILDE","summary":"<p>U+1EBD LATIN SMALL LETTER E WITH TILDE</p>"},{"id":"XK_Ecircumflexbelowdot","name":"XK_Ecircumflexbelowdot","value":"16785094","doc":"U+1EC5 LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE","summary":"<p>U+1EC5 LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE</p>"},{"id":"XK_ecircumflexbelowdot","name":"XK_ecircumflexbelowdot","value":"16785095","doc":"U+1EC6 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW","summary":"<p>U+1EC6 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW</p>"},{"id":"XK_ecircumflexgrave","name":"XK_ecircumflexgrave","value":"16785089","doc":"U+1EC0 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE","summary":"<p>U+1EC0 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE</p>"},{"id":"XK_Ecircumflexgrave","name":"XK_Ecircumflexgrave","value":"16785088","doc":"U+1EBF LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE","summary":"<p>U+1EBF LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE</p>"},{"id":"XK_Ecircumflexhook","name":"XK_Ecircumflexhook","value":"16785090","doc":"U+1EC1 LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE","summary":"<p>U+1EC1 LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE</p>"},{"id":"XK_ecircumflexhook","name":"XK_ecircumflexhook","value":"16785091","doc":"U+1EC2 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE","summary":"<p>U+1EC2 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE</p>"},{"id":"XK_ecircumflextilde","name":"XK_ecircumflextilde","value":"16785093","doc":"U+1EC4 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE","summary":"<p>U+1EC4 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE</p>"},{"id":"XK_Ecircumflextilde","name":"XK_Ecircumflextilde","value":"16785092","doc":"U+1EC3 LATIN SMALL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE","summary":"<p>U+1EC3 LATIN SMALL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE</p>"},{"id":"XK_EcuSign","name":"XK_EcuSign","value":"16785568","doc":null,"summary":null},{"id":"XK_Ediaeresis","name":"XK_Ediaeresis","value":"203","doc":"U+00CA LATIN CAPITAL LETTER E WITH CIRCUMFLEX","summary":"<p>U+00CA LATIN CAPITAL LETTER E WITH CIRCUMFLEX</p>"},{"id":"XK_ediaeresis","name":"XK_ediaeresis","value":"235","doc":"U+00EA LATIN SMALL LETTER E WITH CIRCUMFLEX","summary":"<p>U+00EA LATIN SMALL LETTER E WITH CIRCUMFLEX</p>"},{"id":"XK_Egrave","name":"XK_Egrave","value":"200","doc":"U+00C7 LATIN CAPITAL LETTER C WITH CEDILLA","summary":"<p>U+00C7 LATIN CAPITAL LETTER C WITH CEDILLA</p>"},{"id":"XK_egrave","name":"XK_egrave","value":"232","doc":"U+00E7 LATIN SMALL LETTER C WITH CEDILLA","summary":"<p>U+00E7 LATIN SMALL LETTER C WITH CEDILLA</p>"},{"id":"XK_Ehook","name":"XK_Ehook","value":"16785082","doc":"U+1EB9 LATIN SMALL LETTER E WITH DOT BELOW","summary":"<p>U+1EB9 LATIN SMALL LETTER E WITH DOT BELOW</p>"},{"id":"XK_ehook","name":"XK_ehook","value":"16785083","doc":"U+1EBA LATIN CAPITAL LETTER E WITH HOOK ABOVE","summary":"<p>U+1EBA LATIN CAPITAL LETTER E WITH HOOK ABOVE</p>"},{"id":"XK_eightsubscript","name":"XK_eightsubscript","value":"16785544","doc":"U+2087 SUBSCRIPT SEVEN","summary":"<p>U+2087 SUBSCRIPT SEVEN</p>"},{"id":"XK_eightsuperior","name":"XK_eightsuperior","value":"16785528","doc":"U+2077 SUPERSCRIPT SEVEN","summary":"<p>U+2077 SUPERSCRIPT SEVEN</p>"},{"id":"XK_Eisu_Shift","name":"XK_Eisu_Shift","value":"65327","doc":"Kana Shift","summary":"<p>Kana Shift</p>"},{"id":"XK_Eisu_toggle","name":"XK_Eisu_toggle","value":"65328","doc":"Alphanumeric Shift","summary":"<p>Alphanumeric Shift</p>"},{"id":"XK_elementof","name":"XK_elementof","value":"16785928","doc":"U+2205 NULL SET","summary":"<p>U+2205 NULL SET</p>"},{"id":"XK_Emacron","name":"XK_Emacron","value":"938","doc":"U+013B LATIN CAPITAL LETTER L WITH CEDILLA","summary":"<p>U+013B LATIN CAPITAL LETTER L WITH CEDILLA</p>"},{"id":"XK_emacron","name":"XK_emacron","value":"954","doc":"U+013C LATIN SMALL LETTER L WITH CEDILLA","summary":"<p>U+013C LATIN SMALL LETTER L WITH CEDILLA</p>"},{"id":"XK_emptyset","name":"XK_emptyset","value":"16785925","doc":"U+2202 PARTIAL DIFFERENTIAL","summary":"<p>U+2202 PARTIAL DIFFERENTIAL</p>"},{"id":"XK_End","name":"XK_End","value":"65367","doc":null,"summary":null},{"id":"XK_eng","name":"XK_eng","value":"959","doc":"U+014A LATIN CAPITAL LETTER ENG","summary":"<p>U+014A LATIN CAPITAL LETTER ENG</p>"},{"id":"XK_ENG","name":"XK_ENG","value":"957","doc":"U+0167 LATIN SMALL LETTER T WITH STROKE","summary":"<p>U+0167 LATIN SMALL LETTER T WITH STROKE</p>"},{"id":"XK_eogonek","name":"XK_eogonek","value":"490","doc":"U+010D LATIN SMALL LETTER C WITH CARON","summary":"<p>U+010D LATIN SMALL LETTER C WITH CARON</p>"},{"id":"XK_Eogonek","name":"XK_Eogonek","value":"458","doc":"U+010C LATIN CAPITAL LETTER C WITH CARON","summary":"<p>U+010C LATIN CAPITAL LETTER C WITH CARON</p>"},{"id":"XK_equal","name":"XK_equal","value":"61","doc":"U+003C LESS-THAN SIGN","summary":"<p>U+003C LESS-THAN SIGN</p>"},{"id":"XK_Escape","name":"XK_Escape","value":"65307","doc":null,"summary":null},{"id":"XK_ETH","name":"XK_ETH","value":"208","doc":"U+00CF LATIN CAPITAL LETTER I WITH DIAERESIS","summary":"<p>U+00CF LATIN CAPITAL LETTER I WITH DIAERESIS</p>"},{"id":"XK_Eth","name":"XK_Eth","value":"208","doc":"U+00D0 LATIN CAPITAL LETTER ETH","summary":"<p>U+00D0 LATIN CAPITAL LETTER ETH</p>"},{"id":"XK_eth","name":"XK_eth","value":"240","doc":"U+00EF LATIN SMALL LETTER I WITH DIAERESIS","summary":"<p>U+00EF LATIN SMALL LETTER I WITH DIAERESIS</p>"},{"id":"XK_etilde","name":"XK_etilde","value":"16785085","doc":"U+1EBC LATIN CAPITAL LETTER E WITH TILDE","summary":"<p>U+1EBC LATIN CAPITAL LETTER E WITH TILDE</p>"},{"id":"XK_Etilde","name":"XK_Etilde","value":"16785084","doc":"U+1EBB LATIN SMALL LETTER E WITH HOOK ABOVE","summary":"<p>U+1EBB LATIN SMALL LETTER E WITH HOOK ABOVE</p>"},{"id":"XK_EuroSign","name":"XK_EuroSign","value":"8364","doc":"U+20AB DONG SIGN","summary":"<p>U+20AB DONG SIGN</p>"},{"id":"XK_exclam","name":"XK_exclam","value":"33","doc":"U+0020 SPACE","summary":"<p>U+0020 SPACE</p>"},{"id":"XK_exclamdown","name":"XK_exclamdown","value":"161","doc":"U+00A0 NO-BREAK SPACE","summary":"<p>U+00A0 NO-BREAK SPACE</p>"},{"id":"XK_Execute","name":"XK_Execute","value":"65378","doc":null,"summary":null},{"id":"XK_ezh","name":"XK_ezh","value":"16777874","doc":"U+01B7 LATIN CAPITAL LETTER EZH","summary":"<p>U+01B7 LATIN CAPITAL LETTER EZH</p>"},{"id":"XK_EZH","name":"XK_EZH","value":"16777655","doc":"U+0259 LATIN SMALL LETTER SCHWA","summary":"<p>U+0259 LATIN SMALL LETTER SCHWA</p>"},{"id":"XK_f","name":"XK_f","value":"102","doc":"U+0065 LATIN SMALL LETTER E","summary":"<p>U+0065 LATIN SMALL LETTER E</p>"},{"id":"XK_F","name":"XK_F","value":"70","doc":"U+0045 LATIN CAPITAL LETTER E","summary":"<p>U+0045 LATIN CAPITAL LETTER E</p>"},{"id":"XK_F1","name":"XK_F1","value":"65470","doc":null,"summary":null},{"id":"XK_F10","name":"XK_F10","value":"65479","doc":null,"summary":null},{"id":"XK_F11","name":"XK_F11","value":"65480","doc":null,"summary":null},{"id":"XK_F12","name":"XK_F12","value":"65481","doc":null,"summary":null},{"id":"XK_F13","name":"XK_F13","value":"65482","doc":null,"summary":null},{"id":"XK_F14","name":"XK_F14","value":"65483","doc":null,"summary":null},{"id":"XK_F15","name":"XK_F15","value":"65484","doc":null,"summary":null},{"id":"XK_F16","name":"XK_F16","value":"65485","doc":null,"summary":null},{"id":"XK_F17","name":"XK_F17","value":"65486","doc":null,"summary":null},{"id":"XK_F18","name":"XK_F18","value":"65487","doc":null,"summary":null},{"id":"XK_F19","name":"XK_F19","value":"65488","doc":null,"summary":null},{"id":"XK_F2","name":"XK_F2","value":"65471","doc":null,"summary":null},{"id":"XK_F20","name":"XK_F20","value":"65489","doc":null,"summary":null},{"id":"XK_F21","name":"XK_F21","value":"65490","doc":null,"summary":null},{"id":"XK_F22","name":"XK_F22","value":"65491","doc":null,"summary":null},{"id":"XK_F23","name":"XK_F23","value":"65492","doc":null,"summary":null},{"id":"XK_F24","name":"XK_F24","value":"65493","doc":null,"summary":null},{"id":"XK_F25","name":"XK_F25","value":"65494","doc":null,"summary":null},{"id":"XK_F26","name":"XK_F26","value":"65495","doc":null,"summary":null},{"id":"XK_F27","name":"XK_F27","value":"65496","doc":null,"summary":null},{"id":"XK_F28","name":"XK_F28","value":"65497","doc":null,"summary":null},{"id":"XK_F29","name":"XK_F29","value":"65498","doc":null,"summary":null},{"id":"XK_F3","name":"XK_F3","value":"65472","doc":null,"summary":null},{"id":"XK_F30","name":"XK_F30","value":"65499","doc":null,"summary":null},{"id":"XK_F31","name":"XK_F31","value":"65500","doc":null,"summary":null},{"id":"XK_F32","name":"XK_F32","value":"65501","doc":null,"summary":null},{"id":"XK_F33","name":"XK_F33","value":"65502","doc":null,"summary":null},{"id":"XK_F34","name":"XK_F34","value":"65503","doc":null,"summary":null},{"id":"XK_F35","name":"XK_F35","value":"65504","doc":null,"summary":null},{"id":"XK_F4","name":"XK_F4","value":"65473","doc":null,"summary":null},{"id":"XK_F5","name":"XK_F5","value":"65474","doc":null,"summary":null},{"id":"XK_F6","name":"XK_F6","value":"65475","doc":null,"summary":null},{"id":"XK_F7","name":"XK_F7","value":"65476","doc":null,"summary":null},{"id":"XK_F8","name":"XK_F8","value":"65477","doc":null,"summary":null},{"id":"XK_F9","name":"XK_F9","value":"65478","doc":null,"summary":null},{"id":"XK_fabovedot","name":"XK_fabovedot","value":"16784927","doc":"U+1E1E LATIN CAPITAL LETTER F WITH DOT ABOVE","summary":"<p>U+1E1E LATIN CAPITAL LETTER F WITH DOT ABOVE</p>"},{"id":"XK_Fabovedot","name":"XK_Fabovedot","value":"16784926","doc":"U+1E0B LATIN SMALL LETTER D WITH DOT ABOVE","summary":"<p>U+1E0B LATIN SMALL LETTER D WITH DOT ABOVE</p>"},{"id":"XK_Farsi_0","name":"XK_Farsi_0","value":"16778992","doc":null,"summary":null},{"id":"XK_Farsi_1","name":"XK_Farsi_1","value":"16778993","doc":"U+06F0 EXTENDED ARABIC-INDIC DIGIT ZERO","summary":"<p>U+06F0 EXTENDED ARABIC-INDIC DIGIT ZERO</p>"},{"id":"XK_Farsi_2","name":"XK_Farsi_2","value":"16778994","doc":"U+06F1 EXTENDED ARABIC-INDIC DIGIT ONE","summary":"<p>U+06F1 EXTENDED ARABIC-INDIC DIGIT ONE</p>"},{"id":"XK_Farsi_3","name":"XK_Farsi_3","value":"16778995","doc":"U+06F2 EXTENDED ARABIC-INDIC DIGIT TWO","summary":"<p>U+06F2 EXTENDED ARABIC-INDIC DIGIT TWO</p>"},{"id":"XK_Farsi_4","name":"XK_Farsi_4","value":"16778996","doc":"U+06F3 EXTENDED ARABIC-INDIC DIGIT THREE","summary":"<p>U+06F3 EXTENDED ARABIC-INDIC DIGIT THREE</p>"},{"id":"XK_Farsi_5","name":"XK_Farsi_5","value":"16778997","doc":"U+06F4 EXTENDED ARABIC-INDIC DIGIT FOUR","summary":"<p>U+06F4 EXTENDED ARABIC-INDIC DIGIT FOUR</p>"},{"id":"XK_Farsi_6","name":"XK_Farsi_6","value":"16778998","doc":"U+06F5 EXTENDED ARABIC-INDIC DIGIT FIVE","summary":"<p>U+06F5 EXTENDED ARABIC-INDIC DIGIT FIVE</p>"},{"id":"XK_Farsi_7","name":"XK_Farsi_7","value":"16778999","doc":"U+06F6 EXTENDED ARABIC-INDIC DIGIT SIX","summary":"<p>U+06F6 EXTENDED ARABIC-INDIC DIGIT SIX</p>"},{"id":"XK_Farsi_8","name":"XK_Farsi_8","value":"16779000","doc":"U+06F7 EXTENDED ARABIC-INDIC DIGIT SEVEN","summary":"<p>U+06F7 EXTENDED ARABIC-INDIC DIGIT SEVEN</p>"},{"id":"XK_Farsi_9","name":"XK_Farsi_9","value":"16779001","doc":"U+06F8 EXTENDED ARABIC-INDIC DIGIT EIGHT","summary":"<p>U+06F8 EXTENDED ARABIC-INDIC DIGIT EIGHT</p>"},{"id":"XK_Farsi_yeh","name":"XK_Farsi_yeh","value":"16778956","doc":"U+06BE ARABIC LETTER HEH DOACHASHMEE","summary":"<p>U+06BE ARABIC LETTER HEH DOACHASHMEE</p>"},{"id":"XK_FFrancSign","name":"XK_FFrancSign","value":"16785571","doc":"U+20A2 CRUZEIRO SIGN","summary":"<p>U+20A2 CRUZEIRO SIGN</p>"},{"id":"XK_Find","name":"XK_Find","value":"65384","doc":null,"summary":null},{"id":"XK_First_Virtual_Screen","name":"XK_First_Virtual_Screen","value":"65232","doc":null,"summary":null},{"id":"XK_fivesubscript","name":"XK_fivesubscript","value":"16785541","doc":"U+2084 SUBSCRIPT FOUR","summary":"<p>U+2084 SUBSCRIPT FOUR</p>"},{"id":"XK_fivesuperior","name":"XK_fivesuperior","value":"16785525","doc":"U+2074 SUPERSCRIPT FOUR","summary":"<p>U+2074 SUPERSCRIPT FOUR</p>"},{"id":"XK_foursubscript","name":"XK_foursubscript","value":"16785540","doc":"U+2083 SUBSCRIPT THREE","summary":"<p>U+2083 SUBSCRIPT THREE</p>"},{"id":"XK_foursuperior","name":"XK_foursuperior","value":"16785524","doc":"U+2070 SUPERSCRIPT ZERO","summary":"<p>U+2070 SUPERSCRIPT ZERO</p>"},{"id":"XK_fourthroot","name":"XK_fourthroot","value":"16785948","doc":"U+221B CUBE ROOT","summary":"<p>U+221B CUBE ROOT</p>"},{"id":"XK_G","name":"XK_G","value":"71","doc":"U+0046 LATIN CAPITAL LETTER F","summary":"<p>U+0046 LATIN CAPITAL LETTER F</p>"},{"id":"XK_g","name":"XK_g","value":"103","doc":"U+0066 LATIN SMALL LETTER F","summary":"<p>U+0066 LATIN SMALL LETTER F</p>"},{"id":"XK_gabovedot","name":"XK_gabovedot","value":"757","doc":"U+0109 LATIN SMALL LETTER C WITH CIRCUMFLEX","summary":"<p>U+0109 LATIN SMALL LETTER C WITH CIRCUMFLEX</p>"},{"id":"XK_Gabovedot","name":"XK_Gabovedot","value":"725","doc":"U+0108 LATIN CAPITAL LETTER C WITH CIRCUMFLEX","summary":"<p>U+0108 LATIN CAPITAL LETTER C WITH CIRCUMFLEX</p>"},{"id":"XK_Gbreve","name":"XK_Gbreve","value":"683","doc":"U+0130 LATIN CAPITAL LETTER I WITH DOT ABOVE","summary":"<p>U+0130 LATIN CAPITAL LETTER I WITH DOT ABOVE</p>"},{"id":"XK_gbreve","name":"XK_gbreve","value":"699","doc":"U+0131 LATIN SMALL LETTER DOTLESS I","summary":"<p>U+0131 LATIN SMALL LETTER DOTLESS I</p>"},{"id":"XK_Gcaron","name":"XK_Gcaron","value":"16777702","doc":"U+01B5 LATIN CAPITAL LETTER Z WITH STROKE","summary":"<p>U+01B5 LATIN CAPITAL LETTER Z WITH STROKE</p>"},{"id":"XK_gcaron","name":"XK_gcaron","value":"16777703","doc":"U+01B6 LATIN SMALL LETTER Z WITH STROKE","summary":"<p>U+01B6 LATIN SMALL LETTER Z WITH STROKE</p>"},{"id":"XK_Gcedilla","name":"XK_Gcedilla","value":"939","doc":"U+0112 LATIN CAPITAL LETTER E WITH MACRON","summary":"<p>U+0112 LATIN CAPITAL LETTER E WITH MACRON</p>"},{"id":"XK_gcedilla","name":"XK_gcedilla","value":"955","doc":"U+0113 LATIN SMALL LETTER E WITH MACRON","summary":"<p>U+0113 LATIN SMALL LETTER E WITH MACRON</p>"},{"id":"XK_gcircumflex","name":"XK_gcircumflex","value":"760","doc":"U+0121 LATIN SMALL LETTER G WITH DOT ABOVE","summary":"<p>U+0121 LATIN SMALL LETTER G WITH DOT ABOVE</p>"},{"id":"XK_Gcircumflex","name":"XK_Gcircumflex","value":"728","doc":"U+0120 LATIN CAPITAL LETTER G WITH DOT ABOVE","summary":"<p>U+0120 LATIN CAPITAL LETTER G WITH DOT ABOVE</p>"},{"id":"XK_GEORGIAN","name":"XK_GEORGIAN","value":"true","doc":null,"summary":null},{"id":"XK_Georgian_an","name":"XK_Georgian_an","value":"16781520","doc":null,"summary":null},{"id":"XK_Georgian_ban","name":"XK_Georgian_ban","value":"16781521","doc":"U+10D0 GEORGIAN LETTER AN","summary":"<p>U+10D0 GEORGIAN LETTER AN</p>"},{"id":"XK_Georgian_can","name":"XK_Georgian_can","value":"16781546","doc":"U+10E9 GEORGIAN LETTER CHIN","summary":"<p>U+10E9 GEORGIAN LETTER CHIN</p>"},{"id":"XK_Georgian_char","name":"XK_Georgian_char","value":"16781549","doc":"U+10EC GEORGIAN LETTER CIL","summary":"<p>U+10EC GEORGIAN LETTER CIL</p>"},{"id":"XK_Georgian_chin","name":"XK_Georgian_chin","value":"16781545","doc":"U+10E8 GEORGIAN LETTER SHIN","summary":"<p>U+10E8 GEORGIAN LETTER SHIN</p>"},{"id":"XK_Georgian_cil","name":"XK_Georgian_cil","value":"16781548","doc":"U+10EB GEORGIAN LETTER JIL","summary":"<p>U+10EB GEORGIAN LETTER JIL</p>"},{"id":"XK_Georgian_don","name":"XK_Georgian_don","value":"16781523","doc":"U+10D2 GEORGIAN LETTER GAN","summary":"<p>U+10D2 GEORGIAN LETTER GAN</p>"},{"id":"XK_Georgian_en","name":"XK_Georgian_en","value":"16781524","doc":"U+10D3 GEORGIAN LETTER DON","summary":"<p>U+10D3 GEORGIAN LETTER DON</p>"},{"id":"XK_Georgian_fi","name":"XK_Georgian_fi","value":"16781558","doc":"U+10F5 GEORGIAN LETTER HOE","summary":"<p>U+10F5 GEORGIAN LETTER HOE</p>"},{"id":"XK_Georgian_gan","name":"XK_Georgian_gan","value":"16781522","doc":"U+10D1 GEORGIAN LETTER BAN","summary":"<p>U+10D1 GEORGIAN LETTER BAN</p>"},{"id":"XK_Georgian_ghan","name":"XK_Georgian_ghan","value":"16781542","doc":"U+10E5 GEORGIAN LETTER KHAR","summary":"<p>U+10E5 GEORGIAN LETTER KHAR</p>"},{"id":"XK_Georgian_hae","name":"XK_Georgian_hae","value":"16781552","doc":"U+10EF GEORGIAN LETTER JHAN","summary":"<p>U+10EF GEORGIAN LETTER JHAN</p>"},{"id":"XK_Georgian_har","name":"XK_Georgian_har","value":"16781556","doc":"U+10F3 GEORGIAN LETTER WE","summary":"<p>U+10F3 GEORGIAN LETTER WE</p>"},{"id":"XK_Georgian_he","name":"XK_Georgian_he","value":"16781553","doc":"U+10F0 GEORGIAN LETTER HAE","summary":"<p>U+10F0 GEORGIAN LETTER HAE</p>"},{"id":"XK_Georgian_hie","name":"XK_Georgian_hie","value":"16781554","doc":"U+10F1 GEORGIAN LETTER HE","summary":"<p>U+10F1 GEORGIAN LETTER HE</p>"},{"id":"XK_Georgian_hoe","name":"XK_Georgian_hoe","value":"16781557","doc":"U+10F4 GEORGIAN LETTER HAR","summary":"<p>U+10F4 GEORGIAN LETTER HAR</p>"},{"id":"XK_Georgian_in","name":"XK_Georgian_in","value":"16781528","doc":"U+10D7 GEORGIAN LETTER TAN","summary":"<p>U+10D7 GEORGIAN LETTER TAN</p>"},{"id":"XK_Georgian_jhan","name":"XK_Georgian_jhan","value":"16781551","doc":"U+10EE GEORGIAN LETTER XAN","summary":"<p>U+10EE GEORGIAN LETTER XAN</p>"},{"id":"XK_Georgian_jil","name":"XK_Georgian_jil","value":"16781547","doc":"U+10EA GEORGIAN LETTER CAN","summary":"<p>U+10EA GEORGIAN LETTER CAN</p>"},{"id":"XK_Georgian_kan","name":"XK_Georgian_kan","value":"16781529","doc":"U+10D8 GEORGIAN LETTER IN","summary":"<p>U+10D8 GEORGIAN LETTER IN</p>"},{"id":"XK_Georgian_khar","name":"XK_Georgian_khar","value":"16781541","doc":"U+10E4 GEORGIAN LETTER PHAR","summary":"<p>U+10E4 GEORGIAN LETTER PHAR</p>"},{"id":"XK_Georgian_las","name":"XK_Georgian_las","value":"16781530","doc":"U+10D9 GEORGIAN LETTER KAN","summary":"<p>U+10D9 GEORGIAN LETTER KAN</p>"},{"id":"XK_Georgian_man","name":"XK_Georgian_man","value":"16781531","doc":"U+10DA GEORGIAN LETTER LAS","summary":"<p>U+10DA GEORGIAN LETTER LAS</p>"},{"id":"XK_Georgian_nar","name":"XK_Georgian_nar","value":"16781532","doc":"U+10DB GEORGIAN LETTER MAN","summary":"<p>U+10DB GEORGIAN LETTER MAN</p>"},{"id":"XK_Georgian_on","name":"XK_Georgian_on","value":"16781533","doc":"U+10DC GEORGIAN LETTER NAR","summary":"<p>U+10DC GEORGIAN LETTER NAR</p>"},{"id":"XK_Georgian_par","name":"XK_Georgian_par","value":"16781534","doc":"U+10DD GEORGIAN LETTER ON","summary":"<p>U+10DD GEORGIAN LETTER ON</p>"},{"id":"XK_Georgian_phar","name":"XK_Georgian_phar","value":"16781540","doc":"U+10E3 GEORGIAN LETTER UN","summary":"<p>U+10E3 GEORGIAN LETTER UN</p>"},{"id":"XK_Georgian_qar","name":"XK_Georgian_qar","value":"16781543","doc":"U+10E6 GEORGIAN LETTER GHAN","summary":"<p>U+10E6 GEORGIAN LETTER GHAN</p>"},{"id":"XK_Georgian_rae","name":"XK_Georgian_rae","value":"16781536","doc":"U+10DF GEORGIAN LETTER ZHAR","summary":"<p>U+10DF GEORGIAN LETTER ZHAR</p>"},{"id":"XK_Georgian_san","name":"XK_Georgian_san","value":"16781537","doc":"U+10E0 GEORGIAN LETTER RAE","summary":"<p>U+10E0 GEORGIAN LETTER RAE</p>"},{"id":"XK_Georgian_shin","name":"XK_Georgian_shin","value":"16781544","doc":"U+10E7 GEORGIAN LETTER QAR","summary":"<p>U+10E7 GEORGIAN LETTER QAR</p>"},{"id":"XK_Georgian_tan","name":"XK_Georgian_tan","value":"16781527","doc":"U+10D6 GEORGIAN LETTER ZEN","summary":"<p>U+10D6 GEORGIAN LETTER ZEN</p>"},{"id":"XK_Georgian_tar","name":"XK_Georgian_tar","value":"16781538","doc":"U+10E1 GEORGIAN LETTER SAN","summary":"<p>U+10E1 GEORGIAN LETTER SAN</p>"},{"id":"XK_Georgian_un","name":"XK_Georgian_un","value":"16781539","doc":"U+10E2 GEORGIAN LETTER TAR","summary":"<p>U+10E2 GEORGIAN LETTER TAR</p>"},{"id":"XK_Georgian_vin","name":"XK_Georgian_vin","value":"16781525","doc":"U+10D4 GEORGIAN LETTER EN","summary":"<p>U+10D4 GEORGIAN LETTER EN</p>"},{"id":"XK_Georgian_we","name":"XK_Georgian_we","value":"16781555","doc":"U+10F2 GEORGIAN LETTER HIE","summary":"<p>U+10F2 GEORGIAN LETTER HIE</p>"},{"id":"XK_Georgian_xan","name":"XK_Georgian_xan","value":"16781550","doc":"U+10ED GEORGIAN LETTER CHAR","summary":"<p>U+10ED GEORGIAN LETTER CHAR</p>"},{"id":"XK_Georgian_zen","name":"XK_Georgian_zen","value":"16781526","doc":"U+10D5 GEORGIAN LETTER VIN","summary":"<p>U+10D5 GEORGIAN LETTER VIN</p>"},{"id":"XK_Georgian_zhar","name":"XK_Georgian_zhar","value":"16781535","doc":"U+10DE GEORGIAN LETTER PAR","summary":"<p>U+10DE GEORGIAN LETTER PAR</p>"},{"id":"XK_grave","name":"XK_grave","value":"96","doc":"U+005F LOW LINE","summary":"<p>U+005F LOW LINE</p>"},{"id":"XK_greater","name":"XK_greater","value":"62","doc":"U+003D EQUALS SIGN","summary":"<p>U+003D EQUALS SIGN</p>"},{"id":"XK_GREEK","name":"XK_GREEK","value":"true","doc":null,"summary":null},{"id":"XK_Greek_accentdieresis","name":"XK_Greek_accentdieresis","value":"1966","doc":"U+038F GREEK CAPITAL LETTER OMEGA WITH TONOS","summary":"<p>U+038F GREEK CAPITAL LETTER OMEGA WITH TONOS</p>"},{"id":"XK_Greek_ALPHA","name":"XK_Greek_ALPHA","value":"1985","doc":"U+03CE GREEK SMALL LETTER OMEGA WITH TONOS","summary":"<p>U+03CE GREEK SMALL LETTER OMEGA WITH TONOS</p>"},{"id":"XK_Greek_alpha","name":"XK_Greek_alpha","value":"2017","doc":"U+03A9 GREEK CAPITAL LETTER OMEGA","summary":"<p>U+03A9 GREEK CAPITAL LETTER OMEGA</p>"},{"id":"XK_Greek_alphaaccent","name":"XK_Greek_alphaaccent","value":"1969","doc":"U+2015 HORIZONTAL BAR","summary":"<p>U+2015 HORIZONTAL BAR</p>"},{"id":"XK_Greek_ALPHAaccent","name":"XK_Greek_ALPHAaccent","value":"1953","doc":null,"summary":null},{"id":"XK_Greek_BETA","name":"XK_Greek_BETA","value":"1986","doc":"U+0391 GREEK CAPITAL LETTER ALPHA","summary":"<p>U+0391 GREEK CAPITAL LETTER ALPHA</p>"},{"id":"XK_Greek_beta","name":"XK_Greek_beta","value":"2018","doc":"U+03B1 GREEK SMALL LETTER ALPHA","summary":"<p>U+03B1 GREEK SMALL LETTER ALPHA</p>"},{"id":"XK_Greek_CHI","name":"XK_Greek_CHI","value":"2007","doc":"U+03A6 GREEK CAPITAL LETTER PHI","summary":"<p>U+03A6 GREEK CAPITAL LETTER PHI</p>"},{"id":"XK_Greek_chi","name":"XK_Greek_chi","value":"2039","doc":"U+03C6 GREEK SMALL LETTER PHI","summary":"<p>U+03C6 GREEK SMALL LETTER PHI</p>"},{"id":"XK_Greek_delta","name":"XK_Greek_delta","value":"2020","doc":"U+03B3 GREEK SMALL LETTER GAMMA","summary":"<p>U+03B3 GREEK SMALL LETTER GAMMA</p>"},{"id":"XK_Greek_DELTA","name":"XK_Greek_DELTA","value":"1988","doc":"U+0393 GREEK CAPITAL LETTER GAMMA","summary":"<p>U+0393 GREEK CAPITAL LETTER GAMMA</p>"},{"id":"XK_Greek_epsilon","name":"XK_Greek_epsilon","value":"2021","doc":"U+03B4 GREEK SMALL LETTER DELTA","summary":"<p>U+03B4 GREEK SMALL LETTER DELTA</p>"},{"id":"XK_Greek_EPSILON","name":"XK_Greek_EPSILON","value":"1989","doc":"U+0394 GREEK CAPITAL LETTER DELTA","summary":"<p>U+0394 GREEK CAPITAL LETTER DELTA</p>"},{"id":"XK_Greek_epsilonaccent","name":"XK_Greek_epsilonaccent","value":"1970","doc":"U+03AC GREEK SMALL LETTER ALPHA WITH TONOS","summary":"<p>U+03AC GREEK SMALL LETTER ALPHA WITH TONOS</p>"},{"id":"XK_Greek_EPSILONaccent","name":"XK_Greek_EPSILONaccent","value":"1954","doc":"U+0386 GREEK CAPITAL LETTER ALPHA WITH TONOS","summary":"<p>U+0386 GREEK CAPITAL LETTER ALPHA WITH TONOS</p>"},{"id":"XK_Greek_eta","name":"XK_Greek_eta","value":"2023","doc":"U+03B6 GREEK SMALL LETTER ZETA","summary":"<p>U+03B6 GREEK SMALL LETTER ZETA</p>"},{"id":"XK_Greek_ETA","name":"XK_Greek_ETA","value":"1991","doc":"U+0396 GREEK CAPITAL LETTER ZETA","summary":"<p>U+0396 GREEK CAPITAL LETTER ZETA</p>"},{"id":"XK_Greek_etaaccent","name":"XK_Greek_etaaccent","value":"1971","doc":"U+03AD GREEK SMALL LETTER EPSILON WITH TONOS","summary":"<p>U+03AD GREEK SMALL LETTER EPSILON WITH TONOS</p>"},{"id":"XK_Greek_ETAaccent","name":"XK_Greek_ETAaccent","value":"1955","doc":"U+0388 GREEK CAPITAL LETTER EPSILON WITH TONOS","summary":"<p>U+0388 GREEK CAPITAL LETTER EPSILON WITH TONOS</p>"},{"id":"XK_Greek_finalsmallsigma","name":"XK_Greek_finalsmallsigma","value":"2035","doc":"U+03C3 GREEK SMALL LETTER SIGMA","summary":"<p>U+03C3 GREEK SMALL LETTER SIGMA</p>"},{"id":"XK_Greek_GAMMA","name":"XK_Greek_GAMMA","value":"1987","doc":"U+0392 GREEK CAPITAL LETTER BETA","summary":"<p>U+0392 GREEK CAPITAL LETTER BETA</p>"},{"id":"XK_Greek_gamma","name":"XK_Greek_gamma","value":"2019","doc":"U+03B2 GREEK SMALL LETTER BETA","summary":"<p>U+03B2 GREEK SMALL LETTER BETA</p>"},{"id":"XK_Greek_horizbar","name":"XK_Greek_horizbar","value":"1967","doc":"U+0385 GREEK DIALYTIKA TONOS","summary":"<p>U+0385 GREEK DIALYTIKA TONOS</p>"},{"id":"XK_Greek_iota","name":"XK_Greek_iota","value":"2025","doc":"U+03B8 GREEK SMALL LETTER THETA","summary":"<p>U+03B8 GREEK SMALL LETTER THETA</p>"},{"id":"XK_Greek_IOTA","name":"XK_Greek_IOTA","value":"1993","doc":"U+0398 GREEK CAPITAL LETTER THETA","summary":"<p>U+0398 GREEK CAPITAL LETTER THETA</p>"},{"id":"XK_Greek_IOTAaccent","name":"XK_Greek_IOTAaccent","value":"1956","doc":"U+0389 GREEK CAPITAL LETTER ETA WITH TONOS","summary":"<p>U+0389 GREEK CAPITAL LETTER ETA WITH TONOS</p>"},{"id":"XK_Greek_iotaaccent","name":"XK_Greek_iotaaccent","value":"1972","doc":"U+03AE GREEK SMALL LETTER ETA WITH TONOS","summary":"<p>U+03AE GREEK SMALL LETTER ETA WITH TONOS</p>"},{"id":"XK_Greek_iotaaccentdieresis","name":"XK_Greek_iotaaccentdieresis","value":"1974","doc":"U+03CA GREEK SMALL LETTER IOTA WITH DIALYTIKA","summary":"<p>U+03CA GREEK SMALL LETTER IOTA WITH DIALYTIKA</p>"},{"id":"XK_Greek_IOTAdiaeresis","name":"XK_Greek_IOTAdiaeresis","value":"1957","doc":"U+03AA GREEK CAPITAL LETTER IOTA WITH DIALYTIKA","summary":"<p>U+03AA GREEK CAPITAL LETTER IOTA WITH DIALYTIKA</p>"},{"id":"XK_Greek_IOTAdieresis","name":"XK_Greek_IOTAdieresis","value":"1957","doc":"U+038A GREEK CAPITAL LETTER IOTA WITH TONOS","summary":"<p>U+038A GREEK CAPITAL LETTER IOTA WITH TONOS</p>"},{"id":"XK_Greek_iotadieresis","name":"XK_Greek_iotadieresis","value":"1973","doc":"U+03AF GREEK SMALL LETTER IOTA WITH TONOS","summary":"<p>U+03AF GREEK SMALL LETTER IOTA WITH TONOS</p>"},{"id":"XK_Greek_kappa","name":"XK_Greek_kappa","value":"2026","doc":"U+03B9 GREEK SMALL LETTER IOTA","summary":"<p>U+03B9 GREEK SMALL LETTER IOTA</p>"},{"id":"XK_Greek_KAPPA","name":"XK_Greek_KAPPA","value":"1994","doc":"U+0399 GREEK CAPITAL LETTER IOTA","summary":"<p>U+0399 GREEK CAPITAL LETTER IOTA</p>"},{"id":"XK_Greek_LAMBDA","name":"XK_Greek_LAMBDA","value":"1995","doc":"U+039B GREEK CAPITAL LETTER LAMDA","summary":"<p>U+039B GREEK CAPITAL LETTER LAMDA</p>"},{"id":"XK_Greek_lambda","name":"XK_Greek_lambda","value":"2027","doc":"U+03BB GREEK SMALL LETTER LAMDA","summary":"<p>U+03BB GREEK SMALL LETTER LAMDA</p>"},{"id":"XK_Greek_LAMDA","name":"XK_Greek_LAMDA","value":"1995","doc":"U+039A GREEK CAPITAL LETTER KAPPA","summary":"<p>U+039A GREEK CAPITAL LETTER KAPPA</p>"},{"id":"XK_Greek_lamda","name":"XK_Greek_lamda","value":"2027","doc":"U+03BA GREEK SMALL LETTER KAPPA","summary":"<p>U+03BA GREEK SMALL LETTER KAPPA</p>"},{"id":"XK_Greek_mu","name":"XK_Greek_mu","value":"2028","doc":"U+03BB GREEK SMALL LETTER LAMDA","summary":"<p>U+03BB GREEK SMALL LETTER LAMDA</p>"},{"id":"XK_Greek_MU","name":"XK_Greek_MU","value":"1996","doc":"U+039B GREEK CAPITAL LETTER LAMDA","summary":"<p>U+039B GREEK CAPITAL LETTER LAMDA</p>"},{"id":"XK_Greek_nu","name":"XK_Greek_nu","value":"2029","doc":"U+03BC GREEK SMALL LETTER MU","summary":"<p>U+03BC GREEK SMALL LETTER MU</p>"},{"id":"XK_Greek_NU","name":"XK_Greek_NU","value":"1997","doc":"U+039C GREEK CAPITAL LETTER MU","summary":"<p>U+039C GREEK CAPITAL LETTER MU</p>"},{"id":"XK_Greek_OMEGA","name":"XK_Greek_OMEGA","value":"2009","doc":"U+03A8 GREEK CAPITAL LETTER PSI","summary":"<p>U+03A8 GREEK CAPITAL LETTER PSI</p>"},{"id":"XK_Greek_omega","name":"XK_Greek_omega","value":"2041","doc":"U+03C8 GREEK SMALL LETTER PSI","summary":"<p>U+03C8 GREEK SMALL LETTER PSI</p>"},{"id":"XK_Greek_omegaaccent","name":"XK_Greek_omegaaccent","value":"1979","doc":"U+03B0 GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS","summary":"<p>U+03B0 GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS</p>"},{"id":"XK_Greek_OMEGAaccent","name":"XK_Greek_OMEGAaccent","value":"1963","doc":"U+03AB GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA","summary":"<p>U+03AB GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA</p>"},{"id":"XK_Greek_OMICRON","name":"XK_Greek_OMICRON","value":"1999","doc":"U+039E GREEK CAPITAL LETTER XI","summary":"<p>U+039E GREEK CAPITAL LETTER XI</p>"},{"id":"XK_Greek_omicron","name":"XK_Greek_omicron","value":"2031","doc":"U+03BE GREEK SMALL LETTER XI","summary":"<p>U+03BE GREEK SMALL LETTER XI</p>"},{"id":"XK_Greek_omicronaccent","name":"XK_Greek_omicronaccent","value":"1975","doc":"U+0390 GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS","summary":"<p>U+0390 GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS</p>"},{"id":"XK_Greek_OMICRONaccent","name":"XK_Greek_OMICRONaccent","value":"1959","doc":"old typo","summary":"<p>old typo</p>"},{"id":"XK_Greek_PHI","name":"XK_Greek_PHI","value":"2006","doc":"U+03A5 GREEK CAPITAL LETTER UPSILON","summary":"<p>U+03A5 GREEK CAPITAL LETTER UPSILON</p>"},{"id":"XK_Greek_phi","name":"XK_Greek_phi","value":"2038","doc":"U+03C5 GREEK SMALL LETTER UPSILON","summary":"<p>U+03C5 GREEK SMALL LETTER UPSILON</p>"},{"id":"XK_Greek_pi","name":"XK_Greek_pi","value":"2032","doc":"U+03BF GREEK SMALL LETTER OMICRON","summary":"<p>U+03BF GREEK SMALL LETTER OMICRON</p>"},{"id":"XK_Greek_PI","name":"XK_Greek_PI","value":"2000","doc":"U+039F GREEK CAPITAL LETTER OMICRON","summary":"<p>U+039F GREEK CAPITAL LETTER OMICRON</p>"},{"id":"XK_Greek_psi","name":"XK_Greek_psi","value":"2040","doc":"U+03C7 GREEK SMALL LETTER CHI","summary":"<p>U+03C7 GREEK SMALL LETTER CHI</p>"},{"id":"XK_Greek_PSI","name":"XK_Greek_PSI","value":"2008","doc":"U+03A7 GREEK CAPITAL LETTER CHI","summary":"<p>U+03A7 GREEK CAPITAL LETTER CHI</p>"},{"id":"XK_Greek_rho","name":"XK_Greek_rho","value":"2033","doc":"U+03C0 GREEK SMALL LETTER PI","summary":"<p>U+03C0 GREEK SMALL LETTER PI</p>"},{"id":"XK_Greek_RHO","name":"XK_Greek_RHO","value":"2001","doc":"U+03A0 GREEK CAPITAL LETTER PI","summary":"<p>U+03A0 GREEK CAPITAL LETTER PI</p>"},{"id":"XK_Greek_SIGMA","name":"XK_Greek_SIGMA","value":"2002","doc":"U+03A1 GREEK CAPITAL LETTER RHO","summary":"<p>U+03A1 GREEK CAPITAL LETTER RHO</p>"},{"id":"XK_Greek_sigma","name":"XK_Greek_sigma","value":"2034","doc":"U+03C1 GREEK SMALL LETTER RHO","summary":"<p>U+03C1 GREEK SMALL LETTER RHO</p>"},{"id":"XK_Greek_switch","name":"XK_Greek_switch","value":"65406","doc":"U+03C9 GREEK SMALL LETTER OMEGA","summary":"<p>U+03C9 GREEK SMALL LETTER OMEGA</p>"},{"id":"XK_Greek_tau","name":"XK_Greek_tau","value":"2036","doc":"U+03C2 GREEK SMALL LETTER FINAL SIGMA","summary":"<p>U+03C2 GREEK SMALL LETTER FINAL SIGMA</p>"},{"id":"XK_Greek_TAU","name":"XK_Greek_TAU","value":"2004","doc":"U+03A3 GREEK CAPITAL LETTER SIGMA","summary":"<p>U+03A3 GREEK CAPITAL LETTER SIGMA</p>"},{"id":"XK_Greek_THETA","name":"XK_Greek_THETA","value":"1992","doc":"U+0397 GREEK CAPITAL LETTER ETA","summary":"<p>U+0397 GREEK CAPITAL LETTER ETA</p>"},{"id":"XK_Greek_theta","name":"XK_Greek_theta","value":"2024","doc":"U+03B7 GREEK SMALL LETTER ETA","summary":"<p>U+03B7 GREEK SMALL LETTER ETA</p>"},{"id":"XK_Greek_UPSILON","name":"XK_Greek_UPSILON","value":"2005","doc":"U+03A4 GREEK CAPITAL LETTER TAU","summary":"<p>U+03A4 GREEK CAPITAL LETTER TAU</p>"},{"id":"XK_Greek_upsilon","name":"XK_Greek_upsilon","value":"2037","doc":"U+03C4 GREEK SMALL LETTER TAU","summary":"<p>U+03C4 GREEK SMALL LETTER TAU</p>"},{"id":"XK_Greek_UPSILONaccent","name":"XK_Greek_UPSILONaccent","value":"1960","doc":"U+038C GREEK CAPITAL LETTER OMICRON WITH TONOS","summary":"<p>U+038C GREEK CAPITAL LETTER OMICRON WITH TONOS</p>"},{"id":"XK_Greek_upsilonaccent","name":"XK_Greek_upsilonaccent","value":"1976","doc":"U+03CC GREEK SMALL LETTER OMICRON WITH TONOS","summary":"<p>U+03CC GREEK SMALL LETTER OMICRON WITH TONOS</p>"},{"id":"XK_Greek_upsilonaccentdieresis","name":"XK_Greek_upsilonaccentdieresis","value":"1978","doc":"U+03CB GREEK SMALL LETTER UPSILON WITH DIALYTIKA","summary":"<p>U+03CB GREEK SMALL LETTER UPSILON WITH DIALYTIKA</p>"},{"id":"XK_Greek_upsilondieresis","name":"XK_Greek_upsilondieresis","value":"1977","doc":"U+03CD GREEK SMALL LETTER UPSILON WITH TONOS","summary":"<p>U+03CD GREEK SMALL LETTER UPSILON WITH TONOS</p>"},{"id":"XK_Greek_UPSILONdieresis","name":"XK_Greek_UPSILONdieresis","value":"1961","doc":"U+038E GREEK CAPITAL LETTER UPSILON WITH TONOS","summary":"<p>U+038E GREEK CAPITAL LETTER UPSILON WITH TONOS</p>"},{"id":"XK_Greek_xi","name":"XK_Greek_xi","value":"2030","doc":"U+03BD GREEK SMALL LETTER NU","summary":"<p>U+03BD GREEK SMALL LETTER NU</p>"},{"id":"XK_Greek_XI","name":"XK_Greek_XI","value":"1998","doc":"U+039D GREEK CAPITAL LETTER NU","summary":"<p>U+039D GREEK CAPITAL LETTER NU</p>"},{"id":"XK_Greek_zeta","name":"XK_Greek_zeta","value":"2022","doc":"U+03B5 GREEK SMALL LETTER EPSILON","summary":"<p>U+03B5 GREEK SMALL LETTER EPSILON</p>"},{"id":"XK_Greek_ZETA","name":"XK_Greek_ZETA","value":"1990","doc":"U+0395 GREEK CAPITAL LETTER EPSILON","summary":"<p>U+0395 GREEK CAPITAL LETTER EPSILON</p>"},{"id":"XK_guillemotleft","name":"XK_guillemotleft","value":"171","doc":"U+00AA FEMININE ORDINAL INDICATOR","summary":"<p>U+00AA FEMININE ORDINAL INDICATOR</p>"},{"id":"XK_guillemotright","name":"XK_guillemotright","value":"187","doc":"U+00BA MASCULINE ORDINAL INDICATOR","summary":"<p>U+00BA MASCULINE ORDINAL INDICATOR</p>"},{"id":"XK_h","name":"XK_h","value":"104","doc":"U+0067 LATIN SMALL LETTER G","summary":"<p>U+0067 LATIN SMALL LETTER G</p>"},{"id":"XK_H","name":"XK_H","value":"72","doc":"U+0047 LATIN CAPITAL LETTER G","summary":"<p>U+0047 LATIN CAPITAL LETTER G</p>"},{"id":"XK_Hangul","name":"XK_Hangul","value":"65329","doc":null,"summary":null},{"id":"XK_Hangul_A","name":"XK_Hangul_A","value":"3775","doc":"Hangul Vowel Characters","summary":"<p>Hangul Vowel Characters</p>"},{"id":"XK_Hangul_AE","name":"XK_Hangul_AE","value":"3776","doc":null,"summary":null},{"id":"XK_Hangul_AraeA","name":"XK_Hangul_AraeA","value":"3830","doc":"Ancient Hangul Vowel Characters","summary":"<p>Ancient Hangul Vowel Characters</p>"},{"id":"XK_Hangul_AraeAE","name":"XK_Hangul_AraeAE","value":"3831","doc":null,"summary":null},{"id":"XK_Hangul_Banja","name":"XK_Hangul_Banja","value":"65337","doc":"Jeonja mode","summary":"<p>Jeonja mode</p>"},{"id":"XK_Hangul_Cieuc","name":"XK_Hangul_Cieuc","value":"3770","doc":null,"summary":null},{"id":"XK_Hangul_Codeinput","name":"XK_Hangul_Codeinput","value":"65335","doc":"Hangul Romaja mode","summary":"<p>Hangul Romaja mode</p>"},{"id":"XK_Hangul_Dikeud","name":"XK_Hangul_Dikeud","value":"3751","doc":null,"summary":null},{"id":"XK_Hangul_E","name":"XK_Hangul_E","value":"3780","doc":null,"summary":null},{"id":"XK_Hangul_End","name":"XK_Hangul_End","value":"65331","doc":"Hangul start","summary":"<p>Hangul start</p>"},{"id":"XK_Hangul_EO","name":"XK_Hangul_EO","value":"3779","doc":null,"summary":null},{"id":"XK_Hangul_EU","name":"XK_Hangul_EU","value":"3793","doc":null,"summary":null},{"id":"XK_Hangul_Hanja","name":"XK_Hangul_Hanja","value":"65332","doc":"Hangul end, English start","summary":"<p>Hangul end, English start</p>"},{"id":"XK_Hangul_Hieuh","name":"XK_Hangul_Hieuh","value":"3774","doc":null,"summary":null},{"id":"XK_Hangul_I","name":"XK_Hangul_I","value":"3795","doc":null,"summary":null},{"id":"XK_Hangul_Ieung","name":"XK_Hangul_Ieung","value":"3767","doc":null,"summary":null},{"id":"XK_Hangul_J_Cieuc","name":"XK_Hangul_J_Cieuc","value":"3818","doc":null,"summary":null},{"id":"XK_Hangul_J_Dikeud","name":"XK_Hangul_J_Dikeud","value":"3802","doc":null,"summary":null},{"id":"XK_Hangul_J_Hieuh","name":"XK_Hangul_J_Hieuh","value":"3822","doc":null,"summary":null},{"id":"XK_Hangul_J_Ieung","name":"XK_Hangul_J_Ieung","value":"3816","doc":null,"summary":null},{"id":"XK_Hangul_J_Jieuj","name":"XK_Hangul_J_Jieuj","value":"3817","doc":null,"summary":null},{"id":"XK_Hangul_J_Khieuq","name":"XK_Hangul_J_Khieuq","value":"3819","doc":null,"summary":null},{"id":"XK_Hangul_J_Kiyeog","name":"XK_Hangul_J_Kiyeog","value":"3796","doc":"Hangul syllable-final (JongSeong) Characters","summary":"<p>Hangul syllable-final (JongSeong) Characters</p>"},{"id":"XK_Hangul_J_KiyeogSios","name":"XK_Hangul_J_KiyeogSios","value":"3798","doc":null,"summary":null},{"id":"XK_Hangul_J_KkogjiDalrinIeung","name":"XK_Hangul_J_KkogjiDalrinIeung","value":"3833","doc":null,"summary":null},{"id":"XK_Hangul_J_Mieum","name":"XK_Hangul_J_Mieum","value":"3811","doc":null,"summary":null},{"id":"XK_Hangul_J_Nieun","name":"XK_Hangul_J_Nieun","value":"3799","doc":null,"summary":null},{"id":"XK_Hangul_J_NieunHieuh","name":"XK_Hangul_J_NieunHieuh","value":"3801","doc":null,"summary":null},{"id":"XK_Hangul_J_NieunJieuj","name":"XK_Hangul_J_NieunJieuj","value":"3800","doc":null,"summary":null},{"id":"XK_Hangul_J_PanSios","name":"XK_Hangul_J_PanSios","value":"3832","doc":"Ancient Hangul syllable-final (JongSeong) Characters","summary":"<p>Ancient Hangul syllable-final (JongSeong) Characters</p>"},{"id":"XK_Hangul_J_Phieuf","name":"XK_Hangul_J_Phieuf","value":"3821","doc":null,"summary":null},{"id":"XK_Hangul_J_Pieub","name":"XK_Hangul_J_Pieub","value":"3812","doc":null,"summary":null},{"id":"XK_Hangul_J_PieubSios","name":"XK_Hangul_J_PieubSios","value":"3813","doc":null,"summary":null},{"id":"XK_Hangul_J_Rieul","name":"XK_Hangul_J_Rieul","value":"3803","doc":null,"summary":null},{"id":"XK_Hangul_J_RieulHieuh","name":"XK_Hangul_J_RieulHieuh","value":"3810","doc":null,"summary":null},{"id":"XK_Hangul_J_RieulKiyeog","name":"XK_Hangul_J_RieulKiyeog","value":"3804","doc":null,"summary":null},{"id":"XK_Hangul_J_RieulMieum","name":"XK_Hangul_J_RieulMieum","value":"3805","doc":null,"summary":null},{"id":"XK_Hangul_J_RieulPhieuf","name":"XK_Hangul_J_RieulPhieuf","value":"3809","doc":null,"summary":null},{"id":"XK_Hangul_J_RieulPieub","name":"XK_Hangul_J_RieulPieub","value":"3806","doc":null,"summary":null},{"id":"XK_Hangul_J_RieulSios","name":"XK_Hangul_J_RieulSios","value":"3807","doc":null,"summary":null},{"id":"XK_Hangul_J_RieulTieut","name":"XK_Hangul_J_RieulTieut","value":"3808","doc":null,"summary":null},{"id":"XK_Hangul_J_Sios","name":"XK_Hangul_J_Sios","value":"3814","doc":null,"summary":null},{"id":"XK_Hangul_J_SsangKiyeog","name":"XK_Hangul_J_SsangKiyeog","value":"3797","doc":null,"summary":null},{"id":"XK_Hangul_J_SsangSios","name":"XK_Hangul_J_SsangSios","value":"3815","doc":null,"summary":null},{"id":"XK_Hangul_J_Tieut","name":"XK_Hangul_J_Tieut","value":"3820","doc":null,"summary":null},{"id":"XK_Hangul_J_YeorinHieuh","name":"XK_Hangul_J_YeorinHieuh","value":"3834","doc":null,"summary":null},{"id":"XK_Hangul_Jamo","name":"XK_Hangul_Jamo","value":"65333","doc":"Start Hangul->Hanja Conversion","summary":"<p>Start Hangul->Hanja Conversion</p>"},{"id":"XK_Hangul_Jeonja","name":"XK_Hangul_Jeonja","value":"65336","doc":"Hangul code input mode","summary":"<p>Hangul code input mode</p>"},{"id":"XK_Hangul_Jieuj","name":"XK_Hangul_Jieuj","value":"3768","doc":null,"summary":null},{"id":"XK_Hangul_Khieuq","name":"XK_Hangul_Khieuq","value":"3771","doc":null,"summary":null},{"id":"XK_Hangul_Kiyeog","name":"XK_Hangul_Kiyeog","value":"3745","doc":"Hangul Consonant Characters","summary":"<p>Hangul Consonant Characters</p>"},{"id":"XK_Hangul_KiyeogSios","name":"XK_Hangul_KiyeogSios","value":"3747","doc":null,"summary":null},{"id":"XK_Hangul_KkogjiDalrinIeung","name":"XK_Hangul_KkogjiDalrinIeung","value":"3827","doc":null,"summary":null},{"id":"XK_Hangul_Mieum","name":"XK_Hangul_Mieum","value":"3761","doc":null,"summary":null},{"id":"XK_Hangul_MultipleCandidate","name":"XK_Hangul_MultipleCandidate","value":"65341","doc":"Single candidate","summary":"<p>Single candidate</p>"},{"id":"XK_Hangul_Nieun","name":"XK_Hangul_Nieun","value":"3748","doc":null,"summary":null},{"id":"XK_Hangul_NieunHieuh","name":"XK_Hangul_NieunHieuh","value":"3750","doc":null,"summary":null},{"id":"XK_Hangul_NieunJieuj","name":"XK_Hangul_NieunJieuj","value":"3749","doc":null,"summary":null},{"id":"XK_Hangul_O","name":"XK_Hangul_O","value":"3783","doc":null,"summary":null},{"id":"XK_Hangul_OE","name":"XK_Hangul_OE","value":"3786","doc":null,"summary":null},{"id":"XK_Hangul_PanSios","name":"XK_Hangul_PanSios","value":"3826","doc":null,"summary":null},{"id":"XK_Hangul_Phieuf","name":"XK_Hangul_Phieuf","value":"3773","doc":null,"summary":null},{"id":"XK_Hangul_Pieub","name":"XK_Hangul_Pieub","value":"3762","doc":null,"summary":null},{"id":"XK_Hangul_PieubSios","name":"XK_Hangul_PieubSios","value":"3764","doc":null,"summary":null},{"id":"XK_Hangul_PostHanja","name":"XK_Hangul_PostHanja","value":"65339","doc":"Pre Hanja conversion","summary":"<p>Pre Hanja conversion</p>"},{"id":"XK_Hangul_PreHanja","name":"XK_Hangul_PreHanja","value":"65338","doc":"Banja mode","summary":"<p>Banja mode</p>"},{"id":"XK_Hangul_PreviousCandidate","name":"XK_Hangul_PreviousCandidate","value":"65342","doc":"Multiple candidate","summary":"<p>Multiple candidate</p>"},{"id":"XK_Hangul_Rieul","name":"XK_Hangul_Rieul","value":"3753","doc":null,"summary":null},{"id":"XK_Hangul_RieulHieuh","name":"XK_Hangul_RieulHieuh","value":"3760","doc":null,"summary":null},{"id":"XK_Hangul_RieulKiyeog","name":"XK_Hangul_RieulKiyeog","value":"3754","doc":null,"summary":null},{"id":"XK_Hangul_RieulMieum","name":"XK_Hangul_RieulMieum","value":"3755","doc":null,"summary":null},{"id":"XK_Hangul_RieulPhieuf","name":"XK_Hangul_RieulPhieuf","value":"3759","doc":null,"summary":null},{"id":"XK_Hangul_RieulPieub","name":"XK_Hangul_RieulPieub","value":"3756","doc":null,"summary":null},{"id":"XK_Hangul_RieulSios","name":"XK_Hangul_RieulSios","value":"3757","doc":null,"summary":null},{"id":"XK_Hangul_RieulTieut","name":"XK_Hangul_RieulTieut","value":"3758","doc":null,"summary":null},{"id":"XK_Hangul_RieulYeorinHieuh","name":"XK_Hangul_RieulYeorinHieuh","value":"3823","doc":"Ancient Hangul Consonant Characters","summary":"<p>Ancient Hangul Consonant Characters</p>"},{"id":"XK_Hangul_Romaja","name":"XK_Hangul_Romaja","value":"65334","doc":"Hangul Jamo mode","summary":"<p>Hangul Jamo mode</p>"},{"id":"XK_Hangul_SingleCandidate","name":"XK_Hangul_SingleCandidate","value":"65340","doc":"Post Hanja conversion","summary":"<p>Post Hanja conversion</p>"},{"id":"XK_Hangul_Sios","name":"XK_Hangul_Sios","value":"3765","doc":null,"summary":null},{"id":"XK_Hangul_Special","name":"XK_Hangul_Special","value":"65343","doc":"Previous candidate","summary":"<p>Previous candidate</p>"},{"id":"XK_Hangul_SsangDikeud","name":"XK_Hangul_SsangDikeud","value":"3752","doc":null,"summary":null},{"id":"XK_Hangul_SsangJieuj","name":"XK_Hangul_SsangJieuj","value":"3769","doc":null,"summary":null},{"id":"XK_Hangul_SsangKiyeog","name":"XK_Hangul_SsangKiyeog","value":"3746","doc":null,"summary":null},{"id":"XK_Hangul_SsangPieub","name":"XK_Hangul_SsangPieub","value":"3763","doc":null,"summary":null},{"id":"XK_Hangul_SsangSios","name":"XK_Hangul_SsangSios","value":"3766","doc":null,"summary":null},{"id":"XK_Hangul_Start","name":"XK_Hangul_Start","value":"65330","doc":"Hangul start/stop(toggle)","summary":"<p>Hangul start/stop(toggle)</p>"},{"id":"XK_Hangul_SunkyeongeumMieum","name":"XK_Hangul_SunkyeongeumMieum","value":"3824","doc":null,"summary":null},{"id":"XK_Hangul_SunkyeongeumPhieuf","name":"XK_Hangul_SunkyeongeumPhieuf","value":"3828","doc":null,"summary":null},{"id":"XK_Hangul_SunkyeongeumPieub","name":"XK_Hangul_SunkyeongeumPieub","value":"3825","doc":null,"summary":null},{"id":"XK_Hangul_switch","name":"XK_Hangul_switch","value":"65406","doc":"Special symbols","summary":"<p>Special symbols</p>"},{"id":"XK_Hangul_Tieut","name":"XK_Hangul_Tieut","value":"3772","doc":null,"summary":null},{"id":"XK_Hangul_U","name":"XK_Hangul_U","value":"3788","doc":null,"summary":null},{"id":"XK_Hangul_WA","name":"XK_Hangul_WA","value":"3784","doc":null,"summary":null},{"id":"XK_Hangul_WAE","name":"XK_Hangul_WAE","value":"3785","doc":null,"summary":null},{"id":"XK_Hangul_WE","name":"XK_Hangul_WE","value":"3790","doc":null,"summary":null},{"id":"XK_Hangul_WEO","name":"XK_Hangul_WEO","value":"3789","doc":null,"summary":null},{"id":"XK_Hangul_WI","name":"XK_Hangul_WI","value":"3791","doc":null,"summary":null},{"id":"XK_Hangul_YA","name":"XK_Hangul_YA","value":"3777","doc":null,"summary":null},{"id":"XK_Hangul_YAE","name":"XK_Hangul_YAE","value":"3778","doc":null,"summary":null},{"id":"XK_Hangul_YE","name":"XK_Hangul_YE","value":"3782","doc":null,"summary":null},{"id":"XK_Hangul_YEO","name":"XK_Hangul_YEO","value":"3781","doc":null,"summary":null},{"id":"XK_Hangul_YeorinHieuh","name":"XK_Hangul_YeorinHieuh","value":"3829","doc":null,"summary":null},{"id":"XK_Hangul_YI","name":"XK_Hangul_YI","value":"3794","doc":null,"summary":null},{"id":"XK_Hangul_YO","name":"XK_Hangul_YO","value":"3787","doc":null,"summary":null},{"id":"XK_Hangul_YU","name":"XK_Hangul_YU","value":"3792","doc":null,"summary":null},{"id":"XK_Hankaku","name":"XK_Hankaku","value":"65321","doc":"to Zenkaku","summary":"<p>to Zenkaku</p>"},{"id":"XK_Hcircumflex","name":"XK_Hcircumflex","value":"678","doc":"U+0126 LATIN CAPITAL LETTER H WITH STROKE","summary":"<p>U+0126 LATIN CAPITAL LETTER H WITH STROKE</p>"},{"id":"XK_hcircumflex","name":"XK_hcircumflex","value":"694","doc":"U+0127 LATIN SMALL LETTER H WITH STROKE","summary":"<p>U+0127 LATIN SMALL LETTER H WITH STROKE</p>"},{"id":"XK_HEBREW","name":"XK_HEBREW","value":"true","doc":null,"summary":null},{"id":"XK_hebrew_aleph","name":"XK_hebrew_aleph","value":"3296","doc":"U+2017 DOUBLE LOW LINE","summary":"<p>U+2017 DOUBLE LOW LINE</p>"},{"id":"XK_hebrew_ayin","name":"XK_hebrew_ayin","value":"3314","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_hebrew_bet","name":"XK_hebrew_bet","value":"3297","doc":"U+05D0 HEBREW LETTER ALEF","summary":"<p>U+05D0 HEBREW LETTER ALEF</p>"},{"id":"XK_hebrew_beth","name":"XK_hebrew_beth","value":"3297","doc":"U+05D1 HEBREW LETTER BET","summary":"<p>U+05D1 HEBREW LETTER BET</p>"},{"id":"XK_hebrew_chet","name":"XK_hebrew_chet","value":"3303","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_hebrew_dalet","name":"XK_hebrew_dalet","value":"3299","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_hebrew_daleth","name":"XK_hebrew_daleth","value":"3299","doc":"U+05D3 HEBREW LETTER DALET","summary":"<p>U+05D3 HEBREW LETTER DALET</p>"},{"id":"XK_hebrew_doublelowline","name":"XK_hebrew_doublelowline","value":"3295","doc":null,"summary":null},{"id":"XK_hebrew_finalkaph","name":"XK_hebrew_finalkaph","value":"3306","doc":"U+05D9 HEBREW LETTER YOD","summary":"<p>U+05D9 HEBREW LETTER YOD</p>"},{"id":"XK_hebrew_finalmem","name":"XK_hebrew_finalmem","value":"3309","doc":"U+05DC HEBREW LETTER LAMED","summary":"<p>U+05DC HEBREW LETTER LAMED</p>"},{"id":"XK_hebrew_finalnun","name":"XK_hebrew_finalnun","value":"3311","doc":"U+05DE HEBREW LETTER MEM","summary":"<p>U+05DE HEBREW LETTER MEM</p>"},{"id":"XK_hebrew_finalpe","name":"XK_hebrew_finalpe","value":"3315","doc":"U+05E2 HEBREW LETTER AYIN","summary":"<p>U+05E2 HEBREW LETTER AYIN</p>"},{"id":"XK_hebrew_finalzade","name":"XK_hebrew_finalzade","value":"3317","doc":"U+05E4 HEBREW LETTER PE","summary":"<p>U+05E4 HEBREW LETTER PE</p>"},{"id":"XK_hebrew_finalzadi","name":"XK_hebrew_finalzadi","value":"3317","doc":"U+05E5 HEBREW LETTER FINAL TSADI","summary":"<p>U+05E5 HEBREW LETTER FINAL TSADI</p>"},{"id":"XK_hebrew_gimel","name":"XK_hebrew_gimel","value":"3298","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_hebrew_gimmel","name":"XK_hebrew_gimmel","value":"3298","doc":"U+05D2 HEBREW LETTER GIMEL","summary":"<p>U+05D2 HEBREW LETTER GIMEL</p>"},{"id":"XK_hebrew_he","name":"XK_hebrew_he","value":"3300","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_hebrew_het","name":"XK_hebrew_het","value":"3303","doc":"U+05D7 HEBREW LETTER HET","summary":"<p>U+05D7 HEBREW LETTER HET</p>"},{"id":"XK_hebrew_kaph","name":"XK_hebrew_kaph","value":"3307","doc":"U+05DA HEBREW LETTER FINAL KAF","summary":"<p>U+05DA HEBREW LETTER FINAL KAF</p>"},{"id":"XK_hebrew_kuf","name":"XK_hebrew_kuf","value":"3319","doc":"U+05E7 HEBREW LETTER QOF","summary":"<p>U+05E7 HEBREW LETTER QOF</p>"},{"id":"XK_hebrew_lamed","name":"XK_hebrew_lamed","value":"3308","doc":"U+05DB HEBREW LETTER KAF","summary":"<p>U+05DB HEBREW LETTER KAF</p>"},{"id":"XK_hebrew_mem","name":"XK_hebrew_mem","value":"3310","doc":"U+05DD HEBREW LETTER FINAL MEM","summary":"<p>U+05DD HEBREW LETTER FINAL MEM</p>"},{"id":"XK_hebrew_nun","name":"XK_hebrew_nun","value":"3312","doc":"U+05DF HEBREW LETTER FINAL NUN","summary":"<p>U+05DF HEBREW LETTER FINAL NUN</p>"},{"id":"XK_hebrew_pe","name":"XK_hebrew_pe","value":"3316","doc":"U+05E3 HEBREW LETTER FINAL PE","summary":"<p>U+05E3 HEBREW LETTER FINAL PE</p>"},{"id":"XK_hebrew_qoph","name":"XK_hebrew_qoph","value":"3319","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_hebrew_resh","name":"XK_hebrew_resh","value":"3320","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_hebrew_samech","name":"XK_hebrew_samech","value":"3313","doc":"U+05E0 HEBREW LETTER NUN","summary":"<p>U+05E0 HEBREW LETTER NUN</p>"},{"id":"XK_hebrew_samekh","name":"XK_hebrew_samekh","value":"3313","doc":"U+05E1 HEBREW LETTER SAMEKH","summary":"<p>U+05E1 HEBREW LETTER SAMEKH</p>"},{"id":"XK_hebrew_shin","name":"XK_hebrew_shin","value":"3321","doc":"U+05E8 HEBREW LETTER RESH","summary":"<p>U+05E8 HEBREW LETTER RESH</p>"},{"id":"XK_Hebrew_switch","name":"XK_Hebrew_switch","value":"65406","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_hebrew_taf","name":"XK_hebrew_taf","value":"3322","doc":"U+05EA HEBREW LETTER TAV","summary":"<p>U+05EA HEBREW LETTER TAV</p>"},{"id":"XK_hebrew_taw","name":"XK_hebrew_taw","value":"3322","doc":"U+05E9 HEBREW LETTER SHIN","summary":"<p>U+05E9 HEBREW LETTER SHIN</p>"},{"id":"XK_hebrew_tet","name":"XK_hebrew_tet","value":"3304","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_hebrew_teth","name":"XK_hebrew_teth","value":"3304","doc":"U+05D8 HEBREW LETTER TET","summary":"<p>U+05D8 HEBREW LETTER TET</p>"},{"id":"XK_hebrew_waw","name":"XK_hebrew_waw","value":"3301","doc":"U+05D4 HEBREW LETTER HE","summary":"<p>U+05D4 HEBREW LETTER HE</p>"},{"id":"XK_hebrew_yod","name":"XK_hebrew_yod","value":"3305","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_hebrew_zade","name":"XK_hebrew_zade","value":"3318","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_hebrew_zadi","name":"XK_hebrew_zadi","value":"3318","doc":"U+05E6 HEBREW LETTER TSADI","summary":"<p>U+05E6 HEBREW LETTER TSADI</p>"},{"id":"XK_hebrew_zain","name":"XK_hebrew_zain","value":"3302","doc":"U+05D5 HEBREW LETTER VAV","summary":"<p>U+05D5 HEBREW LETTER VAV</p>"},{"id":"XK_hebrew_zayin","name":"XK_hebrew_zayin","value":"3302","doc":"U+05D6 HEBREW LETTER ZAYIN","summary":"<p>U+05D6 HEBREW LETTER ZAYIN</p>"},{"id":"XK_Help","name":"XK_Help","value":"65386","doc":"Cancel, stop, abort, exit","summary":"<p>Cancel, stop, abort, exit</p>"},{"id":"XK_Henkan","name":"XK_Henkan","value":"65315","doc":"Start/Stop Conversion","summary":"<p>Start/Stop Conversion</p>"},{"id":"XK_Henkan_Mode","name":"XK_Henkan_Mode","value":"65315","doc":"Cancel Conversion","summary":"<p>Cancel Conversion</p>"},{"id":"XK_Hiragana","name":"XK_Hiragana","value":"65317","doc":"to Romaji","summary":"<p>to Romaji</p>"},{"id":"XK_Hiragana_Katakana","name":"XK_Hiragana_Katakana","value":"65319","doc":"to Katakana","summary":"<p>to Katakana</p>"},{"id":"XK_Home","name":"XK_Home","value":"65360","doc":null,"summary":null},{"id":"XK_hstroke","name":"XK_hstroke","value":"689","doc":"U+0134 LATIN CAPITAL LETTER J WITH CIRCUMFLEX","summary":"<p>U+0134 LATIN CAPITAL LETTER J WITH CIRCUMFLEX</p>"},{"id":"XK_Hstroke","name":"XK_Hstroke","value":"673","doc":null,"summary":null},{"id":"XK_Hyper_L","name":"XK_Hyper_L","value":"65517","doc":"Right super","summary":"<p>Right super</p>"},{"id":"XK_Hyper_R","name":"XK_Hyper_R","value":"65518","doc":"Left hyper","summary":"<p>Left hyper</p>"},{"id":"XK_hyphen","name":"XK_hyphen","value":"173","doc":"U+00AC NOT SIGN","summary":"<p>U+00AC NOT SIGN</p>"},{"id":"XK_i","name":"XK_i","value":"105","doc":"U+0068 LATIN SMALL LETTER H","summary":"<p>U+0068 LATIN SMALL LETTER H</p>"},{"id":"XK_I","name":"XK_I","value":"73","doc":"U+0048 LATIN CAPITAL LETTER H","summary":"<p>U+0048 LATIN CAPITAL LETTER H</p>"},{"id":"XK_Iabovedot","name":"XK_Iabovedot","value":"681","doc":"U+0124 LATIN CAPITAL LETTER H WITH CIRCUMFLEX","summary":"<p>U+0124 LATIN CAPITAL LETTER H WITH CIRCUMFLEX</p>"},{"id":"XK_Iacute","name":"XK_Iacute","value":"205","doc":"U+00CC LATIN CAPITAL LETTER I WITH GRAVE","summary":"<p>U+00CC LATIN CAPITAL LETTER I WITH GRAVE</p>"},{"id":"XK_iacute","name":"XK_iacute","value":"237","doc":"U+00EC LATIN SMALL LETTER I WITH GRAVE","summary":"<p>U+00EC LATIN SMALL LETTER I WITH GRAVE</p>"},{"id":"XK_ibelowdot","name":"XK_ibelowdot","value":"16785099","doc":"U+1ECA LATIN CAPITAL LETTER I WITH DOT BELOW","summary":"<p>U+1ECA LATIN CAPITAL LETTER I WITH DOT BELOW</p>"},{"id":"XK_Ibelowdot","name":"XK_Ibelowdot","value":"16785098","doc":"U+1EC9 LATIN SMALL LETTER I WITH HOOK ABOVE","summary":"<p>U+1EC9 LATIN SMALL LETTER I WITH HOOK ABOVE</p>"},{"id":"XK_ibreve","name":"XK_ibreve","value":"16777517","doc":"U+1E8B LATIN SMALL LETTER X WITH DOT ABOVE","summary":"<p>U+1E8B LATIN SMALL LETTER X WITH DOT ABOVE</p>"},{"id":"XK_Ibreve","name":"XK_Ibreve","value":"16777516","doc":"U+1E8A LATIN CAPITAL LETTER X WITH DOT ABOVE","summary":"<p>U+1E8A LATIN CAPITAL LETTER X WITH DOT ABOVE</p>"},{"id":"XK_Icircumflex","name":"XK_Icircumflex","value":"206","doc":"U+00CD LATIN CAPITAL LETTER I WITH ACUTE","summary":"<p>U+00CD LATIN CAPITAL LETTER I WITH ACUTE</p>"},{"id":"XK_icircumflex","name":"XK_icircumflex","value":"238","doc":"U+00ED LATIN SMALL LETTER I WITH ACUTE","summary":"<p>U+00ED LATIN SMALL LETTER I WITH ACUTE</p>"},{"id":"XK_Idiaeresis","name":"XK_Idiaeresis","value":"207","doc":"U+00CE LATIN CAPITAL LETTER I WITH CIRCUMFLEX","summary":"<p>U+00CE LATIN CAPITAL LETTER I WITH CIRCUMFLEX</p>"},{"id":"XK_idiaeresis","name":"XK_idiaeresis","value":"239","doc":"U+00EE LATIN SMALL LETTER I WITH CIRCUMFLEX","summary":"<p>U+00EE LATIN SMALL LETTER I WITH CIRCUMFLEX</p>"},{"id":"XK_idotless","name":"XK_idotless","value":"697","doc":"U+0125 LATIN SMALL LETTER H WITH CIRCUMFLEX","summary":"<p>U+0125 LATIN SMALL LETTER H WITH CIRCUMFLEX</p>"},{"id":"XK_Igrave","name":"XK_Igrave","value":"204","doc":"U+00CB LATIN CAPITAL LETTER E WITH DIAERESIS","summary":"<p>U+00CB LATIN CAPITAL LETTER E WITH DIAERESIS</p>"},{"id":"XK_igrave","name":"XK_igrave","value":"236","doc":"U+00EB LATIN SMALL LETTER E WITH DIAERESIS","summary":"<p>U+00EB LATIN SMALL LETTER E WITH DIAERESIS</p>"},{"id":"XK_Ihook","name":"XK_Ihook","value":"16785096","doc":"U+1EC7 LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW","summary":"<p>U+1EC7 LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW</p>"},{"id":"XK_ihook","name":"XK_ihook","value":"16785097","doc":"U+1EC8 LATIN CAPITAL LETTER I WITH HOOK ABOVE","summary":"<p>U+1EC8 LATIN CAPITAL LETTER I WITH HOOK ABOVE</p>"},{"id":"XK_Imacron","name":"XK_Imacron","value":"975","doc":"U+0116 LATIN CAPITAL LETTER E WITH DOT ABOVE","summary":"<p>U+0116 LATIN CAPITAL LETTER E WITH DOT ABOVE</p>"},{"id":"XK_imacron","name":"XK_imacron","value":"1007","doc":"U+0117 LATIN SMALL LETTER E WITH DOT ABOVE","summary":"<p>U+0117 LATIN SMALL LETTER E WITH DOT ABOVE</p>"},{"id":"XK_Insert","name":"XK_Insert","value":"65379","doc":"Execute, run, do","summary":"<p>Execute, run, do</p>"},{"id":"XK_Iogonek","name":"XK_Iogonek","value":"967","doc":"U+0100 LATIN CAPITAL LETTER A WITH MACRON","summary":"<p>U+0100 LATIN CAPITAL LETTER A WITH MACRON</p>"},{"id":"XK_iogonek","name":"XK_iogonek","value":"999","doc":"U+0101 LATIN SMALL LETTER A WITH MACRON","summary":"<p>U+0101 LATIN SMALL LETTER A WITH MACRON</p>"},{"id":"XK_ISO_Center_Object","name":"XK_ISO_Center_Object","value":"65075","doc":null,"summary":null},{"id":"XK_ISO_Continuous_Underline","name":"XK_ISO_Continuous_Underline","value":"65072","doc":null,"summary":null},{"id":"XK_ISO_Discontinuous_Underline","name":"XK_ISO_Discontinuous_Underline","value":"65073","doc":null,"summary":null},{"id":"XK_ISO_Emphasize","name":"XK_ISO_Emphasize","value":"65074","doc":null,"summary":null},{"id":"XK_ISO_Enter","name":"XK_ISO_Enter","value":"65076","doc":null,"summary":null},{"id":"XK_ISO_Fast_Cursor_Down","name":"XK_ISO_Fast_Cursor_Down","value":"65071","doc":null,"summary":null},{"id":"XK_ISO_Fast_Cursor_Left","name":"XK_ISO_Fast_Cursor_Left","value":"65068","doc":null,"summary":null},{"id":"XK_ISO_Fast_Cursor_Right","name":"XK_ISO_Fast_Cursor_Right","value":"65069","doc":null,"summary":null},{"id":"XK_ISO_Fast_Cursor_Up","name":"XK_ISO_Fast_Cursor_Up","value":"65070","doc":null,"summary":null},{"id":"XK_ISO_First_Group","name":"XK_ISO_First_Group","value":"65036","doc":null,"summary":null},{"id":"XK_ISO_First_Group_Lock","name":"XK_ISO_First_Group_Lock","value":"65037","doc":null,"summary":null},{"id":"XK_ISO_Group_Latch","name":"XK_ISO_Group_Latch","value":"65030","doc":"Alias for mode_switch","summary":"<p>Alias for mode_switch</p>"},{"id":"XK_ISO_Group_Lock","name":"XK_ISO_Group_Lock","value":"65031","doc":null,"summary":null},{"id":"XK_ISO_Group_Shift","name":"XK_ISO_Group_Shift","value":"65406","doc":null,"summary":null},{"id":"XK_ISO_Last_Group","name":"XK_ISO_Last_Group","value":"65038","doc":null,"summary":null},{"id":"XK_ISO_Last_Group_Lock","name":"XK_ISO_Last_Group_Lock","value":"65039","doc":null,"summary":null},{"id":"XK_ISO_Left_Tab","name":"XK_ISO_Left_Tab","value":"65056","doc":null,"summary":null},{"id":"XK_ISO_Level2_Latch","name":"XK_ISO_Level2_Latch","value":"65026","doc":null,"summary":null},{"id":"XK_ISO_Level3_Latch","name":"XK_ISO_Level3_Latch","value":"65028","doc":null,"summary":null},{"id":"XK_ISO_Level3_Lock","name":"XK_ISO_Level3_Lock","value":"65029","doc":null,"summary":null},{"id":"XK_ISO_Level3_Shift","name":"XK_ISO_Level3_Shift","value":"65027","doc":null,"summary":null},{"id":"XK_ISO_Level5_Latch","name":"XK_ISO_Level5_Latch","value":"65042","doc":null,"summary":null},{"id":"XK_ISO_Level5_Lock","name":"XK_ISO_Level5_Lock","value":"65043","doc":null,"summary":null},{"id":"XK_ISO_Level5_Shift","name":"XK_ISO_Level5_Shift","value":"65041","doc":null,"summary":null},{"id":"XK_ISO_Lock","name":"XK_ISO_Lock","value":"65025","doc":null,"summary":null},{"id":"XK_ISO_Move_Line_Down","name":"XK_ISO_Move_Line_Down","value":"65058","doc":null,"summary":null},{"id":"XK_ISO_Move_Line_Up","name":"XK_ISO_Move_Line_Up","value":"65057","doc":null,"summary":null},{"id":"XK_ISO_Next_Group","name":"XK_ISO_Next_Group","value":"65032","doc":null,"summary":null},{"id":"XK_ISO_Next_Group_Lock","name":"XK_ISO_Next_Group_Lock","value":"65033","doc":null,"summary":null},{"id":"XK_ISO_Partial_Line_Down","name":"XK_ISO_Partial_Line_Down","value":"65060","doc":null,"summary":null},{"id":"XK_ISO_Partial_Line_Up","name":"XK_ISO_Partial_Line_Up","value":"65059","doc":null,"summary":null},{"id":"XK_ISO_Partial_Space_Left","name":"XK_ISO_Partial_Space_Left","value":"65061","doc":null,"summary":null},{"id":"XK_ISO_Partial_Space_Right","name":"XK_ISO_Partial_Space_Right","value":"65062","doc":null,"summary":null},{"id":"XK_ISO_Prev_Group","name":"XK_ISO_Prev_Group","value":"65034","doc":null,"summary":null},{"id":"XK_ISO_Prev_Group_Lock","name":"XK_ISO_Prev_Group_Lock","value":"65035","doc":null,"summary":null},{"id":"XK_ISO_Release_Both_Margins","name":"XK_ISO_Release_Both_Margins","value":"65067","doc":null,"summary":null},{"id":"XK_ISO_Release_Margin_Left","name":"XK_ISO_Release_Margin_Left","value":"65065","doc":null,"summary":null},{"id":"XK_ISO_Release_Margin_Right","name":"XK_ISO_Release_Margin_Right","value":"65066","doc":null,"summary":null},{"id":"XK_ISO_Set_Margin_Left","name":"XK_ISO_Set_Margin_Left","value":"65063","doc":null,"summary":null},{"id":"XK_ISO_Set_Margin_Right","name":"XK_ISO_Set_Margin_Right","value":"65064","doc":null,"summary":null},{"id":"XK_Itilde","name":"XK_Itilde","value":"933","doc":"U+0156 LATIN CAPITAL LETTER R WITH CEDILLA","summary":"<p>U+0156 LATIN CAPITAL LETTER R WITH CEDILLA</p>"},{"id":"XK_itilde","name":"XK_itilde","value":"949","doc":"U+0157 LATIN SMALL LETTER R WITH CEDILLA","summary":"<p>U+0157 LATIN SMALL LETTER R WITH CEDILLA</p>"},{"id":"XK_J","name":"XK_J","value":"74","doc":"U+0049 LATIN CAPITAL LETTER I","summary":"<p>U+0049 LATIN CAPITAL LETTER I</p>"},{"id":"XK_j","name":"XK_j","value":"106","doc":"U+0069 LATIN SMALL LETTER I","summary":"<p>U+0069 LATIN SMALL LETTER I</p>"},{"id":"XK_jcircumflex","name":"XK_jcircumflex","value":"700","doc":"U+011F LATIN SMALL LETTER G WITH BREVE","summary":"<p>U+011F LATIN SMALL LETTER G WITH BREVE</p>"},{"id":"XK_Jcircumflex","name":"XK_Jcircumflex","value":"684","doc":"U+011E LATIN CAPITAL LETTER G WITH BREVE","summary":"<p>U+011E LATIN CAPITAL LETTER G WITH BREVE</p>"},{"id":"XK_k","name":"XK_k","value":"107","doc":"U+006A LATIN SMALL LETTER J","summary":"<p>U+006A LATIN SMALL LETTER J</p>"},{"id":"XK_K","name":"XK_K","value":"75","doc":"U+004A LATIN CAPITAL LETTER J","summary":"<p>U+004A LATIN CAPITAL LETTER J</p>"},{"id":"XK_kana_A","name":"XK_kana_A","value":"1201","doc":"U+30FC KATAKANA-HIRAGANA PROLONGED SOUND MARK","summary":"<p>U+30FC KATAKANA-HIRAGANA PROLONGED SOUND MARK</p>"},{"id":"XK_kana_a","name":"XK_kana_a","value":"1191","doc":"U+30F2 KATAKANA LETTER WO","summary":"<p>U+30F2 KATAKANA LETTER WO</p>"},{"id":"XK_kana_CHI","name":"XK_kana_CHI","value":"1217","doc":"U+30BF KATAKANA LETTER TA","summary":"<p>U+30BF KATAKANA LETTER TA</p>"},{"id":"XK_kana_closingbracket","name":"XK_kana_closingbracket","value":"1187","doc":"U+300C LEFT CORNER BRACKET","summary":"<p>U+300C LEFT CORNER BRACKET</p>"},{"id":"XK_kana_comma","name":"XK_kana_comma","value":"1188","doc":"U+300D RIGHT CORNER BRACKET","summary":"<p>U+300D RIGHT CORNER BRACKET</p>"},{"id":"XK_kana_conjunctive","name":"XK_kana_conjunctive","value":"1189","doc":"U+3001 IDEOGRAPHIC COMMA","summary":"<p>U+3001 IDEOGRAPHIC COMMA</p>"},{"id":"XK_kana_e","name":"XK_kana_e","value":"1194","doc":"U+30A5 KATAKANA LETTER SMALL U","summary":"<p>U+30A5 KATAKANA LETTER SMALL U</p>"},{"id":"XK_kana_E","name":"XK_kana_E","value":"1204","doc":"U+30A6 KATAKANA LETTER U","summary":"<p>U+30A6 KATAKANA LETTER U</p>"},{"id":"XK_kana_FU","name":"XK_kana_FU","value":"1228","doc":"U+30D2 KATAKANA LETTER HI","summary":"<p>U+30D2 KATAKANA LETTER HI</p>"},{"id":"XK_kana_fullstop","name":"XK_kana_fullstop","value":"1185","doc":"U+203E OVERLINE","summary":"<p>U+203E OVERLINE</p>"},{"id":"XK_kana_HA","name":"XK_kana_HA","value":"1226","doc":"U+30CE KATAKANA LETTER NO","summary":"<p>U+30CE KATAKANA LETTER NO</p>"},{"id":"XK_kana_HE","name":"XK_kana_HE","value":"1229","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_kana_HI","name":"XK_kana_HI","value":"1227","doc":"U+30CF KATAKANA LETTER HA","summary":"<p>U+30CF KATAKANA LETTER HA</p>"},{"id":"XK_kana_HO","name":"XK_kana_HO","value":"1230","doc":"U+30D8 KATAKANA LETTER HE","summary":"<p>U+30D8 KATAKANA LETTER HE</p>"},{"id":"XK_kana_HU","name":"XK_kana_HU","value":"1228","doc":"U+30D5 KATAKANA LETTER HU","summary":"<p>U+30D5 KATAKANA LETTER HU</p>"},{"id":"XK_kana_i","name":"XK_kana_i","value":"1192","doc":"U+30A1 KATAKANA LETTER SMALL A","summary":"<p>U+30A1 KATAKANA LETTER SMALL A</p>"},{"id":"XK_kana_I","name":"XK_kana_I","value":"1202","doc":"U+30A2 KATAKANA LETTER A","summary":"<p>U+30A2 KATAKANA LETTER A</p>"},{"id":"XK_kana_KA","name":"XK_kana_KA","value":"1206","doc":"U+30AA KATAKANA LETTER O","summary":"<p>U+30AA KATAKANA LETTER O</p>"},{"id":"XK_kana_KE","name":"XK_kana_KE","value":"1209","doc":"U+30AF KATAKANA LETTER KU","summary":"<p>U+30AF KATAKANA LETTER KU</p>"},{"id":"XK_kana_KI","name":"XK_kana_KI","value":"1207","doc":"U+30AB KATAKANA LETTER KA","summary":"<p>U+30AB KATAKANA LETTER KA</p>"},{"id":"XK_kana_KO","name":"XK_kana_KO","value":"1210","doc":"U+30B1 KATAKANA LETTER KE","summary":"<p>U+30B1 KATAKANA LETTER KE</p>"},{"id":"XK_kana_KU","name":"XK_kana_KU","value":"1208","doc":"U+30AD KATAKANA LETTER KI","summary":"<p>U+30AD KATAKANA LETTER KI</p>"},{"id":"XK_Kana_Lock","name":"XK_Kana_Lock","value":"65325","doc":"Delete from Dictionary","summary":"<p>Delete from Dictionary</p>"},{"id":"XK_kana_MA","name":"XK_kana_MA","value":"1231","doc":"U+30DB KATAKANA LETTER HO","summary":"<p>U+30DB KATAKANA LETTER HO</p>"},{"id":"XK_kana_ME","name":"XK_kana_ME","value":"1234","doc":"U+30E0 KATAKANA LETTER MU","summary":"<p>U+30E0 KATAKANA LETTER MU</p>"},{"id":"XK_kana_MI","name":"XK_kana_MI","value":"1232","doc":"U+30DE KATAKANA LETTER MA","summary":"<p>U+30DE KATAKANA LETTER MA</p>"},{"id":"XK_kana_middledot","name":"XK_kana_middledot","value":"1189","doc":"U+30FB KATAKANA MIDDLE DOT","summary":"<p>U+30FB KATAKANA MIDDLE DOT</p>"},{"id":"XK_kana_MO","name":"XK_kana_MO","value":"1235","doc":"U+30E1 KATAKANA LETTER ME","summary":"<p>U+30E1 KATAKANA LETTER ME</p>"},{"id":"XK_kana_MU","name":"XK_kana_MU","value":"1233","doc":"U+30DF KATAKANA LETTER MI","summary":"<p>U+30DF KATAKANA LETTER MI</p>"},{"id":"XK_kana_N","name":"XK_kana_N","value":"1245","doc":"U+30EF KATAKANA LETTER WA","summary":"<p>U+30EF KATAKANA LETTER WA</p>"},{"id":"XK_kana_NA","name":"XK_kana_NA","value":"1221","doc":"U+30C8 KATAKANA LETTER TO","summary":"<p>U+30C8 KATAKANA LETTER TO</p>"},{"id":"XK_kana_NE","name":"XK_kana_NE","value":"1224","doc":"U+30CC KATAKANA LETTER NU","summary":"<p>U+30CC KATAKANA LETTER NU</p>"},{"id":"XK_kana_NI","name":"XK_kana_NI","value":"1222","doc":"U+30CA KATAKANA LETTER NA","summary":"<p>U+30CA KATAKANA LETTER NA</p>"},{"id":"XK_kana_NO","name":"XK_kana_NO","value":"1225","doc":"U+30CD KATAKANA LETTER NE","summary":"<p>U+30CD KATAKANA LETTER NE</p>"},{"id":"XK_kana_NU","name":"XK_kana_NU","value":"1223","doc":"U+30CB KATAKANA LETTER NI","summary":"<p>U+30CB KATAKANA LETTER NI</p>"},{"id":"XK_kana_o","name":"XK_kana_o","value":"1195","doc":"U+30A7 KATAKANA LETTER SMALL E","summary":"<p>U+30A7 KATAKANA LETTER SMALL E</p>"},{"id":"XK_kana_O","name":"XK_kana_O","value":"1205","doc":"U+30A8 KATAKANA LETTER E","summary":"<p>U+30A8 KATAKANA LETTER E</p>"},{"id":"XK_kana_openingbracket","name":"XK_kana_openingbracket","value":"1186","doc":"U+3002 IDEOGRAPHIC FULL STOP","summary":"<p>U+3002 IDEOGRAPHIC FULL STOP</p>"},{"id":"XK_kana_RA","name":"XK_kana_RA","value":"1239","doc":"U+30E8 KATAKANA LETTER YO","summary":"<p>U+30E8 KATAKANA LETTER YO</p>"},{"id":"XK_kana_RE","name":"XK_kana_RE","value":"1242","doc":"U+30EB KATAKANA LETTER RU","summary":"<p>U+30EB KATAKANA LETTER RU</p>"},{"id":"XK_kana_RI","name":"XK_kana_RI","value":"1240","doc":"U+30E9 KATAKANA LETTER RA","summary":"<p>U+30E9 KATAKANA LETTER RA</p>"},{"id":"XK_kana_RO","name":"XK_kana_RO","value":"1243","doc":"U+30EC KATAKANA LETTER RE","summary":"<p>U+30EC KATAKANA LETTER RE</p>"},{"id":"XK_kana_RU","name":"XK_kana_RU","value":"1241","doc":"U+30EA KATAKANA LETTER RI","summary":"<p>U+30EA KATAKANA LETTER RI</p>"},{"id":"XK_kana_SA","name":"XK_kana_SA","value":"1211","doc":"U+30B3 KATAKANA LETTER KO","summary":"<p>U+30B3 KATAKANA LETTER KO</p>"},{"id":"XK_kana_SE","name":"XK_kana_SE","value":"1214","doc":"U+30B9 KATAKANA LETTER SU","summary":"<p>U+30B9 KATAKANA LETTER SU</p>"},{"id":"XK_kana_SHI","name":"XK_kana_SHI","value":"1212","doc":"U+30B5 KATAKANA LETTER SA","summary":"<p>U+30B5 KATAKANA LETTER SA</p>"},{"id":"XK_Kana_Shift","name":"XK_Kana_Shift","value":"65326","doc":"Kana Lock","summary":"<p>Kana Lock</p>"},{"id":"XK_kana_SO","name":"XK_kana_SO","value":"1215","doc":"U+30BB KATAKANA LETTER SE","summary":"<p>U+30BB KATAKANA LETTER SE</p>"},{"id":"XK_kana_SU","name":"XK_kana_SU","value":"1213","doc":"U+30B7 KATAKANA LETTER SI","summary":"<p>U+30B7 KATAKANA LETTER SI</p>"},{"id":"XK_kana_switch","name":"XK_kana_switch","value":"65406","doc":"U+309C KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK","summary":"<p>U+309C KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK</p>"},{"id":"XK_kana_TA","name":"XK_kana_TA","value":"1216","doc":"U+30BD KATAKANA LETTER SO","summary":"<p>U+30BD KATAKANA LETTER SO</p>"},{"id":"XK_kana_TE","name":"XK_kana_TE","value":"1219","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_kana_TI","name":"XK_kana_TI","value":"1217","doc":"U+30C1 KATAKANA LETTER TI","summary":"<p>U+30C1 KATAKANA LETTER TI</p>"},{"id":"XK_kana_TO","name":"XK_kana_TO","value":"1220","doc":"U+30C6 KATAKANA LETTER TE","summary":"<p>U+30C6 KATAKANA LETTER TE</p>"},{"id":"XK_kana_tsu","name":"XK_kana_tsu","value":"1199","doc":"U+30E7 KATAKANA LETTER SMALL YO","summary":"<p>U+30E7 KATAKANA LETTER SMALL YO</p>"},{"id":"XK_kana_TSU","name":"XK_kana_TSU","value":"1218","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_kana_tu","name":"XK_kana_tu","value":"1199","doc":"U+30C3 KATAKANA LETTER SMALL TU","summary":"<p>U+30C3 KATAKANA LETTER SMALL TU</p>"},{"id":"XK_kana_TU","name":"XK_kana_TU","value":"1218","doc":"U+30C4 KATAKANA LETTER TU","summary":"<p>U+30C4 KATAKANA LETTER TU</p>"},{"id":"XK_kana_u","name":"XK_kana_u","value":"1193","doc":"U+30A3 KATAKANA LETTER SMALL I","summary":"<p>U+30A3 KATAKANA LETTER SMALL I</p>"},{"id":"XK_kana_U","name":"XK_kana_U","value":"1203","doc":"U+30A4 KATAKANA LETTER I","summary":"<p>U+30A4 KATAKANA LETTER I</p>"},{"id":"XK_kana_WA","name":"XK_kana_WA","value":"1244","doc":"U+30ED KATAKANA LETTER RO","summary":"<p>U+30ED KATAKANA LETTER RO</p>"},{"id":"XK_kana_WO","name":"XK_kana_WO","value":"1190","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_kana_YA","name":"XK_kana_YA","value":"1236","doc":"U+30E2 KATAKANA LETTER MO","summary":"<p>U+30E2 KATAKANA LETTER MO</p>"},{"id":"XK_kana_ya","name":"XK_kana_ya","value":"1196","doc":"U+30A9 KATAKANA LETTER SMALL O","summary":"<p>U+30A9 KATAKANA LETTER SMALL O</p>"},{"id":"XK_kana_YO","name":"XK_kana_YO","value":"1238","doc":"U+30E6 KATAKANA LETTER YU","summary":"<p>U+30E6 KATAKANA LETTER YU</p>"},{"id":"XK_kana_yo","name":"XK_kana_yo","value":"1198","doc":"U+30E5 KATAKANA LETTER SMALL YU","summary":"<p>U+30E5 KATAKANA LETTER SMALL YU</p>"},{"id":"XK_kana_YU","name":"XK_kana_YU","value":"1237","doc":"U+30E4 KATAKANA LETTER YA","summary":"<p>U+30E4 KATAKANA LETTER YA</p>"},{"id":"XK_kana_yu","name":"XK_kana_yu","value":"1197","doc":"U+30E3 KATAKANA LETTER SMALL YA","summary":"<p>U+30E3 KATAKANA LETTER SMALL YA</p>"},{"id":"XK_Kanji","name":"XK_Kanji","value":"65313","doc":null,"summary":null},{"id":"XK_Kanji_Bangou","name":"XK_Kanji_Bangou","value":"65335","doc":"Alphanumeric toggle","summary":"<p>Alphanumeric toggle</p>"},{"id":"XK_kappa","name":"XK_kappa","value":"930","doc":"U+0138 LATIN SMALL LETTER KRA","summary":"<p>U+0138 LATIN SMALL LETTER KRA</p>"},{"id":"XK_KATAKANA","name":"XK_KATAKANA","value":"true","doc":null,"summary":null},{"id":"XK_Katakana","name":"XK_Katakana","value":"65318","doc":"to Hiragana","summary":"<p>to Hiragana</p>"},{"id":"XK_Kcedilla","name":"XK_Kcedilla","value":"979","doc":"U+014C LATIN CAPITAL LETTER O WITH MACRON","summary":"<p>U+014C LATIN CAPITAL LETTER O WITH MACRON</p>"},{"id":"XK_kcedilla","name":"XK_kcedilla","value":"1011","doc":"U+014D LATIN SMALL LETTER O WITH MACRON","summary":"<p>U+014D LATIN SMALL LETTER O WITH MACRON</p>"},{"id":"XK_KOREAN","name":"XK_KOREAN","value":"true","doc":null,"summary":null},{"id":"XK_Korean_Won","name":"XK_Korean_Won","value":"3839","doc":"Korean currency symbol","summary":"<p>Korean currency symbol</p>"},{"id":"XK_KP_0","name":"XK_KP_0","value":"65456","doc":null,"summary":null},{"id":"XK_KP_1","name":"XK_KP_1","value":"65457","doc":null,"summary":null},{"id":"XK_KP_2","name":"XK_KP_2","value":"65458","doc":null,"summary":null},{"id":"XK_KP_3","name":"XK_KP_3","value":"65459","doc":null,"summary":null},{"id":"XK_KP_4","name":"XK_KP_4","value":"65460","doc":null,"summary":null},{"id":"XK_KP_5","name":"XK_KP_5","value":"65461","doc":null,"summary":null},{"id":"XK_KP_6","name":"XK_KP_6","value":"65462","doc":null,"summary":null},{"id":"XK_KP_7","name":"XK_KP_7","value":"65463","doc":null,"summary":null},{"id":"XK_KP_8","name":"XK_KP_8","value":"65464","doc":null,"summary":null},{"id":"XK_KP_9","name":"XK_KP_9","value":"65465","doc":null,"summary":null},{"id":"XK_KP_Add","name":"XK_KP_Add","value":"65451","doc":null,"summary":null},{"id":"XK_KP_Begin","name":"XK_KP_Begin","value":"65437","doc":null,"summary":null},{"id":"XK_KP_Decimal","name":"XK_KP_Decimal","value":"65454","doc":null,"summary":null},{"id":"XK_KP_Delete","name":"XK_KP_Delete","value":"65439","doc":null,"summary":null},{"id":"XK_KP_Divide","name":"XK_KP_Divide","value":"65455","doc":null,"summary":null},{"id":"XK_KP_Down","name":"XK_KP_Down","value":"65433","doc":null,"summary":null},{"id":"XK_KP_End","name":"XK_KP_End","value":"65436","doc":null,"summary":null},{"id":"XK_KP_Enter","name":"XK_KP_Enter","value":"65421","doc":null,"summary":null},{"id":"XK_KP_Equal","name":"XK_KP_Equal","value":"65469","doc":null,"summary":null},{"id":"XK_KP_F1","name":"XK_KP_F1","value":"65425","doc":"Enter","summary":"<p>Enter</p>"},{"id":"XK_KP_F2","name":"XK_KP_F2","value":"65426","doc":"PF1, KP_A, ...","summary":"<p>PF1, KP_A, ...</p>"},{"id":"XK_KP_F3","name":"XK_KP_F3","value":"65427","doc":null,"summary":null},{"id":"XK_KP_F4","name":"XK_KP_F4","value":"65428","doc":null,"summary":null},{"id":"XK_KP_Home","name":"XK_KP_Home","value":"65429","doc":null,"summary":null},{"id":"XK_KP_Insert","name":"XK_KP_Insert","value":"65438","doc":null,"summary":null},{"id":"XK_KP_Left","name":"XK_KP_Left","value":"65430","doc":null,"summary":null},{"id":"XK_KP_Multiply","name":"XK_KP_Multiply","value":"65450","doc":"Equals","summary":"<p>Equals</p>"},{"id":"XK_KP_Next","name":"XK_KP_Next","value":"65435","doc":null,"summary":null},{"id":"XK_KP_Page_Down","name":"XK_KP_Page_Down","value":"65435","doc":null,"summary":null},{"id":"XK_KP_Page_Up","name":"XK_KP_Page_Up","value":"65434","doc":null,"summary":null},{"id":"XK_KP_Prior","name":"XK_KP_Prior","value":"65434","doc":null,"summary":null},{"id":"XK_KP_Right","name":"XK_KP_Right","value":"65432","doc":null,"summary":null},{"id":"XK_KP_Separator","name":"XK_KP_Separator","value":"65452","doc":null,"summary":null},{"id":"XK_KP_Space","name":"XK_KP_Space","value":"65408","doc":null,"summary":null},{"id":"XK_KP_Subtract","name":"XK_KP_Subtract","value":"65453","doc":"Separator, often comma","summary":"<p>Separator, often comma</p>"},{"id":"XK_KP_Tab","name":"XK_KP_Tab","value":"65417","doc":"Space","summary":"<p>Space</p>"},{"id":"XK_KP_Up","name":"XK_KP_Up","value":"65431","doc":null,"summary":null},{"id":"XK_kra","name":"XK_kra","value":"930","doc":null,"summary":null},{"id":"XK_l","name":"XK_l","value":"108","doc":"U+006B LATIN SMALL LETTER K","summary":"<p>U+006B LATIN SMALL LETTER K</p>"},{"id":"XK_L","name":"XK_L","value":"76","doc":"U+004B LATIN CAPITAL LETTER K","summary":"<p>U+004B LATIN CAPITAL LETTER K</p>"},{"id":"XK_L1","name":"XK_L1","value":"65480","doc":null,"summary":null},{"id":"XK_L10","name":"XK_L10","value":"65489","doc":null,"summary":null},{"id":"XK_L2","name":"XK_L2","value":"65481","doc":null,"summary":null},{"id":"XK_L3","name":"XK_L3","value":"65482","doc":null,"summary":null},{"id":"XK_L4","name":"XK_L4","value":"65483","doc":null,"summary":null},{"id":"XK_L5","name":"XK_L5","value":"65484","doc":null,"summary":null},{"id":"XK_L6","name":"XK_L6","value":"65485","doc":null,"summary":null},{"id":"XK_L7","name":"XK_L7","value":"65486","doc":null,"summary":null},{"id":"XK_L8","name":"XK_L8","value":"65487","doc":null,"summary":null},{"id":"XK_L9","name":"XK_L9","value":"65488","doc":null,"summary":null},{"id":"XK_Lacute","name":"XK_Lacute","value":"453","doc":"U+0102 LATIN CAPITAL LETTER A WITH BREVE","summary":"<p>U+0102 LATIN CAPITAL LETTER A WITH BREVE</p>"},{"id":"XK_lacute","name":"XK_lacute","value":"485","doc":"U+0103 LATIN SMALL LETTER A WITH BREVE","summary":"<p>U+0103 LATIN SMALL LETTER A WITH BREVE</p>"},{"id":"XK_Last_Virtual_Screen","name":"XK_Last_Virtual_Screen","value":"65236","doc":null,"summary":null},{"id":"XK_LATIN1","name":"XK_LATIN1","value":"true","doc":null,"summary":null},{"id":"XK_LATIN2","name":"XK_LATIN2","value":"true","doc":null,"summary":null},{"id":"XK_LATIN3","name":"XK_LATIN3","value":"true","doc":null,"summary":null},{"id":"XK_LATIN4","name":"XK_LATIN4","value":"true","doc":null,"summary":null},{"id":"XK_LATIN8","name":"XK_LATIN8","value":"true","doc":null,"summary":null},{"id":"XK_LATIN9","name":"XK_LATIN9","value":"true","doc":null,"summary":null},{"id":"XK_lbelowdot","name":"XK_lbelowdot","value":"16784951","doc":"U+1E36 LATIN CAPITAL LETTER L WITH DOT BELOW","summary":"<p>U+1E36 LATIN CAPITAL LETTER L WITH DOT BELOW</p>"},{"id":"XK_Lbelowdot","name":"XK_Lbelowdot","value":"16784950","doc":"U+0292 LATIN SMALL LETTER EZH\nthose are not really Caucasus\nFor Inupiak\nthose are not really Caucasus\nFor Inupiak","summary":"<p>U+0292 LATIN SMALL LETTER EZH those are not really Caucasus For Inupiak those are not really Caucasus For Inupiak</p>"},{"id":"XK_lcaron","name":"XK_lcaron","value":"437","doc":"U+0142 LATIN SMALL LETTER L WITH STROKE","summary":"<p>U+0142 LATIN SMALL LETTER L WITH STROKE</p>"},{"id":"XK_Lcaron","name":"XK_Lcaron","value":"421","doc":"U+0141 LATIN CAPITAL LETTER L WITH STROKE","summary":"<p>U+0141 LATIN CAPITAL LETTER L WITH STROKE</p>"},{"id":"XK_Lcedilla","name":"XK_Lcedilla","value":"934","doc":"U+0128 LATIN CAPITAL LETTER I WITH TILDE","summary":"<p>U+0128 LATIN CAPITAL LETTER I WITH TILDE</p>"},{"id":"XK_lcedilla","name":"XK_lcedilla","value":"950","doc":"U+0129 LATIN SMALL LETTER I WITH TILDE","summary":"<p>U+0129 LATIN SMALL LETTER I WITH TILDE</p>"},{"id":"XK_Left","name":"XK_Left","value":"65361","doc":null,"summary":null},{"id":"XK_less","name":"XK_less","value":"60","doc":"U+003B SEMICOLON","summary":"<p>U+003B SEMICOLON</p>"},{"id":"XK_Linefeed","name":"XK_Linefeed","value":"65290","doc":null,"summary":null},{"id":"XK_LiraSign","name":"XK_LiraSign","value":"16785572","doc":"U+20A3 FRENCH FRANC SIGN","summary":"<p>U+20A3 FRENCH FRANC SIGN</p>"},{"id":"XK_Lstroke","name":"XK_Lstroke","value":"419","doc":"U+02D8 BREVE","summary":"<p>U+02D8 BREVE</p>"},{"id":"XK_lstroke","name":"XK_lstroke","value":"435","doc":"U+02DB OGONEK","summary":"<p>U+02DB OGONEK</p>"},{"id":"XK_M","name":"XK_M","value":"77","doc":"U+004C LATIN CAPITAL LETTER L","summary":"<p>U+004C LATIN CAPITAL LETTER L</p>"},{"id":"XK_m","name":"XK_m","value":"109","doc":"U+006C LATIN SMALL LETTER L","summary":"<p>U+006C LATIN SMALL LETTER L</p>"},{"id":"XK_mabovedot","name":"XK_mabovedot","value":"16784961","doc":"U+1E40 LATIN CAPITAL LETTER M WITH DOT ABOVE","summary":"<p>U+1E40 LATIN CAPITAL LETTER M WITH DOT ABOVE</p>"},{"id":"XK_Mabovedot","name":"XK_Mabovedot","value":"16784960","doc":"U+1E1F LATIN SMALL LETTER F WITH DOT ABOVE","summary":"<p>U+1E1F LATIN SMALL LETTER F WITH DOT ABOVE</p>"},{"id":"XK_Macedonia_DSE","name":"XK_Macedonia_DSE","value":"1717","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Macedonia_dse","name":"XK_Macedonia_dse","value":"1701","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Macedonia_GJE","name":"XK_Macedonia_GJE","value":"1714","doc":"U+0402 CYRILLIC CAPITAL LETTER DJE","summary":"<p>U+0402 CYRILLIC CAPITAL LETTER DJE</p>"},{"id":"XK_Macedonia_gje","name":"XK_Macedonia_gje","value":"1698","doc":"U+0452 CYRILLIC SMALL LETTER DJE","summary":"<p>U+0452 CYRILLIC SMALL LETTER DJE</p>"},{"id":"XK_Macedonia_kje","name":"XK_Macedonia_kje","value":"1708","doc":"U+045B CYRILLIC SMALL LETTER TSHE","summary":"<p>U+045B CYRILLIC SMALL LETTER TSHE</p>"},{"id":"XK_Macedonia_KJE","name":"XK_Macedonia_KJE","value":"1724","doc":"U+040B CYRILLIC CAPITAL LETTER TSHE","summary":"<p>U+040B CYRILLIC CAPITAL LETTER TSHE</p>"},{"id":"XK_macron","name":"XK_macron","value":"175","doc":"U+00AE REGISTERED SIGN","summary":"<p>U+00AE REGISTERED SIGN</p>"},{"id":"XK_Mae_Koho","name":"XK_Mae_Koho","value":"65342","doc":"Multiple/All Candidate(s)","summary":"<p>Multiple/All Candidate(s)</p>"},{"id":"XK_masculine","name":"XK_masculine","value":"186","doc":"U+00B9 SUPERSCRIPT ONE","summary":"<p>U+00B9 SUPERSCRIPT ONE</p>"},{"id":"XK_Massyo","name":"XK_Massyo","value":"65324","doc":"Add to Dictionary","summary":"<p>Add to Dictionary</p>"},{"id":"XK_MATHEMATICAL","name":"XK_MATHEMATICAL","value":"true","doc":null,"summary":null},{"id":"XK_Menu","name":"XK_Menu","value":"65383","doc":"Redo, again","summary":"<p>Redo, again</p>"},{"id":"XK_Meta_L","name":"XK_Meta_L","value":"65511","doc":null,"summary":null},{"id":"XK_Meta_R","name":"XK_Meta_R","value":"65512","doc":"Left meta","summary":"<p>Left meta</p>"},{"id":"XK_MillSign","name":"XK_MillSign","value":"16785573","doc":"U+20A4 LIRA SIGN","summary":"<p>U+20A4 LIRA SIGN</p>"},{"id":"XK_minus","name":"XK_minus","value":"45","doc":"U+002C COMMA","summary":"<p>U+002C COMMA</p>"},{"id":"XK_MISCELLANY","name":"XK_MISCELLANY","value":"true","doc":"default keysyms","summary":"<p>default keysyms</p>"},{"id":"XK_Mode_switch","name":"XK_Mode_switch","value":"65406","doc":null,"summary":null},{"id":"XK_MouseKeys_Accel_Enable","name":"XK_MouseKeys_Accel_Enable","value":"65143","doc":null,"summary":null},{"id":"XK_MouseKeys_Enable","name":"XK_MouseKeys_Enable","value":"65142","doc":null,"summary":null},{"id":"XK_mu","name":"XK_mu","value":"181","doc":"U+00B4 ACUTE ACCENT","summary":"<p>U+00B4 ACUTE ACCENT</p>"},{"id":"XK_Muhenkan","name":"XK_Muhenkan","value":"65314","doc":"Kanji, Kanji convert","summary":"<p>Kanji, Kanji convert</p>"},{"id":"XK_Multi_key","name":"XK_Multi_key","value":"65312","doc":null,"summary":null},{"id":"XK_MultipleCandidate","name":"XK_MultipleCandidate","value":"65341","doc":null,"summary":null},{"id":"XK_multiply","name":"XK_multiply","value":"215","doc":"U+00D6 LATIN CAPITAL LETTER O WITH DIAERESIS","summary":"<p>U+00D6 LATIN CAPITAL LETTER O WITH DIAERESIS</p>"},{"id":"XK_N","name":"XK_N","value":"78","doc":"U+004D LATIN CAPITAL LETTER M","summary":"<p>U+004D LATIN CAPITAL LETTER M</p>"},{"id":"XK_n","name":"XK_n","value":"110","doc":"U+006D LATIN SMALL LETTER M","summary":"<p>U+006D LATIN SMALL LETTER M</p>"},{"id":"XK_nacute","name":"XK_nacute","value":"497","doc":"U+0111 LATIN SMALL LETTER D WITH STROKE","summary":"<p>U+0111 LATIN SMALL LETTER D WITH STROKE</p>"},{"id":"XK_Nacute","name":"XK_Nacute","value":"465","doc":"U+0110 LATIN CAPITAL LETTER D WITH STROKE","summary":"<p>U+0110 LATIN CAPITAL LETTER D WITH STROKE</p>"},{"id":"XK_NairaSign","name":"XK_NairaSign","value":"16785574","doc":"U+20A5 MILL SIGN","summary":"<p>U+20A5 MILL SIGN</p>"},{"id":"XK_Ncaron","name":"XK_Ncaron","value":"466","doc":"U+0143 LATIN CAPITAL LETTER N WITH ACUTE","summary":"<p>U+0143 LATIN CAPITAL LETTER N WITH ACUTE</p>"},{"id":"XK_ncaron","name":"XK_ncaron","value":"498","doc":"U+0144 LATIN SMALL LETTER N WITH ACUTE","summary":"<p>U+0144 LATIN SMALL LETTER N WITH ACUTE</p>"},{"id":"XK_ncedilla","name":"XK_ncedilla","value":"1009","doc":"U+012B LATIN SMALL LETTER I WITH MACRON","summary":"<p>U+012B LATIN SMALL LETTER I WITH MACRON</p>"},{"id":"XK_Ncedilla","name":"XK_Ncedilla","value":"977","doc":"U+012A LATIN CAPITAL LETTER I WITH MACRON","summary":"<p>U+012A LATIN CAPITAL LETTER I WITH MACRON</p>"},{"id":"XK_NewSheqelSign","name":"XK_NewSheqelSign","value":"16785578","doc":"U+20A9 WON SIGN","summary":"<p>U+20A9 WON SIGN</p>"},{"id":"XK_Next","name":"XK_Next","value":"65366","doc":null,"summary":null},{"id":"XK_Next_Virtual_Screen","name":"XK_Next_Virtual_Screen","value":"65234","doc":null,"summary":null},{"id":"XK_ninesubscript","name":"XK_ninesubscript","value":"16785545","doc":"U+2088 SUBSCRIPT EIGHT","summary":"<p>U+2088 SUBSCRIPT EIGHT</p>"},{"id":"XK_ninesuperior","name":"XK_ninesuperior","value":"16785529","doc":"U+2078 SUPERSCRIPT EIGHT","summary":"<p>U+2078 SUPERSCRIPT EIGHT</p>"},{"id":"XK_nobreakspace","name":"XK_nobreakspace","value":"160","doc":null,"summary":null},{"id":"XK_notapproxeq","name":"XK_notapproxeq","value":"16785991","doc":"U+2245 ALMOST EQUAL TO","summary":"<p>U+2245 ALMOST EQUAL TO</p>"},{"id":"XK_notelementof","name":"XK_notelementof","value":"16785929","doc":"U+2208 ELEMENT OF","summary":"<p>U+2208 ELEMENT OF</p>"},{"id":"XK_notidentical","name":"XK_notidentical","value":"16786018","doc":"U+2247 NOT ALMOST EQUAL TO","summary":"<p>U+2247 NOT ALMOST EQUAL TO</p>"},{"id":"XK_notsign","name":"XK_notsign","value":"172","doc":"U+00AB LEFT-POINTING DOUBLE ANGLE QUOTATION MARK","summary":"<p>U+00AB LEFT-POINTING DOUBLE ANGLE QUOTATION MARK</p>"},{"id":"XK_Ntilde","name":"XK_Ntilde","value":"209","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_ntilde","name":"XK_ntilde","value":"241","doc":"U+00F0 LATIN SMALL LETTER ETH","summary":"<p>U+00F0 LATIN SMALL LETTER ETH</p>"},{"id":"XK_Num_Lock","name":"XK_Num_Lock","value":"65407","doc":"Alias for mode_switch","summary":"<p>Alias for mode_switch</p>"},{"id":"XK_numbersign","name":"XK_numbersign","value":"35","doc":"U+0022 QUOTATION MARK","summary":"<p>U+0022 QUOTATION MARK</p>"},{"id":"XK_numerosign","name":"XK_numerosign","value":"1712","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_O","name":"XK_O","value":"79","doc":"U+004E LATIN CAPITAL LETTER N","summary":"<p>U+004E LATIN CAPITAL LETTER N</p>"},{"id":"XK_o","name":"XK_o","value":"111","doc":"U+006E LATIN SMALL LETTER N","summary":"<p>U+006E LATIN SMALL LETTER N</p>"},{"id":"XK_oacute","name":"XK_oacute","value":"243","doc":"U+00F2 LATIN SMALL LETTER O WITH GRAVE","summary":"<p>U+00F2 LATIN SMALL LETTER O WITH GRAVE</p>"},{"id":"XK_Oacute","name":"XK_Oacute","value":"211","doc":"U+00D2 LATIN CAPITAL LETTER O WITH GRAVE","summary":"<p>U+00D2 LATIN CAPITAL LETTER O WITH GRAVE</p>"},{"id":"XK_obarred","name":"XK_obarred","value":"16777845","doc":"U+01D2 LATIN SMALL LETTER O WITH CARON","summary":"<p>U+01D2 LATIN SMALL LETTER O WITH CARON</p>"},{"id":"XK_Obarred","name":"XK_Obarred","value":"16777631","doc":"U+01D2 LATIN CAPITAL LETTER O WITH CARON","summary":"<p>U+01D2 LATIN CAPITAL LETTER O WITH CARON</p>"},{"id":"XK_obelowdot","name":"XK_obelowdot","value":"16785101","doc":"U+1ECC LATIN CAPITAL LETTER O WITH DOT BELOW","summary":"<p>U+1ECC LATIN CAPITAL LETTER O WITH DOT BELOW</p>"},{"id":"XK_Obelowdot","name":"XK_Obelowdot","value":"16785100","doc":"U+1ECB LATIN SMALL LETTER I WITH DOT BELOW","summary":"<p>U+1ECB LATIN SMALL LETTER I WITH DOT BELOW</p>"},{"id":"XK_Ocaron","name":"XK_Ocaron","value":"16777681","doc":"U+01E6 LATIN CAPITAL LETTER G WITH CARON","summary":"<p>U+01E6 LATIN CAPITAL LETTER G WITH CARON</p>"},{"id":"XK_ocaron","name":"XK_ocaron","value":"16777682","doc":"U+01E7 LATIN SMALL LETTER G WITH CARON","summary":"<p>U+01E7 LATIN SMALL LETTER G WITH CARON</p>"},{"id":"XK_ocircumflex","name":"XK_ocircumflex","value":"244","doc":"U+00F3 LATIN SMALL LETTER O WITH ACUTE","summary":"<p>U+00F3 LATIN SMALL LETTER O WITH ACUTE</p>"},{"id":"XK_Ocircumflex","name":"XK_Ocircumflex","value":"212","doc":"U+00D3 LATIN CAPITAL LETTER O WITH ACUTE","summary":"<p>U+00D3 LATIN CAPITAL LETTER O WITH ACUTE</p>"},{"id":"XK_Ocircumflexacute","name":"XK_Ocircumflexacute","value":"16785104","doc":"U+1ECF LATIN SMALL LETTER O WITH HOOK ABOVE","summary":"<p>U+1ECF LATIN SMALL LETTER O WITH HOOK ABOVE</p>"},{"id":"XK_ocircumflexacute","name":"XK_ocircumflexacute","value":"16785105","doc":"U+1ED0 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE","summary":"<p>U+1ED0 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE</p>"},{"id":"XK_ocircumflexbelowdot","name":"XK_ocircumflexbelowdot","value":"16785113","doc":"U+1ED8 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW","summary":"<p>U+1ED8 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW</p>"},{"id":"XK_Ocircumflexbelowdot","name":"XK_Ocircumflexbelowdot","value":"16785112","doc":"U+1ED7 LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE","summary":"<p>U+1ED7 LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE</p>"},{"id":"XK_Ocircumflexgrave","name":"XK_Ocircumflexgrave","value":"16785106","doc":"U+1ED1 LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE","summary":"<p>U+1ED1 LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE</p>"},{"id":"XK_ocircumflexgrave","name":"XK_ocircumflexgrave","value":"16785107","doc":"U+1ED2 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE","summary":"<p>U+1ED2 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE</p>"},{"id":"XK_Ocircumflexhook","name":"XK_Ocircumflexhook","value":"16785108","doc":"U+1ED3 LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE","summary":"<p>U+1ED3 LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE</p>"},{"id":"XK_ocircumflexhook","name":"XK_ocircumflexhook","value":"16785109","doc":"U+1ED4 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE","summary":"<p>U+1ED4 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE</p>"},{"id":"XK_ocircumflextilde","name":"XK_ocircumflextilde","value":"16785111","doc":"U+1ED6 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE","summary":"<p>U+1ED6 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE</p>"},{"id":"XK_Ocircumflextilde","name":"XK_Ocircumflextilde","value":"16785110","doc":"U+1ED5 LATIN SMALL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE","summary":"<p>U+1ED5 LATIN SMALL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE</p>"},{"id":"XK_Odiaeresis","name":"XK_Odiaeresis","value":"214","doc":"U+00D5 LATIN CAPITAL LETTER O WITH TILDE","summary":"<p>U+00D5 LATIN CAPITAL LETTER O WITH TILDE</p>"},{"id":"XK_odiaeresis","name":"XK_odiaeresis","value":"246","doc":"U+00F5 LATIN SMALL LETTER O WITH TILDE","summary":"<p>U+00F5 LATIN SMALL LETTER O WITH TILDE</p>"},{"id":"XK_Odoubleacute","name":"XK_Odoubleacute","value":"469","doc":"U+0147 LATIN CAPITAL LETTER N WITH CARON","summary":"<p>U+0147 LATIN CAPITAL LETTER N WITH CARON</p>"},{"id":"XK_odoubleacute","name":"XK_odoubleacute","value":"501","doc":"U+0148 LATIN SMALL LETTER N WITH CARON","summary":"<p>U+0148 LATIN SMALL LETTER N WITH CARON</p>"},{"id":"XK_oe","name":"XK_oe","value":"5053","doc":"U+0152 LATIN CAPITAL LIGATURE OE","summary":"<p>U+0152 LATIN CAPITAL LIGATURE OE</p>"},{"id":"XK_OE","name":"XK_OE","value":"5052","doc":null,"summary":null},{"id":"XK_ogonek","name":"XK_ogonek","value":"434","doc":"U+0105 LATIN SMALL LETTER A WITH OGONEK","summary":"<p>U+0105 LATIN SMALL LETTER A WITH OGONEK</p>"},{"id":"XK_Ograve","name":"XK_Ograve","value":"210","doc":"U+00D1 LATIN CAPITAL LETTER N WITH TILDE","summary":"<p>U+00D1 LATIN CAPITAL LETTER N WITH TILDE</p>"},{"id":"XK_ograve","name":"XK_ograve","value":"242","doc":"U+00F1 LATIN SMALL LETTER N WITH TILDE","summary":"<p>U+00F1 LATIN SMALL LETTER N WITH TILDE</p>"},{"id":"XK_ohook","name":"XK_ohook","value":"16785103","doc":"U+1ECE LATIN CAPITAL LETTER O WITH HOOK ABOVE","summary":"<p>U+1ECE LATIN CAPITAL LETTER O WITH HOOK ABOVE</p>"},{"id":"XK_Ohook","name":"XK_Ohook","value":"16785102","doc":"U+1ECD LATIN SMALL LETTER O WITH DOT BELOW","summary":"<p>U+1ECD LATIN SMALL LETTER O WITH DOT BELOW</p>"},{"id":"XK_Ohorn","name":"XK_Ohorn","value":"16777632","doc":"U+1EF9 LATIN SMALL LETTER Y WITH TILDE","summary":"<p>U+1EF9 LATIN SMALL LETTER Y WITH TILDE</p>"},{"id":"XK_ohorn","name":"XK_ohorn","value":"16777633","doc":"U+01A0 LATIN CAPITAL LETTER O WITH HORN","summary":"<p>U+01A0 LATIN CAPITAL LETTER O WITH HORN</p>"},{"id":"XK_Ohornacute","name":"XK_Ohornacute","value":"16785114","doc":"U+1ED9 LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW","summary":"<p>U+1ED9 LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW</p>"},{"id":"XK_ohornacute","name":"XK_ohornacute","value":"16785115","doc":"U+1EDA LATIN CAPITAL LETTER O WITH HORN AND ACUTE","summary":"<p>U+1EDA LATIN CAPITAL LETTER O WITH HORN AND ACUTE</p>"},{"id":"XK_Ohornbelowdot","name":"XK_Ohornbelowdot","value":"16785122","doc":"U+1EE1 LATIN SMALL LETTER O WITH HORN AND TILDE","summary":"<p>U+1EE1 LATIN SMALL LETTER O WITH HORN AND TILDE</p>"},{"id":"XK_ohornbelowdot","name":"XK_ohornbelowdot","value":"16785123","doc":"U+1EE2 LATIN CAPITAL LETTER O WITH HORN AND DOT BELOW","summary":"<p>U+1EE2 LATIN CAPITAL LETTER O WITH HORN AND DOT BELOW</p>"},{"id":"XK_ohorngrave","name":"XK_ohorngrave","value":"16785117","doc":"U+1EDC LATIN CAPITAL LETTER O WITH HORN AND GRAVE","summary":"<p>U+1EDC LATIN CAPITAL LETTER O WITH HORN AND GRAVE</p>"},{"id":"XK_Ohorngrave","name":"XK_Ohorngrave","value":"16785116","doc":"U+1EDB LATIN SMALL LETTER O WITH HORN AND ACUTE","summary":"<p>U+1EDB LATIN SMALL LETTER O WITH HORN AND ACUTE</p>"},{"id":"XK_Ohornhook","name":"XK_Ohornhook","value":"16785118","doc":"U+1EDD LATIN SMALL LETTER O WITH HORN AND GRAVE","summary":"<p>U+1EDD LATIN SMALL LETTER O WITH HORN AND GRAVE</p>"},{"id":"XK_ohornhook","name":"XK_ohornhook","value":"16785119","doc":"U+1EDE LATIN CAPITAL LETTER O WITH HORN AND HOOK ABOVE","summary":"<p>U+1EDE LATIN CAPITAL LETTER O WITH HORN AND HOOK ABOVE</p>"},{"id":"XK_Ohorntilde","name":"XK_Ohorntilde","value":"16785120","doc":"U+1EDF LATIN SMALL LETTER O WITH HORN AND HOOK ABOVE","summary":"<p>U+1EDF LATIN SMALL LETTER O WITH HORN AND HOOK ABOVE</p>"},{"id":"XK_ohorntilde","name":"XK_ohorntilde","value":"16785121","doc":"U+1EE0 LATIN CAPITAL LETTER O WITH HORN AND TILDE","summary":"<p>U+1EE0 LATIN CAPITAL LETTER O WITH HORN AND TILDE</p>"},{"id":"XK_Omacron","name":"XK_Omacron","value":"978","doc":"U+0145 LATIN CAPITAL LETTER N WITH CEDILLA","summary":"<p>U+0145 LATIN CAPITAL LETTER N WITH CEDILLA</p>"},{"id":"XK_omacron","name":"XK_omacron","value":"1010","doc":"U+0146 LATIN SMALL LETTER N WITH CEDILLA","summary":"<p>U+0146 LATIN SMALL LETTER N WITH CEDILLA</p>"},{"id":"XK_onehalf","name":"XK_onehalf","value":"189","doc":"U+00BC VULGAR FRACTION ONE QUARTER","summary":"<p>U+00BC VULGAR FRACTION ONE QUARTER</p>"},{"id":"XK_onequarter","name":"XK_onequarter","value":"188","doc":"U+00BB RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK","summary":"<p>U+00BB RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK</p>"},{"id":"XK_onesubscript","name":"XK_onesubscript","value":"16785537","doc":"U+2080 SUBSCRIPT ZERO","summary":"<p>U+2080 SUBSCRIPT ZERO</p>"},{"id":"XK_onesuperior","name":"XK_onesuperior","value":"185","doc":"U+00B8 CEDILLA","summary":"<p>U+00B8 CEDILLA</p>"},{"id":"XK_Ooblique","name":"XK_Ooblique","value":"216","doc":"U+00D8 LATIN CAPITAL LETTER O WITH STROKE","summary":"<p>U+00D8 LATIN CAPITAL LETTER O WITH STROKE</p>"},{"id":"XK_ooblique","name":"XK_ooblique","value":"248","doc":"U+00F8 LATIN SMALL LETTER O WITH STROKE","summary":"<p>U+00F8 LATIN SMALL LETTER O WITH STROKE</p>"},{"id":"XK_ordfeminine","name":"XK_ordfeminine","value":"170","doc":"U+00A9 COPYRIGHT SIGN","summary":"<p>U+00A9 COPYRIGHT SIGN</p>"},{"id":"XK_oslash","name":"XK_oslash","value":"248","doc":"U+00F7 DIVISION SIGN","summary":"<p>U+00F7 DIVISION SIGN</p>"},{"id":"XK_Oslash","name":"XK_Oslash","value":"216","doc":"U+00D7 MULTIPLICATION SIGN","summary":"<p>U+00D7 MULTIPLICATION SIGN</p>"},{"id":"XK_Otilde","name":"XK_Otilde","value":"213","doc":"U+00D4 LATIN CAPITAL LETTER O WITH CIRCUMFLEX","summary":"<p>U+00D4 LATIN CAPITAL LETTER O WITH CIRCUMFLEX</p>"},{"id":"XK_otilde","name":"XK_otilde","value":"245","doc":"U+00F4 LATIN SMALL LETTER O WITH CIRCUMFLEX","summary":"<p>U+00F4 LATIN SMALL LETTER O WITH CIRCUMFLEX</p>"},{"id":"XK_Overlay1_Enable","name":"XK_Overlay1_Enable","value":"65144","doc":null,"summary":null},{"id":"XK_Overlay2_Enable","name":"XK_Overlay2_Enable","value":"65145","doc":null,"summary":null},{"id":"XK_overline","name":"XK_overline","value":"1150","doc":null,"summary":null},{"id":"XK_p","name":"XK_p","value":"112","doc":"U+006F LATIN SMALL LETTER O","summary":"<p>U+006F LATIN SMALL LETTER O</p>"},{"id":"XK_P","name":"XK_P","value":"80","doc":"U+004F LATIN CAPITAL LETTER O","summary":"<p>U+004F LATIN CAPITAL LETTER O</p>"},{"id":"XK_Pabovedot","name":"XK_Pabovedot","value":"16784982","doc":"U+1E41 LATIN SMALL LETTER M WITH DOT ABOVE","summary":"<p>U+1E41 LATIN SMALL LETTER M WITH DOT ABOVE</p>"},{"id":"XK_pabovedot","name":"XK_pabovedot","value":"16784983","doc":"U+1E56 LATIN CAPITAL LETTER P WITH DOT ABOVE","summary":"<p>U+1E56 LATIN CAPITAL LETTER P WITH DOT ABOVE</p>"},{"id":"XK_Page_Down","name":"XK_Page_Down","value":"65366","doc":"Next","summary":"<p>Next</p>"},{"id":"XK_Page_Up","name":"XK_Page_Up","value":"65365","doc":"Prior, previous","summary":"<p>Prior, previous</p>"},{"id":"XK_paragraph","name":"XK_paragraph","value":"182","doc":"U+00B5 MICRO SIGN","summary":"<p>U+00B5 MICRO SIGN</p>"},{"id":"XK_parenleft","name":"XK_parenleft","value":"40","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_parenright","name":"XK_parenright","value":"41","doc":"U+0028 LEFT PARENTHESIS","summary":"<p>U+0028 LEFT PARENTHESIS</p>"},{"id":"XK_partdifferential","name":"XK_partdifferential","value":"16785922","doc":"U+2089 SUBSCRIPT NINE","summary":"<p>U+2089 SUBSCRIPT NINE</p>"},{"id":"XK_Pause","name":"XK_Pause","value":"65299","doc":"Return, enter","summary":"<p>Return, enter</p>"},{"id":"XK_percent","name":"XK_percent","value":"37","doc":"U+0024 DOLLAR SIGN","summary":"<p>U+0024 DOLLAR SIGN</p>"},{"id":"XK_period","name":"XK_period","value":"46","doc":"U+002D HYPHEN-MINUS","summary":"<p>U+002D HYPHEN-MINUS</p>"},{"id":"XK_periodcentered","name":"XK_periodcentered","value":"183","doc":"U+00B6 PILCROW SIGN","summary":"<p>U+00B6 PILCROW SIGN</p>"},{"id":"XK_PesetaSign","name":"XK_PesetaSign","value":"16785575","doc":"U+20A6 NAIRA SIGN","summary":"<p>U+20A6 NAIRA SIGN</p>"},{"id":"XK_plus","name":"XK_plus","value":"43","doc":"U+002A ASTERISK","summary":"<p>U+002A ASTERISK</p>"},{"id":"XK_plusminus","name":"XK_plusminus","value":"177","doc":"U+00B0 DEGREE SIGN","summary":"<p>U+00B0 DEGREE SIGN</p>"},{"id":"XK_Pointer_Accelerate","name":"XK_Pointer_Accelerate","value":"65274","doc":null,"summary":null},{"id":"XK_Pointer_Button1","name":"XK_Pointer_Button1","value":"65257","doc":null,"summary":null},{"id":"XK_Pointer_Button2","name":"XK_Pointer_Button2","value":"65258","doc":null,"summary":null},{"id":"XK_Pointer_Button3","name":"XK_Pointer_Button3","value":"65259","doc":null,"summary":null},{"id":"XK_Pointer_Button4","name":"XK_Pointer_Button4","value":"65260","doc":null,"summary":null},{"id":"XK_Pointer_Button5","name":"XK_Pointer_Button5","value":"65261","doc":null,"summary":null},{"id":"XK_Pointer_Button_Dflt","name":"XK_Pointer_Button_Dflt","value":"65256","doc":null,"summary":null},{"id":"XK_Pointer_DblClick1","name":"XK_Pointer_DblClick1","value":"65263","doc":null,"summary":null},{"id":"XK_Pointer_DblClick2","name":"XK_Pointer_DblClick2","value":"65264","doc":null,"summary":null},{"id":"XK_Pointer_DblClick3","name":"XK_Pointer_DblClick3","value":"65265","doc":null,"summary":null},{"id":"XK_Pointer_DblClick4","name":"XK_Pointer_DblClick4","value":"65266","doc":null,"summary":null},{"id":"XK_Pointer_DblClick5","name":"XK_Pointer_DblClick5","value":"65267","doc":null,"summary":null},{"id":"XK_Pointer_DblClick_Dflt","name":"XK_Pointer_DblClick_Dflt","value":"65262","doc":null,"summary":null},{"id":"XK_Pointer_DfltBtnNext","name":"XK_Pointer_DfltBtnNext","value":"65275","doc":null,"summary":null},{"id":"XK_Pointer_DfltBtnPrev","name":"XK_Pointer_DfltBtnPrev","value":"65276","doc":null,"summary":null},{"id":"XK_Pointer_Down","name":"XK_Pointer_Down","value":"65251","doc":null,"summary":null},{"id":"XK_Pointer_DownLeft","name":"XK_Pointer_DownLeft","value":"65254","doc":null,"summary":null},{"id":"XK_Pointer_DownRight","name":"XK_Pointer_DownRight","value":"65255","doc":null,"summary":null},{"id":"XK_Pointer_Drag1","name":"XK_Pointer_Drag1","value":"65269","doc":null,"summary":null},{"id":"XK_Pointer_Drag2","name":"XK_Pointer_Drag2","value":"65270","doc":null,"summary":null},{"id":"XK_Pointer_Drag3","name":"XK_Pointer_Drag3","value":"65271","doc":null,"summary":null},{"id":"XK_Pointer_Drag4","name":"XK_Pointer_Drag4","value":"65272","doc":null,"summary":null},{"id":"XK_Pointer_Drag5","name":"XK_Pointer_Drag5","value":"65277","doc":null,"summary":null},{"id":"XK_Pointer_Drag_Dflt","name":"XK_Pointer_Drag_Dflt","value":"65268","doc":null,"summary":null},{"id":"XK_Pointer_EnableKeys","name":"XK_Pointer_EnableKeys","value":"65273","doc":null,"summary":null},{"id":"XK_Pointer_Left","name":"XK_Pointer_Left","value":"65248","doc":null,"summary":null},{"id":"XK_Pointer_Right","name":"XK_Pointer_Right","value":"65249","doc":null,"summary":null},{"id":"XK_Pointer_Up","name":"XK_Pointer_Up","value":"65250","doc":null,"summary":null},{"id":"XK_Pointer_UpLeft","name":"XK_Pointer_UpLeft","value":"65252","doc":null,"summary":null},{"id":"XK_Pointer_UpRight","name":"XK_Pointer_UpRight","value":"65253","doc":null,"summary":null},{"id":"XK_Prev_Virtual_Screen","name":"XK_Prev_Virtual_Screen","value":"65233","doc":null,"summary":null},{"id":"XK_PreviousCandidate","name":"XK_PreviousCandidate","value":"65342","doc":null,"summary":null},{"id":"XK_Print","name":"XK_Print","value":"65377","doc":"Select, mark","summary":"<p>Select, mark</p>"},{"id":"XK_Prior","name":"XK_Prior","value":"65365","doc":"Move down, down arrow","summary":"<p>Move down, down arrow</p>"},{"id":"XK_prolongedsound","name":"XK_prolongedsound","value":"1200","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_PUBLISHING","name":"XK_PUBLISHING","value":"false","doc":null,"summary":null},{"id":"XK_Q","name":"XK_Q","value":"81","doc":"U+0050 LATIN CAPITAL LETTER P","summary":"<p>U+0050 LATIN CAPITAL LETTER P</p>"},{"id":"XK_q","name":"XK_q","value":"113","doc":"U+0070 LATIN SMALL LETTER P","summary":"<p>U+0070 LATIN SMALL LETTER P</p>"},{"id":"XK_question","name":"XK_question","value":"63","doc":"U+003E GREATER-THAN SIGN","summary":"<p>U+003E GREATER-THAN SIGN</p>"},{"id":"XK_questiondown","name":"XK_questiondown","value":"191","doc":"U+00BE VULGAR FRACTION THREE QUARTERS","summary":"<p>U+00BE VULGAR FRACTION THREE QUARTERS</p>"},{"id":"XK_quotedbl","name":"XK_quotedbl","value":"34","doc":"U+0021 EXCLAMATION MARK","summary":"<p>U+0021 EXCLAMATION MARK</p>"},{"id":"XK_quoteleft","name":"XK_quoteleft","value":"96","doc":"U+0060 GRAVE ACCENT","summary":"<p>U+0060 GRAVE ACCENT</p>"},{"id":"XK_quoteright","name":"XK_quoteright","value":"39","doc":"U+0027 APOSTROPHE","summary":"<p>U+0027 APOSTROPHE</p>"},{"id":"XK_R","name":"XK_R","value":"82","doc":"U+0051 LATIN CAPITAL LETTER Q","summary":"<p>U+0051 LATIN CAPITAL LETTER Q</p>"},{"id":"XK_r","name":"XK_r","value":"114","doc":"U+0071 LATIN SMALL LETTER Q","summary":"<p>U+0071 LATIN SMALL LETTER Q</p>"},{"id":"XK_R1","name":"XK_R1","value":"65490","doc":null,"summary":null},{"id":"XK_R10","name":"XK_R10","value":"65499","doc":null,"summary":null},{"id":"XK_R11","name":"XK_R11","value":"65500","doc":null,"summary":null},{"id":"XK_R12","name":"XK_R12","value":"65501","doc":null,"summary":null},{"id":"XK_R13","name":"XK_R13","value":"65502","doc":null,"summary":null},{"id":"XK_R14","name":"XK_R14","value":"65503","doc":null,"summary":null},{"id":"XK_R15","name":"XK_R15","value":"65504","doc":null,"summary":null},{"id":"XK_R2","name":"XK_R2","value":"65491","doc":null,"summary":null},{"id":"XK_R3","name":"XK_R3","value":"65492","doc":null,"summary":null},{"id":"XK_R4","name":"XK_R4","value":"65493","doc":null,"summary":null},{"id":"XK_R5","name":"XK_R5","value":"65494","doc":null,"summary":null},{"id":"XK_R6","name":"XK_R6","value":"65495","doc":null,"summary":null},{"id":"XK_R7","name":"XK_R7","value":"65496","doc":null,"summary":null},{"id":"XK_R8","name":"XK_R8","value":"65497","doc":null,"summary":null},{"id":"XK_R9","name":"XK_R9","value":"65498","doc":null,"summary":null},{"id":"XK_Racute","name":"XK_Racute","value":"448","doc":"U+017C LATIN SMALL LETTER Z WITH DOT ABOVE","summary":"<p>U+017C LATIN SMALL LETTER Z WITH DOT ABOVE</p>"},{"id":"XK_racute","name":"XK_racute","value":"480","doc":"U+0162 LATIN CAPITAL LETTER T WITH CEDILLA","summary":"<p>U+0162 LATIN CAPITAL LETTER T WITH CEDILLA</p>"},{"id":"XK_rcaron","name":"XK_rcaron","value":"504","doc":"U+0151 LATIN SMALL LETTER O WITH DOUBLE ACUTE","summary":"<p>U+0151 LATIN SMALL LETTER O WITH DOUBLE ACUTE</p>"},{"id":"XK_Rcaron","name":"XK_Rcaron","value":"472","doc":"U+0150 LATIN CAPITAL LETTER O WITH DOUBLE ACUTE","summary":"<p>U+0150 LATIN CAPITAL LETTER O WITH DOUBLE ACUTE</p>"},{"id":"XK_Rcedilla","name":"XK_Rcedilla","value":"931","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_rcedilla","name":"XK_rcedilla","value":"947","doc":"U+0166 LATIN CAPITAL LETTER T WITH STROKE","summary":"<p>U+0166 LATIN CAPITAL LETTER T WITH STROKE</p>"},{"id":"XK_Redo","name":"XK_Redo","value":"65382","doc":null,"summary":null},{"id":"XK_registered","name":"XK_registered","value":"174","doc":"U+00AD SOFT HYPHEN","summary":"<p>U+00AD SOFT HYPHEN</p>"},{"id":"XK_RepeatKeys_Enable","name":"XK_RepeatKeys_Enable","value":"65138","doc":null,"summary":null},{"id":"XK_Return","name":"XK_Return","value":"65293","doc":null,"summary":null},{"id":"XK_Right","name":"XK_Right","value":"65363","doc":"Move up, up arrow","summary":"<p>Move up, up arrow</p>"},{"id":"XK_Romaji","name":"XK_Romaji","value":"65316","doc":"Alias for Henkan_Mode","summary":"<p>Alias for Henkan_Mode</p>"},{"id":"XK_RupeeSign","name":"XK_RupeeSign","value":"16785576","doc":"U+20A7 PESETA SIGN","summary":"<p>U+20A7 PESETA SIGN</p>"},{"id":"XK_s","name":"XK_s","value":"115","doc":"U+0072 LATIN SMALL LETTER R","summary":"<p>U+0072 LATIN SMALL LETTER R</p>"},{"id":"XK_S","name":"XK_S","value":"83","doc":"U+0052 LATIN CAPITAL LETTER R","summary":"<p>U+0052 LATIN CAPITAL LETTER R</p>"},{"id":"XK_sabovedot","name":"XK_sabovedot","value":"16784993","doc":"U+1E60 LATIN CAPITAL LETTER S WITH DOT ABOVE","summary":"<p>U+1E60 LATIN CAPITAL LETTER S WITH DOT ABOVE</p>"},{"id":"XK_Sabovedot","name":"XK_Sabovedot","value":"16784992","doc":"U+1E57 LATIN SMALL LETTER P WITH DOT ABOVE","summary":"<p>U+1E57 LATIN SMALL LETTER P WITH DOT ABOVE</p>"},{"id":"XK_sacute","name":"XK_sacute","value":"438","doc":"U+013E LATIN SMALL LETTER L WITH CARON","summary":"<p>U+013E LATIN SMALL LETTER L WITH CARON</p>"},{"id":"XK_Sacute","name":"XK_Sacute","value":"422","doc":"U+013D LATIN CAPITAL LETTER L WITH CARON","summary":"<p>U+013D LATIN CAPITAL LETTER L WITH CARON</p>"},{"id":"XK_scaron","name":"XK_scaron","value":"441","doc":"U+02C7 CARON","summary":"<p>U+02C7 CARON</p>"},{"id":"XK_Scaron","name":"XK_Scaron","value":"425","doc":"U+015A LATIN CAPITAL LETTER S WITH ACUTE","summary":"<p>U+015A LATIN CAPITAL LETTER S WITH ACUTE</p>"},{"id":"XK_Scedilla","name":"XK_Scedilla","value":"426","doc":"U+0160 LATIN CAPITAL LETTER S WITH CARON","summary":"<p>U+0160 LATIN CAPITAL LETTER S WITH CARON</p>"},{"id":"XK_scedilla","name":"XK_scedilla","value":"442","doc":"U+0161 LATIN SMALL LETTER S WITH CARON","summary":"<p>U+0161 LATIN SMALL LETTER S WITH CARON</p>"},{"id":"XK_SCHWA","name":"XK_SCHWA","value":"16777615","doc":"U+0275 LATIN SMALL LETTER BARRED O","summary":"<p>U+0275 LATIN SMALL LETTER BARRED O</p>"},{"id":"XK_schwa","name":"XK_schwa","value":"16777817","doc":"U+018F LATIN CAPITAL LETTER SCHWA","summary":"<p>U+018F LATIN CAPITAL LETTER SCHWA</p>"},{"id":"XK_Scircumflex","name":"XK_Scircumflex","value":"734","doc":"U+016C LATIN CAPITAL LETTER U WITH BREVE","summary":"<p>U+016C LATIN CAPITAL LETTER U WITH BREVE</p>"},{"id":"XK_scircumflex","name":"XK_scircumflex","value":"766","doc":"U+016D LATIN SMALL LETTER U WITH BREVE","summary":"<p>U+016D LATIN SMALL LETTER U WITH BREVE</p>"},{"id":"XK_script_switch","name":"XK_script_switch","value":"65406","doc":"Character set switch","summary":"<p>Character set switch</p>"},{"id":"XK_Scroll_Lock","name":"XK_Scroll_Lock","value":"65300","doc":"Pause, hold","summary":"<p>Pause, hold</p>"},{"id":"XK_section","name":"XK_section","value":"167","doc":"U+00A6 BROKEN BAR","summary":"<p>U+00A6 BROKEN BAR</p>"},{"id":"XK_Select","name":"XK_Select","value":"65376","doc":null,"summary":null},{"id":"XK_semicolon","name":"XK_semicolon","value":"59","doc":"U+003A COLON","summary":"<p>U+003A COLON</p>"},{"id":"XK_semivoicedsound","name":"XK_semivoicedsound","value":"1247","doc":"U+309B KATAKANA-HIRAGANA VOICED SOUND MARK","summary":"<p>U+309B KATAKANA-HIRAGANA VOICED SOUND MARK</p>"},{"id":"XK_Serbian_dje","name":"XK_Serbian_dje","value":"1697","doc":"U+04EF CYRILLIC SMALL LETTER U WITH MACRON","summary":"<p>U+04EF CYRILLIC SMALL LETTER U WITH MACRON</p>"},{"id":"XK_Serbian_DJE","name":"XK_Serbian_DJE","value":"1713","doc":"U+2116 NUMERO SIGN","summary":"<p>U+2116 NUMERO SIGN</p>"},{"id":"XK_Serbian_dze","name":"XK_Serbian_dze","value":"1711","doc":"U+045F CYRILLIC SMALL LETTER DZHE","summary":"<p>U+045F CYRILLIC SMALL LETTER DZHE</p>"},{"id":"XK_Serbian_DZE","name":"XK_Serbian_DZE","value":"1727","doc":"U+040F CYRILLIC CAPITAL LETTER DZHE","summary":"<p>U+040F CYRILLIC CAPITAL LETTER DZHE</p>"},{"id":"XK_Serbian_je","name":"XK_Serbian_je","value":"1704","doc":"U+0458 CYRILLIC SMALL LETTER JE","summary":"<p>U+0458 CYRILLIC SMALL LETTER JE</p>"},{"id":"XK_Serbian_JE","name":"XK_Serbian_JE","value":"1720","doc":"U+0408 CYRILLIC CAPITAL LETTER JE","summary":"<p>U+0408 CYRILLIC CAPITAL LETTER JE</p>"},{"id":"XK_Serbian_lje","name":"XK_Serbian_lje","value":"1705","doc":"U+0459 CYRILLIC SMALL LETTER LJE","summary":"<p>U+0459 CYRILLIC SMALL LETTER LJE</p>"},{"id":"XK_Serbian_LJE","name":"XK_Serbian_LJE","value":"1721","doc":"U+0409 CYRILLIC CAPITAL LETTER LJE","summary":"<p>U+0409 CYRILLIC CAPITAL LETTER LJE</p>"},{"id":"XK_Serbian_nje","name":"XK_Serbian_nje","value":"1706","doc":"U+045A CYRILLIC SMALL LETTER NJE","summary":"<p>U+045A CYRILLIC SMALL LETTER NJE</p>"},{"id":"XK_Serbian_NJE","name":"XK_Serbian_NJE","value":"1722","doc":"U+040A CYRILLIC CAPITAL LETTER NJE","summary":"<p>U+040A CYRILLIC CAPITAL LETTER NJE</p>"},{"id":"XK_Serbian_TSHE","name":"XK_Serbian_TSHE","value":"1723","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Serbian_tshe","name":"XK_Serbian_tshe","value":"1707","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_sevensubscript","name":"XK_sevensubscript","value":"16785543","doc":"U+2086 SUBSCRIPT SIX","summary":"<p>U+2086 SUBSCRIPT SIX</p>"},{"id":"XK_sevensuperior","name":"XK_sevensuperior","value":"16785527","doc":"U+2076 SUPERSCRIPT SIX","summary":"<p>U+2076 SUPERSCRIPT SIX</p>"},{"id":"XK_Shift_L","name":"XK_Shift_L","value":"65505","doc":null,"summary":null},{"id":"XK_Shift_Lock","name":"XK_Shift_Lock","value":"65510","doc":"Caps lock","summary":"<p>Caps lock</p>"},{"id":"XK_Shift_R","name":"XK_Shift_R","value":"65506","doc":"Left shift","summary":"<p>Left shift</p>"},{"id":"XK_SingleCandidate","name":"XK_SingleCandidate","value":"65340","doc":null,"summary":null},{"id":"XK_Sinh_a","name":"XK_Sinh_a","value":"16780677","doc":"U+0D83 SINHALA VISARGAYA","summary":"<p>U+0D83 SINHALA VISARGAYA</p>"},{"id":"XK_Sinh_aa","name":"XK_Sinh_aa","value":"16780678","doc":"U+0D85 SINHALA AYANNA","summary":"<p>U+0D85 SINHALA AYANNA</p>"},{"id":"XK_Sinh_aa2","name":"XK_Sinh_aa2","value":"16780751","doc":"U+0DCA SINHALA AL-LAKUNA","summary":"<p>U+0DCA SINHALA AL-LAKUNA</p>"},{"id":"XK_Sinh_ae","name":"XK_Sinh_ae","value":"16780679","doc":"U+0D86 SINHALA AAYANNA","summary":"<p>U+0D86 SINHALA AAYANNA</p>"},{"id":"XK_Sinh_ae2","name":"XK_Sinh_ae2","value":"16780752","doc":"U+0DCF SINHALA AELA-PILLA","summary":"<p>U+0DCF SINHALA AELA-PILLA</p>"},{"id":"XK_Sinh_aee","name":"XK_Sinh_aee","value":"16780680","doc":"U+0D87 SINHALA AEYANNA","summary":"<p>U+0D87 SINHALA AEYANNA</p>"},{"id":"XK_Sinh_aee2","name":"XK_Sinh_aee2","value":"16780753","doc":"U+0DD0 SINHALA AEDA-PILLA","summary":"<p>U+0DD0 SINHALA AEDA-PILLA</p>"},{"id":"XK_Sinh_ai","name":"XK_Sinh_ai","value":"16780691","doc":"U+0D92 SINHALA EEYANNA","summary":"<p>U+0D92 SINHALA EEYANNA</p>"},{"id":"XK_Sinh_ai2","name":"XK_Sinh_ai2","value":"16780763","doc":"U+0DDA SINHALA DIGA KOMBUVA","summary":"<p>U+0DDA SINHALA DIGA KOMBUVA</p>"},{"id":"XK_Sinh_al","name":"XK_Sinh_al","value":"16780746","doc":"U+0DC6 SINHALA FAYANNA","summary":"<p>U+0DC6 SINHALA FAYANNA</p>"},{"id":"XK_Sinh_au","name":"XK_Sinh_au","value":"16780694","doc":"U+0D95 SINHALA OOYANNA","summary":"<p>U+0D95 SINHALA OOYANNA</p>"},{"id":"XK_Sinh_au2","name":"XK_Sinh_au2","value":"16780766","doc":"U+0DDD SINHALA KOMBUVA HAA DIGA AELA-PILL","summary":"<p>U+0DDD SINHALA KOMBUVA HAA DIGA AELA-PILL</p>"},{"id":"XK_Sinh_ba","name":"XK_Sinh_ba","value":"16780726","doc":"U+0DB5 SINHALA MAHA. PAYANNA","summary":"<p>U+0DB5 SINHALA MAHA.</p>"},{"id":"XK_Sinh_bha","name":"XK_Sinh_bha","value":"16780727","doc":"U+0DB6 SINHALA BAYANNA","summary":"<p>U+0DB6 SINHALA BAYANNA</p>"},{"id":"XK_Sinh_ca","name":"XK_Sinh_ca","value":"16780704","doc":"U+0D9F SINHALA SANYAKA GAYANNA","summary":"<p>U+0D9F SINHALA SANYAKA GAYANNA</p>"},{"id":"XK_Sinh_cha","name":"XK_Sinh_cha","value":"16780705","doc":"U+0DA0 SINHALA CAYANNA","summary":"<p>U+0DA0 SINHALA CAYANNA</p>"},{"id":"XK_Sinh_dda","name":"XK_Sinh_dda","value":"16780713","doc":"U+0DA8 SINHALA MAHA. TTAYANNA","summary":"<p>U+0DA8 SINHALA MAHA.</p>"},{"id":"XK_Sinh_ddha","name":"XK_Sinh_ddha","value":"16780714","doc":"U+0DA9 SINHALA DDAYANNA","summary":"<p>U+0DA9 SINHALA DDAYANNA</p>"},{"id":"XK_Sinh_dha","name":"XK_Sinh_dha","value":"16780719","doc":"U+0DAE SINHALA MAHA. TAYANNA","summary":"<p>U+0DAE SINHALA MAHA.</p>"},{"id":"XK_Sinh_dhha","name":"XK_Sinh_dhha","value":"16780720","doc":"U+0DAF SINHALA DAYANNA","summary":"<p>U+0DAF SINHALA DAYANNA</p>"},{"id":"XK_Sinh_e","name":"XK_Sinh_e","value":"16780689","doc":"U+0D90 SINHALA ILUUYANNA","summary":"<p>U+0D90 SINHALA ILUUYANNA</p>"},{"id":"XK_Sinh_e2","name":"XK_Sinh_e2","value":"16780761","doc":"U+0DD8 SINHALA GAETTA-PILLA","summary":"<p>U+0DD8 SINHALA GAETTA-PILLA</p>"},{"id":"XK_Sinh_ee","name":"XK_Sinh_ee","value":"16780690","doc":"U+0D91 SINHALA EYANNA","summary":"<p>U+0D91 SINHALA EYANNA</p>"},{"id":"XK_Sinh_ee2","name":"XK_Sinh_ee2","value":"16780762","doc":"U+0DD9 SINHALA KOMBUVA","summary":"<p>U+0DD9 SINHALA KOMBUVA</p>"},{"id":"XK_Sinh_fa","name":"XK_Sinh_fa","value":"16780742","doc":"U+0DC5 SINHALA MUURDHAJA LAYANNA","summary":"<p>U+0DC5 SINHALA MUURDHAJA LAYANNA</p>"},{"id":"XK_Sinh_ga","name":"XK_Sinh_ga","value":"16780700","doc":"U+0D9B SINHALA MAHA. KAYANNA","summary":"<p>U+0D9B SINHALA MAHA.</p>"},{"id":"XK_Sinh_gha","name":"XK_Sinh_gha","value":"16780701","doc":"U+0D9C SINHALA GAYANNA","summary":"<p>U+0D9C SINHALA GAYANNA</p>"},{"id":"XK_Sinh_h2","name":"XK_Sinh_h2","value":"16780675","doc":"U+0D82 SINHALA ANUSVARAYA","summary":"<p>U+0D82 SINHALA ANUSVARAYA</p>"},{"id":"XK_Sinh_ha","name":"XK_Sinh_ha","value":"16780740","doc":"U+0DC3 SINHALA DANTAJA SAYANNA","summary":"<p>U+0DC3 SINHALA DANTAJA SAYANNA</p>"},{"id":"XK_Sinh_i","name":"XK_Sinh_i","value":"16780681","doc":"U+0D88 SINHALA AEEYANNA","summary":"<p>U+0D88 SINHALA AEEYANNA</p>"},{"id":"XK_Sinh_i2","name":"XK_Sinh_i2","value":"16780754","doc":"U+0DD1 SINHALA DIGA AEDA-PILLA","summary":"<p>U+0DD1 SINHALA DIGA AEDA-PILLA</p>"},{"id":"XK_Sinh_ii","name":"XK_Sinh_ii","value":"16780682","doc":"U+0D89 SINHALA IYANNA","summary":"<p>U+0D89 SINHALA IYANNA</p>"},{"id":"XK_Sinh_ii2","name":"XK_Sinh_ii2","value":"16780755","doc":"U+0DD2 SINHALA IS-PILLA","summary":"<p>U+0DD2 SINHALA IS-PILLA</p>"},{"id":"XK_Sinh_ja","name":"XK_Sinh_ja","value":"16780706","doc":"U+0DA1 SINHALA MAHA. CAYANNA","summary":"<p>U+0DA1 SINHALA MAHA.</p>"},{"id":"XK_Sinh_jha","name":"XK_Sinh_jha","value":"16780707","doc":"U+0DA2 SINHALA JAYANNA","summary":"<p>U+0DA2 SINHALA JAYANNA</p>"},{"id":"XK_Sinh_jnya","name":"XK_Sinh_jnya","value":"16780709","doc":"U+0DA4 SINHALA TAALUJA NAASIKYAYA","summary":"<p>U+0DA4 SINHALA TAALUJA NAASIKYAYA</p>"},{"id":"XK_Sinh_ka","name":"XK_Sinh_ka","value":"16780698","doc":"U+0D96 SINHALA AUYANNA","summary":"<p>U+0D96 SINHALA AUYANNA</p>"},{"id":"XK_Sinh_kha","name":"XK_Sinh_kha","value":"16780699","doc":"U+0D9A SINHALA KAYANNA","summary":"<p>U+0D9A SINHALA KAYANNA</p>"},{"id":"XK_Sinh_kunddaliya","name":"XK_Sinh_kunddaliya","value":"16780788","doc":"U+0DF3 SINHALA DIGA GAYANUKITTA","summary":"<p>U+0DF3 SINHALA DIGA GAYANUKITTA</p>"},{"id":"XK_Sinh_la","name":"XK_Sinh_la","value":"16780733","doc":"U+0DBB SINHALA RAYANNA","summary":"<p>U+0DBB SINHALA RAYANNA</p>"},{"id":"XK_Sinh_lla","name":"XK_Sinh_lla","value":"16780741","doc":"U+0DC4 SINHALA HAYANNA","summary":"<p>U+0DC4 SINHALA HAYANNA</p>"},{"id":"XK_Sinh_lu","name":"XK_Sinh_lu","value":"16780687","doc":"U+0D8E SINHALA IRUUYANNA","summary":"<p>U+0D8E SINHALA IRUUYANNA</p>"},{"id":"XK_Sinh_lu2","name":"XK_Sinh_lu2","value":"16780767","doc":"U+0DDE SINHALA KOMBUVA HAA GAYANUKITTA","summary":"<p>U+0DDE SINHALA KOMBUVA HAA GAYANUKITTA</p>"},{"id":"XK_Sinh_luu","name":"XK_Sinh_luu","value":"16780688","doc":"U+0D8F SINHALA ILUYANNA","summary":"<p>U+0D8F SINHALA ILUYANNA</p>"},{"id":"XK_Sinh_luu2","name":"XK_Sinh_luu2","value":"16780787","doc":"U+0DF2 SINHALA DIGA GAETTA-PILLA","summary":"<p>U+0DF2 SINHALA DIGA GAETTA-PILLA</p>"},{"id":"XK_Sinh_ma","name":"XK_Sinh_ma","value":"16780728","doc":"U+0DB7 SINHALA MAHA. BAYANNA","summary":"<p>U+0DB7 SINHALA MAHA.</p>"},{"id":"XK_Sinh_mba","name":"XK_Sinh_mba","value":"16780729","doc":"U+0DB8 SINHALA MAYANNA","summary":"<p>U+0DB8 SINHALA MAYANNA</p>"},{"id":"XK_Sinh_na","name":"XK_Sinh_na","value":"16780721","doc":"U+0DB0 SINHALA MAHA. DAYANNA","summary":"<p>U+0DB0 SINHALA MAHA.</p>"},{"id":"XK_Sinh_ndda","name":"XK_Sinh_ndda","value":"16780716","doc":"U+0DAB SINHALA MUURDHAJA NAYANNA","summary":"<p>U+0DAB SINHALA MUURDHAJA NAYANNA</p>"},{"id":"XK_Sinh_ndha","name":"XK_Sinh_ndha","value":"16780723","doc":"U+0DB1 SINHALA DANTAJA NAYANNA","summary":"<p>U+0DB1 SINHALA DANTAJA NAYANNA</p>"},{"id":"XK_Sinh_ng","name":"XK_Sinh_ng","value":"16780674","doc":null,"summary":null},{"id":"XK_Sinh_ng2","name":"XK_Sinh_ng2","value":"16780702","doc":"U+0D9D SINHALA MAHA. GAYANNA","summary":"<p>U+0D9D SINHALA MAHA.</p>"},{"id":"XK_Sinh_nga","name":"XK_Sinh_nga","value":"16780703","doc":"U+0D9E SINHALA KANTAJA NAASIKYAYA","summary":"<p>U+0D9E SINHALA KANTAJA NAASIKYAYA</p>"},{"id":"XK_Sinh_nja","name":"XK_Sinh_nja","value":"16780710","doc":"U+0DA5 SINHALA TAALUJA SANYOOGA NAASIKYAYA","summary":"<p>U+0DA5 SINHALA TAALUJA SANYOOGA NAASIKYAYA</p>"},{"id":"XK_Sinh_nna","name":"XK_Sinh_nna","value":"16780715","doc":"U+0DAA SINHALA MAHA. DDAYANNA","summary":"<p>U+0DAA SINHALA MAHA.</p>"},{"id":"XK_Sinh_nya","name":"XK_Sinh_nya","value":"16780708","doc":"U+0DA3 SINHALA MAHA. JAYANNA","summary":"<p>U+0DA3 SINHALA MAHA.</p>"},{"id":"XK_Sinh_o","name":"XK_Sinh_o","value":"16780692","doc":"U+0D93 SINHALA AIYANNA","summary":"<p>U+0D93 SINHALA AIYANNA</p>"},{"id":"XK_Sinh_o2","name":"XK_Sinh_o2","value":"16780764","doc":"U+0DDB SINHALA KOMBU DEKA","summary":"<p>U+0DDB SINHALA KOMBU DEKA</p>"},{"id":"XK_Sinh_oo","name":"XK_Sinh_oo","value":"16780693","doc":"U+0D94 SINHALA OYANNA","summary":"<p>U+0D94 SINHALA OYANNA</p>"},{"id":"XK_Sinh_oo2","name":"XK_Sinh_oo2","value":"16780765","doc":"U+0DDC SINHALA KOMBUVA HAA AELA-PILL","summary":"<p>U+0DDC SINHALA KOMBUVA HAA AELA-PILL</p>"},{"id":"XK_Sinh_pa","name":"XK_Sinh_pa","value":"16780724","doc":"U+0DB3 SINHALA SANYAKA DAYANNA","summary":"<p>U+0DB3 SINHALA SANYAKA DAYANNA</p>"},{"id":"XK_Sinh_pha","name":"XK_Sinh_pha","value":"16780725","doc":"U+0DB4 SINHALA PAYANNA","summary":"<p>U+0DB4 SINHALA PAYANNA</p>"},{"id":"XK_Sinh_ra","name":"XK_Sinh_ra","value":"16780731","doc":"U+0DBA SINHALA YAYANNA","summary":"<p>U+0DBA SINHALA YAYANNA</p>"},{"id":"XK_Sinh_ri","name":"XK_Sinh_ri","value":"16780685","doc":"U+0D8C SINHALA UUYANNA","summary":"<p>U+0D8C SINHALA UUYANNA</p>"},{"id":"XK_Sinh_rii","name":"XK_Sinh_rii","value":"16780686","doc":"U+0D8D SINHALA IRUYANNA","summary":"<p>U+0D8D SINHALA IRUYANNA</p>"},{"id":"XK_Sinh_ru2","name":"XK_Sinh_ru2","value":"16780760","doc":"U+0DD6 SINHALA DIGA PAA-PILLA","summary":"<p>U+0DD6 SINHALA DIGA PAA-PILLA</p>"},{"id":"XK_Sinh_ruu2","name":"XK_Sinh_ruu2","value":"16780786","doc":"U+0DDF SINHALA GAYANUKITTA","summary":"<p>U+0DDF SINHALA GAYANUKITTA</p>"},{"id":"XK_Sinh_sa","name":"XK_Sinh_sa","value":"16780739","doc":"U+0DC2 SINHALA MUURDHAJA SAYANNA","summary":"<p>U+0DC2 SINHALA MUURDHAJA SAYANNA</p>"},{"id":"XK_Sinh_sha","name":"XK_Sinh_sha","value":"16780737","doc":"U+0DC0 SINHALA VAYANNA","summary":"<p>U+0DC0 SINHALA VAYANNA</p>"},{"id":"XK_Sinh_ssha","name":"XK_Sinh_ssha","value":"16780738","doc":"U+0DC1 SINHALA TAALUJA SAYANNA","summary":"<p>U+0DC1 SINHALA TAALUJA SAYANNA</p>"},{"id":"XK_Sinh_tha","name":"XK_Sinh_tha","value":"16780717","doc":"U+0DAC SINHALA SANYAKA DDAYANNA","summary":"<p>U+0DAC SINHALA SANYAKA DDAYANNA</p>"},{"id":"XK_Sinh_thha","name":"XK_Sinh_thha","value":"16780718","doc":"U+0DAD SINHALA TAYANNA","summary":"<p>U+0DAD SINHALA TAYANNA</p>"},{"id":"XK_Sinh_tta","name":"XK_Sinh_tta","value":"16780711","doc":"U+0DA6 SINHALA SANYAKA JAYANNA","summary":"<p>U+0DA6 SINHALA SANYAKA JAYANNA</p>"},{"id":"XK_Sinh_ttha","name":"XK_Sinh_ttha","value":"16780712","doc":"U+0DA7 SINHALA TTAYANNA","summary":"<p>U+0DA7 SINHALA TTAYANNA</p>"},{"id":"XK_Sinh_u","name":"XK_Sinh_u","value":"16780683","doc":"U+0D8A SINHALA IIYANNA","summary":"<p>U+0D8A SINHALA IIYANNA</p>"},{"id":"XK_Sinh_u2","name":"XK_Sinh_u2","value":"16780756","doc":"U+0DD3 SINHALA DIGA IS-PILLA","summary":"<p>U+0DD3 SINHALA DIGA IS-PILLA</p>"},{"id":"XK_Sinh_uu","name":"XK_Sinh_uu","value":"16780684","doc":"U+0D8B SINHALA UYANNA","summary":"<p>U+0D8B SINHALA UYANNA</p>"},{"id":"XK_Sinh_uu2","name":"XK_Sinh_uu2","value":"16780758","doc":"U+0DD4 SINHALA PAA-PILLA","summary":"<p>U+0DD4 SINHALA PAA-PILLA</p>"},{"id":"XK_Sinh_va","name":"XK_Sinh_va","value":"16780736","doc":"U+0DBD SINHALA DANTAJA LAYANNA","summary":"<p>U+0DBD SINHALA DANTAJA LAYANNA</p>"},{"id":"XK_Sinh_ya","name":"XK_Sinh_ya","value":"16780730","doc":"U+0DB9 SINHALA AMBA BAYANNA","summary":"<p>U+0DB9 SINHALA AMBA BAYANNA</p>"},{"id":"XK_SINHALA","name":"XK_SINHALA","value":"true","doc":null,"summary":null},{"id":"XK_sixsubscript","name":"XK_sixsubscript","value":"16785542","doc":"U+2085 SUBSCRIPT FIVE","summary":"<p>U+2085 SUBSCRIPT FIVE</p>"},{"id":"XK_sixsuperior","name":"XK_sixsuperior","value":"16785526","doc":"U+2075 SUPERSCRIPT FIVE","summary":"<p>U+2075 SUPERSCRIPT FIVE</p>"},{"id":"XK_slash","name":"XK_slash","value":"47","doc":"U+002E FULL STOP","summary":"<p>U+002E FULL STOP</p>"},{"id":"XK_SlowKeys_Enable","name":"XK_SlowKeys_Enable","value":"65139","doc":null,"summary":null},{"id":"XK_space","name":"XK_space","value":"32","doc":null,"summary":null},{"id":"XK_SPECIAL","name":"XK_SPECIAL","value":"false","doc":null,"summary":null},{"id":"XK_squareroot","name":"XK_squareroot","value":"16785946","doc":"U+220B CONTAINS AS MEMBER","summary":"<p>U+220B CONTAINS AS MEMBER</p>"},{"id":"XK_ssharp","name":"XK_ssharp","value":"223","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_sterling","name":"XK_sterling","value":"163","doc":"U+00A2 CENT SIGN","summary":"<p>U+00A2 CENT SIGN</p>"},{"id":"XK_StickyKeys_Enable","name":"XK_StickyKeys_Enable","value":"65141","doc":null,"summary":null},{"id":"XK_stricteq","name":"XK_stricteq","value":"16786019","doc":"U+2262 NOT IDENTICAL TO","summary":"<p>U+2262 NOT IDENTICAL TO</p>"},{"id":"XK_Super_L","name":"XK_Super_L","value":"65515","doc":"Right alt","summary":"<p>Right alt</p>"},{"id":"XK_Super_R","name":"XK_Super_R","value":"65516","doc":"Left super","summary":"<p>Left super</p>"},{"id":"XK_Sys_Req","name":"XK_Sys_Req","value":"65301","doc":null,"summary":null},{"id":"XK_t","name":"XK_t","value":"116","doc":"U+0073 LATIN SMALL LETTER S","summary":"<p>U+0073 LATIN SMALL LETTER S</p>"},{"id":"XK_T","name":"XK_T","value":"84","doc":"U+0053 LATIN CAPITAL LETTER S","summary":"<p>U+0053 LATIN CAPITAL LETTER S</p>"},{"id":"XK_Tab","name":"XK_Tab","value":"65289","doc":"Back space, back char","summary":"<p>Back space, back char</p>"},{"id":"XK_tabovedot","name":"XK_tabovedot","value":"16785003","doc":"U+1E6A LATIN CAPITAL LETTER T WITH DOT ABOVE","summary":"<p>U+1E6A LATIN CAPITAL LETTER T WITH DOT ABOVE</p>"},{"id":"XK_Tabovedot","name":"XK_Tabovedot","value":"16785002","doc":"U+1E61 LATIN SMALL LETTER S WITH DOT ABOVE","summary":"<p>U+1E61 LATIN SMALL LETTER S WITH DOT ABOVE</p>"},{"id":"XK_Tcaron","name":"XK_Tcaron","value":"427","doc":"U+015E LATIN CAPITAL LETTER S WITH CEDILLA","summary":"<p>U+015E LATIN CAPITAL LETTER S WITH CEDILLA</p>"},{"id":"XK_tcaron","name":"XK_tcaron","value":"443","doc":"U+015F LATIN SMALL LETTER S WITH CEDILLA","summary":"<p>U+015F LATIN SMALL LETTER S WITH CEDILLA</p>"},{"id":"XK_tcedilla","name":"XK_tcedilla","value":"510","doc":"U+0171 LATIN SMALL LETTER U WITH DOUBLE ACUTE","summary":"<p>U+0171 LATIN SMALL LETTER U WITH DOUBLE ACUTE</p>"},{"id":"XK_Tcedilla","name":"XK_Tcedilla","value":"478","doc":"U+0170 LATIN CAPITAL LETTER U WITH DOUBLE ACUTE","summary":"<p>U+0170 LATIN CAPITAL LETTER U WITH DOUBLE ACUTE</p>"},{"id":"XK_TECHNICAL","name":"XK_TECHNICAL","value":"false","doc":null,"summary":null},{"id":"XK_Terminate_Server","name":"XK_Terminate_Server","value":"65237","doc":null,"summary":null},{"id":"XK_THAI","name":"XK_THAI","value":"true","doc":null,"summary":null},{"id":"XK_Thai_baht","name":"XK_Thai_baht","value":"3551","doc":null,"summary":null},{"id":"XK_Thai_bobaimai","name":"XK_Thai_bobaimai","value":"3514","doc":"U+0E19 THAI CHARACTER NO NU","summary":"<p>U+0E19 THAI CHARACTER NO NU</p>"},{"id":"XK_Thai_chochan","name":"XK_Thai_chochan","value":"3496","doc":"U+0E07 THAI CHARACTER NGO NGU","summary":"<p>U+0E07 THAI CHARACTER NGO NGU</p>"},{"id":"XK_Thai_chochang","name":"XK_Thai_chochang","value":"3498","doc":"U+0E09 THAI CHARACTER CHO CHING","summary":"<p>U+0E09 THAI CHARACTER CHO CHING</p>"},{"id":"XK_Thai_choching","name":"XK_Thai_choching","value":"3497","doc":"U+0E08 THAI CHARACTER CHO CHAN","summary":"<p>U+0E08 THAI CHARACTER CHO CHAN</p>"},{"id":"XK_Thai_chochoe","name":"XK_Thai_chochoe","value":"3500","doc":"U+0E0B THAI CHARACTER SO SO","summary":"<p>U+0E0B THAI CHARACTER SO SO</p>"},{"id":"XK_Thai_dochada","name":"XK_Thai_dochada","value":"3502","doc":"U+0E0D THAI CHARACTER YO YING","summary":"<p>U+0E0D THAI CHARACTER YO YING</p>"},{"id":"XK_Thai_dodek","name":"XK_Thai_dodek","value":"3508","doc":"U+0E13 THAI CHARACTER NO NEN","summary":"<p>U+0E13 THAI CHARACTER NO NEN</p>"},{"id":"XK_Thai_fofa","name":"XK_Thai_fofa","value":"3517","doc":"U+0E1C THAI CHARACTER PHO PHUNG","summary":"<p>U+0E1C THAI CHARACTER PHO PHUNG</p>"},{"id":"XK_Thai_fofan","name":"XK_Thai_fofan","value":"3519","doc":"U+0E1E THAI CHARACTER PHO PHAN","summary":"<p>U+0E1E THAI CHARACTER PHO PHAN</p>"},{"id":"XK_Thai_hohip","name":"XK_Thai_hohip","value":"3531","doc":"U+0E2A THAI CHARACTER SO SUA","summary":"<p>U+0E2A THAI CHARACTER SO SUA</p>"},{"id":"XK_Thai_honokhuk","name":"XK_Thai_honokhuk","value":"3534","doc":"U+0E2D THAI CHARACTER O ANG","summary":"<p>U+0E2D THAI CHARACTER O ANG</p>"},{"id":"XK_Thai_khokhai","name":"XK_Thai_khokhai","value":"3490","doc":"U+0E01 THAI CHARACTER KO KAI","summary":"<p>U+0E01 THAI CHARACTER KO KAI</p>"},{"id":"XK_Thai_khokhon","name":"XK_Thai_khokhon","value":"3493","doc":"U+0E04 THAI CHARACTER KHO KHWAI","summary":"<p>U+0E04 THAI CHARACTER KHO KHWAI</p>"},{"id":"XK_Thai_khokhuat","name":"XK_Thai_khokhuat","value":"3491","doc":"U+0E02 THAI CHARACTER KHO KHAI","summary":"<p>U+0E02 THAI CHARACTER KHO KHAI</p>"},{"id":"XK_Thai_khokhwai","name":"XK_Thai_khokhwai","value":"3492","doc":"U+0E03 THAI CHARACTER KHO KHUAT","summary":"<p>U+0E03 THAI CHARACTER KHO KHUAT</p>"},{"id":"XK_Thai_khorakhang","name":"XK_Thai_khorakhang","value":"3494","doc":"U+0E05 THAI CHARACTER KHO KHON","summary":"<p>U+0E05 THAI CHARACTER KHO KHON</p>"},{"id":"XK_Thai_kokai","name":"XK_Thai_kokai","value":"3489","doc":null,"summary":null},{"id":"XK_Thai_lakkhangyao","name":"XK_Thai_lakkhangyao","value":"3557","doc":"U+0E44 THAI CHARACTER SARA AI MAIMALAI","summary":"<p>U+0E44 THAI CHARACTER SARA AI MAIMALAI</p>"},{"id":"XK_Thai_lekchet","name":"XK_Thai_lekchet","value":"3575","doc":"U+0E56 THAI DIGIT SIX","summary":"<p>U+0E56 THAI DIGIT SIX</p>"},{"id":"XK_Thai_lekha","name":"XK_Thai_lekha","value":"3573","doc":"U+0E54 THAI DIGIT FOUR","summary":"<p>U+0E54 THAI DIGIT FOUR</p>"},{"id":"XK_Thai_lekhok","name":"XK_Thai_lekhok","value":"3574","doc":"U+0E55 THAI DIGIT FIVE","summary":"<p>U+0E55 THAI DIGIT FIVE</p>"},{"id":"XK_Thai_lekkao","name":"XK_Thai_lekkao","value":"3577","doc":"U+0E58 THAI DIGIT EIGHT","summary":"<p>U+0E58 THAI DIGIT EIGHT</p>"},{"id":"XK_Thai_leknung","name":"XK_Thai_leknung","value":"3569","doc":"U+0E50 THAI DIGIT ZERO","summary":"<p>U+0E50 THAI DIGIT ZERO</p>"},{"id":"XK_Thai_lekpaet","name":"XK_Thai_lekpaet","value":"3576","doc":"U+0E57 THAI DIGIT SEVEN","summary":"<p>U+0E57 THAI DIGIT SEVEN</p>"},{"id":"XK_Thai_leksam","name":"XK_Thai_leksam","value":"3571","doc":"U+0E52 THAI DIGIT TWO","summary":"<p>U+0E52 THAI DIGIT TWO</p>"},{"id":"XK_Thai_leksi","name":"XK_Thai_leksi","value":"3572","doc":"U+0E53 THAI DIGIT THREE","summary":"<p>U+0E53 THAI DIGIT THREE</p>"},{"id":"XK_Thai_leksong","name":"XK_Thai_leksong","value":"3570","doc":"U+0E51 THAI DIGIT ONE","summary":"<p>U+0E51 THAI DIGIT ONE</p>"},{"id":"XK_Thai_leksun","name":"XK_Thai_leksun","value":"3568","doc":"U+0E4D THAI CHARACTER NIKHAHIT","summary":"<p>U+0E4D THAI CHARACTER NIKHAHIT</p>"},{"id":"XK_Thai_lochula","name":"XK_Thai_lochula","value":"3532","doc":"U+0E2B THAI CHARACTER HO HIP","summary":"<p>U+0E2B THAI CHARACTER HO HIP</p>"},{"id":"XK_Thai_loling","name":"XK_Thai_loling","value":"3525","doc":"U+0E24 THAI CHARACTER RU","summary":"<p>U+0E24 THAI CHARACTER RU</p>"},{"id":"XK_Thai_lu","name":"XK_Thai_lu","value":"3526","doc":"U+0E25 THAI CHARACTER LO LING","summary":"<p>U+0E25 THAI CHARACTER LO LING</p>"},{"id":"XK_Thai_maichattawa","name":"XK_Thai_maichattawa","value":"3563","doc":"U+0E4A THAI CHARACTER MAI TRI","summary":"<p>U+0E4A THAI CHARACTER MAI TRI</p>"},{"id":"XK_Thai_maiek","name":"XK_Thai_maiek","value":"3560","doc":"U+0E47 THAI CHARACTER MAITAIKHU","summary":"<p>U+0E47 THAI CHARACTER MAITAIKHU</p>"},{"id":"XK_Thai_maihanakat","name":"XK_Thai_maihanakat","value":"3537","doc":"U+0E30 THAI CHARACTER SARA A","summary":"<p>U+0E30 THAI CHARACTER SARA A</p>"},{"id":"XK_Thai_maihanakat_maitho","name":"XK_Thai_maihanakat_maitho","value":"3550","doc":"U+0E3A THAI CHARACTER PHINTHU","summary":"<p>U+0E3A THAI CHARACTER PHINTHU</p>"},{"id":"XK_Thai_maitaikhu","name":"XK_Thai_maitaikhu","value":"3559","doc":"U+0E46 THAI CHARACTER MAIYAMOK","summary":"<p>U+0E46 THAI CHARACTER MAIYAMOK</p>"},{"id":"XK_Thai_maitho","name":"XK_Thai_maitho","value":"3561","doc":"U+0E48 THAI CHARACTER MAI EK","summary":"<p>U+0E48 THAI CHARACTER MAI EK</p>"},{"id":"XK_Thai_maitri","name":"XK_Thai_maitri","value":"3562","doc":"U+0E49 THAI CHARACTER MAI THO","summary":"<p>U+0E49 THAI CHARACTER MAI THO</p>"},{"id":"XK_Thai_maiyamok","name":"XK_Thai_maiyamok","value":"3558","doc":"U+0E45 THAI CHARACTER LAKKHANGYAO","summary":"<p>U+0E45 THAI CHARACTER LAKKHANGYAO</p>"},{"id":"XK_Thai_moma","name":"XK_Thai_moma","value":"3521","doc":"U+0E20 THAI CHARACTER PHO SAMPHAO","summary":"<p>U+0E20 THAI CHARACTER PHO SAMPHAO</p>"},{"id":"XK_Thai_ngongu","name":"XK_Thai_ngongu","value":"3495","doc":"U+0E06 THAI CHARACTER KHO RAKHANG","summary":"<p>U+0E06 THAI CHARACTER KHO RAKHANG</p>"},{"id":"XK_Thai_nikhahit","name":"XK_Thai_nikhahit","value":"3565","doc":"U+0E4C THAI CHARACTER THANTHAKHAT","summary":"<p>U+0E4C THAI CHARACTER THANTHAKHAT</p>"},{"id":"XK_Thai_nonen","name":"XK_Thai_nonen","value":"3507","doc":"U+0E12 THAI CHARACTER THO PHUTHAO","summary":"<p>U+0E12 THAI CHARACTER THO PHUTHAO</p>"},{"id":"XK_Thai_nonu","name":"XK_Thai_nonu","value":"3513","doc":"U+0E18 THAI CHARACTER THO THONG","summary":"<p>U+0E18 THAI CHARACTER THO THONG</p>"},{"id":"XK_Thai_oang","name":"XK_Thai_oang","value":"3533","doc":"U+0E2C THAI CHARACTER LO CHULA","summary":"<p>U+0E2C THAI CHARACTER LO CHULA</p>"},{"id":"XK_Thai_paiyannoi","name":"XK_Thai_paiyannoi","value":"3535","doc":"U+0E2E THAI CHARACTER HO NOKHUK","summary":"<p>U+0E2E THAI CHARACTER HO NOKHUK</p>"},{"id":"XK_Thai_phinthu","name":"XK_Thai_phinthu","value":"3546","doc":"U+0E39 THAI CHARACTER SARA UU","summary":"<p>U+0E39 THAI CHARACTER SARA UU</p>"},{"id":"XK_Thai_phophan","name":"XK_Thai_phophan","value":"3518","doc":"U+0E1D THAI CHARACTER FO FA","summary":"<p>U+0E1D THAI CHARACTER FO FA</p>"},{"id":"XK_Thai_phophung","name":"XK_Thai_phophung","value":"3516","doc":"U+0E1B THAI CHARACTER PO PLA","summary":"<p>U+0E1B THAI CHARACTER PO PLA</p>"},{"id":"XK_Thai_phosamphao","name":"XK_Thai_phosamphao","value":"3520","doc":"U+0E1F THAI CHARACTER FO FAN","summary":"<p>U+0E1F THAI CHARACTER FO FAN</p>"},{"id":"XK_Thai_popla","name":"XK_Thai_popla","value":"3515","doc":"U+0E1A THAI CHARACTER BO BAIMAI","summary":"<p>U+0E1A THAI CHARACTER BO BAIMAI</p>"},{"id":"XK_Thai_rorua","name":"XK_Thai_rorua","value":"3523","doc":"U+0E22 THAI CHARACTER YO YAK","summary":"<p>U+0E22 THAI CHARACTER YO YAK</p>"},{"id":"XK_Thai_ru","name":"XK_Thai_ru","value":"3524","doc":"U+0E23 THAI CHARACTER RO RUA","summary":"<p>U+0E23 THAI CHARACTER RO RUA</p>"},{"id":"XK_Thai_saraa","name":"XK_Thai_saraa","value":"3536","doc":"U+0E2F THAI CHARACTER PAIYANNOI","summary":"<p>U+0E2F THAI CHARACTER PAIYANNOI</p>"},{"id":"XK_Thai_saraaa","name":"XK_Thai_saraaa","value":"3538","doc":"U+0E31 THAI CHARACTER MAI HAN-AKAT","summary":"<p>U+0E31 THAI CHARACTER MAI HAN-AKAT</p>"},{"id":"XK_Thai_saraae","name":"XK_Thai_saraae","value":"3553","doc":"U+0E40 THAI CHARACTER SARA E","summary":"<p>U+0E40 THAI CHARACTER SARA E</p>"},{"id":"XK_Thai_saraaimaimalai","name":"XK_Thai_saraaimaimalai","value":"3556","doc":"U+0E43 THAI CHARACTER SARA AI MAIMUAN","summary":"<p>U+0E43 THAI CHARACTER SARA AI MAIMUAN</p>"},{"id":"XK_Thai_saraaimaimuan","name":"XK_Thai_saraaimaimuan","value":"3555","doc":"U+0E42 THAI CHARACTER SARA O","summary":"<p>U+0E42 THAI CHARACTER SARA O</p>"},{"id":"XK_Thai_saraam","name":"XK_Thai_saraam","value":"3539","doc":"U+0E32 THAI CHARACTER SARA AA","summary":"<p>U+0E32 THAI CHARACTER SARA AA</p>"},{"id":"XK_Thai_sarae","name":"XK_Thai_sarae","value":"3552","doc":"U+0E3F THAI CURRENCY SYMBOL BAHT","summary":"<p>U+0E3F THAI CURRENCY SYMBOL BAHT</p>"},{"id":"XK_Thai_sarai","name":"XK_Thai_sarai","value":"3540","doc":"U+0E33 THAI CHARACTER SARA AM","summary":"<p>U+0E33 THAI CHARACTER SARA AM</p>"},{"id":"XK_Thai_saraii","name":"XK_Thai_saraii","value":"3541","doc":"U+0E34 THAI CHARACTER SARA I","summary":"<p>U+0E34 THAI CHARACTER SARA I</p>"},{"id":"XK_Thai_sarao","name":"XK_Thai_sarao","value":"3554","doc":"U+0E41 THAI CHARACTER SARA AE","summary":"<p>U+0E41 THAI CHARACTER SARA AE</p>"},{"id":"XK_Thai_sarau","name":"XK_Thai_sarau","value":"3544","doc":"U+0E37 THAI CHARACTER SARA UEE","summary":"<p>U+0E37 THAI CHARACTER SARA UEE</p>"},{"id":"XK_Thai_saraue","name":"XK_Thai_saraue","value":"3542","doc":"U+0E35 THAI CHARACTER SARA II","summary":"<p>U+0E35 THAI CHARACTER SARA II</p>"},{"id":"XK_Thai_sarauee","name":"XK_Thai_sarauee","value":"3543","doc":"U+0E36 THAI CHARACTER SARA UE","summary":"<p>U+0E36 THAI CHARACTER SARA UE</p>"},{"id":"XK_Thai_sarauu","name":"XK_Thai_sarauu","value":"3545","doc":"U+0E38 THAI CHARACTER SARA U","summary":"<p>U+0E38 THAI CHARACTER SARA U</p>"},{"id":"XK_Thai_sorusi","name":"XK_Thai_sorusi","value":"3529","doc":"U+0E28 THAI CHARACTER SO SALA","summary":"<p>U+0E28 THAI CHARACTER SO SALA</p>"},{"id":"XK_Thai_sosala","name":"XK_Thai_sosala","value":"3528","doc":"U+0E27 THAI CHARACTER WO WAEN","summary":"<p>U+0E27 THAI CHARACTER WO WAEN</p>"},{"id":"XK_Thai_soso","name":"XK_Thai_soso","value":"3499","doc":"U+0E0A THAI CHARACTER CHO CHANG","summary":"<p>U+0E0A THAI CHARACTER CHO CHANG</p>"},{"id":"XK_Thai_sosua","name":"XK_Thai_sosua","value":"3530","doc":"U+0E29 THAI CHARACTER SO RUSI","summary":"<p>U+0E29 THAI CHARACTER SO RUSI</p>"},{"id":"XK_Thai_thanthakhat","name":"XK_Thai_thanthakhat","value":"3564","doc":"U+0E4B THAI CHARACTER MAI CHATTAWA","summary":"<p>U+0E4B THAI CHARACTER MAI CHATTAWA</p>"},{"id":"XK_Thai_thonangmontho","name":"XK_Thai_thonangmontho","value":"3505","doc":"U+0E10 THAI CHARACTER THO THAN","summary":"<p>U+0E10 THAI CHARACTER THO THAN</p>"},{"id":"XK_Thai_thophuthao","name":"XK_Thai_thophuthao","value":"3506","doc":"U+0E11 THAI CHARACTER THO NANGMONTHO","summary":"<p>U+0E11 THAI CHARACTER THO NANGMONTHO</p>"},{"id":"XK_Thai_thothahan","name":"XK_Thai_thothahan","value":"3511","doc":"U+0E16 THAI CHARACTER THO THUNG","summary":"<p>U+0E16 THAI CHARACTER THO THUNG</p>"},{"id":"XK_Thai_thothan","name":"XK_Thai_thothan","value":"3504","doc":"U+0E0F THAI CHARACTER TO PATAK","summary":"<p>U+0E0F THAI CHARACTER TO PATAK</p>"},{"id":"XK_Thai_thothong","name":"XK_Thai_thothong","value":"3512","doc":"U+0E17 THAI CHARACTER THO THAHAN","summary":"<p>U+0E17 THAI CHARACTER THO THAHAN</p>"},{"id":"XK_Thai_thothung","name":"XK_Thai_thothung","value":"3510","doc":"U+0E15 THAI CHARACTER TO TAO","summary":"<p>U+0E15 THAI CHARACTER TO TAO</p>"},{"id":"XK_Thai_topatak","name":"XK_Thai_topatak","value":"3503","doc":"U+0E0E THAI CHARACTER DO CHADA","summary":"<p>U+0E0E THAI CHARACTER DO CHADA</p>"},{"id":"XK_Thai_totao","name":"XK_Thai_totao","value":"3509","doc":"U+0E14 THAI CHARACTER DO DEK","summary":"<p>U+0E14 THAI CHARACTER DO DEK</p>"},{"id":"XK_Thai_wowaen","name":"XK_Thai_wowaen","value":"3527","doc":"U+0E26 THAI CHARACTER LU","summary":"<p>U+0E26 THAI CHARACTER LU</p>"},{"id":"XK_Thai_yoyak","name":"XK_Thai_yoyak","value":"3522","doc":"U+0E21 THAI CHARACTER MO MA","summary":"<p>U+0E21 THAI CHARACTER MO MA</p>"},{"id":"XK_Thai_yoying","name":"XK_Thai_yoying","value":"3501","doc":"U+0E0C THAI CHARACTER CHO CHOE","summary":"<p>U+0E0C THAI CHARACTER CHO CHOE</p>"},{"id":"XK_THORN","name":"XK_THORN","value":"222","doc":"U+00DD LATIN CAPITAL LETTER Y WITH ACUTE","summary":"<p>U+00DD LATIN CAPITAL LETTER Y WITH ACUTE</p>"},{"id":"XK_thorn","name":"XK_thorn","value":"254","doc":"U+00FD LATIN SMALL LETTER Y WITH ACUTE","summary":"<p>U+00FD LATIN SMALL LETTER Y WITH ACUTE</p>"},{"id":"XK_Thorn","name":"XK_Thorn","value":"222","doc":"U+00DE LATIN CAPITAL LETTER THORN","summary":"<p>U+00DE LATIN CAPITAL LETTER THORN</p>"},{"id":"XK_threequarters","name":"XK_threequarters","value":"190","doc":"U+00BD VULGAR FRACTION ONE HALF","summary":"<p>U+00BD VULGAR FRACTION ONE HALF</p>"},{"id":"XK_threesubscript","name":"XK_threesubscript","value":"16785539","doc":"U+2082 SUBSCRIPT TWO","summary":"<p>U+2082 SUBSCRIPT TWO</p>"},{"id":"XK_threesuperior","name":"XK_threesuperior","value":"179","doc":"U+00B2 SUPERSCRIPT TWO","summary":"<p>U+00B2 SUPERSCRIPT TWO</p>"},{"id":"XK_tintegral","name":"XK_tintegral","value":"16785965","doc":"U+222C DOUBLE INTEGRAL","summary":"<p>U+222C DOUBLE INTEGRAL</p>"},{"id":"XK_Touroku","name":"XK_Touroku","value":"65323","doc":"Zenkaku/Hankaku toggle","summary":"<p>Zenkaku/Hankaku toggle</p>"},{"id":"XK_tslash","name":"XK_tslash","value":"956","doc":"U+0123 LATIN SMALL LETTER G WITH CEDILLA","summary":"<p>U+0123 LATIN SMALL LETTER G WITH CEDILLA</p>"},{"id":"XK_Tslash","name":"XK_Tslash","value":"940","doc":"U+0122 LATIN CAPITAL LETTER G WITH CEDILLA","summary":"<p>U+0122 LATIN CAPITAL LETTER G WITH CEDILLA</p>"},{"id":"XK_twosubscript","name":"XK_twosubscript","value":"16785538","doc":"U+2081 SUBSCRIPT ONE","summary":"<p>U+2081 SUBSCRIPT ONE</p>"},{"id":"XK_twosuperior","name":"XK_twosuperior","value":"178","doc":"U+00B1 PLUS-MINUS SIGN","summary":"<p>U+00B1 PLUS-MINUS SIGN</p>"},{"id":"XK_u","name":"XK_u","value":"117","doc":"U+0074 LATIN SMALL LETTER T","summary":"<p>U+0074 LATIN SMALL LETTER T</p>"},{"id":"XK_U","name":"XK_U","value":"85","doc":"U+0054 LATIN CAPITAL LETTER T","summary":"<p>U+0054 LATIN CAPITAL LETTER T</p>"},{"id":"XK_uacute","name":"XK_uacute","value":"250","doc":"U+00F9 LATIN SMALL LETTER U WITH GRAVE","summary":"<p>U+00F9 LATIN SMALL LETTER U WITH GRAVE</p>"},{"id":"XK_Uacute","name":"XK_Uacute","value":"218","doc":"U+00D9 LATIN CAPITAL LETTER U WITH GRAVE","summary":"<p>U+00D9 LATIN CAPITAL LETTER U WITH GRAVE</p>"},{"id":"XK_Ubelowdot","name":"XK_Ubelowdot","value":"16785124","doc":"U+1EE3 LATIN SMALL LETTER O WITH HORN AND DOT BELOW","summary":"<p>U+1EE3 LATIN SMALL LETTER O WITH HORN AND DOT BELOW</p>"},{"id":"XK_ubelowdot","name":"XK_ubelowdot","value":"16785125","doc":"U+1EE4 LATIN CAPITAL LETTER U WITH DOT BELOW","summary":"<p>U+1EE4 LATIN CAPITAL LETTER U WITH DOT BELOW</p>"},{"id":"XK_Ubreve","name":"XK_Ubreve","value":"733","doc":"U+011C LATIN CAPITAL LETTER G WITH CIRCUMFLEX","summary":"<p>U+011C LATIN CAPITAL LETTER G WITH CIRCUMFLEX</p>"},{"id":"XK_ubreve","name":"XK_ubreve","value":"765","doc":"U+011D LATIN SMALL LETTER G WITH CIRCUMFLEX","summary":"<p>U+011D LATIN SMALL LETTER G WITH CIRCUMFLEX</p>"},{"id":"XK_ucircumflex","name":"XK_ucircumflex","value":"251","doc":"U+00FA LATIN SMALL LETTER U WITH ACUTE","summary":"<p>U+00FA LATIN SMALL LETTER U WITH ACUTE</p>"},{"id":"XK_Ucircumflex","name":"XK_Ucircumflex","value":"219","doc":"U+00DA LATIN CAPITAL LETTER U WITH ACUTE","summary":"<p>U+00DA LATIN CAPITAL LETTER U WITH ACUTE</p>"},{"id":"XK_udiaeresis","name":"XK_udiaeresis","value":"252","doc":"U+00FB LATIN SMALL LETTER U WITH CIRCUMFLEX","summary":"<p>U+00FB LATIN SMALL LETTER U WITH CIRCUMFLEX</p>"},{"id":"XK_Udiaeresis","name":"XK_Udiaeresis","value":"220","doc":"U+00DB LATIN CAPITAL LETTER U WITH CIRCUMFLEX","summary":"<p>U+00DB LATIN CAPITAL LETTER U WITH CIRCUMFLEX</p>"},{"id":"XK_udoubleacute","name":"XK_udoubleacute","value":"507","doc":"U+016F LATIN SMALL LETTER U WITH RING ABOVE","summary":"<p>U+016F LATIN SMALL LETTER U WITH RING ABOVE</p>"},{"id":"XK_Udoubleacute","name":"XK_Udoubleacute","value":"475","doc":"U+016E LATIN CAPITAL LETTER U WITH RING ABOVE","summary":"<p>U+016E LATIN CAPITAL LETTER U WITH RING ABOVE</p>"},{"id":"XK_ugrave","name":"XK_ugrave","value":"249","doc":"U+00F8 LATIN SMALL LETTER O WITH STROKE","summary":"<p>U+00F8 LATIN SMALL LETTER O WITH STROKE</p>"},{"id":"XK_Ugrave","name":"XK_Ugrave","value":"217","doc":"U+00D8 LATIN CAPITAL LETTER O WITH STROKE","summary":"<p>U+00D8 LATIN CAPITAL LETTER O WITH STROKE</p>"},{"id":"XK_Uhook","name":"XK_Uhook","value":"16785126","doc":"U+1EE5 LATIN SMALL LETTER U WITH DOT BELOW","summary":"<p>U+1EE5 LATIN SMALL LETTER U WITH DOT BELOW</p>"},{"id":"XK_uhook","name":"XK_uhook","value":"16785127","doc":"U+1EE6 LATIN CAPITAL LETTER U WITH HOOK ABOVE","summary":"<p>U+1EE6 LATIN CAPITAL LETTER U WITH HOOK ABOVE</p>"},{"id":"XK_uhorn","name":"XK_uhorn","value":"16777648","doc":"U+01AF LATIN CAPITAL LETTER U WITH HORN","summary":"<p>U+01AF LATIN CAPITAL LETTER U WITH HORN</p>"},{"id":"XK_Uhorn","name":"XK_Uhorn","value":"16777647","doc":"U+01A1 LATIN SMALL LETTER O WITH HORN","summary":"<p>U+01A1 LATIN SMALL LETTER O WITH HORN</p>"},{"id":"XK_Uhornacute","name":"XK_Uhornacute","value":"16785128","doc":"U+1EE7 LATIN SMALL LETTER U WITH HOOK ABOVE","summary":"<p>U+1EE7 LATIN SMALL LETTER U WITH HOOK ABOVE</p>"},{"id":"XK_uhornacute","name":"XK_uhornacute","value":"16785129","doc":"U+1EE8 LATIN CAPITAL LETTER U WITH HORN AND ACUTE","summary":"<p>U+1EE8 LATIN CAPITAL LETTER U WITH HORN AND ACUTE</p>"},{"id":"XK_Uhornbelowdot","name":"XK_Uhornbelowdot","value":"16785136","doc":"U+1EEF LATIN SMALL LETTER U WITH HORN AND TILDE","summary":"<p>U+1EEF LATIN SMALL LETTER U WITH HORN AND TILDE</p>"},{"id":"XK_uhornbelowdot","name":"XK_uhornbelowdot","value":"16785137","doc":"U+1EF0 LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW","summary":"<p>U+1EF0 LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW</p>"},{"id":"XK_Uhorngrave","name":"XK_Uhorngrave","value":"16785130","doc":"U+1EE9 LATIN SMALL LETTER U WITH HORN AND ACUTE","summary":"<p>U+1EE9 LATIN SMALL LETTER U WITH HORN AND ACUTE</p>"},{"id":"XK_uhorngrave","name":"XK_uhorngrave","value":"16785131","doc":"U+1EEA LATIN CAPITAL LETTER U WITH HORN AND GRAVE","summary":"<p>U+1EEA LATIN CAPITAL LETTER U WITH HORN AND GRAVE</p>"},{"id":"XK_uhornhook","name":"XK_uhornhook","value":"16785133","doc":"U+1EEC LATIN CAPITAL LETTER U WITH HORN AND HOOK ABOVE","summary":"<p>U+1EEC LATIN CAPITAL LETTER U WITH HORN AND HOOK ABOVE</p>"},{"id":"XK_Uhornhook","name":"XK_Uhornhook","value":"16785132","doc":"U+1EEB LATIN SMALL LETTER U WITH HORN AND GRAVE","summary":"<p>U+1EEB LATIN SMALL LETTER U WITH HORN AND GRAVE</p>"},{"id":"XK_uhorntilde","name":"XK_uhorntilde","value":"16785135","doc":"U+1EEE LATIN CAPITAL LETTER U WITH HORN AND TILDE","summary":"<p>U+1EEE LATIN CAPITAL LETTER U WITH HORN AND TILDE</p>"},{"id":"XK_Uhorntilde","name":"XK_Uhorntilde","value":"16785134","doc":"U+1EED LATIN SMALL LETTER U WITH HORN AND HOOK ABOVE","summary":"<p>U+1EED LATIN SMALL LETTER U WITH HORN AND HOOK ABOVE</p>"},{"id":"XK_Ukrainian_ghe_with_upturn","name":"XK_Ukrainian_ghe_with_upturn","value":"1709","doc":"U+045C CYRILLIC SMALL LETTER KJE","summary":"<p>U+045C CYRILLIC SMALL LETTER KJE</p>"},{"id":"XK_Ukrainian_GHE_WITH_UPTURN","name":"XK_Ukrainian_GHE_WITH_UPTURN","value":"1725","doc":"U+040C CYRILLIC CAPITAL LETTER KJE","summary":"<p>U+040C CYRILLIC CAPITAL LETTER KJE</p>"},{"id":"XK_Ukrainian_I","name":"XK_Ukrainian_I","value":"1718","doc":"U+0405 CYRILLIC CAPITAL LETTER DZE","summary":"<p>U+0405 CYRILLIC CAPITAL LETTER DZE</p>"},{"id":"XK_Ukrainian_i","name":"XK_Ukrainian_i","value":"1702","doc":"U+0455 CYRILLIC SMALL LETTER DZE","summary":"<p>U+0455 CYRILLIC SMALL LETTER DZE</p>"},{"id":"XK_Ukrainian_IE","name":"XK_Ukrainian_IE","value":"1716","doc":"U+0401 CYRILLIC CAPITAL LETTER IO","summary":"<p>U+0401 CYRILLIC CAPITAL LETTER IO</p>"},{"id":"XK_Ukrainian_ie","name":"XK_Ukrainian_ie","value":"1700","doc":"U+0451 CYRILLIC SMALL LETTER IO","summary":"<p>U+0451 CYRILLIC SMALL LETTER IO</p>"},{"id":"XK_Ukrainian_yi","name":"XK_Ukrainian_yi","value":"1703","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Ukrainian_YI","name":"XK_Ukrainian_YI","value":"1719","doc":"deprecated","summary":"<p>deprecated</p>"},{"id":"XK_Ukranian_I","name":"XK_Ukranian_I","value":"1718","doc":"U+0406 CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I","summary":"<p>U+0406 CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I</p>"},{"id":"XK_Ukranian_i","name":"XK_Ukranian_i","value":"1702","doc":"U+0456 CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I","summary":"<p>U+0456 CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I</p>"},{"id":"XK_Ukranian_je","name":"XK_Ukranian_je","value":"1700","doc":"U+0454 CYRILLIC SMALL LETTER UKRAINIAN IE","summary":"<p>U+0454 CYRILLIC SMALL LETTER UKRAINIAN IE</p>"},{"id":"XK_Ukranian_JE","name":"XK_Ukranian_JE","value":"1716","doc":"U+0404 CYRILLIC CAPITAL LETTER UKRAINIAN IE","summary":"<p>U+0404 CYRILLIC CAPITAL LETTER UKRAINIAN IE</p>"},{"id":"XK_Ukranian_YI","name":"XK_Ukranian_YI","value":"1719","doc":"U+0407 CYRILLIC CAPITAL LETTER YI","summary":"<p>U+0407 CYRILLIC CAPITAL LETTER YI</p>"},{"id":"XK_Ukranian_yi","name":"XK_Ukranian_yi","value":"1703","doc":"U+0457 CYRILLIC SMALL LETTER YI","summary":"<p>U+0457 CYRILLIC SMALL LETTER YI</p>"},{"id":"XK_umacron","name":"XK_umacron","value":"1022","doc":"U+0169 LATIN SMALL LETTER U WITH TILDE","summary":"<p>U+0169 LATIN SMALL LETTER U WITH TILDE</p>"},{"id":"XK_Umacron","name":"XK_Umacron","value":"990","doc":"U+0168 LATIN CAPITAL LETTER U WITH TILDE","summary":"<p>U+0168 LATIN CAPITAL LETTER U WITH TILDE</p>"},{"id":"XK_underscore","name":"XK_underscore","value":"95","doc":"U+005E CIRCUMFLEX ACCENT","summary":"<p>U+005E CIRCUMFLEX ACCENT</p>"},{"id":"XK_Undo","name":"XK_Undo","value":"65381","doc":"Insert, insert here","summary":"<p>Insert, insert here</p>"},{"id":"XK_Uogonek","name":"XK_Uogonek","value":"985","doc":"U+0136 LATIN CAPITAL LETTER K WITH CEDILLA","summary":"<p>U+0136 LATIN CAPITAL LETTER K WITH CEDILLA</p>"},{"id":"XK_uogonek","name":"XK_uogonek","value":"1017","doc":"U+0137 LATIN SMALL LETTER K WITH CEDILLA","summary":"<p>U+0137 LATIN SMALL LETTER K WITH CEDILLA</p>"},{"id":"XK_Up","name":"XK_Up","value":"65362","doc":"Move left, left arrow","summary":"<p>Move left, left arrow</p>"},{"id":"XK_uring","name":"XK_uring","value":"505","doc":"U+0159 LATIN SMALL LETTER R WITH CARON","summary":"<p>U+0159 LATIN SMALL LETTER R WITH CARON</p>"},{"id":"XK_Uring","name":"XK_Uring","value":"473","doc":"U+0158 LATIN CAPITAL LETTER R WITH CARON","summary":"<p>U+0158 LATIN CAPITAL LETTER R WITH CARON</p>"},{"id":"XK_utilde","name":"XK_utilde","value":"1021","doc":"U+0173 LATIN SMALL LETTER U WITH OGONEK","summary":"<p>U+0173 LATIN SMALL LETTER U WITH OGONEK</p>"},{"id":"XK_Utilde","name":"XK_Utilde","value":"989","doc":"U+0172 LATIN CAPITAL LETTER U WITH OGONEK","summary":"<p>U+0172 LATIN CAPITAL LETTER U WITH OGONEK</p>"},{"id":"XK_V","name":"XK_V","value":"86","doc":"U+0055 LATIN CAPITAL LETTER U","summary":"<p>U+0055 LATIN CAPITAL LETTER U</p>"},{"id":"XK_v","name":"XK_v","value":"118","doc":"U+0075 LATIN SMALL LETTER U","summary":"<p>U+0075 LATIN SMALL LETTER U</p>"},{"id":"XK_VIETNAMESE","name":"XK_VIETNAMESE","value":"true","doc":null,"summary":null},{"id":"XK_voicedsound","name":"XK_voicedsound","value":"1246","doc":"U+30F3 KATAKANA LETTER N","summary":"<p>U+30F3 KATAKANA LETTER N</p>"},{"id":"XK_VoidSymbol","name":"XK_VoidSymbol","value":"16777215","doc":null,"summary":null},{"id":"XK_W","name":"XK_W","value":"87","doc":"U+0056 LATIN CAPITAL LETTER V","summary":"<p>U+0056 LATIN CAPITAL LETTER V</p>"},{"id":"XK_w","name":"XK_w","value":"119","doc":"U+0076 LATIN SMALL LETTER V","summary":"<p>U+0076 LATIN SMALL LETTER V</p>"},{"id":"XK_Wacute","name":"XK_Wacute","value":"16785026","doc":"U+1E81 LATIN SMALL LETTER W WITH GRAVE","summary":"<p>U+1E81 LATIN SMALL LETTER W WITH GRAVE</p>"},{"id":"XK_wacute","name":"XK_wacute","value":"16785027","doc":"U+1E82 LATIN CAPITAL LETTER W WITH ACUTE","summary":"<p>U+1E82 LATIN CAPITAL LETTER W WITH ACUTE</p>"},{"id":"XK_Wcircumflex","name":"XK_Wcircumflex","value":"16777588","doc":null,"summary":null},{"id":"XK_wcircumflex","name":"XK_wcircumflex","value":"16777589","doc":"U+0174 LATIN CAPITAL LETTER W WITH CIRCUMFLEX","summary":"<p>U+0174 LATIN CAPITAL LETTER W WITH CIRCUMFLEX</p>"},{"id":"XK_wdiaeresis","name":"XK_wdiaeresis","value":"16785029","doc":"U+1E84 LATIN CAPITAL LETTER W WITH DIAERESIS","summary":"<p>U+1E84 LATIN CAPITAL LETTER W WITH DIAERESIS</p>"},{"id":"XK_Wdiaeresis","name":"XK_Wdiaeresis","value":"16785028","doc":"U+1E83 LATIN SMALL LETTER W WITH ACUTE","summary":"<p>U+1E83 LATIN SMALL LETTER W WITH ACUTE</p>"},{"id":"XK_Wgrave","name":"XK_Wgrave","value":"16785024","doc":"U+1E6B LATIN SMALL LETTER T WITH DOT ABOVE","summary":"<p>U+1E6B LATIN SMALL LETTER T WITH DOT ABOVE</p>"},{"id":"XK_wgrave","name":"XK_wgrave","value":"16785025","doc":"U+1E80 LATIN CAPITAL LETTER W WITH GRAVE","summary":"<p>U+1E80 LATIN CAPITAL LETTER W WITH GRAVE</p>"},{"id":"XK_WonSign","name":"XK_WonSign","value":"16785577","doc":"U+20A8 RUPEE SIGN","summary":"<p>U+20A8 RUPEE SIGN</p>"},{"id":"XK_x","name":"XK_x","value":"120","doc":"U+0077 LATIN SMALL LETTER W","summary":"<p>U+0077 LATIN SMALL LETTER W</p>"},{"id":"XK_X","name":"XK_X","value":"88","doc":"U+0057 LATIN CAPITAL LETTER W","summary":"<p>U+0057 LATIN CAPITAL LETTER W</p>"},{"id":"XK_xabovedot","name":"XK_xabovedot","value":"16785035","doc":"U+019F LATIN CAPITAL LETTER O WITH MIDDLE TILDE","summary":"<p>U+019F LATIN CAPITAL LETTER O WITH MIDDLE TILDE</p>"},{"id":"XK_Xabovedot","name":"XK_Xabovedot","value":"16785034","doc":"latin","summary":"<p>latin</p>"},{"id":"XK_XKB_KEYS","name":"XK_XKB_KEYS","value":"true","doc":null,"summary":null},{"id":"XK_Y","name":"XK_Y","value":"89","doc":"U+0058 LATIN CAPITAL LETTER X","summary":"<p>U+0058 LATIN CAPITAL LETTER X</p>"},{"id":"XK_y","name":"XK_y","value":"121","doc":"U+0078 LATIN SMALL LETTER X","summary":"<p>U+0078 LATIN SMALL LETTER X</p>"},{"id":"XK_yacute","name":"XK_yacute","value":"253","doc":"U+00FC LATIN SMALL LETTER U WITH DIAERESIS","summary":"<p>U+00FC LATIN SMALL LETTER U WITH DIAERESIS</p>"},{"id":"XK_Yacute","name":"XK_Yacute","value":"221","doc":"U+00DC LATIN CAPITAL LETTER U WITH DIAERESIS","summary":"<p>U+00DC LATIN CAPITAL LETTER U WITH DIAERESIS</p>"},{"id":"XK_Ybelowdot","name":"XK_Ybelowdot","value":"16785140","doc":"U+1EF1 LATIN SMALL LETTER U WITH HORN AND DOT BELOW","summary":"<p>U+1EF1 LATIN SMALL LETTER U WITH HORN AND DOT BELOW</p>"},{"id":"XK_ybelowdot","name":"XK_ybelowdot","value":"16785141","doc":"U+1EF4 LATIN CAPITAL LETTER Y WITH DOT BELOW","summary":"<p>U+1EF4 LATIN CAPITAL LETTER Y WITH DOT BELOW</p>"},{"id":"XK_ycircumflex","name":"XK_ycircumflex","value":"16777591","doc":"U+0176 LATIN CAPITAL LETTER Y WITH CIRCUMFLEX","summary":"<p>U+0176 LATIN CAPITAL LETTER Y WITH CIRCUMFLEX</p>"},{"id":"XK_Ycircumflex","name":"XK_Ycircumflex","value":"16777590","doc":"U+0175 LATIN SMALL LETTER W WITH CIRCUMFLEX","summary":"<p>U+0175 LATIN SMALL LETTER W WITH CIRCUMFLEX</p>"},{"id":"XK_ydiaeresis","name":"XK_ydiaeresis","value":"255","doc":"U+00FE LATIN SMALL LETTER THORN","summary":"<p>U+00FE LATIN SMALL LETTER THORN</p>"},{"id":"XK_Ydiaeresis","name":"XK_Ydiaeresis","value":"5054","doc":"U+0153 LATIN SMALL LIGATURE OE","summary":"<p>U+0153 LATIN SMALL LIGATURE OE</p>"},{"id":"XK_yen","name":"XK_yen","value":"165","doc":"U+00A4 CURRENCY SIGN","summary":"<p>U+00A4 CURRENCY SIGN</p>"},{"id":"XK_Ygrave","name":"XK_Ygrave","value":"16785138","doc":"U+1E85 LATIN SMALL LETTER W WITH DIAERESIS","summary":"<p>U+1E85 LATIN SMALL LETTER W WITH DIAERESIS</p>"},{"id":"XK_ygrave","name":"XK_ygrave","value":"16785139","doc":"U+1EF2 LATIN CAPITAL LETTER Y WITH GRAVE","summary":"<p>U+1EF2 LATIN CAPITAL LETTER Y WITH GRAVE</p>"},{"id":"XK_yhook","name":"XK_yhook","value":"16785143","doc":"U+1EF6 LATIN CAPITAL LETTER Y WITH HOOK ABOVE","summary":"<p>U+1EF6 LATIN CAPITAL LETTER Y WITH HOOK ABOVE</p>"},{"id":"XK_Yhook","name":"XK_Yhook","value":"16785142","doc":"U+1EF5 LATIN SMALL LETTER Y WITH DOT BELOW","summary":"<p>U+1EF5 LATIN SMALL LETTER Y WITH DOT BELOW</p>"},{"id":"XK_ytilde","name":"XK_ytilde","value":"16785145","doc":"U+1EF8 LATIN CAPITAL LETTER Y WITH TILDE","summary":"<p>U+1EF8 LATIN CAPITAL LETTER Y WITH TILDE</p>"},{"id":"XK_Ytilde","name":"XK_Ytilde","value":"16785144","doc":"U+1EF7 LATIN SMALL LETTER Y WITH HOOK ABOVE","summary":"<p>U+1EF7 LATIN SMALL LETTER Y WITH HOOK ABOVE</p>"},{"id":"XK_Z","name":"XK_Z","value":"90","doc":"U+0059 LATIN CAPITAL LETTER Y","summary":"<p>U+0059 LATIN CAPITAL LETTER Y</p>"},{"id":"XK_z","name":"XK_z","value":"122","doc":"U+0079 LATIN SMALL LETTER Y","summary":"<p>U+0079 LATIN SMALL LETTER Y</p>"},{"id":"XK_zabovedot","name":"XK_zabovedot","value":"447","doc":"U+017E LATIN SMALL LETTER Z WITH CARON","summary":"<p>U+017E LATIN SMALL LETTER Z WITH CARON</p>"},{"id":"XK_Zabovedot","name":"XK_Zabovedot","value":"431","doc":"U+017D LATIN CAPITAL LETTER Z WITH CARON","summary":"<p>U+017D LATIN CAPITAL LETTER Z WITH CARON</p>"},{"id":"XK_Zacute","name":"XK_Zacute","value":"428","doc":"U+0164 LATIN CAPITAL LETTER T WITH CARON","summary":"<p>U+0164 LATIN CAPITAL LETTER T WITH CARON</p>"},{"id":"XK_zacute","name":"XK_zacute","value":"444","doc":"U+0165 LATIN SMALL LETTER T WITH CARON","summary":"<p>U+0165 LATIN SMALL LETTER T WITH CARON</p>"},{"id":"XK_Zcaron","name":"XK_Zcaron","value":"430","doc":"U+0179 LATIN CAPITAL LETTER Z WITH ACUTE","summary":"<p>U+0179 LATIN CAPITAL LETTER Z WITH ACUTE</p>"},{"id":"XK_zcaron","name":"XK_zcaron","value":"446","doc":"U+02DD DOUBLE ACUTE ACCENT","summary":"<p>U+02DD DOUBLE ACUTE ACCENT</p>"},{"id":"XK_Zen_Koho","name":"XK_Zen_Koho","value":"65341","doc":"Codeinput","summary":"<p>Codeinput</p>"},{"id":"XK_Zenkaku","name":"XK_Zenkaku","value":"65320","doc":"Hiragana/Katakana toggle","summary":"<p>Hiragana/Katakana toggle</p>"},{"id":"XK_Zenkaku_Hankaku","name":"XK_Zenkaku_Hankaku","value":"65322","doc":"to Hankaku","summary":"<p>to Hankaku</p>"},{"id":"XK_zerosubscript","name":"XK_zerosubscript","value":"16785536","doc":"U+2079 SUPERSCRIPT NINE","summary":"<p>U+2079 SUPERSCRIPT NINE</p>"},{"id":"XK_zerosuperior","name":"XK_zerosuperior","value":"16785520","doc":"one, two and three are defined above.","summary":"<p>one, two and three are defined above.</p>"},{"id":"XK_zstroke","name":"XK_zstroke","value":"16777654","doc":"U+012D LATIN SMALL LETTER I WITH BREVE","summary":"<p>U+012D LATIN SMALL LETTER I WITH BREVE</p>"},{"id":"XK_Zstroke","name":"XK_Zstroke","value":"16777653","doc":"U+012C LATIN CAPITAL LETTER I WITH BREVE","summary":"<p>U+012C LATIN CAPITAL LETTER I WITH BREVE</p>"},{"id":"XTHREADS","name":"XTHREADS","value":"true","doc":"Threading support?","summary":"<p>Threading support?</p>"},{"id":"XUSE_MTSAFE_API","name":"XUSE_MTSAFE_API","value":"true","doc":"Use multi-threaded libc functions?","summary":"<p>Use multi-threaded libc functions?</p>"},{"id":"XYBitmap","name":"XYBitmap","value":"0","doc":null,"summary":null},{"id":"XYPixmap","name":"XYPixmap","value":"1","doc":"depth 1, XYFormat","summary":"<p>depth 1, XYFormat</p>"},{"id":"YSorted","name":"YSorted","value":"1","doc":null,"summary":null},{"id":"YXBanded","name":"YXBanded","value":"3","doc":null,"summary":null},{"id":"YXSorted","name":"YXSorted","value":"2","doc":null,"summary":null},{"id":"ZPixmap","name":"ZPixmap","value":"2","doc":"depth == drawable depth","summary":"<p>depth == drawable depth</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"}],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[{"id":"add_pixel(ximage,value)-class-method","html_id":"add_pixel(ximage,value)-class-method","name":"add_pixel","doc":null,"summary":null,"abstract":false,"args":[{"name":"ximage","doc":null,"default_value":"","external_name":"ximage","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(ximage, value)","args_html":"(ximage, value)","location":{"filename":"src/x11/c/Xutil.cr","line_number":722,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L722"},"def":{"name":"add_pixel","args":[{"name":"ximage","doc":null,"default_value":"","external_name":"ximage","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ximage.value.f.add_pixel(ximage, value)"}},{"id":"add_rect(reg,r,rx1,ry1,rx2,ry2)-class-method","html_id":"add_rect(reg,r,rx1,ry1,rx2,ry2)-class-method","name":"add_rect","doc":"add a rectangle to the given Region","summary":"<p>add a rectangle to the given Region</p>","abstract":false,"args":[{"name":"reg","doc":null,"default_value":"","external_name":"reg","restriction":""},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""},{"name":"rx1","doc":null,"default_value":"","external_name":"rx1","restriction":""},{"name":"ry1","doc":null,"default_value":"","external_name":"ry1","restriction":""},{"name":"rx2","doc":null,"default_value":"","external_name":"rx2","restriction":""},{"name":"ry2","doc":null,"default_value":"","external_name":"ry2","restriction":""}],"args_string":"(reg, r, rx1, ry1, rx2, ry2)","args_html":"(reg, r, rx1, ry1, rx2, ry2)","location":{"filename":"src/x11/c/Xregion.cr","line_number":110,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xregion.cr#L110"},"def":{"name":"add_rect","args":[{"name":"reg","doc":null,"default_value":"","external_name":"reg","restriction":""},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""},{"name":"rx1","doc":null,"default_value":"","external_name":"rx1","restriction":""},{"name":"ry1","doc":null,"default_value":"","external_name":"ry1","restriction":""},{"name":"rx2","doc":null,"default_value":"","external_name":"rx2","restriction":""},{"name":"ry2","doc":null,"default_value":"","external_name":"ry2","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ((rx1 < rx2) && (ry1 < ry2)) && (self.check_previous(reg, r, rx1, ry1, rx2, ry2))\n  r.value.x1 = rx1\n  r.value.y1 = ry1\n  r.value.x2 = rx2\n  r.value.y2 = ry2\n  self.extents(r, reg)\n  reg.value.numRects = reg.value.numRects + 1\n  r = r + 1\nend"}},{"id":"add_rect_nox(reg,r,rx1,ry1,rx2,ry2)-class-method","html_id":"add_rect_nox(reg,r,rx1,ry1,rx2,ry2)-class-method","name":"add_rect_nox","doc":"add a rectangle to the given Region","summary":"<p>add a rectangle to the given Region</p>","abstract":false,"args":[{"name":"reg","doc":null,"default_value":"","external_name":"reg","restriction":""},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""},{"name":"rx1","doc":null,"default_value":"","external_name":"rx1","restriction":""},{"name":"ry1","doc":null,"default_value":"","external_name":"ry1","restriction":""},{"name":"rx2","doc":null,"default_value":"","external_name":"rx2","restriction":""},{"name":"ry2","doc":null,"default_value":"","external_name":"ry2","restriction":""}],"args_string":"(reg, r, rx1, ry1, rx2, ry2)","args_html":"(reg, r, rx1, ry1, rx2, ry2)","location":{"filename":"src/x11/c/Xregion.cr","line_number":123,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xregion.cr#L123"},"def":{"name":"add_rect_nox","args":[{"name":"reg","doc":null,"default_value":"","external_name":"reg","restriction":""},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""},{"name":"rx1","doc":null,"default_value":"","external_name":"rx1","restriction":""},{"name":"ry1","doc":null,"default_value":"","external_name":"ry1","restriction":""},{"name":"rx2","doc":null,"default_value":"","external_name":"rx2","restriction":""},{"name":"ry2","doc":null,"default_value":"","external_name":"ry2","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ((rx1 < rx2) && (ry1 < ry2)) && (self.check_previous(reg, r, rx1, ry1, rx2, ry2))\n  r.value.x1 = rx1\n  r.value.y1 = ry1\n  r.value.x2 = rx2\n  r.value.y2 = ry2\n  reg.value.numRects = reg.value.numRects + 1\n  r = r + 1\nend"}},{"id":"all_planes-class-method","html_id":"all_planes-class-method","name":"all_planes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/c/Xlib.cr","line_number":3952,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3952"},"def":{"name":"all_planes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"~0_u64"}},{"id":"bitmap_bit_order(dpy)-class-method","html_id":"bitmap_bit_order(dpy)-class-method","name":"bitmap_bit_order","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4020,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4020"},"def":{"name":"bitmap_bit_order","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.bitmap_bit_order"}},{"id":"bitmap_pad(dpy)-class-method","html_id":"bitmap_pad(dpy)-class-method","name":"bitmap_pad","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4024,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4024"},"def":{"name":"bitmap_pad","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.bitmap_pad"}},{"id":"bitmap_unit(dpy)-class-method","html_id":"bitmap_unit(dpy)-class-method","name":"bitmap_unit","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4016,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4016"},"def":{"name":"bitmap_unit","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.bitmap_unit"}},{"id":"black_pixel(dpy,scr)-class-method","html_id":"black_pixel(dpy,scr)-class-method","name":"black_pixel","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3944,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3944"},"def":{"name":"black_pixel","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, scr)).black_pixel"}},{"id":"black_pixel_of_screen(s)-class-method","html_id":"black_pixel_of_screen(s)-class-method","name":"black_pixel_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4057,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4057"},"def":{"name":"black_pixel_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.black_pixel"}},{"id":"cells_of_screen(s)-class-method","html_id":"cells_of_screen(s)-class-method","name":"cells_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4101,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4101"},"def":{"name":"cells_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.default_visual_of_screen(s)).value.map_entries"}},{"id":"check_previous(reg,r,rx1,ry1,rx2,ry2)-class-method","html_id":"check_previous(reg,r,rx1,ry1,rx2,ry2)-class-method","name":"check_previous","doc":"this routine checks to see if the previous rectangle is the same\nor subsumes the new rectangle to add.","summary":"<p>this routine checks to see if the previous rectangle is the same or subsumes the new rectangle to add.</p>","abstract":false,"args":[{"name":"reg","doc":null,"default_value":"","external_name":"reg","restriction":""},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""},{"name":"rx1","doc":null,"default_value":"","external_name":"rx1","restriction":""},{"name":"ry1","doc":null,"default_value":"","external_name":"ry1","restriction":""},{"name":"rx2","doc":null,"default_value":"","external_name":"rx2","restriction":""},{"name":"ry2","doc":null,"default_value":"","external_name":"ry2","restriction":""}],"args_string":"(reg, r, rx1, ry1, rx2, ry2)","args_html":"(reg, r, rx1, ry1, rx2, ry2)","location":{"filename":"src/x11/c/Xregion.cr","line_number":101,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xregion.cr#L101"},"def":{"name":"check_previous","args":[{"name":"reg","doc":null,"default_value":"","external_name":"reg","restriction":""},{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""},{"name":"rx1","doc":null,"default_value":"","external_name":"rx1","restriction":""},{"name":"ry1","doc":null,"default_value":"","external_name":"ry1","restriction":""},{"name":"rx2","doc":null,"default_value":"","external_name":"rx2","restriction":""},{"name":"ry2","doc":null,"default_value":"","external_name":"ry2","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!(((((reg.value.numRects > 0) && ((r - 1).value.y1 == ry1)) && ((r - 1).value.y2 == ry2)) && ((r - 1).value.x1 <= rx1)) && ((r - 1).value.x2 >= rx2))"}},{"id":"connection_number(dpy)-class-method","html_id":"connection_number(dpy)-class-method","name":"connection_number","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3920,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3920"},"def":{"name":"connection_number","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.fd"}},{"id":"default_colormap(dpy,scr)-class-method","html_id":"default_colormap(dpy,scr)-class-method","name":"default_colormap","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4012,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4012"},"def":{"name":"default_colormap","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, scr)).cmap"}},{"id":"default_colormap_of_screen(s)-class-method","html_id":"default_colormap_of_screen(s)-class-method","name":"default_colormap_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4065,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4065"},"def":{"name":"default_colormap_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.cmap"}},{"id":"default_depth(dpy,scr)-class-method","html_id":"default_depth(dpy,scr)-class-method","name":"default_depth","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4008,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4008"},"def":{"name":"default_depth","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, scr)).root_depth"}},{"id":"default_depth_of_screen(s)-class-method","html_id":"default_depth_of_screen(s)-class-method","name":"default_depth_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4069,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4069"},"def":{"name":"default_depth_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.root_depth"}},{"id":"default_gc(dpy,scr)-class-method","html_id":"default_gc(dpy,scr)-class-method","name":"default_gc","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3940,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3940"},"def":{"name":"default_gc","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, scr)).default_gc"}},{"id":"default_gc_of_screen(s)-class-method","html_id":"default_gc_of_screen(s)-class-method","name":"default_gc_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4073,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4073"},"def":{"name":"default_gc_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.default_gc"}},{"id":"default_root_window(dpy)-class-method","html_id":"default_root_window(dpy)-class-method","name":"default_root_window","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3932,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3932"},"def":{"name":"default_root_window","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, self.default_screen(dpy))).root"}},{"id":"default_screen(dpy)-class-method","html_id":"default_screen(dpy)-class-method","name":"default_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3928,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3928"},"def":{"name":"default_screen","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.default_screen"}},{"id":"default_screen_of_display(dpy)-class-method","html_id":"default_screen_of_display(dpy)-class-method","name":"default_screen_of_display","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4045,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4045"},"def":{"name":"default_screen_of_display","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.screen_of_display(dpy, default_screen(dpy))"}},{"id":"default_visual(dpy,scr)-class-method","html_id":"default_visual(dpy,scr)-class-method","name":"default_visual","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3936,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3936"},"def":{"name":"default_visual","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, scr)).root_visual"}},{"id":"default_visual_of_screen(s)-class-method","html_id":"default_visual_of_screen(s)-class-method","name":"default_visual_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4077,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4077"},"def":{"name":"default_visual_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.root_visual"}},{"id":"destroy_image(ximage)-class-method","html_id":"destroy_image(ximage)-class-method","name":"destroy_image","doc":"These macros are used to give some sugar to the image routines so that\nnaive people are more comfortable with them.","summary":"<p>These macros are used to give some sugar to the image routines so that naive people are more comfortable with them.</p>","abstract":false,"args":[{"name":"ximage","doc":null,"default_value":"","external_name":"ximage","restriction":""}],"args_string":"(ximage)","args_html":"(ximage)","location":{"filename":"src/x11/c/Xutil.cr","line_number":706,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L706"},"def":{"name":"destroy_image","args":[{"name":"ximage","doc":null,"default_value":"","external_name":"ximage","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ximage.value.f.destroy_image(ximage)"}},{"id":"display_height(dpy,scr)-class-method","html_id":"display_height(dpy,scr)-class-method","name":"display_height","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3964,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3964"},"def":{"name":"display_height","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, scr)).height"}},{"id":"display_height_mm(dpy,scr)-class-method","html_id":"display_height_mm(dpy,scr)-class-method","name":"display_height_mm","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3972,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3972"},"def":{"name":"display_height_mm","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, scr)).mheight"}},{"id":"display_of_screen(s)-class-method","html_id":"display_of_screen(s)-class-method","name":"display_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4049,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4049"},"def":{"name":"display_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.display"}},{"id":"display_planes(dpy,scr)-class-method","html_id":"display_planes(dpy,scr)-class-method","name":"display_planes","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3976,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3976"},"def":{"name":"display_planes","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, scr)).root_depth"}},{"id":"display_string(dpy)-class-method","html_id":"display_string(dpy)-class-method","name":"display_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4004,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4004"},"def":{"name":"display_string","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.display_name"}},{"id":"display_width(dpy,scr)-class-method","html_id":"display_width(dpy,scr)-class-method","name":"display_width","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3960,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3960"},"def":{"name":"display_width","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, scr)).width"}},{"id":"display_width_mm(dpy,scr)-class-method","html_id":"display_width_mm(dpy,scr)-class-method","name":"display_width_mm","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3968,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3968"},"def":{"name":"display_width_mm","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, scr)).mwidth"}},{"id":"displayCells(dpy,scr)-class-method","html_id":"displayCells(dpy,scr)-class-method","name":"displayCells","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3980,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3980"},"def":{"name":"displayCells","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.default_visual(dpy, scr)).value.map_entries"}},{"id":"does_backing_store(s)-class-method","html_id":"does_backing_store(s)-class-method","name":"does_backing_store","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4117,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4117"},"def":{"name":"does_backing_store","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.backing_store"}},{"id":"does_save_unders(s)-class-method","html_id":"does_save_unders(s)-class-method","name":"does_save_unders","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4113,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4113"},"def":{"name":"does_save_unders","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.save_unders"}},{"id":"empty_region(pReg)-class-method","html_id":"empty_region(pReg)-class-method","name":"empty_region","doc":null,"summary":null,"abstract":false,"args":[{"name":"pReg","doc":null,"default_value":"","external_name":"pReg","restriction":""}],"args_string":"(pReg)","args_html":"(pReg)","location":{"filename":"src/x11/c/Xregion.cr","line_number":134,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xregion.cr#L134"},"def":{"name":"empty_region","args":[{"name":"pReg","doc":null,"default_value":"","external_name":"pReg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pReg.value.numRects = 0"}},{"id":"event_mask_of_screen(s)-class-method","html_id":"event_mask_of_screen(s)-class-method","name":"event_mask_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4121,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4121"},"def":{"name":"event_mask_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.root_input_mask"}},{"id":"extent_check(r1,r2)-class-method","html_id":"extent_check(r1,r2)-class-method","name":"extent_check","doc":"1 if two BOXs overlap.\n0 if two BOXs do not overlap.\nRemember, x2 and y2 are not in the region","summary":"<p>1 if two BOXs overlap.</p>","abstract":false,"args":[{"name":"r1","doc":null,"default_value":"","external_name":"r1","restriction":""},{"name":"r2","doc":null,"default_value":"","external_name":"r2","restriction":""}],"args_string":"(r1, r2)","args_html":"(r1, r2)","location":{"filename":"src/x11/c/Xregion.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xregion.cr#L63"},"def":{"name":"extent_check","args":[{"name":"r1","doc":null,"default_value":"","external_name":"r1","restriction":""},{"name":"r2","doc":null,"default_value":"","external_name":"r2","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((r1.value.x2 > r2.value.x1 && r1.value.x1 < r2.value.x2) && r1.value.y2 > r2.value.y1) && r1.value.y1 < r2.value.y2"}},{"id":"extents(r,idRect)-class-method","html_id":"extents(r,idRect)-class-method","name":"extents","doc":"update region extents","summary":"<p>update region extents</p>","abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""},{"name":"idRect","doc":null,"default_value":"","external_name":"idRect","restriction":""}],"args_string":"(r, idRect)","args_html":"(r, idRect)","location":{"filename":"src/x11/c/Xregion.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xregion.cr#L71"},"def":{"name":"extents","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""},{"name":"idRect","doc":null,"default_value":"","external_name":"idRect","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if r.value.x1 < idRect.value.extents.x1\n  idRect.value.extents.x1 = r.value.x1\nend\nif r.value.y1 < idRect.value.extents.y1\n  idRect.value.extents.y1 = r.value.y1\nend\nif r.value.x2 > idRect.value.extents.x2\n  idRect.value.extents.x2 = r.value.x2\nend\nif r.value.y2 > idRect.value.extents.y2\n  idRect.value.extents.y2 = r.value.y2\nend\n"}},{"id":"get_pixel(ximage,x,y)-class-method","html_id":"get_pixel(ximage,x,y)-class-method","name":"get_pixel","doc":null,"summary":null,"abstract":false,"args":[{"name":"ximage","doc":null,"default_value":"","external_name":"ximage","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(ximage, x, y)","args_html":"(ximage, x, y)","location":{"filename":"src/x11/c/Xutil.cr","line_number":710,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L710"},"def":{"name":"get_pixel","args":[{"name":"ximage","doc":null,"default_value":"","external_name":"ximage","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ximage.value.f.get_pixel(ximage, x, y)"}},{"id":"height_mm_of_screen(s)-class-method","html_id":"height_mm_of_screen(s)-class-method","name":"height_mm_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4093,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4093"},"def":{"name":"height_mm_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.mheight"}},{"id":"height_of_screen(s)-class-method","html_id":"height_of_screen(s)-class-method","name":"height_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4085,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4085"},"def":{"name":"height_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.height"}},{"id":"image_byte_order(dpy)-class-method","html_id":"image_byte_order(dpy)-class-method","name":"image_byte_order","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4028,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4028"},"def":{"name":"image_byte_order","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.byte_order"}},{"id":"inbox(r,x,y)-class-method","html_id":"inbox(r,x,y)-class-method","name":"inbox","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(r, x, y)","args_html":"(r, x, y)","location":{"filename":"src/x11/c/Xregion.cr","line_number":142,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xregion.cr#L142"},"def":{"name":"inbox","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(((r.x2 > x) && (r.x1 <= x)) && (r.y2 > y)) && (r.y1 <= y)"}},{"id":"is_cursor_key(keysym:KeySym)-class-method","html_id":"is_cursor_key(keysym:KeySym)-class-method","name":"is_cursor_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"args_string":"(keysym : KeySym)","args_html":"(keysym : <a href=\"../X11/C/KeySym.html\">KeySym</a>)","location":{"filename":"src/x11/c/Xutil.cr","line_number":736,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L736"},"def":{"name":"is_cursor_key","args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(keysym >= XK_Home) && (keysym < XK_Select)"}},{"id":"is_function_key(keysym:KeySym)-class-method","html_id":"is_function_key(keysym:KeySym)-class-method","name":"is_function_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"args_string":"(keysym : KeySym)","args_html":"(keysym : <a href=\"../X11/C/KeySym.html\">KeySym</a>)","location":{"filename":"src/x11/c/Xutil.cr","line_number":744,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L744"},"def":{"name":"is_function_key","args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(keysym >= XK_F1) && (keysym <= XK_F35)"}},{"id":"is_keypad_key(keysym:KeySym)-class-method","html_id":"is_keypad_key(keysym:KeySym)-class-method","name":"is_keypad_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"args_string":"(keysym : KeySym)","args_html":"(keysym : <a href=\"../X11/C/KeySym.html\">KeySym</a>)","location":{"filename":"src/x11/c/Xutil.cr","line_number":728,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L728"},"def":{"name":"is_keypad_key","args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(keysym >= XK_KP_Space) && (keysym <= XK_KP_Equal)"}},{"id":"is_misc_function_key(keysym:KeySym)-class-method","html_id":"is_misc_function_key(keysym:KeySym)-class-method","name":"is_misc_function_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"args_string":"(keysym : KeySym)","args_html":"(keysym : <a href=\"../X11/C/KeySym.html\">KeySym</a>)","location":{"filename":"src/x11/c/Xutil.cr","line_number":748,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L748"},"def":{"name":"is_misc_function_key","args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(keysym >= XK_Select) && (keysym <= XK_Break)"}},{"id":"is_modifier_key(keysym:KeySym)-class-method","html_id":"is_modifier_key(keysym:KeySym)-class-method","name":"is_modifier_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"args_string":"(keysym : KeySym)","args_html":"(keysym : <a href=\"../X11/C/KeySym.html\">KeySym</a>)","location":{"filename":"src/x11/c/Xutil.cr","line_number":752,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L752"},"def":{"name":"is_modifier_key","args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(((keysym >= XK_Shift_L) && (keysym <= XK_Hyper_R)) || (keysym == XK_Mode_switch)) || (keysym == XK_Num_Lock)"}},{"id":"is_pf_key(keysym:KeySym)-class-method","html_id":"is_pf_key(keysym:KeySym)-class-method","name":"is_pf_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"args_string":"(keysym : KeySym)","args_html":"(keysym : <a href=\"../X11/C/KeySym.html\">KeySym</a>)","location":{"filename":"src/x11/c/Xutil.cr","line_number":740,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L740"},"def":{"name":"is_pf_key","args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(keysym >= XK_KP_F1) && (keysym <= XK_KP_F4)"}},{"id":"is_private_keypad_key(keysym:KeySym)-class-method","html_id":"is_private_keypad_key(keysym:KeySym)-class-method","name":"is_private_keypad_key","doc":null,"summary":null,"abstract":false,"args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"args_string":"(keysym : KeySym)","args_html":"(keysym : <a href=\"../X11/C/KeySym.html\">KeySym</a>)","location":{"filename":"src/x11/c/Xutil.cr","line_number":732,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L732"},"def":{"name":"is_private_keypad_key","args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(keysym >= 285212672) && (keysym <= 285278207)"}},{"id":"last_known_request_processed(dpy)-class-method","html_id":"last_known_request_processed(dpy)-class-method","name":"last_known_request_processed","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4036,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4036"},"def":{"name":"last_known_request_processed","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.last_request_read"}},{"id":"max(a,b)-class-method","html_id":"max(a,b)-class-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","args_html":"(a, b)","location":{"filename":"src/x11/c/Xregion.cr","line_number":52,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xregion.cr#L52"},"def":{"name":"max","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a > b ? a : b"}},{"id":"max_cmaps_of_screen(s)-class-method","html_id":"max_cmaps_of_screen(s)-class-method","name":"max_cmaps_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4109,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4109"},"def":{"name":"max_cmaps_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.max_maps"}},{"id":"min(a,b)-class-method","html_id":"min(a,b)-class-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","args_html":"(a, b)","location":{"filename":"src/x11/c/Xregion.cr","line_number":56,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xregion.cr#L56"},"def":{"name":"min","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a < b ? a : b"}},{"id":"min_cmaps_of_screen(s)-class-method","html_id":"min_cmaps_of_screen(s)-class-method","name":"min_cmaps_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4105,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4105"},"def":{"name":"min_cmaps_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.min_maps"}},{"id":"next_request(dpy)-class-method","html_id":"next_request(dpy)-class-method","name":"next_request","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4032,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4032"},"def":{"name":"next_request","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.request + 1"}},{"id":"planes_of_screen(s)-class-method","html_id":"planes_of_screen(s)-class-method","name":"planes_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4097,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4097"},"def":{"name":"planes_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.root_depth"}},{"id":"protocol_revision(dpy)-class-method","html_id":"protocol_revision(dpy)-class-method","name":"protocol_revision","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3996,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3996"},"def":{"name":"protocol_revision","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.proto_minor_version"}},{"id":"protocol_version(dpy)-class-method","html_id":"protocol_version(dpy)-class-method","name":"protocol_version","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3992,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3992"},"def":{"name":"protocol_version","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.proto_major_version"}},{"id":"put_pixel(ximage,x,y,pixel)-class-method","html_id":"put_pixel(ximage,x,y,pixel)-class-method","name":"put_pixel","doc":null,"summary":null,"abstract":false,"args":[{"name":"ximage","doc":null,"default_value":"","external_name":"ximage","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"pixel","doc":null,"default_value":"","external_name":"pixel","restriction":""}],"args_string":"(ximage, x, y, pixel)","args_html":"(ximage, x, y, pixel)","location":{"filename":"src/x11/c/Xutil.cr","line_number":714,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L714"},"def":{"name":"put_pixel","args":[{"name":"ximage","doc":null,"default_value":"","external_name":"ximage","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"pixel","doc":null,"default_value":"","external_name":"pixel","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ximage.value.f.put_pixel(ximage, x, y, pixel)"}},{"id":"q_length(dpy)-class-method","html_id":"q_length(dpy)-class-method","name":"q_length","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3956,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3956"},"def":{"name":"q_length","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.qlen"}},{"id":"region_not_empty(pReg)-class-method","html_id":"region_not_empty(pReg)-class-method","name":"region_not_empty","doc":null,"summary":null,"abstract":false,"args":[{"name":"pReg","doc":null,"default_value":"","external_name":"pReg","restriction":""}],"args_string":"(pReg)","args_html":"(pReg)","location":{"filename":"src/x11/c/Xregion.cr","line_number":138,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xregion.cr#L138"},"def":{"name":"region_not_empty","args":[{"name":"pReg","doc":null,"default_value":"","external_name":"pReg","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pReg.value.numRects"}},{"id":"root_window(dpy,scr)-class-method","html_id":"root_window(dpy,scr)-class-method","name":"root_window","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3924,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3924"},"def":{"name":"root_window","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, scr)).root"}},{"id":"root_window_of_screen(s)-class-method","html_id":"root_window_of_screen(s)-class-method","name":"root_window_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4053,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4053"},"def":{"name":"root_window_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.root"}},{"id":"screen_count(dpy)-class-method","html_id":"screen_count(dpy)-class-method","name":"screen_count","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3984,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3984"},"def":{"name":"screen_count","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.nscreens"}},{"id":"screen_of_display(dpy,scr)-class-method","html_id":"screen_of_display(dpy,scr)-class-method","name":"screen_of_display","doc":"macros for screen oriented applications (toolkit)","summary":"<p>macros for screen oriented applications (toolkit)</p>","abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4041,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4041"},"def":{"name":"screen_of_display","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.screens[scr]"}},{"id":"server_vendor(dpy)-class-method","html_id":"server_vendor(dpy)-class-method","name":"server_vendor","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3988,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3988"},"def":{"name":"server_vendor","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.vendor"}},{"id":"string_to_context(string)-class-method","html_id":"string_to_context(string)-class-method","name":"string_to_context","doc":null,"summary":null,"abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"args_string":"(string)","args_html":"(string)","location":{"filename":"src/x11/c/Xutil.cr","line_number":771,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L771"},"def":{"name":"string_to_context","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rm_string_to_quark(string)"}},{"id":"sub_image(ximage,x,y,width,height)-class-method","html_id":"sub_image(ximage,x,y,width,height)-class-method","name":"sub_image","doc":null,"summary":null,"abstract":false,"args":[{"name":"ximage","doc":null,"default_value":"","external_name":"ximage","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":""},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""}],"args_string":"(ximage, x, y, width, height)","args_html":"(ximage, x, y, width, height)","location":{"filename":"src/x11/c/Xutil.cr","line_number":718,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L718"},"def":{"name":"sub_image","args":[{"name":"ximage","doc":null,"default_value":"","external_name":"ximage","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":""},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ximage.value.f.sub_image(ximage, x, y, width, height)"}},{"id":"unique_context-class-method","html_id":"unique_context-class-method","name":"unique_context","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/c/Xutil.cr","line_number":767,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xutil.cr#L767"},"def":{"name":"unique_context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"rm_unique_quark()"}},{"id":"vendor_release(dpy)-class-method","html_id":"vendor_release(dpy)-class-method","name":"vendor_release","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"args_string":"(dpy)","args_html":"(dpy)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4000,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4000"},"def":{"name":"vendor_release","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dpy.value.release"}},{"id":"white_pixel(dpy,scr)-class-method","html_id":"white_pixel(dpy,scr)-class-method","name":"white_pixel","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"args_string":"(dpy, scr)","args_html":"(dpy, scr)","location":{"filename":"src/x11/c/Xlib.cr","line_number":3948,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L3948"},"def":{"name":"white_pixel","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":""},{"name":"scr","doc":null,"default_value":"","external_name":"scr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.screen_of_display(dpy, scr)).white_pixel"}},{"id":"white_pixel_of_screen(s)-class-method","html_id":"white_pixel_of_screen(s)-class-method","name":"white_pixel_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4061,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4061"},"def":{"name":"white_pixel_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.white_pixel"}},{"id":"width_mm_of_screen(s)-class-method","html_id":"width_mm_of_screen(s)-class-method","name":"width_mm_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4089,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4089"},"def":{"name":"width_mm_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.mwidth"}},{"id":"width_of_screen(s)-class-method","html_id":"width_of_screen(s)-class-method","name":"width_of_screen","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"args_string":"(s)","args_html":"(s)","location":{"filename":"src/x11/c/Xlib.cr","line_number":4081,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xlib.cr#L4081"},"def":{"name":"width_of_screen","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"s.value.width"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"x11/X11/C/Atom","path":"X11/C/Atom.html","kind":"alias","full_name":"X11::C::Atom","name":"Atom","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":20,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L20"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/BITS16","path":"X11/C/BITS16.html","kind":"alias","full_name":"X11::C::BITS16","name":"BITS16","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/Xmd.cr","line_number":38,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xmd.cr#L38"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt16","aliased_html":"UInt16","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/BITS32","path":"X11/C/BITS32.html","kind":"alias","full_name":"X11::C::BITS32","name":"BITS32","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/Xmd.cr","line_number":37,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xmd.cr#L37"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt32","aliased_html":"UInt32","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/BOOL","path":"X11/C/BOOL.html","kind":"alias","full_name":"X11::C::BOOL","name":"BOOL","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/Xmd.cr","line_number":41,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xmd.cr#L41"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt8","aliased_html":"UInt8","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/BYTE","path":"X11/C/BYTE.html","kind":"alias","full_name":"X11::C::BYTE","name":"BYTE","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/Xmd.cr","line_number":40,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xmd.cr#L40"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt8","aliased_html":"UInt8","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/CARD16","path":"X11/C/CARD16.html","kind":"alias","full_name":"X11::C::CARD16","name":"CARD16","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/Xmd.cr","line_number":34,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xmd.cr#L34"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt16","aliased_html":"UInt16","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/CARD32","path":"X11/C/CARD32.html","kind":"alias","full_name":"X11::C::CARD32","name":"CARD32","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/Xmd.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xmd.cr#L27"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt32","aliased_html":"UInt32","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/CARD64","path":"X11/C/CARD64.html","kind":"alias","full_name":"X11::C::CARD64","name":"CARD64","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/Xmd.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xmd.cr#L27"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/CARD8","path":"X11/C/CARD8.html","kind":"alias","full_name":"X11::C::CARD8","name":"CARD8","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/Xmd.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xmd.cr#L35"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt8","aliased_html":"UInt8","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/Char","path":"X11/C/Char.html","kind":"alias","full_name":"X11::C::Char","name":"Char","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L7"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt8","aliased_html":"UInt8","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/Colormap","path":"X11/C/Colormap.html","kind":"alias","full_name":"X11::C::Colormap","name":"Colormap","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L31"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/Cursor","path":"X11/C/Cursor.html","kind":"alias","full_name":"X11::C::Cursor","name":"Cursor","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":30,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L30"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/Drawable","path":"X11/C/Drawable.html","kind":"alias","full_name":"X11::C::Drawable","name":"Drawable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L27"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/Font","path":"X11/C/Font.html","kind":"alias","full_name":"X11::C::Font","name":"Font","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":28,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L28"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/GContext","path":"X11/C/GContext.html","kind":"alias","full_name":"X11::C::GContext","name":"GContext","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":32,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L32"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/INT32","path":"X11/C/INT32.html","kind":"alias","full_name":"X11::C::INT32","name":"INT32","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/Xmd.cr","line_number":18,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xmd.cr#L18"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Int32","aliased_html":"Int32","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/INT64","path":"X11/C/INT64.html","kind":"alias","full_name":"X11::C::INT64","name":"INT64","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/Xmd.cr","line_number":18,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xmd.cr#L18"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Int64","aliased_html":"Int64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/INT8","path":"X11/C/INT8.html","kind":"alias","full_name":"X11::C::INT8","name":"INT8","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/Xmd.cr","line_number":25,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/Xmd.cr#L25"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Int8","aliased_html":"Int8","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/KeyCode","path":"X11/C/KeyCode.html","kind":"alias","full_name":"X11::C::KeyCode","name":"KeyCode","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L35"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt8","aliased_html":"UInt8","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/KeySym","path":"X11/C/KeySym.html","kind":"alias","full_name":"X11::C::KeySym","name":"KeySym","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":33,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L33"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/Mask","path":"X11/C/Mask.html","kind":"alias","full_name":"X11::C::Mask","name":"Mask","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L19"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PAtom","path":"X11/C/PAtom.html","kind":"alias","full_name":"X11::C::PAtom","name":"PAtom","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":37,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L37"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt64)","aliased_html":"Pointer(UInt64)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PChar","path":"X11/C/PChar.html","kind":"alias","full_name":"X11::C::PChar","name":"PChar","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L9"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt8)","aliased_html":"Pointer(UInt8)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PColormap","path":"X11/C/PColormap.html","kind":"alias","full_name":"X11::C::PColormap","name":"PColormap","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L43"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt64)","aliased_html":"Pointer(UInt64)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PCursor","path":"X11/C/PCursor.html","kind":"alias","full_name":"X11::C::PCursor","name":"PCursor","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":42,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L42"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt64)","aliased_html":"Pointer(UInt64)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PDrawable","path":"X11/C/PDrawable.html","kind":"alias","full_name":"X11::C::PDrawable","name":"PDrawable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L39"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt64)","aliased_html":"Pointer(UInt64)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PFont","path":"X11/C/PFont.html","kind":"alias","full_name":"X11::C::PFont","name":"PFont","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":40,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L40"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt64)","aliased_html":"Pointer(UInt64)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PGContext","path":"X11/C/PGContext.html","kind":"alias","full_name":"X11::C::PGContext","name":"PGContext","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":44,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L44"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt64)","aliased_html":"Pointer(UInt64)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PInt32","path":"X11/C/PInt32.html","kind":"alias","full_name":"X11::C::PInt32","name":"PInt32","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":13,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L13"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(Int32)","aliased_html":"Pointer(Int32)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PInt64","path":"X11/C/PInt64.html","kind":"alias","full_name":"X11::C::PInt64","name":"PInt64","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":15,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L15"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(Int64)","aliased_html":"Pointer(Int64)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PInt8","path":"X11/C/PInt8.html","kind":"alias","full_name":"X11::C::PInt8","name":"PInt8","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L11"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(Int8)","aliased_html":"Pointer(Int8)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/Pixmap","path":"X11/C/Pixmap.html","kind":"alias","full_name":"X11::C::Pixmap","name":"Pixmap","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":29,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L29"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PKeyCode","path":"X11/C/PKeyCode.html","kind":"alias","full_name":"X11::C::PKeyCode","name":"PKeyCode","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":46,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L46"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt8)","aliased_html":"Pointer(UInt8)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PKeySym","path":"X11/C/PKeySym.html","kind":"alias","full_name":"X11::C::PKeySym","name":"PKeySym","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":45,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L45"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt64)","aliased_html":"Pointer(UInt64)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PPChar","path":"X11/C/PPChar.html","kind":"alias","full_name":"X11::C::PPChar","name":"PPChar","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":10,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L10"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(Pointer(UInt8))","aliased_html":"Pointer(Pointer(UInt8))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PPixmap","path":"X11/C/PPixmap.html","kind":"alias","full_name":"X11::C::PPixmap","name":"PPixmap","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":41,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L41"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt64)","aliased_html":"Pointer(UInt64)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PUInt32","path":"X11/C/PUInt32.html","kind":"alias","full_name":"X11::C::PUInt32","name":"PUInt32","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":14,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L14"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt32)","aliased_html":"Pointer(UInt32)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PUInt64","path":"X11/C/PUInt64.html","kind":"alias","full_name":"X11::C::PUInt64","name":"PUInt64","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L16"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt64)","aliased_html":"Pointer(UInt64)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PUInt8","path":"X11/C/PUInt8.html","kind":"alias","full_name":"X11::C::PUInt8","name":"PUInt8","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":12,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L12"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt8)","aliased_html":"Pointer(UInt8)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/PWindow","path":"X11/C/PWindow.html","kind":"alias","full_name":"X11::C::PWindow","name":"PWindow","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":38,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L38"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"Pointer(UInt64)","aliased_html":"Pointer(UInt64)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/Time","path":"X11/C/Time.html","kind":"alias","full_name":"X11::C::Time","name":"Time","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":22,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L22"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/VisualID","path":"X11/C/VisualID.html","kind":"alias","full_name":"X11::C::VisualID","name":"VisualID","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":21,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L21"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/Window","path":"X11/C/Window.html","kind":"alias","full_name":"X11::C::Window","name":"Window","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":26,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L26"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/C/XID","path":"X11/C/XID.html","kind":"alias","full_name":"X11::C::XID","name":"XID","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/c/X.cr","line_number":18,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/c/X.cr#L18"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"UInt64","aliased_html":"UInt64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11/C","kind":"module","full_name":"X11::C","name":"C"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"x11/X11/CharStruct","path":"X11/CharStruct.html","kind":"struct","full_name":"X11::CharStruct","name":"CharStruct","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/char_struct.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L5"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wraper for `X11::C::X::CharStruct` structure.","summary":"<p>Wraper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/CharStruct.html\">CharStruct</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(char_struct:X11::C::X::PCharStruct)-class-method","html_id":"new(char_struct:X11::C::X::PCharStruct)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"char_struct","doc":null,"default_value":"","external_name":"char_struct","restriction":"X11::C::X::PCharStruct"}],"args_string":"(char_struct : X11::C::X::PCharStruct)","args_html":"(char_struct : X11::C::X::PCharStruct)","location":{"filename":"src/x11/char_struct.cr","line_number":10,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L10"},"def":{"name":"new","args":[{"name":"char_struct","doc":null,"default_value":"","external_name":"char_struct","restriction":"X11::C::X::PCharStruct"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(char_struct)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(char_struct:X11::C::X::CharStruct)-class-method","html_id":"new(char_struct:X11::C::X::CharStruct)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"char_struct","doc":null,"default_value":"","external_name":"char_struct","restriction":"X11::C::X::CharStruct"}],"args_string":"(char_struct : X11::C::X::CharStruct)","args_html":"(char_struct : X11::C::X::CharStruct)","location":{"filename":"src/x11/char_struct.cr","line_number":15,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L15"},"def":{"name":"new","args":[{"name":"char_struct","doc":null,"default_value":"","external_name":"char_struct","restriction":"X11::C::X::CharStruct"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(char_struct)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/char_struct.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L6"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ascent=(ascent:Int16)-instance-method","html_id":"ascent=(ascent:Int16)-instance-method","name":"ascent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"ascent","doc":null,"default_value":"","external_name":"ascent","restriction":"Int16"}],"args_string":"(ascent : Int16)","args_html":"(ascent : Int16)","location":{"filename":"src/x11/char_struct.cr","line_number":46,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L46"},"def":{"name":"ascent=","args":[{"name":"ascent","doc":null,"default_value":"","external_name":"ascent","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_struct.ascent = ascent"}},{"id":"attributes=(attributes:UInt16)-instance-method","html_id":"attributes=(attributes:UInt16)-instance-method","name":"attributes=","doc":null,"summary":null,"abstract":false,"args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"UInt16"}],"args_string":"(attributes : UInt16)","args_html":"(attributes : UInt16)","location":{"filename":"src/x11/char_struct.cr","line_number":54,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L54"},"def":{"name":"attributes=","args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_struct.attributes = attributes"}},{"id":"bearing:Int16-instance-method","html_id":"bearing:Int16-instance-method","name":"bearing","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/char_struct.cr","line_number":26,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L26"},"def":{"name":"bearing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@char_struct.bearing"}},{"id":"bearing=(bearing:Int16)-instance-method","html_id":"bearing=(bearing:Int16)-instance-method","name":"bearing=","doc":null,"summary":null,"abstract":false,"args":[{"name":"bearing","doc":null,"default_value":"","external_name":"bearing","restriction":"Int16"}],"args_string":"(bearing : Int16)","args_html":"(bearing : Int16)","location":{"filename":"src/x11/char_struct.cr","line_number":30,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L30"},"def":{"name":"bearing=","args":[{"name":"bearing","doc":null,"default_value":"","external_name":"bearing","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_struct.bearing = bearing"}},{"id":"descent=(descent:Int16)-instance-method","html_id":"descent=(descent:Int16)-instance-method","name":"descent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"descent","doc":null,"default_value":"","external_name":"descent","restriction":"Int16"}],"args_string":"(descent : Int16)","args_html":"(descent : Int16)","location":{"filename":"src/x11/char_struct.cr","line_number":50,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L50"},"def":{"name":"descent=","args":[{"name":"descent","doc":null,"default_value":"","external_name":"descent","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_struct.descent = descent"}},{"id":"rbearing:Int16-instance-method","html_id":"rbearing:Int16-instance-method","name":"rbearing","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/char_struct.cr","line_number":34,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L34"},"def":{"name":"rbearing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@char_struct.rbearing"}},{"id":"rbearing=(rbearing:Int16)-instance-method","html_id":"rbearing=(rbearing:Int16)-instance-method","name":"rbearing=","doc":null,"summary":null,"abstract":false,"args":[{"name":"rbearing","doc":null,"default_value":"","external_name":"rbearing","restriction":"Int16"}],"args_string":"(rbearing : Int16)","args_html":"(rbearing : Int16)","location":{"filename":"src/x11/char_struct.cr","line_number":38,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L38"},"def":{"name":"rbearing=","args":[{"name":"rbearing","doc":null,"default_value":"","external_name":"rbearing","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_struct.rbearing = rbearing"}},{"id":"to_unsafe:X11::C::X::PCharStruct-instance-method","html_id":"to_unsafe:X11::C::X::PCharStruct-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PCharStruct","args_html":" : X11::C::X::PCharStruct","location":{"filename":"src/x11/char_struct.cr","line_number":18,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L18"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PCharStruct","visibility":"Public","body":"pointerof(@char_struct)"}},{"id":"to_x:X11::C::X::CharStruct-instance-method","html_id":"to_x:X11::C::X::CharStruct-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::CharStruct","args_html":" : X11::C::X::CharStruct","location":{"filename":"src/x11/char_struct.cr","line_number":22,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L22"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::CharStruct","visibility":"Public","body":"@char_struct"}},{"id":"width=(width:Int16)-instance-method","html_id":"width=(width:Int16)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int16"}],"args_string":"(width : Int16)","args_html":"(width : Int16)","location":{"filename":"src/x11/char_struct.cr","line_number":42,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/char_struct.cr#L42"},"def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@char_struct.width = width"}}],"macros":[],"types":[]},{"html_id":"x11/X11/CirculateEvent","path":"X11/CirculateEvent.html","kind":"class","full_name":"X11::CirculateEvent","name":"CirculateEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/circulate_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::CirculateEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/CirculateEvent.html\">CirculateEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PCirculateEvent)-class-method","html_id":"new(event:X11::C::X::PCirculateEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PCirculateEvent"}],"args_string":"(event : X11::C::X::PCirculateEvent)","args_html":"(event : X11::C::X::PCirculateEvent)","location":{"filename":"src/x11/circulate_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PCirculateEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::CirculateEvent)-class-method","html_id":"new(event:X11::C::X::CirculateEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::CirculateEvent"}],"args_string":"(event : X11::C::X::CirculateEvent)","args_html":"(event : X11::C::X::CirculateEvent)","location":{"filename":"src/x11/circulate_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::CirculateEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/circulate_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/circulate_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/circulate_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"event:X11::C::Window-instance-method","html_id":"event:X11::C::Window-instance-method","name":"event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/circulate_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L59"},"def":{"name":"event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.event"}},{"id":"event=(event:X11::C::Window)-instance-method","html_id":"event=(event:X11::C::Window)-instance-method","name":"event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"args_string":"(event : X11::C::Window)","args_html":"(event : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/circulate_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L63"},"def":{"name":"event=","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.event = event"}},{"id":"on_bottom?:Bool-instance-method","html_id":"on_bottom?:Bool-instance-method","name":"on_bottom?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/circulate_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L87"},"def":{"name":"on_bottom?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.place == PlaceOnBottom"}},{"id":"on_top?:Bool-instance-method","html_id":"on_top?:Bool-instance-method","name":"on_top?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/circulate_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L83"},"def":{"name":"on_top?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.place == PlaceOnTop"}},{"id":"place:Int32-instance-method","html_id":"place:Int32-instance-method","name":"place","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/circulate_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L75"},"def":{"name":"place","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.place"}},{"id":"place=(place:Int32)-instance-method","html_id":"place=(place:Int32)-instance-method","name":"place=","doc":null,"summary":null,"abstract":false,"args":[{"name":"place","doc":null,"default_value":"","external_name":"place","restriction":"Int32"}],"args_string":"(place : Int32)","args_html":"(place : Int32)","location":{"filename":"src/x11/circulate_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L79"},"def":{"name":"place=","args":[{"name":"place","doc":null,"default_value":"","external_name":"place","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.place = place"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/circulate_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/circulate_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/circulate_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/circulate_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PCirculateEvent-instance-method","html_id":"to_unsafe:X11::C::X::PCirculateEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PCirculateEvent","args_html":" : X11::C::X::PCirculateEvent","location":{"filename":"src/x11/circulate_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PCirculateEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::CirculateEvent-instance-method","html_id":"to_x:X11::C::X::CirculateEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::CirculateEvent","args_html":" : X11::C::X::CirculateEvent","location":{"filename":"src/x11/circulate_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::CirculateEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/circulate_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/circulate_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/circulate_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/circulate_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/CirculateRequestEvent","path":"X11/CirculateRequestEvent.html","kind":"class","full_name":"X11::CirculateRequestEvent","name":"CirculateRequestEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/circulate_request_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::CirculateRequestEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/CirculateRequestEvent.html\">CirculateRequestEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PCirculateRequestEvent)-class-method","html_id":"new(event:X11::C::X::PCirculateRequestEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PCirculateRequestEvent"}],"args_string":"(event : X11::C::X::PCirculateRequestEvent)","args_html":"(event : X11::C::X::PCirculateRequestEvent)","location":{"filename":"src/x11/circulate_request_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PCirculateRequestEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::CirculateRequestEvent)-class-method","html_id":"new(event:X11::C::X::CirculateRequestEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::CirculateRequestEvent"}],"args_string":"(event : X11::C::X::CirculateRequestEvent)","args_html":"(event : X11::C::X::CirculateRequestEvent)","location":{"filename":"src/x11/circulate_request_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::CirculateRequestEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/circulate_request_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/circulate_request_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/circulate_request_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"on_bottom?:Bool-instance-method","html_id":"on_bottom?:Bool-instance-method","name":"on_bottom?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/circulate_request_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L87"},"def":{"name":"on_bottom?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.place == PlaceOnBottom"}},{"id":"on_top?:Bool-instance-method","html_id":"on_top?:Bool-instance-method","name":"on_top?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/circulate_request_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L83"},"def":{"name":"on_top?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.place == PlaceOnTop"}},{"id":"parent:X11::C::Window-instance-method","html_id":"parent:X11::C::Window-instance-method","name":"parent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/circulate_request_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L59"},"def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.parent"}},{"id":"parent=(parent:X11::C::Window)-instance-method","html_id":"parent=(parent:X11::C::Window)-instance-method","name":"parent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"}],"args_string":"(parent : X11::C::Window)","args_html":"(parent : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/circulate_request_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L63"},"def":{"name":"parent=","args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.parent = parent"}},{"id":"place:Int32-instance-method","html_id":"place:Int32-instance-method","name":"place","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/circulate_request_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L75"},"def":{"name":"place","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.place"}},{"id":"place=(place:Int32)-instance-method","html_id":"place=(place:Int32)-instance-method","name":"place=","doc":null,"summary":null,"abstract":false,"args":[{"name":"place","doc":null,"default_value":"","external_name":"place","restriction":"Int32"}],"args_string":"(place : Int32)","args_html":"(place : Int32)","location":{"filename":"src/x11/circulate_request_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L79"},"def":{"name":"place=","args":[{"name":"place","doc":null,"default_value":"","external_name":"place","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.place = place"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/circulate_request_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/circulate_request_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/circulate_request_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/circulate_request_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PCirculateRequestEvent-instance-method","html_id":"to_unsafe:X11::C::X::PCirculateRequestEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PCirculateRequestEvent","args_html":" : X11::C::X::PCirculateRequestEvent","location":{"filename":"src/x11/circulate_request_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PCirculateRequestEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::CirculateRequestEvent-instance-method","html_id":"to_x:X11::C::X::CirculateRequestEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::CirculateRequestEvent","args_html":" : X11::C::X::CirculateRequestEvent","location":{"filename":"src/x11/circulate_request_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::CirculateRequestEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/circulate_request_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/circulate_request_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/circulate_request_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/circulate_request_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/circulate_request_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/ClientMessageEvent","path":"X11/ClientMessageEvent.html","kind":"class","full_name":"X11::ClientMessageEvent","name":"ClientMessageEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/client_message_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::ClientMessageEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/ClientMessageEvent.html\">ClientMessageEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PClientMessageEvent)-class-method","html_id":"new(event:X11::C::X::PClientMessageEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PClientMessageEvent"}],"args_string":"(event : X11::C::X::PClientMessageEvent)","args_html":"(event : X11::C::X::PClientMessageEvent)","location":{"filename":"src/x11/client_message_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PClientMessageEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::ClientMessageEvent)-class-method","html_id":"new(event:X11::C::X::ClientMessageEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ClientMessageEvent"}],"args_string":"(event : X11::C::X::ClientMessageEvent)","args_html":"(event : X11::C::X::ClientMessageEvent)","location":{"filename":"src/x11/client_message_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ClientMessageEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/client_message_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"char_data:StaticArray(UInt8,20)-instance-method","html_id":"char_data:StaticArray(UInt8,20)-instance-method","name":"char_data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : StaticArray(UInt8, <span class=\"n\">20</span>)","args_html":" : StaticArray(UInt8, <span class=\"n\">20</span>)","location":{"filename":"src/x11/client_message_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L83"},"def":{"name":"char_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"StaticArray(UInt8, 20)","visibility":"Public","body":"@event.data.b"}},{"id":"char_data=(char_data:StaticArray(UInt8,20))-instance-method","html_id":"char_data=(char_data:StaticArray(UInt8,20))-instance-method","name":"char_data=","doc":null,"summary":null,"abstract":false,"args":[{"name":"char_data","doc":null,"default_value":"","external_name":"char_data","restriction":"StaticArray(UInt8, 20)"}],"args_string":"(char_data : StaticArray(UInt8, <span class=\"n\">20</span>))","args_html":"(char_data : StaticArray(UInt8, <span class=\"n\">20</span>))","location":{"filename":"src/x11/client_message_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L87"},"def":{"name":"char_data=","args":[{"name":"char_data","doc":null,"default_value":"","external_name":"char_data","restriction":"StaticArray(UInt8, 20)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.data.b = char_data"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/client_message_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/client_message_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"format:Int32-instance-method","html_id":"format:Int32-instance-method","name":"format","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/client_message_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L75"},"def":{"name":"format","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.format"}},{"id":"format=(format:Int32)-instance-method","html_id":"format=(format:Int32)-instance-method","name":"format=","doc":null,"summary":null,"abstract":false,"args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Int32"}],"args_string":"(format : Int32)","args_html":"(format : Int32)","location":{"filename":"src/x11/client_message_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L79"},"def":{"name":"format=","args":[{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.format = format"}},{"id":"long_data:StaticArray(Int64,5)-instance-method","html_id":"long_data:StaticArray(Int64,5)-instance-method","name":"long_data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : StaticArray(Int64, <span class=\"n\">5</span>)","args_html":" : StaticArray(Int64, <span class=\"n\">5</span>)","location":{"filename":"src/x11/client_message_event.cr","line_number":99,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L99"},"def":{"name":"long_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"StaticArray(Int64, 5)","visibility":"Public","body":"@event.data.l"}},{"id":"long_data=(long_data:StaticArray(Int64,5))-instance-method","html_id":"long_data=(long_data:StaticArray(Int64,5))-instance-method","name":"long_data=","doc":null,"summary":null,"abstract":false,"args":[{"name":"long_data","doc":null,"default_value":"","external_name":"long_data","restriction":"StaticArray(Int64, 5)"}],"args_string":"(long_data : StaticArray(Int64, <span class=\"n\">5</span>))","args_html":"(long_data : StaticArray(Int64, <span class=\"n\">5</span>))","location":{"filename":"src/x11/client_message_event.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L103"},"def":{"name":"long_data=","args":[{"name":"long_data","doc":null,"default_value":"","external_name":"long_data","restriction":"StaticArray(Int64, 5)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.data.l = long_data"}},{"id":"message_type:X11::C::Atom-instance-method","html_id":"message_type:X11::C::Atom-instance-method","name":"message_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Atom","args_html":" : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>","location":{"filename":"src/x11/client_message_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L67"},"def":{"name":"message_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Atom","visibility":"Public","body":"@event.message_type"}},{"id":"message_type=(message_type:X11::C::Atom)-instance-method","html_id":"message_type=(message_type:X11::C::Atom)-instance-method","name":"message_type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"message_type","doc":null,"default_value":"","external_name":"message_type","restriction":"X11::C::Atom"}],"args_string":"(message_type : X11::C::Atom)","args_html":"(message_type : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)","location":{"filename":"src/x11/client_message_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L71"},"def":{"name":"message_type=","args":[{"name":"message_type","doc":null,"default_value":"","external_name":"message_type","restriction":"X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.message_type = message_type"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/client_message_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/client_message_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/client_message_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/client_message_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"short_data:StaticArray(Int16,10)-instance-method","html_id":"short_data:StaticArray(Int16,10)-instance-method","name":"short_data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : StaticArray(Int16, <span class=\"n\">10</span>)","args_html":" : StaticArray(Int16, <span class=\"n\">10</span>)","location":{"filename":"src/x11/client_message_event.cr","line_number":91,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L91"},"def":{"name":"short_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"StaticArray(Int16, 10)","visibility":"Public","body":"@event.data.s"}},{"id":"short_data=(short_data:StaticArray(Int16,10))-instance-method","html_id":"short_data=(short_data:StaticArray(Int16,10))-instance-method","name":"short_data=","doc":null,"summary":null,"abstract":false,"args":[{"name":"short_data","doc":null,"default_value":"","external_name":"short_data","restriction":"StaticArray(Int16, 10)"}],"args_string":"(short_data : StaticArray(Int16, <span class=\"n\">10</span>))","args_html":"(short_data : StaticArray(Int16, <span class=\"n\">10</span>))","location":{"filename":"src/x11/client_message_event.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L95"},"def":{"name":"short_data=","args":[{"name":"short_data","doc":null,"default_value":"","external_name":"short_data","restriction":"StaticArray(Int16, 10)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.data.s = short_data"}},{"id":"to_unsafe:X11::C::X::PClientMessageEvent-instance-method","html_id":"to_unsafe:X11::C::X::PClientMessageEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PClientMessageEvent","args_html":" : X11::C::X::PClientMessageEvent","location":{"filename":"src/x11/client_message_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PClientMessageEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::ClientMessageEvent-instance-method","html_id":"to_x:X11::C::X::ClientMessageEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::ClientMessageEvent","args_html":" : X11::C::X::ClientMessageEvent","location":{"filename":"src/x11/client_message_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ClientMessageEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/client_message_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/client_message_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/client_message_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L59"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/client_message_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/client_message_event.cr#L63"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/Color","path":"X11/Color.html","kind":"struct","full_name":"X11::Color","name":"Color","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/color.cr","line_number":2,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L2"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(pixel:UInt64,red:UInt16,green:UInt16,blue:UInt16,flags:UInt8,pad:UInt8)-class-method","html_id":"new(pixel:UInt64,red:UInt16,green:UInt16,blue:UInt16,flags:UInt8,pad:UInt8)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pixel","doc":null,"default_value":"","external_name":"pixel","restriction":"UInt64"},{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"UInt16"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"UInt16"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"UInt16"},{"name":"flags","doc":null,"default_value":"","external_name":"flags","restriction":"UInt8"},{"name":"pad","doc":null,"default_value":"","external_name":"pad","restriction":"UInt8"}],"args_string":"(pixel : UInt64, red : UInt16, green : UInt16, blue : UInt16, flags : UInt8, pad : UInt8)","args_html":"(pixel : UInt64, red : UInt16, green : UInt16, blue : UInt16, flags : UInt8, pad : UInt8)","location":{"filename":"src/x11/color.cr","line_number":24,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L24"},"def":{"name":"new","args":[{"name":"pixel","doc":null,"default_value":"","external_name":"pixel","restriction":"UInt64"},{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"UInt16"},{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"UInt16"},{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"UInt16"},{"name":"flags","doc":null,"default_value":"","external_name":"flags","restriction":"UInt8"},{"name":"pad","doc":null,"default_value":"","external_name":"pad","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pixel, red, green, blue, flags, pad)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(color:X11::C::X::Color)-class-method","html_id":"new(color:X11::C::X::Color)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"X11::C::X::Color"}],"args_string":"(color : X11::C::X::Color)","args_html":"(color : X11::C::X::Color)","location":{"filename":"src/x11/color.cr","line_number":10,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L10"},"def":{"name":"new","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"X11::C::X::Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(color)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(color:X11::C::X::PColor)-class-method","html_id":"new(color:X11::C::X::PColor)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"X11::C::X::PColor"}],"args_string":"(color : X11::C::X::PColor)","args_html":"(color : X11::C::X::PColor)","location":{"filename":"src/x11/color.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L19"},"def":{"name":"new","args":[{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"X11::C::X::PColor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(color)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"blue:UInt16-instance-method","html_id":"blue:UInt16-instance-method","name":"blue","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt16","args_html":" : UInt16","location":{"filename":"src/x11/color.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L6"},"def":{"name":"blue","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"@blue"}},{"id":"blue=(blue:UInt16)-instance-method","html_id":"blue=(blue:UInt16)-instance-method","name":"blue=","doc":null,"summary":null,"abstract":false,"args":[{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"UInt16"}],"args_string":"(blue : UInt16)","args_html":"(blue : UInt16)","location":{"filename":"src/x11/color.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L6"},"def":{"name":"blue=","args":[{"name":"blue","doc":null,"default_value":"","external_name":"blue","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@blue = blue"}},{"id":"flags:UInt8-instance-method","html_id":"flags:UInt8-instance-method","name":"flags","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","args_html":" : UInt8","location":{"filename":"src/x11/color.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L7"},"def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"@flags"}},{"id":"flags=(flags:UInt8)-instance-method","html_id":"flags=(flags:UInt8)-instance-method","name":"flags=","doc":null,"summary":null,"abstract":false,"args":[{"name":"flags","doc":null,"default_value":"","external_name":"flags","restriction":"UInt8"}],"args_string":"(flags : UInt8)","args_html":"(flags : UInt8)","location":{"filename":"src/x11/color.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L7"},"def":{"name":"flags=","args":[{"name":"flags","doc":null,"default_value":"","external_name":"flags","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@flags = flags"}},{"id":"green:UInt16-instance-method","html_id":"green:UInt16-instance-method","name":"green","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt16","args_html":" : UInt16","location":{"filename":"src/x11/color.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L5"},"def":{"name":"green","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"@green"}},{"id":"green=(green:UInt16)-instance-method","html_id":"green=(green:UInt16)-instance-method","name":"green=","doc":null,"summary":null,"abstract":false,"args":[{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"UInt16"}],"args_string":"(green : UInt16)","args_html":"(green : UInt16)","location":{"filename":"src/x11/color.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L5"},"def":{"name":"green=","args":[{"name":"green","doc":null,"default_value":"","external_name":"green","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@green = green"}},{"id":"pad:UInt8-instance-method","html_id":"pad:UInt8-instance-method","name":"pad","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","args_html":" : UInt8","location":{"filename":"src/x11/color.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L8"},"def":{"name":"pad","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"@pad"}},{"id":"pad=(pad:UInt8)-instance-method","html_id":"pad=(pad:UInt8)-instance-method","name":"pad=","doc":null,"summary":null,"abstract":false,"args":[{"name":"pad","doc":null,"default_value":"","external_name":"pad","restriction":"UInt8"}],"args_string":"(pad : UInt8)","args_html":"(pad : UInt8)","location":{"filename":"src/x11/color.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L8"},"def":{"name":"pad=","args":[{"name":"pad","doc":null,"default_value":"","external_name":"pad","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pad = pad"}},{"id":"pixel:UInt64-instance-method","html_id":"pixel:UInt64-instance-method","name":"pixel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/color.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L3"},"def":{"name":"pixel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@pixel"}},{"id":"pixel=(pixel:UInt64)-instance-method","html_id":"pixel=(pixel:UInt64)-instance-method","name":"pixel=","doc":null,"summary":null,"abstract":false,"args":[{"name":"pixel","doc":null,"default_value":"","external_name":"pixel","restriction":"UInt64"}],"args_string":"(pixel : UInt64)","args_html":"(pixel : UInt64)","location":{"filename":"src/x11/color.cr","line_number":3,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L3"},"def":{"name":"pixel=","args":[{"name":"pixel","doc":null,"default_value":"","external_name":"pixel","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pixel = pixel"}},{"id":"red:UInt16-instance-method","html_id":"red:UInt16-instance-method","name":"red","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt16","args_html":" : UInt16","location":{"filename":"src/x11/color.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L4"},"def":{"name":"red","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"@red"}},{"id":"red=(red:UInt16)-instance-method","html_id":"red=(red:UInt16)-instance-method","name":"red=","doc":null,"summary":null,"abstract":false,"args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"UInt16"}],"args_string":"(red : UInt16)","args_html":"(red : UInt16)","location":{"filename":"src/x11/color.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L4"},"def":{"name":"red=","args":[{"name":"red","doc":null,"default_value":"","external_name":"red","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@red = red"}},{"id":"to_unsafe:X11::C::X::PColor-instance-method","html_id":"to_unsafe:X11::C::X::PColor-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PColor","args_html":" : X11::C::X::PColor","location":{"filename":"src/x11/color.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L27"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PColor","visibility":"Public","body":"(pointerof(@pixel)).as(X11::C::X::PColor)"}},{"id":"to_x:X11::C::X::Color-instance-method","html_id":"to_x:X11::C::X::Color-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::Color","args_html":" : X11::C::X::Color","location":{"filename":"src/x11/color.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/color.cr#L31"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::Color","visibility":"Public","body":"color = X11::C::X::Color.new\ncolor.pixel = @pixel\ncolor.red = @red\ncolor.green = @green\ncolor.blue = @blue\ncolor.flags = @flags\ncolor.pad = @pad\ncolor\n"}}],"macros":[],"types":[]},{"html_id":"x11/X11/ColormapEvent","path":"X11/ColormapEvent.html","kind":"class","full_name":"X11::ColormapEvent","name":"ColormapEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/colormap_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::ColormapEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/ColormapEvent.html\">ColormapEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PColormapEvent)-class-method","html_id":"new(event:X11::C::X::PColormapEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PColormapEvent"}],"args_string":"(event : X11::C::X::PColormapEvent)","args_html":"(event : X11::C::X::PColormapEvent)","location":{"filename":"src/x11/colormap_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PColormapEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::ColormapEvent)-class-method","html_id":"new(event:X11::C::X::ColormapEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ColormapEvent"}],"args_string":"(event : X11::C::X::ColormapEvent)","args_html":"(event : X11::C::X::ColormapEvent)","location":{"filename":"src/x11/colormap_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ColormapEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/colormap_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"colormap:X11::C::Colormap-instance-method","html_id":"colormap:X11::C::Colormap-instance-method","name":"colormap","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Colormap","args_html":" : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>","location":{"filename":"src/x11/colormap_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L67"},"def":{"name":"colormap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Colormap","visibility":"Public","body":"@event.colormap"}},{"id":"colormap=(colormap:X11::C::Colormap)-instance-method","html_id":"colormap=(colormap:X11::C::Colormap)-instance-method","name":"colormap=","doc":null,"summary":null,"abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"args_string":"(colormap : X11::C::Colormap)","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>)","location":{"filename":"src/x11/colormap_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L71"},"def":{"name":"colormap=","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.colormap = colormap"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/colormap_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/colormap_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"is_new:Bool-instance-method","html_id":"is_new:Bool-instance-method","name":"is_new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/colormap_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L75"},"def":{"name":"is_new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.is_new ? true : false"}},{"id":"is_new=(is_new:Bool)-instance-method","html_id":"is_new=(is_new:Bool)-instance-method","name":"is_new=","doc":null,"summary":null,"abstract":false,"args":[{"name":"is_new","doc":null,"default_value":"","external_name":"is_new","restriction":"Bool"}],"args_string":"(is_new : Bool)","args_html":"(is_new : Bool)","location":{"filename":"src/x11/colormap_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L79"},"def":{"name":"is_new=","args":[{"name":"is_new","doc":null,"default_value":"","external_name":"is_new","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.is_new = is_new ? 1 : 0"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/colormap_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/colormap_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/colormap_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/colormap_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"state:Int32-instance-method","html_id":"state:Int32-instance-method","name":"state","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/colormap_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L83"},"def":{"name":"state","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.state"}},{"id":"state=(state:Int32)-instance-method","html_id":"state=(state:Int32)-instance-method","name":"state=","doc":null,"summary":null,"abstract":false,"args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"Int32"}],"args_string":"(state : Int32)","args_html":"(state : Int32)","location":{"filename":"src/x11/colormap_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L87"},"def":{"name":"state=","args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.state = state"}},{"id":"to_unsafe:X11::C::X::PColormapEvent-instance-method","html_id":"to_unsafe:X11::C::X::PColormapEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PColormapEvent","args_html":" : X11::C::X::PColormapEvent","location":{"filename":"src/x11/colormap_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PColormapEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::ColormapEvent-instance-method","html_id":"to_x:X11::C::X::ColormapEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::ColormapEvent","args_html":" : X11::C::X::ColormapEvent","location":{"filename":"src/x11/colormap_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ColormapEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/colormap_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/colormap_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/colormap_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L59"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/colormap_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/colormap_event.cr#L63"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/ConfigureEvent","path":"X11/ConfigureEvent.html","kind":"class","full_name":"X11::ConfigureEvent","name":"ConfigureEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/configure_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::ConfigureEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/ConfigureEvent.html\">ConfigureEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PConfigureEvent)-class-method","html_id":"new(event:X11::C::X::PConfigureEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PConfigureEvent"}],"args_string":"(event : X11::C::X::PConfigureEvent)","args_html":"(event : X11::C::X::PConfigureEvent)","location":{"filename":"src/x11/configure_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PConfigureEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::ConfigureEvent)-class-method","html_id":"new(event:X11::C::X::ConfigureEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ConfigureEvent"}],"args_string":"(event : X11::C::X::ConfigureEvent)","args_html":"(event : X11::C::X::ConfigureEvent)","location":{"filename":"src/x11/configure_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ConfigureEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/configure_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"above:X11::C::Window-instance-method","html_id":"above:X11::C::Window-instance-method","name":"above","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/configure_event.cr","line_number":115,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L115"},"def":{"name":"above","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.above"}},{"id":"above=(above:X11::C::Window)-instance-method","html_id":"above=(above:X11::C::Window)-instance-method","name":"above=","doc":null,"summary":null,"abstract":false,"args":[{"name":"above","doc":null,"default_value":"","external_name":"above","restriction":"X11::C::Window"}],"args_string":"(above : X11::C::Window)","args_html":"(above : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/configure_event.cr","line_number":119,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L119"},"def":{"name":"above=","args":[{"name":"above","doc":null,"default_value":"","external_name":"above","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.above = above"}},{"id":"border_width:Int32-instance-method","html_id":"border_width:Int32-instance-method","name":"border_width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_event.cr","line_number":107,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L107"},"def":{"name":"border_width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.border_width"}},{"id":"border_width=(border_width:Int32)-instance-method","html_id":"border_width=(border_width:Int32)-instance-method","name":"border_width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"border_width","doc":null,"default_value":"","external_name":"border_width","restriction":"Int32"}],"args_string":"(border_width : Int32)","args_html":"(border_width : Int32)","location":{"filename":"src/x11/configure_event.cr","line_number":111,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L111"},"def":{"name":"border_width=","args":[{"name":"border_width","doc":null,"default_value":"","external_name":"border_width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.border_width = border_width"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/configure_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/configure_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"event:X11::C::Window-instance-method","html_id":"event:X11::C::Window-instance-method","name":"event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/configure_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L59"},"def":{"name":"event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.event"}},{"id":"event=(event:X11::C::Window)-instance-method","html_id":"event=(event:X11::C::Window)-instance-method","name":"event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"args_string":"(event : X11::C::Window)","args_html":"(event : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/configure_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L63"},"def":{"name":"event=","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.event = event"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_event.cr","line_number":99,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L99"},"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.height"}},{"id":"height=(height:Int32)-instance-method","html_id":"height=(height:Int32)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(height : Int32)","args_html":"(height : Int32)","location":{"filename":"src/x11/configure_event.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L103"},"def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.height = height"}},{"id":"override_redirect:Bool-instance-method","html_id":"override_redirect:Bool-instance-method","name":"override_redirect","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/configure_event.cr","line_number":123,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L123"},"def":{"name":"override_redirect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.override_redirect ? true : false"}},{"id":"override_redirect=(override_redirect:Bool)-instance-method","html_id":"override_redirect=(override_redirect:Bool)-instance-method","name":"override_redirect=","doc":null,"summary":null,"abstract":false,"args":[{"name":"override_redirect","doc":null,"default_value":"","external_name":"override_redirect","restriction":"Bool"}],"args_string":"(override_redirect : Bool)","args_html":"(override_redirect : Bool)","location":{"filename":"src/x11/configure_event.cr","line_number":127,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L127"},"def":{"name":"override_redirect=","args":[{"name":"override_redirect","doc":null,"default_value":"","external_name":"override_redirect","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.override_redirect = override_redirect ? 1 : 0"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/configure_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/configure_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/configure_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/configure_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PConfigureEvent-instance-method","html_id":"to_unsafe:X11::C::X::PConfigureEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PConfigureEvent","args_html":" : X11::C::X::PConfigureEvent","location":{"filename":"src/x11/configure_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PConfigureEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::ConfigureEvent-instance-method","html_id":"to_x:X11::C::X::ConfigureEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::ConfigureEvent","args_html":" : X11::C::X::ConfigureEvent","location":{"filename":"src/x11/configure_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ConfigureEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/configure_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_event.cr","line_number":91,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L91"},"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.width"}},{"id":"width=(width:Int32)-instance-method","html_id":"width=(width:Int32)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"args_string":"(width : Int32)","args_html":"(width : Int32)","location":{"filename":"src/x11/configure_event.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L95"},"def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.width = width"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/configure_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/configure_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L75"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","args_html":"(x : Int32)","location":{"filename":"src/x11/configure_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L79"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x = x"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L83"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","args_html":"(y : Int32)","location":{"filename":"src/x11/configure_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_event.cr#L87"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y = y"}}],"macros":[],"types":[]},{"html_id":"x11/X11/ConfigureRequestEvent","path":"X11/ConfigureRequestEvent.html","kind":"class","full_name":"X11::ConfigureRequestEvent","name":"ConfigureRequestEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/configure_request_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::ConfigureRequestEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/ConfigureRequestEvent.html\">ConfigureRequestEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PConfigureRequestEvent)-class-method","html_id":"new(event:X11::C::X::PConfigureRequestEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PConfigureRequestEvent"}],"args_string":"(event : X11::C::X::PConfigureRequestEvent)","args_html":"(event : X11::C::X::PConfigureRequestEvent)","location":{"filename":"src/x11/configure_request_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PConfigureRequestEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::ConfigureRequestEvent)-class-method","html_id":"new(event:X11::C::X::ConfigureRequestEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ConfigureRequestEvent"}],"args_string":"(event : X11::C::X::ConfigureRequestEvent)","args_html":"(event : X11::C::X::ConfigureRequestEvent)","location":{"filename":"src/x11/configure_request_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ConfigureRequestEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/configure_request_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"above:X11::C::Window-instance-method","html_id":"above:X11::C::Window-instance-method","name":"above","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/configure_request_event.cr","line_number":115,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L115"},"def":{"name":"above","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.above"}},{"id":"above=(above:X11::C::Window)-instance-method","html_id":"above=(above:X11::C::Window)-instance-method","name":"above=","doc":null,"summary":null,"abstract":false,"args":[{"name":"above","doc":null,"default_value":"","external_name":"above","restriction":"X11::C::Window"}],"args_string":"(above : X11::C::Window)","args_html":"(above : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/configure_request_event.cr","line_number":119,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L119"},"def":{"name":"above=","args":[{"name":"above","doc":null,"default_value":"","external_name":"above","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.above = above"}},{"id":"border_width:Int32-instance-method","html_id":"border_width:Int32-instance-method","name":"border_width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_request_event.cr","line_number":107,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L107"},"def":{"name":"border_width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.border_width"}},{"id":"border_width=(border_width:Int32)-instance-method","html_id":"border_width=(border_width:Int32)-instance-method","name":"border_width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"border_width","doc":null,"default_value":"","external_name":"border_width","restriction":"Int32"}],"args_string":"(border_width : Int32)","args_html":"(border_width : Int32)","location":{"filename":"src/x11/configure_request_event.cr","line_number":111,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L111"},"def":{"name":"border_width=","args":[{"name":"border_width","doc":null,"default_value":"","external_name":"border_width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.border_width = border_width"}},{"id":"detail:Int32-instance-method","html_id":"detail:Int32-instance-method","name":"detail","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_request_event.cr","line_number":123,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L123"},"def":{"name":"detail","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.detail"}},{"id":"detail=(detail:Int32)-instance-method","html_id":"detail=(detail:Int32)-instance-method","name":"detail=","doc":null,"summary":null,"abstract":false,"args":[{"name":"detail","doc":null,"default_value":"","external_name":"detail","restriction":"Int32"}],"args_string":"(detail : Int32)","args_html":"(detail : Int32)","location":{"filename":"src/x11/configure_request_event.cr","line_number":127,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L127"},"def":{"name":"detail=","args":[{"name":"detail","doc":null,"default_value":"","external_name":"detail","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.detail = detail"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/configure_request_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/configure_request_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_request_event.cr","line_number":99,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L99"},"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.height"}},{"id":"height=(height:Int32)-instance-method","html_id":"height=(height:Int32)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(height : Int32)","args_html":"(height : Int32)","location":{"filename":"src/x11/configure_request_event.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L103"},"def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.height = height"}},{"id":"parent:X11::C::Window-instance-method","html_id":"parent:X11::C::Window-instance-method","name":"parent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/configure_request_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L59"},"def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.parent"}},{"id":"parent=(parent:X11::C::Window)-instance-method","html_id":"parent=(parent:X11::C::Window)-instance-method","name":"parent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"}],"args_string":"(parent : X11::C::Window)","args_html":"(parent : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/configure_request_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L63"},"def":{"name":"parent=","args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.parent = parent"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/configure_request_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/configure_request_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/configure_request_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/configure_request_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PConfigureRequestEvent-instance-method","html_id":"to_unsafe:X11::C::X::PConfigureRequestEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PConfigureRequestEvent","args_html":" : X11::C::X::PConfigureRequestEvent","location":{"filename":"src/x11/configure_request_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PConfigureRequestEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::ConfigureRequestEvent-instance-method","html_id":"to_x:X11::C::X::ConfigureRequestEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::ConfigureRequestEvent","args_html":" : X11::C::X::ConfigureRequestEvent","location":{"filename":"src/x11/configure_request_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ConfigureRequestEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_request_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/configure_request_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"value_mask:UInt64-instance-method","html_id":"value_mask:UInt64-instance-method","name":"value_mask","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/configure_request_event.cr","line_number":131,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L131"},"def":{"name":"value_mask","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.value_mask"}},{"id":"value_mask=(value_mask:UInt64)-instance-method","html_id":"value_mask=(value_mask:UInt64)-instance-method","name":"value_mask=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value_mask","doc":null,"default_value":"","external_name":"value_mask","restriction":"UInt64"}],"args_string":"(value_mask : UInt64)","args_html":"(value_mask : UInt64)","location":{"filename":"src/x11/configure_request_event.cr","line_number":135,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L135"},"def":{"name":"value_mask=","args":[{"name":"value_mask","doc":null,"default_value":"","external_name":"value_mask","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.value_mask = value_mask"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_request_event.cr","line_number":91,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L91"},"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.width"}},{"id":"width=(width:Int32)-instance-method","html_id":"width=(width:Int32)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"args_string":"(width : Int32)","args_html":"(width : Int32)","location":{"filename":"src/x11/configure_request_event.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L95"},"def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.width = width"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/configure_request_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/configure_request_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_request_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L75"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","args_html":"(x : Int32)","location":{"filename":"src/x11/configure_request_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L79"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x = x"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/configure_request_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L83"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","args_html":"(y : Int32)","location":{"filename":"src/x11/configure_request_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/configure_request_event.cr#L87"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y = y"}}],"macros":[],"types":[]},{"html_id":"x11/X11/CreateWindowEvent","path":"X11/CreateWindowEvent.html","kind":"class","full_name":"X11::CreateWindowEvent","name":"CreateWindowEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/create_window_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::CreateWindowEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/CreateWindowEvent.html\">CreateWindowEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PCreateWindowEvent)-class-method","html_id":"new(event:X11::C::X::PCreateWindowEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PCreateWindowEvent"}],"args_string":"(event : X11::C::X::PCreateWindowEvent)","args_html":"(event : X11::C::X::PCreateWindowEvent)","location":{"filename":"src/x11/create_window_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PCreateWindowEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::CreateWindowEvent)-class-method","html_id":"new(event:X11::C::X::CreateWindowEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::CreateWindowEvent"}],"args_string":"(event : X11::C::X::CreateWindowEvent)","args_html":"(event : X11::C::X::CreateWindowEvent)","location":{"filename":"src/x11/create_window_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::CreateWindowEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/create_window_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"border_width:Int32-instance-method","html_id":"border_width:Int32-instance-method","name":"border_width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/create_window_event.cr","line_number":99,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L99"},"def":{"name":"border_width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.border_width"}},{"id":"border_width=(border_width:Int32)-instance-method","html_id":"border_width=(border_width:Int32)-instance-method","name":"border_width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"border_width","doc":null,"default_value":"","external_name":"border_width","restriction":"Int32"}],"args_string":"(border_width : Int32)","args_html":"(border_width : Int32)","location":{"filename":"src/x11/create_window_event.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L103"},"def":{"name":"border_width=","args":[{"name":"border_width","doc":null,"default_value":"","external_name":"border_width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.border_width = border_width"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/create_window_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/create_window_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/create_window_event.cr","line_number":91,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L91"},"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.height"}},{"id":"height=(height:Int32)-instance-method","html_id":"height=(height:Int32)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(height : Int32)","args_html":"(height : Int32)","location":{"filename":"src/x11/create_window_event.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L95"},"def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.height = height"}},{"id":"override_redirect:Bool-instance-method","html_id":"override_redirect:Bool-instance-method","name":"override_redirect","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/create_window_event.cr","line_number":107,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L107"},"def":{"name":"override_redirect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.override_redirect ? true : false"}},{"id":"override_redirect=(override_redirect:Bool)-instance-method","html_id":"override_redirect=(override_redirect:Bool)-instance-method","name":"override_redirect=","doc":null,"summary":null,"abstract":false,"args":[{"name":"override_redirect","doc":null,"default_value":"","external_name":"override_redirect","restriction":"Bool"}],"args_string":"(override_redirect : Bool)","args_html":"(override_redirect : Bool)","location":{"filename":"src/x11/create_window_event.cr","line_number":111,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L111"},"def":{"name":"override_redirect=","args":[{"name":"override_redirect","doc":null,"default_value":"","external_name":"override_redirect","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.override_redirect = override_redirect ? 1 : 0"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/create_window_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/create_window_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/create_window_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/create_window_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PCreateWindowEvent-instance-method","html_id":"to_unsafe:X11::C::X::PCreateWindowEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PCreateWindowEvent","args_html":" : X11::C::X::PCreateWindowEvent","location":{"filename":"src/x11/create_window_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PCreateWindowEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::CreateWindowEvent-instance-method","html_id":"to_x:X11::C::X::CreateWindowEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::CreateWindowEvent","args_html":" : X11::C::X::CreateWindowEvent","location":{"filename":"src/x11/create_window_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::CreateWindowEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/create_window_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/create_window_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/create_window_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L83"},"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.width"}},{"id":"width=(width:Int32)-instance-method","html_id":"width=(width:Int32)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"args_string":"(width : Int32)","args_html":"(width : Int32)","location":{"filename":"src/x11/create_window_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L87"},"def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.width = width"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/create_window_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L59"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/create_window_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L63"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/create_window_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L67"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","args_html":"(x : Int32)","location":{"filename":"src/x11/create_window_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L71"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x = x"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/create_window_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L75"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","args_html":"(y : Int32)","location":{"filename":"src/x11/create_window_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/create_window_event.cr#L79"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y = y"}}],"macros":[],"types":[]},{"html_id":"x11/X11/CrossingEvent","path":"X11/CrossingEvent.html","kind":"class","full_name":"X11::CrossingEvent","name":"CrossingEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/crossing_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::CrossingEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/CrossingEvent.html\">CrossingEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PCrossingEvent)-class-method","html_id":"new(event:X11::C::X::PCrossingEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PCrossingEvent"}],"args_string":"(event : X11::C::X::PCrossingEvent)","args_html":"(event : X11::C::X::PCrossingEvent)","location":{"filename":"src/x11/crossing_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PCrossingEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::CrossingEvent)-class-method","html_id":"new(event:X11::C::X::CrossingEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::CrossingEvent"}],"args_string":"(event : X11::C::X::CrossingEvent)","args_html":"(event : X11::C::X::CrossingEvent)","location":{"filename":"src/x11/crossing_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::CrossingEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/crossing_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"detail:Int32-instance-method","html_id":"detail:Int32-instance-method","name":"detail","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/crossing_event.cr","line_number":139,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L139"},"def":{"name":"detail","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.detail"}},{"id":"detail=(detail:Int32)-instance-method","html_id":"detail=(detail:Int32)-instance-method","name":"detail=","doc":null,"summary":null,"abstract":false,"args":[{"name":"detail","doc":null,"default_value":"","external_name":"detail","restriction":"Int32"}],"args_string":"(detail : Int32)","args_html":"(detail : Int32)","location":{"filename":"src/x11/crossing_event.cr","line_number":143,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L143"},"def":{"name":"detail=","args":[{"name":"detail","doc":null,"default_value":"","external_name":"detail","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.detail = detail"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/crossing_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L59"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/crossing_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L63"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"enter?:Bool-instance-method","html_id":"enter?:Bool-instance-method","name":"enter?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/crossing_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L27"},"def":{"name":"enter?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.type == EnterNotify"}},{"id":"focus:Bool-instance-method","html_id":"focus:Bool-instance-method","name":"focus","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/crossing_event.cr","line_number":155,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L155"},"def":{"name":"focus","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.focus ? true : false"}},{"id":"focus=(focus:Bool)-instance-method","html_id":"focus=(focus:Bool)-instance-method","name":"focus=","doc":null,"summary":null,"abstract":false,"args":[{"name":"focus","doc":null,"default_value":"","external_name":"focus","restriction":"Bool"}],"args_string":"(focus : Bool)","args_html":"(focus : Bool)","location":{"filename":"src/x11/crossing_event.cr","line_number":159,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L159"},"def":{"name":"focus=","args":[{"name":"focus","doc":null,"default_value":"","external_name":"focus","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.focus = focus ? 1 : 0"}},{"id":"leave?:Bool-instance-method","html_id":"leave?:Bool-instance-method","name":"leave?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/crossing_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L31"},"def":{"name":"leave?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.type == LeaveNotify"}},{"id":"mode:Int32-instance-method","html_id":"mode:Int32-instance-method","name":"mode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/crossing_event.cr","line_number":131,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L131"},"def":{"name":"mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.mode"}},{"id":"mode=(mode:Int32)-instance-method","html_id":"mode=(mode:Int32)-instance-method","name":"mode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"args_string":"(mode : Int32)","args_html":"(mode : Int32)","location":{"filename":"src/x11/crossing_event.cr","line_number":135,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L135"},"def":{"name":"mode=","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.mode = mode"}},{"id":"root:X11::C::Window-instance-method","html_id":"root:X11::C::Window-instance-method","name":"root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/crossing_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L75"},"def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.root"}},{"id":"root=(root:X11::C::Window)-instance-method","html_id":"root=(root:X11::C::Window)-instance-method","name":"root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"X11::C::Window"}],"args_string":"(root : X11::C::Window)","args_html":"(root : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/crossing_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L79"},"def":{"name":"root=","args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.root = root"}},{"id":"same_screen:Bool-instance-method","html_id":"same_screen:Bool-instance-method","name":"same_screen","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/crossing_event.cr","line_number":147,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L147"},"def":{"name":"same_screen","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.same_screen ? true : false"}},{"id":"same_screen=(same_screen:Bool)-instance-method","html_id":"same_screen=(same_screen:Bool)-instance-method","name":"same_screen=","doc":null,"summary":null,"abstract":false,"args":[{"name":"same_screen","doc":null,"default_value":"","external_name":"same_screen","restriction":"Bool"}],"args_string":"(same_screen : Bool)","args_html":"(same_screen : Bool)","location":{"filename":"src/x11/crossing_event.cr","line_number":151,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L151"},"def":{"name":"same_screen=","args":[{"name":"same_screen","doc":null,"default_value":"","external_name":"same_screen","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.same_screen = same_screen ? 1 : 0"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/crossing_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L51"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/crossing_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L55"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/crossing_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L43"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/crossing_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L47"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"state:UInt32-instance-method","html_id":"state:UInt32-instance-method","name":"state","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/x11/crossing_event.cr","line_number":163,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L163"},"def":{"name":"state","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@event.state"}},{"id":"state=(state:UInt32)-instance-method","html_id":"state=(state:UInt32)-instance-method","name":"state=","doc":null,"summary":null,"abstract":false,"args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"UInt32"}],"args_string":"(state : UInt32)","args_html":"(state : UInt32)","location":{"filename":"src/x11/crossing_event.cr","line_number":167,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L167"},"def":{"name":"state=","args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.state = state"}},{"id":"sub_window:X11::C::Window-instance-method","html_id":"sub_window:X11::C::Window-instance-method","name":"sub_window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/crossing_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L83"},"def":{"name":"sub_window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.subwindow"}},{"id":"sub_window=(sub_window:X11::C::Window)-instance-method","html_id":"sub_window=(sub_window:X11::C::Window)-instance-method","name":"sub_window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"sub_window","doc":null,"default_value":"","external_name":"sub_window","restriction":"X11::C::Window"}],"args_string":"(sub_window : X11::C::Window)","args_html":"(sub_window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/crossing_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L87"},"def":{"name":"sub_window=","args":[{"name":"sub_window","doc":null,"default_value":"","external_name":"sub_window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.subwindow = sub_window"}},{"id":"time:X11::C::Time-instance-method","html_id":"time:X11::C::Time-instance-method","name":"time","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Time","args_html":" : <a href=\"../X11/C/Time.html\">X11::C::Time</a>","location":{"filename":"src/x11/crossing_event.cr","line_number":91,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L91"},"def":{"name":"time","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Time","visibility":"Public","body":"@event.time"}},{"id":"time=(time:X11::C::Time)-instance-method","html_id":"time=(time:X11::C::Time)-instance-method","name":"time=","doc":null,"summary":null,"abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(time : X11::C::Time)","args_html":"(time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>)","location":{"filename":"src/x11/crossing_event.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L95"},"def":{"name":"time=","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.time = time"}},{"id":"to_unsafe:X11::C::X::PCrossingEvent-instance-method","html_id":"to_unsafe:X11::C::X::PCrossingEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PCrossingEvent","args_html":" : X11::C::X::PCrossingEvent","location":{"filename":"src/x11/crossing_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PCrossingEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::CrossingEvent-instance-method","html_id":"to_x:X11::C::X::CrossingEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::CrossingEvent","args_html":" : X11::C::X::CrossingEvent","location":{"filename":"src/x11/crossing_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::CrossingEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/crossing_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L35"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/crossing_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L39"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/crossing_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/crossing_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/crossing_event.cr","line_number":99,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L99"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","args_html":"(x : Int32)","location":{"filename":"src/x11/crossing_event.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L103"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x = x"}},{"id":"x_root:Int32-instance-method","html_id":"x_root:Int32-instance-method","name":"x_root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/crossing_event.cr","line_number":115,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L115"},"def":{"name":"x_root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x_root"}},{"id":"x_root=(x_root:Int32)-instance-method","html_id":"x_root=(x_root:Int32)-instance-method","name":"x_root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x_root","doc":null,"default_value":"","external_name":"x_root","restriction":"Int32"}],"args_string":"(x_root : Int32)","args_html":"(x_root : Int32)","location":{"filename":"src/x11/crossing_event.cr","line_number":119,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L119"},"def":{"name":"x_root=","args":[{"name":"x_root","doc":null,"default_value":"","external_name":"x_root","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x_root = x_root"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/crossing_event.cr","line_number":107,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L107"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","args_html":"(y : Int32)","location":{"filename":"src/x11/crossing_event.cr","line_number":111,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L111"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y = y"}},{"id":"y_root:Int32-instance-method","html_id":"y_root:Int32-instance-method","name":"y_root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/crossing_event.cr","line_number":123,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L123"},"def":{"name":"y_root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y_root"}},{"id":"y_root=(y_root:Int32)-instance-method","html_id":"y_root=(y_root:Int32)-instance-method","name":"y_root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y_root","doc":null,"default_value":"","external_name":"y_root","restriction":"Int32"}],"args_string":"(y_root : Int32)","args_html":"(y_root : Int32)","location":{"filename":"src/x11/crossing_event.cr","line_number":127,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/crossing_event.cr#L127"},"def":{"name":"y_root=","args":[{"name":"y_root","doc":null,"default_value":"","external_name":"y_root","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y_root = y_root"}}],"macros":[],"types":[]},{"html_id":"x11/X11/DestroyWindowEvent","path":"X11/DestroyWindowEvent.html","kind":"class","full_name":"X11::DestroyWindowEvent","name":"DestroyWindowEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/destroy_window_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::DestroyWindowEvent` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/DestroyWindowEvent.html\">DestroyWindowEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PDestroyWindowEvent)-class-method","html_id":"new(event:X11::C::X::PDestroyWindowEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PDestroyWindowEvent"}],"args_string":"(event : X11::C::X::PDestroyWindowEvent)","args_html":"(event : X11::C::X::PDestroyWindowEvent)","location":{"filename":"src/x11/destroy_window_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PDestroyWindowEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::DestroyWindowEvent)-class-method","html_id":"new(event:X11::C::X::DestroyWindowEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::DestroyWindowEvent"}],"args_string":"(event : X11::C::X::DestroyWindowEvent)","args_html":"(event : X11::C::X::DestroyWindowEvent)","location":{"filename":"src/x11/destroy_window_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::DestroyWindowEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/destroy_window_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/destroy_window_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/destroy_window_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"event:X11::C::Window-instance-method","html_id":"event:X11::C::Window-instance-method","name":"event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/destroy_window_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L59"},"def":{"name":"event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.event"}},{"id":"event=(event:X11::C::Window)-instance-method","html_id":"event=(event:X11::C::Window)-instance-method","name":"event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"args_string":"(event : X11::C::Window)","args_html":"(event : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/destroy_window_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L63"},"def":{"name":"event=","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.event = event"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/destroy_window_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/destroy_window_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/destroy_window_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/destroy_window_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PDestroyWindowEvent-instance-method","html_id":"to_unsafe:X11::C::X::PDestroyWindowEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PDestroyWindowEvent","args_html":" : X11::C::X::PDestroyWindowEvent","location":{"filename":"src/x11/destroy_window_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PDestroyWindowEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::DestroyWindowEvent-instance-method","html_id":"to_x:X11::C::X::DestroyWindowEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::DestroyWindowEvent","args_html":" : X11::C::X::DestroyWindowEvent","location":{"filename":"src/x11/destroy_window_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::DestroyWindowEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/destroy_window_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/destroy_window_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/destroy_window_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/destroy_window_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/destroy_window_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/Display","path":"X11/Display.html","kind":"class","full_name":"X11::Display","name":"Display","abstract":false,"superclass":{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/display.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L11"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[{"id":"display_name(string:String?):String-class-method","html_id":"display_name(string:String?):String-class-method","name":"display_name","doc":"Returns the name of the display.\n\n###Arguments\n- **string** Specifies the character string.\n\n###Description\nThe `display_name` function returns the name of the display that `new` would attempt to use. If a **nil** string is specified,\n`display_name` looks in the environment for the display and returns the display name that `new` would attempt to use.\nThis makes it easier to report to the user precisely which display the program attempted to open when the initial connection attempt failed.\n\n###See also\n`error_database_text`, `error_text`, `new`, `synchronize`.","summary":"<p>Returns the name of the display.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String | ::Nil"}],"args_string":"(string : String?) : String","args_html":"(string : String?) : String","location":{"filename":"src/x11/display.cr","line_number":417,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L417"},"def":{"name":"display_name","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if string.is_a?(String)\n  pstr = X.display_name(string.to_unsafe)\nelse\n  pstr = X.display_name(nil)\nend\nif pstr.null?\n  return \"\"\nend\nstr = String.new(pstr)\nX.free(pstr)\nstr\n"}}],"constructors":[{"id":"new(name:String?=nil)-class-method","html_id":"new(name:String?=nil)-class-method","name":"new","doc":"Opens a connection to the X server that controls a display.\n\n###Arguments\n- **name** Specifies the hardware display name, which determines the display and communications domain to be used.\nOn a `POSIX`-conformant system, if the `name` is *nil*, it defaults to the value of the `DISPLAY` environment variable.\n\n###Description\nThe encoding and interpretation of the display name is implementation dependent.\nStrings in the `Host Portable Character Encoding` are supported;\nsupport for other characters is implementation dependent. On `POSIX`-conformant systems,\nthe display name or `DISPLAY` environment variable can be a string in the format:\n```text\nhostname:number.screen_number\n```\n- **hostname** Specifies the name of the host machine on which the display is physically attached.\nYou follow the hostname with either a single colon (:) or a double colon (::).\n- **number** Specifies the number of the display server on that host machine.\nYou may optionally follow this display number with a period (.).\nA single CPU can have more than one display. Multiple displays are usually numbered starting with zero.\n- **screen_number** Specifies the screen to be used on that server.\nMultiple screens can be controlled by a single X server. The screen_number sets an internal\nvariable that can be accessed by using the `default_screen` function.\nFor example, the following would specify screen 1 of display 0 on the machine named *dual-headed*:\n```text\ndual-headed:0.1\n```","summary":"<p>Opens a connection to the X server that controls a display.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"}],"args_string":"(name : String? = <span class=\"n\">nil</span>)","args_html":"(name : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/x11/display.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L43"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"nil","external_name":"name","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(dpy:X11::C::X::PDisplay)-class-method","html_id":"new(dpy:X11::C::X::PDisplay)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":"X11::C::X::PDisplay"}],"args_string":"(dpy : X11::C::X::PDisplay)","args_html":"(dpy : X11::C::X::PDisplay)","location":{"filename":"src/x11/display.cr","line_number":52,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L52"},"def":{"name":"new","args":[{"name":"dpy","doc":null,"default_value":"","external_name":"dpy","restriction":"X11::C::X::PDisplay"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(dpy)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"activate_screen_saver:Int32-instance-method","html_id":"activate_screen_saver:Int32-instance-method","name":"activate_screen_saver","doc":"Activates the screen saver.\n\n###See also\n`set_screen_saver`, `force_screen_saver`, `reset_screen_saver`, `screen_saver`.","summary":"<p>Activates the screen saver.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":1764,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1764"},"def":{"name":"activate_screen_saver","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.activate_screen_saver(@dpy)"}},{"id":"add_connectioin_watch(callback:X11::C::X::ConnectionWatchProc,client_data:X11::C::X::Pointer):X11::C::X::Status-instance-method","html_id":"add_connectioin_watch(callback:X11::C::X::ConnectionWatchProc,client_data:X11::C::X::Pointer):X11::C::X::Status-instance-method","name":"add_connectioin_watch","doc":null,"summary":null,"abstract":false,"args":[{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"X11::C::X::ConnectionWatchProc"},{"name":"client_data","doc":null,"default_value":"","external_name":"client_data","restriction":"X11::C::X::Pointer"}],"args_string":"(callback : X11::C::X::ConnectionWatchProc, client_data : X11::C::X::Pointer) : X11::C::X::Status","args_html":"(callback : X11::C::X::ConnectionWatchProc, client_data : X11::C::X::Pointer) : X11::C::X::Status","location":{"filename":"src/x11/display.cr","line_number":8305,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8305"},"def":{"name":"add_connectioin_watch","args":[{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"X11::C::X::ConnectionWatchProc"},{"name":"client_data","doc":null,"default_value":"","external_name":"client_data","restriction":"X11::C::X::Pointer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::Status","visibility":"Public","body":"X.add_connectioin_watch(@dpy, callback, client_data)"}},{"id":"add_extension:ExtCodes?-instance-method","html_id":"add_extension:ExtCodes?-instance-method","name":"add_extension","doc":"Allocates the `ExtCodes` structure.\n\n###Description\nFor local Xlib extensions, the `add_extension` function allocates the\n`ExtCodes` structure, bumps the extension number count, and chains the\nextension onto the extension list. (This permits extensions to Xlib without\nrequiring server extensions.)\n\n###See also\n`init_extension`.","summary":"<p>Allocates the <code><a href=\"../X11/ExtCodes.html\">ExtCodes</a></code> structure.</p>","abstract":false,"args":[],"args_string":" : ExtCodes?","args_html":" : <a href=\"../X11/ExtCodes.html\">ExtCodes</a>?","location":{"filename":"src/x11/display.cr","line_number":1350,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1350"},"def":{"name":"add_extension","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ExtCodes | ::Nil","visibility":"Public","body":"pcodes = X.add_extension(@dpy)\nif pcodes.null?\n  return nil\nend\nExtCodes.new(pcodes)\n"}},{"id":"add_host(host:HostAddress|ServerInterpretedAddress):Int32-instance-method","html_id":"add_host(host:HostAddress|ServerInterpretedAddress):Int32-instance-method","name":"add_host","doc":"\n\n###Arguments\n- **host** Specifies the host that is to be added.\n\n###Description\nThe `add_host` function adds the specified host to the access control list\nfor the display. The server must be on the same host as the client issuing\nthe command, or a **BadAccess** error results.\n\n`add_host` can generate **BadAccess** and **BadValue** errors.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the full\nrange defined by the argument's type is accepted. Any argument defined as a set of alternatives can generate this error.\n\n###See also\n`add_hosts`, `disable_access_control`, `enable_access_control`, `X11::free`,\n`list_hosts`, `remove_host`, `remove_hosts`, `set_access_control`.","summary":"","abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"HostAddress | ServerInterpretedAddress"}],"args_string":"(host : HostAddress | ServerInterpretedAddress) : Int32","args_html":"(host : <a href=\"../X11/HostAddress.html\">HostAddress</a> | <a href=\"../X11/ServerInterpretedAddress.html\">ServerInterpretedAddress</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":1790,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1790"},"def":{"name":"add_host","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"HostAddress | ServerInterpretedAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"case host\nwhen HostAddress\n  X.add_host(@dpy, host.to_unsafe)\nwhen ServerInterpretedAddress\n  host_address = HostAddress.new(host)\n  X.add_host(@dpy, host_address.to_unsafe)\nend"}},{"id":"add_hosts(hosts:Array(HostAddress)):Int32-instance-method","html_id":"add_hosts(hosts:Array(HostAddress)):Int32-instance-method","name":"add_hosts","doc":"Adds each specified host to the access control list.\n\n###Arguments\n- **hosts** Specifies each host that is to be added.\n\n###Description\nThe `add_hosts` function adds each specified host to the access control list\nfor the display. The server must be on the same host as the client issuing the command, or a **BadAccess** error results.\n\n`add_hosts` can generate **BadAccess** and **BadValue** errors.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n- **BadValue** Some numeric value falls outside the range of values accepted by the request.\nUnless a specific range is specified for an argument, the full range defined\nby the argument's type is accepted. Any argument defined as a set of alternatives can generate this error.\n\n###See also\n`add_host`, `disable_access_control`, `enable_access_control`, `X11::free`,\n`list_hosts`, `remove_host`, `remove_hosts`, `set_access_control`.","summary":"<p>Adds each specified host to the access control list.</p>","abstract":false,"args":[{"name":"hosts","doc":null,"default_value":"","external_name":"hosts","restriction":"Array(HostAddress)"}],"args_string":"(hosts : Array(HostAddress)) : Int32","args_html":"(hosts : Array(<a href=\"../X11/HostAddress.html\">HostAddress</a>)) : Int32","location":{"filename":"src/x11/display.cr","line_number":1821,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1821"},"def":{"name":"add_hosts","args":[{"name":"hosts","doc":null,"default_value":"","external_name":"hosts","restriction":"Array(HostAddress)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.add_hosts(@dpy, hosts.to_unsafe, hosts.size)"}},{"id":"add_to_save_set(w:X11::C::Window):Int32-instance-method","html_id":"add_to_save_set(w:X11::C::Window):Int32-instance-method","name":"add_to_save_set","doc":"Adds the specified window to the client's save-set.\n\n###Arguments\n- **w** Specifies the window that you want to add to the client's save-set.\n\n###Description\nThe `add_to_save_set` function adds the specified window to the client's save-set.\nThe specified window must have been created by some other client, or a **BadMatch** error results.\n`add_to_save_set` can generate **BadMatch** and **BadWindow** errors.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and range but fails to match in some other way required by the request.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`change_save_set`, `remove_from_save_set`, `reparent_window`.","summary":"<p>Adds the specified window to the client's save-set.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":1842,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1842"},"def":{"name":"add_to_save_set","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.add_to_save_set(@dpy, w)"}},{"id":"alloc_color(colormap:X11::C::Colormap,screen_in:Color):Color-instance-method","html_id":"alloc_color(colormap:X11::C::Colormap,screen_in:Color):Color-instance-method","name":"alloc_color","doc":"Allocates a read-only colormap entry.\n\n###Arguments\n- **colormap** Specifies the colormap.\n- **screen_in** Specifies and returns the values actually used in the colormap.\n\n###Description\nThe `alloc_color` function allocates a read-only colormap entry corresponding\nto the closest RGB value supported by the hardware. `alloc_color` returns\nthe pixel value of the color closest to the specified RGB elements supported\nby the hardware and returns the RGB value actually used. The corresponding\ncolormap cell is read-only. Multiple clients that request the same effective\nRGB value can be assigned the same read-only entry, thus allowing entries\nto be shared. When the last client deallocates a shared cell, it is deallocated.\n`alloc_color` does not use or affect the flags in the `Color` structure.\n\n`alloc_color` can generate a **BadColor** error.\n\n###Diagnostics\n- **BadColor** A value for a `Colormap` argument does not name a defined `Colormap`.\n\n###See also\n`alloc_color_cells`, `alloc_color_planes`, `alloc_named_color`,\n`create_colormap`, `free_colors`, `query_color`, `store_colors`.","summary":"<p>Allocates a read-only colormap entry.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"screen_in","doc":null,"default_value":"","external_name":"screen_in","restriction":"Color"}],"args_string":"(colormap : X11::C::Colormap, screen_in : Color) : Color","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>, screen_in : <a href=\"../X11/Color.html\">Color</a>) : <a href=\"../X11/Color.html\">Color</a>","location":{"filename":"src/x11/display.cr","line_number":1870,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1870"},"def":{"name":"alloc_color","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"screen_in","doc":null,"default_value":"","external_name":"screen_in","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"screen_in_out = screen_in.to_x\nX.alloc_color(@dpy, colormap, pointerof(screen_in_out))\nColor.new(screen_in_out)\n"}},{"id":"alloc_color_cells(colormap:X11::C::Colormap,contig:Bool,nplanes:UInt32,npixels:UInt32):NamedTuple()-instance-method","html_id":"alloc_color_cells(colormap:X11::C::Colormap,contig:Bool,nplanes:UInt32,npixels:UInt32):NamedTuple()-instance-method","name":"alloc_color_cells","doc":"Allocates read/write color cells.\n\n###Arguments\n- **colormap** Specifies the colormap.\n- **contig** Specifies a Boolean value that indicates whether the planes must be contiguous.\n- **nplanes** Specifies the number of plane masks that are to be returned in the plane masks array.\n- **npixels** Specifies the number of pixel values that are to be returned in the pixels_return array.\n\n###Description\nThe `alloc_color_cells` function allocates read/write color cells.\nThe number of colors must be positive and the number of planes nonnegative,\nor a **BadValue** error results. No mask will have any bits set to 1 in\ncommon with any other mask or with any of the pixels. All of these are\nallocated writable by the request. For **GrayScale** or **PseudoColor**,\neach mask has exactly one bit set to 1. For **DirectColor**, each has exactly\nthree bits set to 1. If contig is **true** and if all masks are **ORed** together,\na single contiguous set of bits set to 1 will be formed for **GrayScale** or\n**PseudoColor** and three contiguous sets of bits set to 1 (one within\neach pixel subfield) for **DirectColor**. The RGB values of the allocated\nentries are undefined.\n\n`alloc_color_cells` can generate **BadColor** and **BadValue** errors.\n\n###Diagnostics\n- **BadColor** A value for a Colormap argument does not name a defined Colormap.\n- **BadValue** Some numeric value falls outside the range of values accepted by the request.\nUnless a specific range is specified for an argument, the full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`alloc_color`, `alloc_color_planes`, `alloc_named_color`, `create_colormap`,\n`free_colors`, `query_color`, `store_colors`.","summary":"<p>Allocates read/write color cells.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"contig","doc":null,"default_value":"","external_name":"contig","restriction":"Bool"},{"name":"nplanes","doc":null,"default_value":"","external_name":"nplanes","restriction":"UInt32"},{"name":"npixels","doc":null,"default_value":"","external_name":"npixels","restriction":"UInt32"}],"args_string":"(colormap : X11::C::Colormap, contig : Bool, nplanes : UInt32, npixels : UInt32) : NamedTuple()","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>, contig : Bool, nplanes : UInt32, npixels : UInt32) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":1908,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1908"},"def":{"name":"alloc_color_cells","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"contig","doc":null,"default_value":"","external_name":"contig","restriction":"Bool"},{"name":"nplanes","doc":null,"default_value":"","external_name":"nplanes","restriction":"UInt32"},{"name":"npixels","doc":null,"default_value":"","external_name":"npixels","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(status: X11::C::X::Status, plane_masks: Array(UInt64), pixels: Array(UInt64))","visibility":"Public","body":"status = X.alloc_color_cells(@dpy, colormap, contig ? X::True : X::False, out plane_masks_return, nplanes, out pixels_return, npixels)\nplane_masks = Array(UInt64).new(nplanes) do |i|\n  plane_masks_return[i]\nend\npixels = Array(UInt64).new(npixels) do |i|\n  pixels_return[i]\nend\n{status: status, plane_masks: plane_masks, pixels: pixels}\n"}},{"id":"alloc_color_planes(colormap:X11::C::Colormap,contig:Bool,ncolors:Int32,nreds:Int32,ngreens:Int32,nblues:Int32):NamedTuple()-instance-method","html_id":"alloc_color_planes(colormap:X11::C::Colormap,contig:Bool,ncolors:Int32,nreds:Int32,ngreens:Int32,nblues:Int32):NamedTuple()-instance-method","name":"alloc_color_planes","doc":"Allocates color planes.\n\n###Arguments\n- **colormap** Specifies the colormap.\n- **contig** Specifies a Boolean value that indicates whether the planes must be contiguous.\n- **ncolors** Specifies the number of pixel values that are to be returned in the pixels_return array.\n- **nreds**, **ngreens**, **nblues** Specify the number of red, green, and blue planes. The value you pass must be nonnegative.\n\n###Description\nThe specified ncolors must be positive; and nreds, ngreens, and nblues must be nonnegative,\nor a **BadValue** error results. If ncolors colors, nreds reds, ngreens greens,\nand nblues blues are requested, ncolors pixels are returned; and the masks have\nnreds, ngreens, and nblues bits set to 1, respectively. If contig is **true**,\neach mask will have a contiguous set of bits set to 1. No mask will have\nany bits set to 1 in common with any other mask or with any of the pixels.\nFor **DirectColor**, each mask will lie within the corresponding pixel subfield.\nBy **ORing** together subsets of masks with each pixel value, `ncolors * 2^(nreds+ngreens+nblues)`\ndistinct pixel values can be produced. All of these are allocated by the request.\nHowever, in the colormap, there are only `ncolors * 2^nreds` independent red entries,\n`ncolors * 2^ngreens` independent green entries, and `ncolors * 2^nblues`\nindependent blue entries. This is true even for **PseudoColor**. When the\ncolormap entry of a pixel value is changed (using `store_colors`, `store_color`,\nor `store_named_color`), the pixel is decomposed according to the masks,\nand the corresponding independent entries are updated. `alloc_color_planes` returns\nnonzero if it succeeded or zero if it failed.\n\n`alloc_color_planes` can generate **BadColor** and **BadValue** errors.\n\n###Diagnostics\n- **BadColor** A value for a Colormap argument does not name a defined Colormap.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined as a set of alternatives can generate this error.\n\n###See also\n`alloc_color`, `alloc_color_cells`, `alloc_named_color`, `create_colormap`,\n`free_colors`, `query_color`, `store_colors`.","summary":"<p>Allocates color planes.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"contig","doc":null,"default_value":"","external_name":"contig","restriction":"Bool"},{"name":"ncolors","doc":null,"default_value":"","external_name":"ncolors","restriction":"Int32"},{"name":"nreds","doc":null,"default_value":"","external_name":"nreds","restriction":"Int32"},{"name":"ngreens","doc":null,"default_value":"","external_name":"ngreens","restriction":"Int32"},{"name":"nblues","doc":null,"default_value":"","external_name":"nblues","restriction":"Int32"}],"args_string":"(colormap : X11::C::Colormap, contig : Bool, ncolors : Int32, nreds : Int32, ngreens : Int32, nblues : Int32) : NamedTuple()","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>, contig : Bool, ncolors : Int32, nreds : Int32, ngreens : Int32, nblues : Int32) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":1952,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1952"},"def":{"name":"alloc_color_planes","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"contig","doc":null,"default_value":"","external_name":"contig","restriction":"Bool"},{"name":"ncolors","doc":null,"default_value":"","external_name":"ncolors","restriction":"Int32"},{"name":"nreds","doc":null,"default_value":"","external_name":"nreds","restriction":"Int32"},{"name":"ngreens","doc":null,"default_value":"","external_name":"ngreens","restriction":"Int32"},{"name":"nblues","doc":null,"default_value":"","external_name":"nblues","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(status: X11::C::X::Status, pixels: Array(UInt64), rmask: UInt64, gmask: UInt64, bmask: UInt64)","visibility":"Public","body":"status = X.alloc_color_planes(@dpy, colormap, contig ? X::True : X::False, out pixels_return, ncolors, nreds, nblues, out rmask, out gmask, out bmask)\npixels = Array(UInt64).new(ncolors) do |i|\n  pixels_return[i]\nend\n{status: status, pixels: pixels, rmask: rmask, gmask: gmask, bmask: bmask}\n"}},{"id":"alloc_named_color(colormap:X11::C::Colormap,color_name:String):NamedTuple()-instance-method","html_id":"alloc_named_color(colormap:X11::C::Colormap,color_name:String):NamedTuple()-instance-method","name":"alloc_named_color","doc":"Looks up the named color with respect to the screen that is associated with the specified colormap.\n\n###Arguments\n- **colormap** Specifies the colormap.\n- **color_name** Specifies the color name string (for example, red) whose color definition structure you want returned.\n\n###Return\n- **screen_def** The closest RGB values provided by the hardware.\n- **exact_def** The exact RGB values.\n- **status** Nonzero if a cell is allocated; otherwise, it is zero.\n\n###Description\nThe `alloc_named_color` function looks up the named color with respect to\nthe screen that is associated with the specified colormap. It returns both\nthe exact database definition and the closest color supported by the screen.\nThe allocated color cell is read-only. The pixel value is returned in\nscreen_def. If the color name is not in the Host Portable Character Encoding,\nthe result is implementation dependent. Use of uppercase or lowercase does not matter.\nIf screen_def and exact_def point to the same structure, the pixel field will\nbe set correctly but the color values are undefined. `alloc_named_color` returns\nnonzero status if a cell is allocated; otherwise, it returns zero.\n\n`alloc_named_color` can generate a **BadColor** error.\n\n###Diagnostics\n- **BadColor** A value for a Colormap argument does not name a defined Colormap.\n\n###See also\n`alloc_color`, `alloc_color_cells`, `alloc_color_planes`, `create_colormap`,\n`free_colors`, `query_color`, `store_colors`.","summary":"<p>Looks up the named color with respect to the screen that is associated with the specified colormap.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"color_name","doc":null,"default_value":"","external_name":"color_name","restriction":"String"}],"args_string":"(colormap : X11::C::Colormap, color_name : String) : NamedTuple()","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>, color_name : String) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":1988,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1988"},"def":{"name":"alloc_named_color","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"color_name","doc":null,"default_value":"","external_name":"color_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(status: X11::C::X::Status, screen_def: Color, exact_def: Color)","visibility":"Public","body":"status = X.alloc_named_color(@dpy, colormap, color_name.to_unsafe, out screen_def, out exact_def)\n{status: status, screen_def: Color.new(screen_def), exact_def: Color.new(exact_def)}\n"}},{"id":"allow_events(event_mode:Int32,time:X11::C::Time):Int32-instance-method","html_id":"allow_events(event_mode:Int32,time:X11::C::Time):Int32-instance-method","name":"allow_events","doc":"Releases some queued events if the client has caused a device to freeze.\n\n###Arguments\n- **event_mode** Specifies the event mode. You can pass **AsyncPointer**,\n**SyncPointer**, **AsyncKeyboard**, **SyncKeyboard**, **ReplayPointer**,\n**ReplayKeyboard**, **AsyncBoth**, or **SyncBoth**.\n- **time** Specifies the time. You can pass either a timestamp or **CurrentTime**.\n\n###Description\nThe `allow_events` function releases some queued events if the client has caused a device to freeze.\nIt has no effect if the specified time is earlier than the last-grab time of the\nmost recent active grab for the client or if the specified time is later\nthan the current X server time. Depending on the event_mode argument, the following occurs:\n- **AsyncPointer** If the pointer is frozen by the client, pointer event\nprocessing continues as usual. If the pointer is frozen twice by the client\non behalf of two separate grabs, **AsyncPointer** thaws for both.\n**AsyncPointer** has no effect if the pointer is not frozen by the client,\nbut the pointer need not be grabbed by the client.\n- **SyncPointer** If the pointer is frozen and actively grabbed by the client,\npointer event processing continues as usual until the next **ButtonPress**\nor **ButtonRelease** event is reported to the client. At this time, the\npointer again appears to freeze. However, if the reported event causes the\npointer grab to be released, the pointer does not freeze. **SyncPointer**\nhas no effect if the pointer is not frozen by the client or if the pointer is not grabbed by the client.\n- **ReplayPointer** If the pointer is actively grabbed by the client and\nis frozen as the result of an event having been sent to the client\n(either from the activation of a `grab_button` or from a previous\n`allow_events` with mode **SyncPointer** but not from a `grab_pointer`),\nthe pointer grab is released and that event is completely reprocessed.\nThis time, however, the function ignores any passive grabs at or above\n(towards the root of) the grab_window of the grab just released. The request\nhas no effect if the pointer is not grabbed by the client or if the pointer\nis not frozen as the result of an event.\n- **AsyncKeyboard** If the keyboard is frozen by the client, keyboard event\nprocessing continues as usual. If the keyboard is frozen twice by the\nclient on behalf of two separate grabs, **AsyncKeyboard** thaws for both.\n**AsyncKeyboard** has no effect if the keyboard is not frozen by the client,\nbut the keyboard need not be grabbed by the client.\n- **SyncKeyboard** If the keyboard is frozen and actively grabbed by the client,\nkeyboard event processing continues as usual until the next **KeyPress** or\n**KeyRelease** event is reported to the client. At this time, the keyboard\nagain appears to freeze. However, if the reported event causes the keyboard\ngrab to be released, the keyboard does not freeze. **SyncKeyboard** has no\neffect if the keyboard is not frozen by the client or if the keyboard is not grabbed by the client.\n- **ReplayKeyboard** If the keyboard is actively grabbed by the client and\nis frozen as the result of an event having been sent to the client\n(either from the activation of a `grab_key` or from a previous `allow_events`\nwith mode **SyncKeyboard** but not from a `grab_keyboard`), the keyboard\ngrab is released and that event is completely reprocessed. This time,\nhowever, the function ignores any passive grabs at or above (towards the root of)\nthe grab_window of the grab just released. The request has no effect if the\nkeyboard is not grabbed by the client or if the keyboard is not frozen as the result of an event.\n- **SyncBoth** If both pointer and keyboard are frozen by the client,\nevent processing for both devices continues as usual until the next\n**ButtonPress**, **ButtonRelease**, **KeyPress**, or **KeyRelease** event\nis reported to the client for a grabbed device (button event for the pointer,\nkey event for the keyboard), at which time the devices again appear to freeze.\nHowever, if the reported event causes the grab to be released, then the\ndevices do not freeze (but if the other device is still grabbed, then a\nsubsequent event for it will still cause both devices to freeze).\n**SyncBoth** has no effect unless both pointer and keyboard are frozen by\nthe client. If the pointer or keyboard is frozen twice by the client on\nbehalf of two separate grabs, **SyncBoth** thaws for both (but a subsequent\nfreeze for **SyncBoth** will only freeze each device once).\n- **AsyncBoth** If the pointer and the keyboard are frozen by the client,\nevent processing for both devices continues as usual. If a device is frozen\ntwice by the client on behalf of two separate grabs, **AsyncBoth** thaws\nfor both. **AsyncBoth** has no effect unless both pointer and keyboard are frozen by the client.\n- **AsyncPointer**, **SyncPointer**, and **ReplayPointer** have no effect\non the processing of keyboard events. **AsyncKeyboard**, **SyncKeyboard**,\nand **ReplayKeyboard** have no effect on the processing of pointer events.\nIt is possible for both a pointer grab and a keyboard grab (by the same or\ndifferent clients) to be active simultaneously. If a device is frozen on\nbehalf of either grab, no event processing is performed for the device.\nIt is possible for a single device to be frozen because of both grabs.\nIn this case, the freeze must be released on behalf of both grabs before\nevents can again be processed. If a device is frozen twice by a single client,\nthen a single **AllowEvents** releases both.\n\n`allow_events` can generate a **BadValue** error.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values\naccepted by the request. Unless a specific range is specified for an argument,\nthe full range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.","summary":"<p>Releases some queued events if the client has caused a device to freeze.</p>","abstract":false,"args":[{"name":"event_mode","doc":null,"default_value":"","external_name":"event_mode","restriction":"Int32"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(event_mode : Int32, time : X11::C::Time) : Int32","args_html":"(event_mode : Int32, time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":2079,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2079"},"def":{"name":"allow_events","args":[{"name":"event_mode","doc":null,"default_value":"","external_name":"event_mode","restriction":"Int32"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.allow_events(@dpy, event_mode, time)"}},{"id":"atom_name(atom:Atom|X11::C::Atom):String-instance-method","html_id":"atom_name(atom:Atom|X11::C::Atom):String-instance-method","name":"atom_name","doc":"Returns the name associated with the specified atom.\n\n###Arguments\n- **atom** Specifies the atom for the property name you want returned.\n\n###Description\nIf the data returned by the server is in the Latin Portable Character Encoding,\nthen the returned string is in the Host Portable Character Encoding.\nOtherwise, the result is implementation dependent.\n\n###Diagnostics\n- **BadAtom** A value for an `Atom` argument does not name a defined `Atom`.\n\n###See also\n`atom_names`, `window_property`, `intern_atom`, `intern_atoms`.","summary":"<p>Returns the name associated with the specified atom.</p>","abstract":false,"args":[{"name":"atom","doc":null,"default_value":"","external_name":"atom","restriction":"Atom | X11::C::Atom"}],"args_string":"(atom : Atom | X11::C::Atom) : String","args_html":"(atom : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>) : String","location":{"filename":"src/x11/display.cr","line_number":360,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L360"},"def":{"name":"atom_name","args":[{"name":"atom","doc":null,"default_value":"","external_name":"atom","restriction":"Atom | X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"name = X.get_atom_name(@dpy, atom.to_u64)\nstr_name = String.new(name)\nX.free(name)\nstr_name\n"}},{"id":"atom_names(atoms:Array(Atom|X11::C::Atom)):Array(String)-instance-method","html_id":"atom_names(atoms:Array(Atom|X11::C::Atom)):Array(String)-instance-method","name":"atom_names","doc":"Returns the name associated with the specified atoms.","summary":"<p>Returns the name associated with the specified atoms.</p>","abstract":false,"args":[{"name":"atoms","doc":null,"default_value":"","external_name":"atoms","restriction":"Array(Atom | X11::C::Atom)"}],"args_string":"(atoms : Array(Atom | X11::C::Atom)) : Array(String)","args_html":"(atoms : Array(<a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)) : Array(String)","location":{"filename":"src/x11/display.cr","line_number":368,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L368"},"def":{"name":"atom_names","args":[{"name":"atoms","doc":null,"default_value":"","external_name":"atoms","restriction":"Array(Atom | X11::C::Atom)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"atoms.map do |atom|\n  atom_name(atom)\nend"}},{"id":"auto_repeat_off:Int32-instance-method","html_id":"auto_repeat_off:Int32-instance-method","name":"auto_repeat_off","doc":"Turns off auto-repeat for the keyboard on the specified display.","summary":"<p>Turns off auto-repeat for the keyboard on the specified display.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":2084,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2084"},"def":{"name":"auto_repeat_off","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.auto_repeat_off(@dpy)"}},{"id":"auto_repeat_on:Int32-instance-method","html_id":"auto_repeat_on:Int32-instance-method","name":"auto_repeat_on","doc":"Turns on auto-repeat for the keyboard on the specified display","summary":"<p>Turns on auto-repeat for the keyboard on the specified display</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":2089,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2089"},"def":{"name":"auto_repeat_on","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.auto_repeat_on"}},{"id":"bell(percent:Int32):Int32-instance-method","html_id":"bell(percent:Int32):Int32-instance-method","name":"bell","doc":"Rings the bell on the keyboard.\n\n###Arguments\n- **percent** Specifies the volume for the bell, which can range from -100 to 100 inclusive.\n\n###Description\nThe `bell` function rings the bell on the keyboard, if possible.\nThe specified volume is relative to the base volume for the keyboard.\nIf the value for the percent argument is not in the range -100 to 100 inclusive,\na **BadValue** error results. The volume at which the bell rings when the percent argument is nonnegative is:\n```\nbase - [(base * percent) / 100] + percent\n```\nThe volume at which the bell rings when the percent argument is negative is:\n```\nbase + [(base * percent) / 100]\n```\nTo change the base volume of the bell, use `change_keyboard_control`.\n\n`bell` can generate a **BadValue** error.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values\naccepted by the request. Unless a specific range is specified for an argument,\nthe full range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.","summary":"<p>Rings the bell on the keyboard.</p>","abstract":false,"args":[{"name":"percent","doc":null,"default_value":"","external_name":"percent","restriction":"Int32"}],"args_string":"(percent : Int32) : Int32","args_html":"(percent : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":2119,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2119"},"def":{"name":"bell","args":[{"name":"percent","doc":null,"default_value":"","external_name":"percent","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.bell(@dpy, percent)"}},{"id":"bitmap_bit_order:Int32-instance-method","html_id":"bitmap_bit_order:Int32-instance-method","name":"bitmap_bit_order","doc":"Within each bitmap unit, the left-most bit in the bitmap as displayed on\nthe screen is either the least-significant or most-significant bit in the unit.\nThis function can return **LSBFirst** or **MSBFirst**.","summary":"<p>Within each bitmap unit, the left-most bit in the bitmap as displayed on the screen is either the least-significant or most-significant bit in the unit.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":2126,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2126"},"def":{"name":"bitmap_bit_order","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.bitmap_bit_order(@dpy)"}},{"id":"bitmap_pad:Int32-instance-method","html_id":"bitmap_pad:Int32-instance-method","name":"bitmap_pad","doc":"Each scanline must be padded to a multiple of bits returned by this function.","summary":"<p>Each scanline must be padded to a multiple of bits returned by this function.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":2131,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2131"},"def":{"name":"bitmap_pad","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.bitmap_pad(@dpy)"}},{"id":"bitmap_unit:Int32-instance-method","html_id":"bitmap_unit:Int32-instance-method","name":"bitmap_unit","doc":"Returns the size of a bitmap's scanline unit in bits.\nThe scanline is calculated in multiples of this value.","summary":"<p>Returns the size of a bitmap's scanline unit in bits.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":2137,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2137"},"def":{"name":"bitmap_unit","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.bitmap_pad(@dpy)"}},{"id":"black_pixel(screen_number:Int32):UInt64-instance-method","html_id":"black_pixel(screen_number:Int32):UInt64-instance-method","name":"black_pixel","doc":"Returns the black pixel value for the specified screen.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.","summary":"<p>Returns the black pixel value for the specified screen.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : UInt64","args_html":"(screen_number : Int32) : UInt64","location":{"filename":"src/x11/display.cr","line_number":1396,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1396"},"def":{"name":"black_pixel","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"X.black_pixel(@dpy, screen_number)"}},{"id":"cells(screen_number:Int32):Int32-instance-method","html_id":"cells(screen_number:Int32):Int32-instance-method","name":"cells","doc":"Returns the number of entries in the default colormap.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.","summary":"<p>Returns the number of entries in the default colormap.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : Int32","args_html":"(screen_number : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3084,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3084"},"def":{"name":"cells","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.display_cells(@dpy, screen_number)"}},{"id":"change_active_pointer_grab(event_mask:UInt32,cursor:X11::C::Cursor,time:X11::C::Time):Int32-instance-method","html_id":"change_active_pointer_grab(event_mask:UInt32,cursor:X11::C::Cursor,time:X11::C::Time):Int32-instance-method","name":"change_active_pointer_grab","doc":"Changes the specified dynamic parameters if the pointer is actively grabbed by the client.\n\n###Arguments\n- **event_mask** Specifies which pointer events are reported to the client.\nThe mask is the bitwise inclusive OR of the valid pointer event mask bits.\n- **cursor** Specifies the cursor that is to be displayed or **None**.\n- **time** Specifies the time. You can pass either a timestamp or **CurrentTime**.\n\n###Description\nThe `change_active_pointer_grab` function changes the specified dynamic\nparameters if the pointer is actively grabbed by the client and if the specified\ntime is no earlier than the last-pointer-grab time and no later than the\ncurrent X server time. This function has no effect on the passive parameters\n of a `grab_button`. The interpretation of event_mask and cursor is the\nsame as described in `grab_pointer`.\n`change_active_pointer_grab` can generate **BadCursor** and **BadValue** errors.\n\n###Diagnostics\n- **BadCursor** A value for a Cursor argument does not name a defined Cursor.\n- **BadValue** Some numeric value falls outside the range of values accepted by the request.\nUnless a specific range is specified for an argument, the full range\ndefined by the argument's type is accepted. Any argument defined as a set\nof alternatives can generate this error.\n\n###See also\n`allow_events`, `grab_button`, `grab_key`, `grab_keyboard`, `grab_pointer`, `ungrab_pointer`.","summary":"<p>Changes the specified dynamic parameters if the pointer is actively grabbed by the client.</p>","abstract":false,"args":[{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"UInt32"},{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(event_mask : UInt32, cursor : X11::C::Cursor, time : X11::C::Time) : Int32","args_html":"(event_mask : UInt32, cursor : <a href=\"../X11/C/Cursor.html\">X11::C::Cursor</a>, time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":2167,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2167"},"def":{"name":"change_active_pointer_grab","args":[{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"UInt32"},{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.change_active_pointer_grab(@dpy, event_mask, cursor, time)"}},{"id":"change_gc(gc:X11::C::X::GC,valuemask:UInt64,values:GCValues):Int32-instance-method","html_id":"change_gc(gc:X11::C::X::GC,valuemask:UInt64,values:GCValues):Int32-instance-method","name":"change_gc","doc":"Changes the components specified by valuemask for the specified GC.\n\n###Arguments\n- **gc** Specifies the GC.\n- **valuemask** Specifies which components in the GC are to be changed\nusing information in the specified values structure. This argument is\nthe bitwise inclusive OR of zero or more of the valid GC component mask bits.\n- **values** Specifies any values as specified by the valuemask.\n\n###Description\nThe `change_gc` function changes the components specified by valuemask for\nthe specified GC. The values argument contains the values to be set. The\nvalues and restrictions are the same as for `create_gc`. Changing the\nclip-mask overrides any previous `set_clip_rectangles` request on the context.\nChanging the dash-offset or dash-list overrides any previous `set_dashes`\nrequest on the context. The order in which components are verified and\naltered is server-dependent. If an error is generated, a subset of the components may have been altered.\n`change_gc` can generate **BadAlloc**, **BadFont**, **BadGC**, **BadMatch**,\n**BadPixmap**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadFont** A value for a font argument does not name a defined font (or, in some cases, GContext).\n- **BadGC** A value for a GContext argument does not name a defined GContext.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadPixmap** A value for a Pixmap argument does not name a defined `Pixmap`.\n- **BadValue** Some numeric value falls outside the range of values\n accepted by the request. Unless a specific range is specified for an argument,\nthe full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`X11::all_planes` `copy_area`, `copy_gc`, `create_gc`, `X11::create_region`,\n`draw_arc`, `draw_line`, `draw_rectangle`, `draw_text`, `fill_rectangle`,\n`free_gc`, `g_context_from_gc`, `get_gc_values`, `query_best_size`,\n`set_arc_mode`, `set_clip_origin`.","summary":"<p>Changes the components specified by valuemask for the specified GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"valuemask","doc":null,"default_value":"","external_name":"valuemask","restriction":"UInt64"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"GCValues"}],"args_string":"(gc : X11::C::X::GC, valuemask : UInt64, values : GCValues) : Int32","args_html":"(gc : X11::C::X::GC, valuemask : UInt64, values : <a href=\"../X11/GCValues.html\">GCValues</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":2209,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2209"},"def":{"name":"change_gc","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"valuemask","doc":null,"default_value":"","external_name":"valuemask","restriction":"UInt64"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"GCValues"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.change_gc(@dpy, gc, valuemask.values.to_unsafe)"}},{"id":"change_keyboard_control(value_mask:UInt64,values:KeyboardControl):Int32-instance-method","html_id":"change_keyboard_control(value_mask:UInt64,values:KeyboardControl):Int32-instance-method","name":"change_keyboard_control","doc":"Controls the keyboard characteristics.\n\n###Arguments\n- **value_mask** Specifies which controls to change.\nThis mask is the bitwise inclusive OR of the valid control mask bits.\n- **values** Specifies one value for each bit set to 1 in the mask.\n\n###Description\n`change_keyboard_control` function controls the keyboard characteristics\ndefined by the `KeyboardControl` object. The **value_mask** argument specifies which values are to be changed.\n\n`change_keyboard_control` can generate **BadMatch** and **BadValue** errors.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`auto_repeat_off`, `auto_repeat_on`, `bell`, `change_keyboard_mapping`,\n`keyboard_control`, `query_keymap`, `set_pointer_mapping`.","summary":"<p>Controls the keyboard characteristics.</p>","abstract":false,"args":[{"name":"value_mask","doc":null,"default_value":"","external_name":"value_mask","restriction":"UInt64"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"KeyboardControl"}],"args_string":"(value_mask : UInt64, values : KeyboardControl) : Int32","args_html":"(value_mask : UInt64, values : <a href=\"../X11/KeyboardControl.html\">KeyboardControl</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":2235,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2235"},"def":{"name":"change_keyboard_control","args":[{"name":"value_mask","doc":null,"default_value":"","external_name":"value_mask","restriction":"UInt64"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"KeyboardControl"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.change_keyboard_control(@dpy, value_mask, values.to_unsafe)"}},{"id":"change_keyboard_mapping(first_keycode:Int32,keysyms_per_keycode:Int32,keysyms:Array(X11::C::KeySym)):Int32-instance-method","html_id":"change_keyboard_mapping(first_keycode:Int32,keysyms_per_keycode:Int32,keysyms:Array(X11::C::KeySym)):Int32-instance-method","name":"change_keyboard_mapping","doc":"Defines the symbols for the specified number of KeyCodes starting with first_keycode.\n\n###Arguments\n- **first_keycode** Specifies the first KeyCode that is to be changed.\n- **keysyms_per_keycode** Specifies the number of KeySyms per KeyCode.\n- **keysyms** Specifies an array of KeySyms.\n\n###Description\nThe `change_keyboard_mapping` function defines the symbols for the\nspecified number of KeyCodes starting with first_keycode. The symbols for\nKeyCodes outside this range remain unchanged. The number of elements in keysyms must be:\n```\nkysyms.size * keysyms_per_keycode\n```\nThe specified first_keycode must be greater than or equal to min_keycode\nreturned by `display_keycodes`, or a **BadValue** error results.\nIn addition, the following expression must be less than or equal to\nmax_keycode as returned by `display_keycodes`, or a **BadValue** error results:\n```\nfirst_keycode + keysyms.size - 1\n```\nKeySym number N, counting from zero, for KeyCode K has the following index in keysyms, counting from zero:\n```\n(K - first_keycode) * keysyms_per_keycode + N\n```\nThe specified keysyms_per_keycode can be chosen arbitrarily by the client\nto be large enough to hold all desired symbols. A special KeySym value\nof **NoSymbol** should be used to fill in unused elements for individual\nKeyCodes. It is legal for **NoSymbol** to appear in nontrailing positions\nof the effective list for a KeyCode. `change_keyboard_mapping` generates a **MappingNotify** event.\n\nThere is no requirement that the X server interpret this mapping. It is merely stored for reading and writing by clients.\n\n`change_keyboard_mapping` can generate **BadAlloc** and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadValue** Some numeric value falls outside the range of values\naccepted by the request. Unless a specific range is specified for an argument,\nthe full range defined by the argument's type is accepted. Any argument defined as a set of alternatives can generate this error.\n\n###See also\n`ModifierKeymap::delete_entry`, `keycodes`, `X11::free`, `ModifierKeymap::finalize`,\n`keyboard_mapping`, `modifier_mapping`, `ModifierKeymap::insert_entry`,\n`ModifierKeymap::new`, `set_modifier_mapping`, `set_pointer_mapping`.","summary":"<p>Defines the symbols for the specified number of KeyCodes starting with first_keycode.</p>","abstract":false,"args":[{"name":"first_keycode","doc":null,"default_value":"","external_name":"first_keycode","restriction":"Int32"},{"name":"keysyms_per_keycode","doc":null,"default_value":"","external_name":"keysyms_per_keycode","restriction":"Int32"},{"name":"keysyms","doc":null,"default_value":"","external_name":"keysyms","restriction":"Array(X11::C::KeySym)"}],"args_string":"(first_keycode : Int32, keysyms_per_keycode : Int32, keysyms : Array(X11::C::KeySym)) : Int32","args_html":"(first_keycode : Int32, keysyms_per_keycode : Int32, keysyms : Array(<a href=\"../X11/C/KeySym.html\">X11::C::KeySym</a>)) : Int32","location":{"filename":"src/x11/display.cr","line_number":2284,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2284"},"def":{"name":"change_keyboard_mapping","args":[{"name":"first_keycode","doc":null,"default_value":"","external_name":"first_keycode","restriction":"Int32"},{"name":"keysyms_per_keycode","doc":null,"default_value":"","external_name":"keysyms_per_keycode","restriction":"Int32"},{"name":"keysyms","doc":null,"default_value":"","external_name":"keysyms","restriction":"Array(X11::C::KeySym)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.change_keyboard_mapping(@dpy, first_keycode, keysyms_per_keycode, keysyms.to_unsafe, keysyms.size)"}},{"id":"change_pointer_control(do_accel:Bool,do_threshold:Bool,accel_numerator:Int32,accel_denominator:Int32,threshold:Int32):Int32-instance-method","html_id":"change_pointer_control(do_accel:Bool,do_threshold:Bool,accel_numerator:Int32,accel_denominator:Int32,threshold:Int32):Int32-instance-method","name":"change_pointer_control","doc":"Defines how the pointing device moves.\n\n###Arguments\n- **do_accel** Specifies a Boolean value that controls whether the values for the accel_numerator or accel_denominator are used.\n- **do_threshold** Specifies a Boolean value that controls whether the value for the threshold is used.\n- **accel_numerator** Specifies the numerator for the acceleration multiplier.\n- **accel_denominator** Specifies the denominator for the acceleration multiplier.\n- **threshold** Specifies the acceleration threshold.\n\n###Description\nThe `change_pointer_control` function defines how the pointing device moves.\nThe acceleration, expressed as a fraction, is a multiplier for movement.\nFor example, specifying 3/1 means the pointer moves three times as fast as normal.\nThe fraction may be rounded arbitrarily by the X server. Acceleration only\ntakes effect if the pointer moves more than threshold pixels at once and only\napplies to the amount beyond the value in the threshold argument. Setting\na value to \\-1 restores the default. The values of the do_accel and do_threshold\narguments must be True for the pointer values to be set, or the parameters are unchanged.\nNegative values (other than \\-1) generate a BadValue error, as does a zero value for the accel_denominator argument.\n\n`change_pointer_control` can generate a `BadValue` error.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument,\nthe full range defined by the argument's type is accepted. Any argument defined as a set of alternatives can generate this error.\n\n###See also\n`pointer_control`.","summary":"<p>Defines how the pointing device moves.</p>","abstract":false,"args":[{"name":"do_accel","doc":null,"default_value":"","external_name":"do_accel","restriction":"Bool"},{"name":"do_threshold","doc":null,"default_value":"","external_name":"do_threshold","restriction":"Bool"},{"name":"accel_numerator","doc":null,"default_value":"","external_name":"accel_numerator","restriction":"Int32"},{"name":"accel_denominator","doc":null,"default_value":"","external_name":"accel_denominator","restriction":"Int32"},{"name":"threshold","doc":null,"default_value":"","external_name":"threshold","restriction":"Int32"}],"args_string":"(do_accel : Bool, do_threshold : Bool, accel_numerator : Int32, accel_denominator : Int32, threshold : Int32) : Int32","args_html":"(do_accel : Bool, do_threshold : Bool, accel_numerator : Int32, accel_denominator : Int32, threshold : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":2317,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2317"},"def":{"name":"change_pointer_control","args":[{"name":"do_accel","doc":null,"default_value":"","external_name":"do_accel","restriction":"Bool"},{"name":"do_threshold","doc":null,"default_value":"","external_name":"do_threshold","restriction":"Bool"},{"name":"accel_numerator","doc":null,"default_value":"","external_name":"accel_numerator","restriction":"Int32"},{"name":"accel_denominator","doc":null,"default_value":"","external_name":"accel_denominator","restriction":"Int32"},{"name":"threshold","doc":null,"default_value":"","external_name":"threshold","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.change_pointer_control(@dpy, do_accel ? X::True : X::False, do_threshold ? X::True : X::False, accel_numerator, accel_denominator, threshold)"}},{"id":"change_property(w:X11::C::Window,property:Atom|X11::C::Atom,type:Atom|X11::C::Atom,mode:Int32,data:Bytes|Slice(Int16)|Slice(Int32)):Int32-instance-method","html_id":"change_property(w:X11::C::Window,property:Atom|X11::C::Atom,type:Atom|X11::C::Atom,mode:Int32,data:Bytes|Slice(Int16)|Slice(Int32)):Int32-instance-method","name":"change_property","doc":"Alters the property for the specified window.\n\n###Arguments\n- **w** Specifies the window whose property you want to change.\n- **property** Specifies the property name.\n- **type** Specifies the type of the property. The X server does not\ninterpret the type but simply passes it back to an application that later calls `window_property`.\n- **mode** Specifies the mode of the operation.\nYou can pass **PropModeReplace**, **PropModePrepend**, or **PropModeAppend**.\n- **data** Specifies the property data.\n\n###Description\nThe `change_property` function alters the property for the specified window\nand causes the X server to generate a **PropertyNotify** event on that window.\n`change_property` performs the following:\n- If mode is **PropModeReplace**, `change_property` discards the previous property value and stores the new data.\n- If mode is **PropModePrepend** or **PropModeAppend**, `change_property`\ninserts the specified data before the beginning of the existing data or\nonto the end of the existing data, respectively. The type and format must\nmatch the existing property value, or a **BadMatch** error results.\n\nThe lifetime of a property is not tied to the storing client.\nProperties remain until explicitly deleted, until the window is destroyed,\nor until the server resets. For a discussion of what happens when the\nconnection to the X server is closed, see section \"X Server Connection Close Operations\".\nThe maximum size of a property is server dependent and can vary dynamically\ndepending on the amount of memory the server has available.\n(If there is insufficient space, a **BadAlloc** error results.)\n\n`change_property` can generate **BadAlloc**, **BadAtom**, **BadMatch**, **BadValue**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadAtom** A value for an Atom argument does not name a defined Atom.\n- **BadMatch** An **InputOnly** window is used as a Drawable.\n- **BadMatch** Some argument or pair of arguments has the correct type\nand range but fails to match in some other way required by the request.\n- **BadPixmap** A value for a Pixmap argument does not name a defined Pixmap.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument,\nthe full range defined by the argument's type is accepted. Any argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`delete_property`, `window_property`, `properties`, `rotate_window_properties`.","summary":"<p>Alters the property for the specified window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"property","doc":null,"default_value":"","external_name":"property","restriction":"Atom | X11::C::Atom"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Atom | X11::C::Atom"},{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes | Slice(Int16) | Slice(Int32)"}],"args_string":"(w : X11::C::Window, property : Atom | X11::C::Atom, type : Atom | X11::C::Atom, mode : Int32, data : Bytes | Slice(Int16) | Slice(Int32)) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, property : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>, type : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>, mode : Int32, data : Bytes | Slice(Int16) | Slice(Int32)) : Int32","location":{"filename":"src/x11/display.cr","line_number":2366,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2366"},"def":{"name":"change_property","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"property","doc":null,"default_value":"","external_name":"property","restriction":"Atom | X11::C::Atom"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Atom | X11::C::Atom"},{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes | Slice(Int16) | Slice(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"format = case data\nwhen Bytes\n  8\nwhen Slice(Int16)\n  16\nwhen Slice(Int32)\n  32\nend\nX.change_property(@dpy, w, property.to_u64, type.to_u64, format, mode, data.to_unsafe, data.size)\n"}},{"id":"change_save_set(w:X11::C::Window,change_mode:Int32):Int32-instance-method","html_id":"change_save_set(w:X11::C::Window,change_mode:Int32):Int32-instance-method","name":"change_save_set","doc":"Inserts or deletes the specified window from the client's save-set.\n\n###Arguments\n- **w** Specifies the window that you want to add to or delete from the client's save-set.\n- **change_mode** Specifies the mode. You can pass **SetModeInsert** or **SetModeDelete**.\n\n###Description\nDepending on the specified mode, `change_save_set` either inserts or deletes\nthe specified window from the client's save-set. The specified window must\nhave been created by some other client, or a **BadMatch** error results.\n\n`change_save_set` can generate **BadMatch**, **BadValue**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a Drawable.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument,\nthe full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`add_to_save_set`, `remove_from_save_set`, `reparent_window`.","summary":"<p>Inserts or deletes the specified window from the client's save-set.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"change_mode","doc":null,"default_value":"","external_name":"change_mode","restriction":"Int32"}],"args_string":"(w : X11::C::Window, change_mode : Int32) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, change_mode : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":2400,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2400"},"def":{"name":"change_save_set","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"change_mode","doc":null,"default_value":"","external_name":"change_mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.change_save_set(@dpy, w, change_mode)"}},{"id":"change_window_attributes(w:X11::C::Window,valuemask:UInt64,attributes:SetWindowAttributes):Int32-instance-method","html_id":"change_window_attributes(w:X11::C::Window,valuemask:UInt64,attributes:SetWindowAttributes):Int32-instance-method","name":"change_window_attributes","doc":"Changes the specified window attributes\n\n###Arguments\n- **w** Specifies the window.\n- **valuemask** Specifies which window attributes are defined in the\nattributes argument. This mask is the bitwise inclusive OR of the valid\nattribute mask bits. If valuemask is zero, the attributes are ignored and\nare not referenced. The values and restrictions are the same as for `create_window`.\n- **attributes** Specifies the structure from which the values\n(as specified by the value mask) are to be taken. The value mask should\nhave the appropriate bits set to indicate which attributes have been set in the structure (see \"Window Attributes\").\n\n###Description\nDepending on the valuemask, the `change_window_attributes` function uses\nthe window attributes in the `set_window_attributes` structure to change\nthe specified window attributes. Changing the background does not cause\nthe window contents to be changed. To repaint the window and its background,\nuse `clear_window`. Setting the border or changing the background such that\nthe border tile origin changes causes the border to be repainted. Changing\nthe background of a root window to **None** or **ParentRelative** restores\nthe default background pixmap. Changing the border of a root window to\n**CopyFromParent** restores the default border pixmap. Changing the\nwin-gravity does not affect the current position of the window. Changing\nthe backing-store of an obscured window to **WhenMapped** or **Always**, or\nchanging the backing-planes, backing-pixel, or save-under of a mapped window\nmay have no immediate effect. Changing the colormap of a window (that is,\ndefining a new map, not changing the contents of the existing map) generates\na **ColormapNotify** event. Changing the colormap of a visible window may\nhave no immediate effect on the screen because the map may not be installed\n(see `install_colormap`). Changing the cursor of a root window to **None**\nrestores the default cursor. Whenever possible, you are encouraged to share colormaps.\n\nMultiple clients can select input on the same window. Their event masks are maintained separately.\nWhen an event is generated, it is reported to all interested clients.\nHowever, only one client at a time can select for **SubstructureRedirectMask**,\n**ResizeRedirectMask** and **ButtonPressMask**. If a client attempts to\nselect any of these event masks and some other client has already selected one,\na **BadAccess** error results. There is only one do-not-propagate-mask for a window, not one per client.\n\n`change_window_attributes` can generate **BadAccess**, **BadColor**,\n**BadCursor**, **BadMatch**, **BadPixmap**, **BadValue**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n- **BadColor** A value for a Colormap argument does not name a defined Colormap.\n- **BadCursor** A value for a Cursor argument does not name a defined Cursor.\n- **BadMatch** An **InputOnly** window is used as a Drawable.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadPixmap** A value for a Pixmap argument does not name a defined Pixmap.\n- **BadValue** Some numeric value falls outside the range of values accepted by the request.\nUnless a specific range is specified for an argument, the full range defined\nby the argument's type is accepted. Any argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`configure_window`, `create_window`, `destroy_window`, `install_colormap`,\n`map_window`, `raise_window`, `set_window_background`, `set_window_background_pixmap`,\n`set_window_border`, `set_window_border_pixmap`, `set_window_colormap`, `unmap_window`.","summary":"<p>Changes the specified window attributes</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"valuemask","doc":null,"default_value":"","external_name":"valuemask","restriction":"UInt64"},{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"SetWindowAttributes"}],"args_string":"(w : X11::C::Window, valuemask : UInt64, attributes : SetWindowAttributes) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, valuemask : UInt64, attributes : <a href=\"../X11/SetWindowAttributes.html\">SetWindowAttributes</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":2464,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2464"},"def":{"name":"change_window_attributes","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"valuemask","doc":null,"default_value":"","external_name":"valuemask","restriction":"UInt64"},{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"SetWindowAttributes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.change_window_attributes(@dpy, w, value, attributes.to_unsafe)"}},{"id":"check_if_event(predicate:X11::C::X::PDisplay,X11::C::X::PEvent,X11::C::X::Pointer->X11::C::Bool,arg:X11::C::X::Pointer):Event?-instance-method","html_id":"check_if_event(predicate:X11::C::X::PDisplay,X11::C::X::PEvent,X11::C::X::Pointer->X11::C::Bool,arg:X11::C::X::Pointer):Event?-instance-method","name":"check_if_event","doc":"When the predicate procedure finds a match, returns the matched event.\n\n###Arguments\n- **predicate** Specifies the procedure that is to be called to determine if the next event in the queue matches what you want.\n- **arg** Specifies the user-supplied argument that will be passed to the predicate procedure.\n\n###Description\nWhen the predicate procedure finds a match, `check_if_event` returns the matched event.\n(This event is removed from the queue.) If the predicate procedure finds no match,\n`check_if_event` returns **nil**, and the output buffer will have been flushed.\nAll earlier events stored in the queue are not discarded.\n\n###See also\n`if_event`, `next_event`, `peek_if_event`, `put_back_event`, `send_event`.","summary":"<p>When the predicate procedure finds a match, returns the matched event.</p>","abstract":false,"args":[{"name":"predicate","doc":null,"default_value":"","external_name":"predicate","restriction":"(X11::C::X::PDisplay, X11::C::X::PEvent, X11::C::X::Pointer -> X11::C::Bool)"},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"X11::C::X::Pointer"}],"args_string":"(predicate : X11::C::X::PDisplay, X11::C::X::PEvent, X11::C::X::Pointer -> X11::C::Bool, arg : X11::C::X::Pointer) : Event?","args_html":"(predicate : X11::C::X::PDisplay, X11::C::X::PEvent, X11::C::X::Pointer -> X11::C::Bool, arg : X11::C::X::Pointer) : <a href=\"../X11/Event.html\">Event</a>?","location":{"filename":"src/x11/display.cr","line_number":2482,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2482"},"def":{"name":"check_if_event","args":[{"name":"predicate","doc":null,"default_value":"","external_name":"predicate","restriction":"(X11::C::X::PDisplay, X11::C::X::PEvent, X11::C::X::Pointer -> X11::C::Bool)"},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"X11::C::X::Pointer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"if X.check_if_event(@dpy, out event_return, predicate, arg)\n  Event.from_xevent(event_return)\nelse\n  nil\nend"}},{"id":"check_mask_event(event_mask:Int64):Event?-instance-method","html_id":"check_mask_event(event_mask:Int64):Event?-instance-method","name":"check_mask_event","doc":"Removes and returns the first event that matches the specified mask.\n\n###Arguments\n- **event_mask** Specifies the event mask.\n\n###Description\nThe `check_mask_event` function searches the event queue and then any events\navailable on the server connection for the first event that matches the specified mask.\nIf it finds a match, `check_mask_event` removes that event, and returns it.\nThe other events stored in the queue are not discarded. If the event you\nrequested is not available, `check_mask_event` returns **nil**, and the output buffer will have been flushed.\n\n###See also\n`check_typed_event`, `check_typed_window_event`, `check_window_event`,\n`if_event`, `mask_event`, `next_event`, `peek_event`, `put_back_event`,\n`send_event`, `window_event`.","summary":"<p>Removes and returns the first event that matches the specified mask.</p>","abstract":false,"args":[{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"Int64"}],"args_string":"(event_mask : Int64) : Event?","args_html":"(event_mask : Int64) : <a href=\"../X11/Event.html\">Event</a>?","location":{"filename":"src/x11/display.cr","line_number":2506,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2506"},"def":{"name":"check_mask_event","args":[{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"if X.check_mask_event(@dpy, event_mask, out event_return)\n  Event.from_xevent(event_return)\nelse\n  nil\nend"}},{"id":"check_typed_event(event_type:Int32):Event?-instance-method","html_id":"check_typed_event(event_type:Int32):Event?-instance-method","name":"check_typed_event","doc":"Removes and returns the first event that matches the specified type.\n\n###Arguments\n- **event_type** Specifies the event type to be compared.\n\n###Description\nThe `check_typed_event` function searches the event queue and then any events\navailable on the server connection for the first event that matches the specified type.\nIf it finds a match, `check_typed_event` removes that event, and returns it.\nThe other events in the queue are not discarded. If the event is not available,\n`check_typed_event` returns **nil**, and the output buffer will have been flushed.\n\n###See also\n`check_mask_event`, `check_typed_window_event`, `check_window_event`,\n`if_event`, `mask_event`, `next_event`, `peek_event`, `put_back_event`,\n`send_event`, `window_event`.","summary":"<p>Removes and returns the first event that matches the specified type.</p>","abstract":false,"args":[{"name":"event_type","doc":null,"default_value":"","external_name":"event_type","restriction":"Int32"}],"args_string":"(event_type : Int32) : Event?","args_html":"(event_type : Int32) : <a href=\"../X11/Event.html\">Event</a>?","location":{"filename":"src/x11/display.cr","line_number":2530,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2530"},"def":{"name":"check_typed_event","args":[{"name":"event_type","doc":null,"default_value":"","external_name":"event_type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"if X.check_typed_event(@dpy, event_type, out event_return)\n  Event.from_xevent(event_return)\nelse\n  nil\nend"}},{"id":"check_typed_window_event(w:X11::C::Window,event_type:Int32):Event?-instance-method","html_id":"check_typed_window_event(w:X11::C::Window,event_type:Int32):Event?-instance-method","name":"check_typed_window_event","doc":"Removes and returns the first event that matches the specified window and type.\n\n###Arguments\n- **w** Specifies the window.\n- **event_type** Specifies the event type to be compared.\n\n###Description\nThe `check_typed_window_event` function searches the event queue and then\nany events available on the server connection for the first event that matches\nthe specified type and window. If it finds a match, `check_typed_window_event`\nremoves the event from the queue, and returns it. The other events in the\nqueue are not discarded. If the event is not available, `check_typed_window_event`\nreturns **nil**, and the output buffer will have been flushed.\n\n###See also\n`check_mask_event`, `check_window_event`, `if_event`, `mask_event`,\n`next_event`, `peek_event`, `put_back_event`, `send_event`, `window_event`.","summary":"<p>Removes and returns the first event that matches the specified window and type.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"event_type","doc":null,"default_value":"","external_name":"event_type","restriction":"Int32"}],"args_string":"(w : X11::C::Window, event_type : Int32) : Event?","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, event_type : Int32) : <a href=\"../X11/Event.html\">Event</a>?","location":{"filename":"src/x11/display.cr","line_number":2555,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2555"},"def":{"name":"check_typed_window_event","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"event_type","doc":null,"default_value":"","external_name":"event_type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"if X.check_typed_window_event(@dpy, w, event_type, out event_return)\n  Event.from_xevent(event_return)\nelse\n  nil\nend"}},{"id":"check_window_event(w:X11::C::Window,event_mask:Int64):Event?-instance-method","html_id":"check_window_event(w:X11::C::Window,event_mask:Int64):Event?-instance-method","name":"check_window_event","doc":"Removes and returns the first event that matches the specified window and event mask.\n\n###Arguments\n- **w** Specifies the window whose events you are interested in.\n- **event_mask** Specifies the event mask.\n\n###Description\nThe `check_window_event` function searches the event queue and then the events\navailable on the server connection for the first event that matches the specified window and event mask.\nIf it finds a match, `check_window_event` removes that event, and returns it.\nThe other events stored in the queue are not discarded. If the event you\nrequested is not available, `check_window_event` returns **nil**,\nand the output buffer will have been flushed.\n\n###See also\n`check_mask_event`, `check_typed_event`, `check_typed_window_event`,\n`if_event`, `mask_event`, `next_event`, `peek_event`, `put_back_event`, `send_event`, `window_event`.","summary":"<p>Removes and returns the first event that matches the specified window and event mask.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"Int64"}],"args_string":"(w : X11::C::Window, event_mask : Int64) : Event?","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, event_mask : Int64) : <a href=\"../X11/Event.html\">Event</a>?","location":{"filename":"src/x11/display.cr","line_number":2580,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2580"},"def":{"name":"check_window_event","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"if X.check_window_event(@dpy, w, event_mask, out event_return)\n  Event.from_xevent(event_return)\nelse\n  nil\nend"}},{"id":"circulate_subwindows(w:X11::C::Window,direction:Int32):Int32-instance-method","html_id":"circulate_subwindows(w:X11::C::Window,direction:Int32):Int32-instance-method","name":"circulate_subwindows","doc":"Circulates children of the specified window in the specified direction.\n\n###Arguments\n- **w** Specifies the window.\n- **direction** Specifies the direction (up or down) that you want to\ncirculate the window. You can pass **RaiseLowest** or **LowerHighest**.\n\n###Description\nThe `circulate_subwindows` function circulates children of the specified\nwindow in the specified direction. If you specify **RaiseLowest**,\n`circulate_subwindows` raises the lowest mapped child (if any) that is\noccluded by another child to the top of the stack. If you specify\n**LowerHighest**, `circulate_subwindows` lowers the highest mapped child\n(if any) that occludes another child to the bottom of the stack.\nExposure processing is then performed on formerly obscured windows.\nIf some other client has selected **SubstructureRedirectMask** on the window,\nthe X server generates a **CirculateRequest** event, and no further\nprocessing is performed. If a child is actually restacked,\nthe X server generates a **CirculateNotify** event.\n\n`circulate_subwindows` can generate **BadValue** and **BadWindow** errors.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values\naccepted by the request. Unless a specific range is specified for an argument,\nthe full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`change_window_attributes`, `circulate_subwindows_down`, `circulate_subwindows_up`,\n`configure_window`, `create_window`, `destroy_window`, `lower_window`,\n`map_window`, `raise_window`, `restack_windows`.","summary":"<p>Circulates children of the specified window in the specified direction.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Int32"}],"args_string":"(w : X11::C::Window, direction : Int32) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, direction : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":2621,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2621"},"def":{"name":"circulate_subwindows","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.circulate_subwindows(@dpy, w, direction)"}},{"id":"circulate_subwindows_down(w:X11::C::Window):Int32-instance-method","html_id":"circulate_subwindows_down(w:X11::C::Window):Int32-instance-method","name":"circulate_subwindows_down","doc":"Lowers the highest mapped child of the specified window that partially or completely occludes another child.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `circulate_subwindows_down` function lowers the highest mapped child\nof the specified window that partially or completely occludes another child.\nCompletely unobscured children are not affected. This is a convenience\nfunction equivalent to `circulate_subwindows` with **LowerHighest** specified.\n\n`circulate_subwindows_down` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`change_window_attributes`, `circulate_subwindows`, `circulate_subwindows_up`,\n`configure_window`, `create_window`, `destroy_window`, `lower_window`,\n`map_window`, `raise_window`, `restack_windows`.","summary":"<p>Lowers the highest mapped child of the specified window that partially or completely occludes another child.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":2645,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2645"},"def":{"name":"circulate_subwindows_down","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.circulate_subwindows_down(@dpy, w)"}},{"id":"circulate_subwindows_up(w:X11::C::Window):Int32-instance-method","html_id":"circulate_subwindows_up(w:X11::C::Window):Int32-instance-method","name":"circulate_subwindows_up","doc":"Raises the lowest mapped child of the specified window that is partially or completely occluded by another child.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `circulate_subwindows_up` function raises the lowest mapped child of\nthe specified window that is partially or completely occluded by another child.\nCompletely unobscured children are not affected. This is a convenience\nfunction equivalent to `circulate_subwindows` with **RaiseLowest** specified.\n\n`circulate_subwindows_up` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`change_window_attributes`, `circulate_subwindows`, `circulate_subwindows_down`,\n`configure_window`, `create_window`, `destroy_window`, `lower_window`,\n`map_window`, `raise_window`, `restack_windows`.","summary":"<p>Raises the lowest mapped child of the specified window that is partially or completely occluded by another child.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":2669,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2669"},"def":{"name":"circulate_subwindows_up","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.circulate_subwindows_up(@dpy, w)"}},{"id":"clear_area(w:X11::C::Window,x:Int32,y:Int32,width:UInt32,height:UInt32,exposures:Bool):Int32-instance-method","html_id":"clear_area(w:X11::C::Window,x:Int32,y:Int32,width:UInt32,height:UInt32,exposures:Bool):Int32-instance-method","name":"clear_area","doc":"Paints a rectangular area in the specified window.\n\n###Arguments\n- **w** Specifies the window. and specify the upper-left corner of the rectangle\n- **x**, **y** Specify the x and y coordinates, which are relative to the origin of the window.\n- **width**, **height** Specify the width and height, which are the dimensions of the rectangle.\n- **exposures** Specifies a Boolean value that indicates if **Expose** events are to be generated.\n\n###Description\nThe `clear_area` function paints a rectangular area in the specified\nwindow according to the specified dimensions with the window's background\npixel or pixmap. The subwindow-mode effectively is **ClipByChildren**.\nIf width is zero, it is replaced with the current width of the window minus x.\nIf height is zero, it is replaced with the current height of the window minus y.\nIf the window has a defined background tile, the rectangle clipped by any children\nis filled with this tile. If the window has background **None**,\nthe contents of the window are not changed. In either case, if exposures\nis True, one or more **Expose** events are generated for regions of the\nrectangle that are either visible or are being retained in a backing store.\nIf you specify a window whose class is **InputOnly**, a **BadMatch** error results.\n\n`clear_area` can generate **BadMatch**, **BadValue**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a Drawable.\n- **BadMatch** Some argument or pair of arguments has the correct type\nand range but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values\naccepted by the request. Unless a specific range is specified for an argument,\nthe full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`clear_area`, `copy_area`.","summary":"<p>Paints a rectangular area in the specified window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"exposures","doc":null,"default_value":"","external_name":"exposures","restriction":"Bool"}],"args_string":"(w : X11::C::Window, x : Int32, y : Int32, width : UInt32, height : UInt32, exposures : Bool) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, x : Int32, y : Int32, width : UInt32, height : UInt32, exposures : Bool) : Int32","location":{"filename":"src/x11/display.cr","line_number":2708,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2708"},"def":{"name":"clear_area","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"exposures","doc":null,"default_value":"","external_name":"exposures","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.clear_area(@dpy, w, x, y, width, height, exposures ? X::True : X::False)"}},{"id":"clear_window(w:X11::C::Window):Int32-instance-method","html_id":"clear_window(w:X11::C::Window):Int32-instance-method","name":"clear_window","doc":"Clears the entire area in the specified window.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `clear_window` function clears the entire area in the specified window\nand is equivalent to:\n```\nclear_area(w, 0, 0, 0, 0, false)\n```\nIf the window has a defined background tile, the rectangle is tiled with a\nplane-mask of all ones and `copy` function. If the window has background\n**None**, the contents of the window are not changed. If you specify a\nwindow whose class is **InputOnly**, a **BadMatch** error results.\n\n`clear_window` can generate **BadMatch** and **BadWindow** errors.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a Drawable.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`clear_area`, `copy_area`.","summary":"<p>Clears the entire area in the specified window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":2738,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2738"},"def":{"name":"clear_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.clear_window(@dpy, w)"}},{"id":"close:Int32-instance-method","html_id":"close:Int32-instance-method","name":"close","doc":"Closes the connection to the X server.\n\n###Description\n`close` function closes the connection to the X server for the display\nspecified in the Display structure and destroys all windows, resource IDs\n(`X11::C::Window`, `X11::C::Font`, `X11::C::Pixmap`, `X11::C::Colormap`,\n`X11::C::Cursor`, and `GContext`), or other resources that the client has\ncreated on this display, unless the close-down mode of the resource has\nbeen changed (see `set_close_down_mode`). Therefore, these windows, resource IDs,\nand other resources should never be referenced again or an error will be generated.\nBefore exiting, you should call `close` explicitly so that any pending\nerrors are reported as `close` performs a final `sync` operation.\n\n###Diagnostics\n`close` can generate a **BadGC** error.\n\n###See also\n`flush`, `set_close_down_mode`.","summary":"<p>Closes the connection to the X server.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L79"},"def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if @closed\n  return 0\nend\nres = 0\nif @initialization == DisplayInitialization::Name\n  res = X.close_display(@dpy)\nend\n@dpy = X11::C::X::PDisplay.null\n@closed = true\nres\n"}},{"id":"closed?:Bool-instance-method","html_id":"closed?:Bool-instance-method","name":"closed?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/display.cr","line_number":15,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L15"},"def":{"name":"closed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@closed"}},{"id":"command(w:X11::C::Window):Array(String)-instance-method","html_id":"command(w:X11::C::Window):Array(String)-instance-method","name":"command","doc":"Reads the WM_COMMAND property from the specified window.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `command` function reads the WM_COMMAND property from the\nspecified window and returns a string list. If the WM_COMMAND property exists,\nit is of type STRING and format 8. If sufficient memory can be allocated\nto contain the string list, `get_command` returns an array of strings.\nOtherwise, it returns an empty array. If the data returned by the server is in the Latin Portable Character Encoding,\nthen the returned strings are in the Host Portable Character Encoding.\nOtherwise, the result is implementation dependent.\n\nSee also\n`X11::alloc_class_hint`, `X11::alloc_icon_size`, `X11::alloc_size_hints`,\n`X11::alloc_wm_hints`, `set_command`, `set_text_property`, `set_transient_for_hint`,\n`set_wm_client_machine`, `set_wm_colormap_windows`, `set_wm_icon_name`,\n`set_wm_name`, `set_wm_properties`, `set_wm_protocols`, `X11::string_list_to_text_property`.","summary":"<p>Reads the WM_COMMAND property from the specified window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Array(String)","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Array(String)","location":{"filename":"src/x11/display.cr","line_number":1664,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1664"},"def":{"name":"command","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"status = X.get_command(@dpy, w, out argv, out argc)\nif (status == 0) || argc <= 0\n  return [] of String\nend\ncommands = Array(String).new\n(0...argc).each do |i|\n  commands << (String.new(argv[i]))\nend\nX.free(argv[0])\ncommands\n"}},{"id":"configure_window(w:X11::C::Window,value_mask:UInt32,values:WindowChanges):Int32-instance-method","html_id":"configure_window(w:X11::C::Window,value_mask:UInt32,values:WindowChanges):Int32-instance-method","name":"configure_window","doc":"Reconfigures a window's size, position, border, and stacking order.\n\n###Arguments\n- **w** Specifies the window to be reconfigured.\n- **value_mask** Specifies which values are to be set using information in\nthe values structure. This mask is the bitwise inclusive OR of the valid configure window values bits.\n- **values** Specifies the `WindowChanges` structure.\n\n###Description\nThe `configure_window` function uses the values specified in the `WindowChanges`\nstructure to reconfigure a window's size, position, border, and stacking order.\nValues not specified are taken from the existing geometry of the window.\n\nIf a sibling is specified without a stack_mode or if the window is not actually\na sibling, a **BadMatch** error results. Note that the computations for\n**BottomIf**, **TopIf**, and **Opposite** are performed with respect to the\nwindow's final geometry (as controlled by the other arguments passed to\n`configure_window`), not its initial geometry. Any backing store contents\nof the window, its inferiors, and other newly visible windows are either\ndiscarded or changed to reflect the current screen contents (depending on the implementation).\n\n`configure_window` can generate **BadMatch**, **BadValue**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`change_window_attributes`, `create_window`, `destroy_window`, `map_window`,\n`move_window`, `move_resize_window`, `raise_window`, `resize_window`,\n`set_window_border_width`, `unmap_window`.","summary":"<p>Reconfigures a window's size, position, border, and stacking order.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"value_mask","doc":null,"default_value":"","external_name":"value_mask","restriction":"UInt32"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"WindowChanges"}],"args_string":"(w : X11::C::Window, value_mask : UInt32, values : WindowChanges) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, value_mask : UInt32, values : <a href=\"../X11/WindowChanges.html\">WindowChanges</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":2779,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2779"},"def":{"name":"configure_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"value_mask","doc":null,"default_value":"","external_name":"value_mask","restriction":"UInt32"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"WindowChanges"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.configure_window(@dpy, w, value_mask, values.to_unsafe)"}},{"id":"connection_number:Int32-instance-method","html_id":"connection_number:Int32-instance-method","name":"connection_number","doc":"Returns a connection number for the specified display.\nOn a POSIX-conformant system, this is the file descriptor of the connection.","summary":"<p>Returns a connection number for the specified display.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":2785,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2785"},"def":{"name":"connection_number","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.connection_number(@dpy)"}},{"id":"convert_selection(selection:Atom|X11::C::Atom,target:Atom|X11::C::Atom,property:Atom|X11::C::Atom,requestor:X11::C::Window,time:X11::C::Time):Int32-instance-method","html_id":"convert_selection(selection:Atom|X11::C::Atom,target:Atom|X11::C::Atom,property:Atom|X11::C::Atom,requestor:X11::C::Window,time:X11::C::Time):Int32-instance-method","name":"convert_selection","doc":"Requests that the specified selection be converted to the specified target type.\n\n###Arguments\n- **selection** Specifies the selection atom.\n- **target** Specifies the target atom.\n- **property** Specifies the property name. You also can pass **None**.\n- **requestor** Specifies the requestor.\n- **time** Specifies the time. You can pass either a timestamp or **CurrentTime**.\n\n###Description\n`convert_selection` requests that the specified selection be converted to the specified target type:\n- If the specified selection has an owner, the X server sends a `SelectionRequest` event to that owner.\n- If no owner for the specified selection exists, the X server generates a\n`SelectionNotify` event to the requestor with property **None**.\n\nThe arguments are passed on unchanged in either of the events.\nThere are two predefined selection atoms: PRIMARY and SECONDARY.\n\nconvert_selection can generate **BadAtom** and **BadWindow** errors.\n\n###Diagnostics\n- **BadAtom** A value for an Atom argument does not name a defined Atom.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`selection_owner`, set_selection_owner`.","summary":"<p>Requests that the specified selection be converted to the specified target type.</p>","abstract":false,"args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"Atom | X11::C::Atom"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Atom | X11::C::Atom"},{"name":"property","doc":null,"default_value":"","external_name":"property","restriction":"Atom | X11::C::Atom"},{"name":"requestor","doc":null,"default_value":"","external_name":"requestor","restriction":"X11::C::Window"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(selection : Atom | X11::C::Atom, target : Atom | X11::C::Atom, property : Atom | X11::C::Atom, requestor : X11::C::Window, time : X11::C::Time) : Int32","args_html":"(selection : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>, target : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>, property : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>, requestor : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":2815,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2815"},"def":{"name":"convert_selection","args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"Atom | X11::C::Atom"},{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"Atom | X11::C::Atom"},{"name":"property","doc":null,"default_value":"","external_name":"property","restriction":"Atom | X11::C::Atom"},{"name":"requestor","doc":null,"default_value":"","external_name":"requestor","restriction":"X11::C::Window"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.convert_selection(@dpy, selection.to_u64, target.to_u64, property.to_u64, requestor, time)"}},{"id":"copy_area(src:X11::C::Drawable,dest:X11::C::Drawable,gc:X11::C::C::GC,src_x:Int32,src_y:Int32,width:UInt32,height:UInt32,dest_x:Int32,dest_y:Int32):Int32-instance-method","html_id":"copy_area(src:X11::C::Drawable,dest:X11::C::Drawable,gc:X11::C::C::GC,src_x:Int32,src_y:Int32,width:UInt32,height:UInt32,dest_x:Int32,dest_y:Int32):Int32-instance-method","name":"copy_area","doc":"Combines the specified rectangle of src with the specified rectangle of dest.\n\n###Arguments\n- **src**, **dest** Specify the source and destination rectangles to be combined.\n- **gc** Specifies the GC.\n- **src_x**, **src_y** Specify the x and y coordinates, which are relative\nto the origin of the source rectangle and specify its upper-left corner.\n- **width**, **height** Specify the width and height, which are the dimensions\nof both the source and destination rectangles.\n- **dest_x**, **dest_y** Specify the x and y coordinates, which are relative\nto the origin of the destination rectangle and specify its upper-left corner\n\n###Description\nThe `copy_area` function combines the specified rectangle of src with the\nspecified rectangle of dest. The drawables must have the same root and depth, or a **BadMatch** error results.\n\nIf regions of the source rectangle are obscured and have not been retained\nin backing store or if regions outside the boundaries of the source drawable\nare specified, those regions are not copied. Instead, the following occurs\non all corresponding destination regions that are either visible or are retained\nin backing store. If the destination is a window with a background other\nthan **None**, corresponding regions of the destination are tiled with that\nbackground. Regardless of tiling or whether the destination is a window or a pixmap,\nif graphics-exposures is **true**, then `GraphicsExpose` events for all\ncorresponding destination regions are generated. If graphics-exposures is\n**true** but no `GraphicsExpose` events are generated, a **NoExpose** event\nis generated. Note that by default graphics-exposures is **true** in new GCs.\n\nThis function uses these GC components: function, plane-mask, subwindow-mode,\ngraphics-exposure, clip-x-origin, clip-y-origin, and clip-mask.\n\n`copy_area` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`clear_area`, `copy_plane`.","summary":"<p>Combines the specified rectangle of src with the specified rectangle of dest.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"X11::C::Drawable"},{"name":"dest","doc":null,"default_value":"","external_name":"dest","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::C::GC"},{"name":"src_x","doc":null,"default_value":"","external_name":"src_x","restriction":"Int32"},{"name":"src_y","doc":null,"default_value":"","external_name":"src_y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"dest_x","doc":null,"default_value":"","external_name":"dest_x","restriction":"Int32"},{"name":"dest_y","doc":null,"default_value":"","external_name":"dest_y","restriction":"Int32"}],"args_string":"(src : X11::C::Drawable, dest : X11::C::Drawable, gc : X11::C::C::GC, src_x : Int32, src_y : Int32, width : UInt32, height : UInt32, dest_x : Int32, dest_y : Int32) : Int32","args_html":"(src : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, dest : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::C::GC, src_x : Int32, src_y : Int32, width : UInt32, height : UInt32, dest_x : Int32, dest_y : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":2861,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2861"},"def":{"name":"copy_area","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"X11::C::Drawable"},{"name":"dest","doc":null,"default_value":"","external_name":"dest","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::C::GC"},{"name":"src_x","doc":null,"default_value":"","external_name":"src_x","restriction":"Int32"},{"name":"src_y","doc":null,"default_value":"","external_name":"src_y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"dest_x","doc":null,"default_value":"","external_name":"dest_x","restriction":"Int32"},{"name":"dest_y","doc":null,"default_value":"","external_name":"dest_y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.copy_area(@dpy, src, dest, gc, src_x, src_y, width, height, dest_x, dest_y)"}},{"id":"copy_colormap_and_free(colormap:X11::C::Colormap):X11::C::Colormap-instance-method","html_id":"copy_colormap_and_free(colormap:X11::C::Colormap):X11::C::Colormap-instance-method","name":"copy_colormap_and_free","doc":"Creates a colormap\n\n###Arguments\n- **colormap** Specifies the colormap.\n\n###Description\nThe `copy_colormap_and_free` function creates a colormap of the same visual\ntype and for the same screen as the specified colormap and returns the new colormap ID.\nIt also moves all of the client's existing allocation from the specified colormap to the new\ncolormap with their color values intact and their read-only or writable characteristics\nintact and frees those entries in the specified colormap. Color values\nin other entries in the new colormap are undefined. If the specified\ncolormap was created by the client with alloc set to **AllocAll**,\nthe new colormap is also created with **AllocAll**, all color values\nfor all entries are copied from the specified colormap, and then all\nentries in the specified colormap are freed. If the specified colormap\nwas not created by the client with **AllocAll**, the allocations to be\nmoved are all those pixels and planes that have been allocated by the\nclient using `alloc_color`, `alloc_named_color`, `alloc_color_cells`,\nor `alloc_color_planes` and that have not been freed since they were allocated.\n\n`copy_colormap_and_free` can generate **BadAlloc** and **BadColor** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadColor** A value for a `Colormap` argument does not name a defined `Colormap`.\n\n###See Also\n`alloc_color`, `change_window_attributes`, `create_window`, `query_color`, `store_colors`.","summary":"<p>Creates a colormap</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"args_string":"(colormap : X11::C::Colormap) : X11::C::Colormap","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>) : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>","location":{"filename":"src/x11/display.cr","line_number":517,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L517"},"def":{"name":"copy_colormap_and_free","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Colormap","visibility":"Public","body":"X.copy_colormap_and_free(@dpy, colormap)"}},{"id":"copy_gc(src:X11::C::X::GC,valuemask:UInt64,dest:X11::C::X::GC):Int32-instance-method","html_id":"copy_gc(src:X11::C::X::GC,valuemask:UInt64,dest:X11::C::X::GC):Int32-instance-method","name":"copy_gc","doc":"Copies the specified components from the source GC to the destination GC\n\n###Arguments\n- **src** Specifies the components of the source GC.\n- **valuemask** Specifies which components in the GC are to be copied to\nthe destination GC. This argument is the bitwise inclusive OR of zero or more of the valid GC component mask bits.\n- **dest** Specifies the destination GC.\n\n###Description\nThe `copy_gc` function copies the specified components from the source GC\nto the destination GC. The source and destination GCs must have the same\nroot and depth, or a **BadMatch** error results. The valuemask\nspecifies which component to copy, as for `create_gc`.\n\n`copy_gc` can generate **BadAlloc**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`X11::all_planes`, `change_gc`, `copy_area`, `create_gc`, `X11::create_region`,\n`draw_arc`, `draw_line`, `draw_rectangle`, `draw_text`, `fill_rectangle`,\n`free_gc`, `X11::g_context_from_gc`, `gc_values`, `query_best_size`, `set_arc_mode`, `set_clip_origin`.","summary":"<p>Copies the specified components from the source GC to the destination GC</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"X11::C::X::GC"},{"name":"valuemask","doc":null,"default_value":"","external_name":"valuemask","restriction":"UInt64"},{"name":"dest","doc":null,"default_value":"","external_name":"dest","restriction":"X11::C::X::GC"}],"args_string":"(src : X11::C::X::GC, valuemask : UInt64, dest : X11::C::X::GC) : Int32","args_html":"(src : X11::C::X::GC, valuemask : UInt64, dest : X11::C::X::GC) : Int32","location":{"filename":"src/x11/display.cr","line_number":2892,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2892"},"def":{"name":"copy_gc","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"X11::C::X::GC"},{"name":"valuemask","doc":null,"default_value":"","external_name":"valuemask","restriction":"UInt64"},{"name":"dest","doc":null,"default_value":"","external_name":"dest","restriction":"X11::C::X::GC"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.copy_gc(@dpy, src, valuemask, dest)"}},{"id":"copy_plane(src:X11::C::Drawable,dest:X11::C::Drawable,gc:X11::C::X::GC,src_x:Int32,src_y:Int32,width:UInt32,height:UInt32,dest_x:Int32,dest_y:Int32,plane:UInt64):Int32-instance-method","html_id":"copy_plane(src:X11::C::Drawable,dest:X11::C::Drawable,gc:X11::C::X::GC,src_x:Int32,src_y:Int32,width:UInt32,height:UInt32,dest_x:Int32,dest_y:Int32,plane:UInt64):Int32-instance-method","name":"copy_plane","doc":"Uses a single bit plane of the specified source rectangle combined with the specified GC to modify the specified rectangle of dest.\n\n###Arguments\n- **src**, **dest** Specify the source and destination rectangles to be combined.\n- **gc** Specifies the GC.\n- **src_x**, **src_y** Specify the x and y coordinates, which are relative\nto the origin of the source rectangle and specify its upper-left corner.\n- **width**, **height** Specify the width and height, which are the dimensions\nof both the source and destination rectangles.\n- **dest_x**, **dest_y** Specify the x and y coordinates, which are relative\nto the origin of the destination rectangle and specify its upper-left corner.\n- **plane** Specifies the bit plane. You must set exactly one bit to 1.\n\n###Description\nThe `copy_plane` function uses a single bit plane of the specified source\nrectangle combined with the specified GC to modify the specified rectangle of dest.\nThe drawables must have the same root but need not have the same depth.\nIf the drawables do not have the same root, a BadMatch error results.\nIf plane does not have exactly one bit set to 1 and the value of plane is\nnot less than 2<sup>**n**</sup>, where **n** is the depth of src, a **BadValue** error results.\n\nEffectively, `copy_plane` forms a pixmap of the same depth as the rectangle\nof dest and with a size specified by the source region. It uses the\nforeground/background pixels in the GC (foreground everywhere the bit plane\nin src contains a bit set to 1, background everywhere the bit plane in src\ncontains a bit set to 0) and the equivalent of a **CopyArea** protocol request\nis performed with all the same exposure semantics. This can also be thought\nof as using the specified region of the source bit plane as a stipple with a\nfill-style of **FillOpaqueStippled** for filling a rectangular area of the destination.\n\nThis function uses these GC components: function, plane-mask, foreground,\nbackground, subwindow-mode, graphics-exposures, clip-x-origin, clip-y-origin, and clip-mask.\n\n`copy_plane` can generate **BadDrawable**, **BadGC**, **BadMatch**, and **BadValue** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n\n###See also\n`copy_area`, `clear_area`.","summary":"<p>Uses a single bit plane of the specified source rectangle combined with the specified GC to modify the specified rectangle of dest.</p>","abstract":false,"args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"X11::C::Drawable"},{"name":"dest","doc":null,"default_value":"","external_name":"dest","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"src_x","doc":null,"default_value":"","external_name":"src_x","restriction":"Int32"},{"name":"src_y","doc":null,"default_value":"","external_name":"src_y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"dest_x","doc":null,"default_value":"","external_name":"dest_x","restriction":"Int32"},{"name":"dest_y","doc":null,"default_value":"","external_name":"dest_y","restriction":"Int32"},{"name":"plane","doc":null,"default_value":"","external_name":"plane","restriction":"UInt64"}],"args_string":"(src : X11::C::Drawable, dest : X11::C::Drawable, gc : X11::C::X::GC, src_x : Int32, src_y : Int32, width : UInt32, height : UInt32, dest_x : Int32, dest_y : Int32, plane : UInt64) : Int32","args_html":"(src : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, dest : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, src_x : Int32, src_y : Int32, width : UInt32, height : UInt32, dest_x : Int32, dest_y : Int32, plane : UInt64) : Int32","location":{"filename":"src/x11/display.cr","line_number":2944,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2944"},"def":{"name":"copy_plane","args":[{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"X11::C::Drawable"},{"name":"dest","doc":null,"default_value":"","external_name":"dest","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"src_x","doc":null,"default_value":"","external_name":"src_x","restriction":"Int32"},{"name":"src_y","doc":null,"default_value":"","external_name":"src_y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"dest_x","doc":null,"default_value":"","external_name":"dest_x","restriction":"Int32"},{"name":"dest_y","doc":null,"default_value":"","external_name":"dest_y","restriction":"Int32"},{"name":"plane","doc":null,"default_value":"","external_name":"plane","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.copy_plane(@dpy, src, dest, gc, src_x, src_y, width, height, dest_x, dest_y, plane)"}},{"id":"create_bitmap_from_data(d:X11::C::Drawable,data:Bytes,width:UInt32,height:UInt32):X11::C::Pixmap-instance-method","html_id":"create_bitmap_from_data(d:X11::C::Drawable,data:Bytes,width:UInt32,height:UInt32):X11::C::Pixmap-instance-method","name":"create_bitmap_from_data","doc":"Creates a pixmap from data.\n\n###Arguments\n- **d** Specifies the drawable that indicates the screen.\n- **data** Specifies the location of the bitmap data.\n- **width**, **height** Specify the width and height.\n\n###Description\nThe `create_bitmap_from_data` function allows you to include in your C program (using #include)\na bitmap file that was written out by `write_bitmap_file` (X version 11 format only)\nwithout reading in the bitmap file. The following example creates a gray bitmap:\n```c\n#include \"gray.bitmap\"\n\nPixmap bitmap;\nbitmap = XCreateBitmapFromData(display, window, gray_bits, gray_width, gray_height);\n```\nIf insufficient working storage was allocated, `create_bitmap_from_data` returns **None**.\nIt is your responsibility to free the bitmap using `free_pixmap` when finished.\n\n`create_bitmap_from_data` can generate a **BadAlloc** and **BadGC** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `X11::C::GContext` argument does not name a defined `X11::C::GContext`.\n\n###See also\n`create_pixmap`, `create_pixmap_from_bitmap_data`, `put_image`, `read_bitmap_file`, `write_bitmap_file`.","summary":"<p>Creates a pixmap from data.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"args_string":"(d : X11::C::Drawable, data : Bytes, width : UInt32, height : UInt32) : X11::C::Pixmap","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, data : Bytes, width : UInt32, height : UInt32) : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>","location":{"filename":"src/x11/display.cr","line_number":818,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L818"},"def":{"name":"create_bitmap_from_data","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Pixmap","visibility":"Public","body":"X.create_bitmap_from_data(@dpy, d, data.to_unsafe, width, height)"}},{"id":"create_colormap(w:X11::C::Window,visual:Visual,alloc:Int32):X11::C::Colormap-instance-method","html_id":"create_colormap(w:X11::C::Window,visual:Visual,alloc:Int32):X11::C::Colormap-instance-method","name":"create_colormap","doc":"Creates a colormap\n\n###Arguments\n- **w** Specifies the window on whose screen you want to create a colormap.\n- **visual** Specifies a visual type supported on the screen. If the visual type is not one supported by the screen, a **BadMatch** error results.\n- **alloc** Specifies the colormap entries to be allocated. You can pass **AllocNone** or **AllocAll**.\n\n###Description\nThe `create_colormap` function creates a colormap of the specified visual type\nfor the screen on which the specified window resides and returns the colormap ID#\nassociated with it. Note that the specified window is only used to determine the screen.\n\nThe initial values of the colormap entries are undefined for the visual classes\n*GrayScale*, *PseudoColor*, and *DirectColor*. For *StaticGray*, *StaticColor*,\nand `TrueColor`, the entries have defined values, but those values are specific\nto the visual and are not defined by X. For *StaticGray*, *StaticColor*, and *TrueColor*,\nalloc must be **AllocNone**, or a **BadMatch** error results. For the other visual classes,\nif alloc is **AllocNone**, the colormap initially has no allocated entries,\nand clients can allocate them.\n\nIf alloc is **AllocAll the entire colormap is allocated writable.\nThe initial values of all allocated entries are undefined.\nFor *GrayScale* and *PseudoColor*, the effect is as if an `alloc_color_cells` call returned\nall pixel values from zero to `N - 1`, where `N` is the colormap entries value in the specified visual.\nFor *DirectColor*, the effect is as if an `alloc_color_planes` call returned a\npixel value of zero and red_mask, green_mask, and blue_mask values containing the same\nbits as the corresponding masks in the specified visual. However, in all cases,\nnone of these entries can be freed by using `free_colors`.\n\n`create_colormap` can generate **BadAlloc**, **BadMatch**, **BadValue**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadMatch** An *InputOnly* window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and range but fails to match in some other way required by the request.\n- **BadPixmap** A value for a *Pixmap* argument does not name a defined *Pixmap*.\n- **BadValue** Some numeric value falls outside the range of values accepted by the request.\nUnless a specific range is specified for an argument, the full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a Window argument does not name a defined *Window*.\n\n###See also\n`alloc_color`, `change_window_attributes`, `copy_colormap_and_free`,\n`create_window`, `free_colormap`, `query_color`, `store_colors`.","summary":"<p>Creates a colormap</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"visual","doc":null,"default_value":"","external_name":"visual","restriction":"Visual"},{"name":"alloc","doc":null,"default_value":"","external_name":"alloc","restriction":"Int32"}],"args_string":"(w : X11::C::Window, visual : Visual, alloc : Int32) : X11::C::Colormap","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, visual : <a href=\"../X11/Visual.html\">Visual</a>, alloc : Int32) : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>","location":{"filename":"src/x11/display.cr","line_number":565,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L565"},"def":{"name":"create_colormap","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"visual","doc":null,"default_value":"","external_name":"visual","restriction":"Visual"},{"name":"alloc","doc":null,"default_value":"","external_name":"alloc","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Colormap","visibility":"Public","body":"X.create_colormap(@dpy, w, visual.visual, alloc)"}},{"id":"create_font_cursor(shape:UInt32):X11::C::Cursor-instance-method","html_id":"create_font_cursor(shape:UInt32):X11::C::Cursor-instance-method","name":"create_font_cursor","doc":"Creates a cursor.\n\n###Arguments\n- **shape** Specifies the shape of the cursor.\n\n###Description\nX provides a set of standard cursor shapes in a special font named cursor.\nApplications are encouraged to use this interface for their cursors because\nthe font can be customized for the individual display type.\nThe shape argument specifies which glyph of the standard fonts to use.\n\nThe hotspot comes from the information stored in the cursor font.\nThe initial colors of a cursor are a black foreground and a white background\n(see `recolor_cursor`).\n\n`create_font_cursor` can generate **BadAlloc** and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadValue** Some numeric value falls outside the range of values accepted by the request.\nUnless a specific range is specified for an argument, the full range defined by the argument's\ntype is accepted. Any argument defined as a set of alternatives can generate this error.\n\n###See also\n`create_glyph_cursor`, `create_pixmap_cursor`, `define_cursor`, `load_font`, `recolor_cursor`.","summary":"<p>Creates a cursor.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"UInt32"}],"args_string":"(shape : UInt32) : X11::C::Cursor","args_html":"(shape : UInt32) : <a href=\"../X11/C/Cursor.html\">X11::C::Cursor</a>","location":{"filename":"src/x11/display.cr","line_number":674,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L674"},"def":{"name":"create_font_cursor","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Cursor","visibility":"Public","body":"X.create_font_cursor(@dpy, shape)"}},{"id":"create_font_set(base_font_name_list:String):NamedTuple()-instance-method","html_id":"create_font_set(base_font_name_list:String):NamedTuple()-instance-method","name":"create_font_set","doc":null,"summary":null,"abstract":false,"args":[{"name":"base_font_name_list","doc":null,"default_value":"","external_name":"base_font_name_list","restriction":"String"}],"args_string":"(base_font_name_list : String) : NamedTuple()","args_html":"(base_font_name_list : String) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":8215,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8215"},"def":{"name":"create_font_set","args":[{"name":"base_font_name_list","doc":null,"default_value":"","external_name":"base_font_name_list","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(font_set: X11::C::X::FontSet, missing_charset_list: Array(String), def_string: String)","visibility":"Public","body":"font_set = X.create_font_set(@dpy, base_font_name_list.to_unsafe, out missing_charset_list_return, out missing_charset_count_return, def_string_return)\nif missing_charset_count_return > 0\n  missing_charset_list = Array(String).new(missing_charset_count_return) do |i|\n    String.new((missing_charset_list_return + i).value)\n  end\n  X.free(missing_charset_list_return.as(PChar))\nelse\n  missing_charset_list = [] of String\nend\nif def_string_return.null?\n  def_string = \"\"\nelse\n  def_string = String.new(def_string_return)\n  X.free(def_string_return)\nend\n{font_set: font_set, missing_charset_list: missing_charset_list, def_string: def_string}\n"}},{"id":"create_gc(d:X11::C::Drawable,valuemask:UInt64,values:GCValues):X11::C::X::GC-instance-method","html_id":"create_gc(d:X11::C::Drawable,valuemask:UInt64,values:GCValues):X11::C::X::GC-instance-method","name":"create_gc","doc":"Creates a graphics context.\n\n###Arguments\n- **d** Specifies the drawable.\n- **valuemask** Specifies which components in the GC are to be set using\nthe information in the specified values structure. This argument is the\nbitwise inclusive OR of zero or more of the valid GC component mask bits.\n- **values** Specifies any values as specified by the valuemask.\n\n###Description\nThe `create_gc` function creates a graphics context and returns a GC.\nThe GC can be used with any destination drawable having the same root and\ndepth as the specified drawable. Use with other drawables results in a **BadMatch** error.\n\n`create_gc` can generate **BadAlloc**, **BadDrawable**, **BadFont**, **BadMatch**, **BadPixmap**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadFont** A value for a font argument does not name a defined font (or, in some cases, *GContext*).\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and range but fails to match in some other way required by the request.\n- **BadPixmap** A value for a *Pixmap* argument does not name a defined *Pixmap*.\n- **BadValue** Some numeric value falls outside the range of values accepted by the request.\nUnless a specific range is specified for an argument, the full range defined\nby the argument's type is accepted. Any argument defined as a set of alternatives can generate this error.\n\n###See also\n`all_planes`, `change_gc`, `copy_area`, `copy_gc`, `draw_arc`, `draw_line`,\n`draw_rectangle`, `draw_text`, `fill_rectangle`, `free_gc`, `g_context_from_gc`,\n`gc_values`, `query_best_size`, `set_arc_mode`, `set_clip_origin`.","summary":"<p>Creates a graphics context.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"valuemask","doc":null,"default_value":"","external_name":"valuemask","restriction":"UInt64"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"GCValues"}],"args_string":"(d : X11::C::Drawable, valuemask : UInt64, values : GCValues) : X11::C::X::GC","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, valuemask : UInt64, values : <a href=\"../X11/GCValues.html\">GCValues</a>) : X11::C::X::GC","location":{"filename":"src/x11/display.cr","line_number":740,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L740"},"def":{"name":"create_gc","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"valuemask","doc":null,"default_value":"","external_name":"valuemask","restriction":"UInt64"},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"GCValues"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::GC","visibility":"Public","body":"X.create_gc(@dpy, d, valuemask, values.to_unsafe)"}},{"id":"create_glyph_cursor(source_font:X11::C::Font,mask_font:X11::C::Font,source_char:UInt32,mask_char:UInt32,foreground_color:Color,background_color:Color):X11::C::Cursor-instance-method","html_id":"create_glyph_cursor(source_font:X11::C::Font,mask_font:X11::C::Font,source_char:UInt32,mask_char:UInt32,foreground_color:Color,background_color:Color):X11::C::Cursor-instance-method","name":"create_glyph_cursor","doc":"Creates a cursor.\n\n###Arguments\n- **source_font** Specifies the font for the source glyph.\n- **mask_font** Specifies the font for the mask glyph or **None**.\n- **source_char** Specifies the character glyph for the source.\n- **mask_char-** Specifies the glyph character for the mask.\n- **foreground_color** Specifies the RGB values for the foreground of the source.\n- **background_color** Specifies the RGB values for the background of the source.\n\n###Description\nThe `create_glyph_cursor` function is similar to `create_pixmap_cursor`\nexcept that the source and mask bitmaps are obtained from the specified font glyphs.\nThe source_char must be a defined glyph in *source_font*, or a **BadValue** error results.\nIf *mask_font* is given, mask_char must be a defined glyph in *mask_font*, or a **BadValue** error results.\nThe *mask_font* and character are optional. The origins of the *source_char* and *mask_char*\n(if defined) glyphs are positioned coincidently and define the hotspot.\nThe source_char and mask_char need not have the same bounding box metrics,\nand there is no restriction on the placement of the hotspot relative to the bounding boxes.\nIf no mask_char is given, all pixels of the source are displayed. You can\nfree the fonts immediately by calling `free_font` if no further explicit references to them are to be made.\n\nFor 2-byte matrix fonts, the 16-bit value should be formed with the byte1\nmember in the most-significant byte and the byte2 member in the least-significant byte.\n\n`create_glyph_cursor` can generate **BadAlloc**, **BadFont**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** \tThe server failed to allocate the requested source or server memory.\n- **BadFont** A value for a font argument does not name a defined font (or, in some cases, `GContext`).\n- **BadValue** Some numeric value falls outside the range of values accepted by the request.\nUnless a specific range is specified for an argument, the full range defined by the argument's\ntype is accepted. Any argument defined as a set of alternatives can generate this error.\n\n###See also\n`create_font_cursor`, `create_pixmap_cursor`, `define_cursor`, `load_font`, `recolor_cursor`.","summary":"<p>Creates a cursor.</p>","abstract":false,"args":[{"name":"source_font","doc":null,"default_value":"","external_name":"source_font","restriction":"X11::C::Font"},{"name":"mask_font","doc":null,"default_value":"","external_name":"mask_font","restriction":"X11::C::Font"},{"name":"source_char","doc":null,"default_value":"","external_name":"source_char","restriction":"UInt32"},{"name":"mask_char","doc":null,"default_value":"","external_name":"mask_char","restriction":"UInt32"},{"name":"foreground_color","doc":null,"default_value":"","external_name":"foreground_color","restriction":"Color"},{"name":"background_color","doc":null,"default_value":"","external_name":"background_color","restriction":"Color"}],"args_string":"(source_font : X11::C::Font, mask_font : X11::C::Font, source_char : UInt32, mask_char : UInt32, foreground_color : Color, background_color : Color) : X11::C::Cursor","args_html":"(source_font : <a href=\"../X11/C/Font.html\">X11::C::Font</a>, mask_font : <a href=\"../X11/C/Font.html\">X11::C::Font</a>, source_char : UInt32, mask_char : UInt32, foreground_color : <a href=\"../X11/Color.html\">Color</a>, background_color : <a href=\"../X11/Color.html\">Color</a>) : <a href=\"../X11/C/Cursor.html\">X11::C::Cursor</a>","location":{"filename":"src/x11/display.cr","line_number":645,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L645"},"def":{"name":"create_glyph_cursor","args":[{"name":"source_font","doc":null,"default_value":"","external_name":"source_font","restriction":"X11::C::Font"},{"name":"mask_font","doc":null,"default_value":"","external_name":"mask_font","restriction":"X11::C::Font"},{"name":"source_char","doc":null,"default_value":"","external_name":"source_char","restriction":"UInt32"},{"name":"mask_char","doc":null,"default_value":"","external_name":"mask_char","restriction":"UInt32"},{"name":"foreground_color","doc":null,"default_value":"","external_name":"foreground_color","restriction":"Color"},{"name":"background_color","doc":null,"default_value":"","external_name":"background_color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Cursor","visibility":"Public","body":"X.create_glyph_cursor(@dpy, source_font, mask_font, source_char, mask_char, foreground_color, background_color)"}},{"id":"create_image(visual:Visual,depth:UInt32,format:Int32,offset:Int32,data:Bytes,width:UInt32,height:UInt32,bitmap_pad:Int32,bytes_per_line:Int32):Image-instance-method","html_id":"create_image(visual:Visual,depth:UInt32,format:Int32,offset:Int32,data:Bytes,width:UInt32,height:UInt32,bitmap_pad:Int32,bytes_per_line:Int32):Image-instance-method","name":"create_image","doc":"Creates an `Image`.\n\n###Arguments\n- **visual** Specifies the `Visual` structure.\n- **depth** Specifies the depth of the image.\n- **format** Specifies the format for the image. You can pass **XYBitmap**, **XYPixmap**, or **ZPixmap**.\n- **offset** Specifies the number of pixels to ignore at the beginning of the scanline.\n- **data** Specifies the image data.\n- **width** Specifies the width of the image, in pixels.\n- **height** Specifies the height of the image, in pixels.\n- **bitmap_pad** Specifies the quantum of a scanline (8, 16, or 32).\nIn other words, the start of one scanline is separated in client memory\nfrom the start of the next scanline by an integer multiple of this many bits.\n- **bytes_per_line** Specifies the number of bytes in the client image between\nthe start of one scanline and the start of the next.\n\n###Description\nThe `create_image` function allocates the memory needed for an `Image` structure\nfor the specified display but does not allocate space for the image itself.\nRather, it initializes the structure byte-order, bit-order, and bitmap-unit\nvalues from the display and returns a pointer to the `Image` structure.\nThe red, green, and blue mask values are defined for Z format images only\nand are derived from the `Visual` structure passed in. Other values also\nare passed in. The offset permits the rapid displaying of the image without\nrequiring each scanline to be shifted into position. If you pass a zero\nvalue in bytes_per_line, Xlib assumes that the scanlines are contiguous\nin memory and calculates the value of *bytes_per_line* itself.\n\nNote that when the image is created using `create_image`, `get_image`, or\n`Image::sub_image`, the destroy procedure that the `Image::finalize`\nfunction calls frees both the image structure and the data pointed to by the image structure.\n\n###See also\n`Image::add_pixel`, `Image::finalize`, `Image::pixel`, `Image::put_pixel`, `Image::sub_image`.","summary":"<p>Creates an <code><a href=\"../X11/Image.html\">Image</a></code>.</p>","abstract":false,"args":[{"name":"visual","doc":null,"default_value":"","external_name":"visual","restriction":"Visual"},{"name":"depth","doc":null,"default_value":"","external_name":"depth","restriction":"UInt32"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Int32"},{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Int32"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"bitmap_pad","doc":null,"default_value":"","external_name":"bitmap_pad","restriction":"Int32"},{"name":"bytes_per_line","doc":null,"default_value":"","external_name":"bytes_per_line","restriction":"Int32"}],"args_string":"(visual : Visual, depth : UInt32, format : Int32, offset : Int32, data : Bytes, width : UInt32, height : UInt32, bitmap_pad : Int32, bytes_per_line : Int32) : Image","args_html":"(visual : <a href=\"../X11/Visual.html\">Visual</a>, depth : UInt32, format : Int32, offset : Int32, data : Bytes, width : UInt32, height : UInt32, bitmap_pad : Int32, bytes_per_line : Int32) : <a href=\"../X11/Image.html\">Image</a>","location":{"filename":"src/x11/display.cr","line_number":213,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L213"},"def":{"name":"create_image","args":[{"name":"visual","doc":null,"default_value":"","external_name":"visual","restriction":"Visual"},{"name":"depth","doc":null,"default_value":"","external_name":"depth","restriction":"UInt32"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Int32"},{"name":"offset","doc":null,"default_value":"","external_name":"offset","restriction":"Int32"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"bitmap_pad","doc":null,"default_value":"","external_name":"bitmap_pad","restriction":"Int32"},{"name":"bytes_per_line","doc":null,"default_value":"","external_name":"bytes_per_line","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Image","visibility":"Public","body":"Image.new(X.create_image(@dpy, visual.to_unsafe, depth, format, offset, data.to_unsafe, width, height, bitmap_pad, bytes_per_line))"}},{"id":"create_pixmap(d:X11::C::Drawable,width:UInt32,height:UInt32,depth:UInt32):X11::C::Pixmap-instance-method","html_id":"create_pixmap(d:X11::C::Drawable,width:UInt32,height:UInt32,depth:UInt32):X11::C::Pixmap-instance-method","name":"create_pixmap","doc":"Creates a pixmap.\n\n###Arguments\n- **d** Specifies which screen the pixmap is created on.\n- **width**, **height** Specify the width and height, which define the dimensions of the pixmap.\n- **depth** Specifies the depth of the pixmap.\n\n###Description\nThe `create_pixmap` function creates a pixmap of the width, height,\nand depth you specified and returns a pixmap ID that identifies it.\nIt is valid to pass an **InputOnly** window to the drawable argument.\nThe width and height arguments must be nonzero, or a **BadValue** error results.\nThe depth argument must be one of the depths supported by the screen of the specified drawable, or a **BadValue** error results.\n\nThe server uses the specified drawable to determine on which screen to create the pixmap.\nThe pixmap can be used only on this screen and only with other drawables of the same depth (see `copy_plane`\nfor an exception to this rule). The initial contents of the pixmap are undefined.\n\n`create_pixmap` can generate **BadAlloc**, **BadDrawable**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadValue** Some numeric value falls outside the range of values accepted by the request.\nUnless a specific range is specified for an argument, the full range defined\nby the argument's type is accepted. Any argument defined as a set of alternatives can generate this error.\n\n###See also\n`copy_area`, `free_pixmap`.","summary":"<p>Creates a pixmap.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"depth","doc":null,"default_value":"","external_name":"depth","restriction":"UInt32"}],"args_string":"(d : X11::C::Drawable, width : UInt32, height : UInt32, depth : UInt32) : X11::C::Pixmap","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, width : UInt32, height : UInt32, depth : UInt32) : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>","location":{"filename":"src/x11/display.cr","line_number":786,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L786"},"def":{"name":"create_pixmap","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"depth","doc":null,"default_value":"","external_name":"depth","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Pixmap","visibility":"Public","body":"X.create_pixmap(@dpy, d, width, height, depth)"}},{"id":"create_pixmap_cursor(source:X11::C::Pixmap,mask:X11::C::Pixmap,foreground_color:Color,background_color:Color,x:UInt32,y:UInt32):X11::C::Cursor-instance-method","html_id":"create_pixmap_cursor(source:X11::C::Pixmap,mask:X11::C::Pixmap,foreground_color:Color,background_color:Color,x:UInt32,y:UInt32):X11::C::Cursor-instance-method","name":"create_pixmap_cursor","doc":"Creates a cursor.\n\n###Arguments\n- **source** Specifies the shape of the source cursor.\n- **mask** Specifies the cursor's source bits to be displayed or **None**.\n- **foreground_color** Specifies the RGB values for the foreground of the source.\n- **background_color** Specifies the RGB values for the background of the source.\n- **x**, **y** Specify the x and y coordinates, which indicate the hotspot relative to the source's origin.\n\n###Description\nThe `create_pixmap_cursor` function creates a cursor and returns the cursor ID associated with it.\nThe foreground and background RGB values must be specified using *foreground_color* and *background_color*,\neven if the X server only has a *StaticGray* or *GrayScale* screen.\nThe foreground color is used for the pixels set to 1 in the source,\nand the background color is used for the pixels set to 0. Both source and mask,\nif specified, must have depth one (or a **BadMatch** error results) but can have any root.\nThe mask argument defines the shape of the cursor. The pixels set to 1 in\nthe mask define which source pixels are displayed, and the pixels set to 0\ndefine which pixels are ignored. If no mask is given, all pixels of the\nsource are displayed. The mask, if present, must be the same size as the\npixmap defined by the source argument, or a **BadMatch** error results.\nThe hotspot must be a point within the source, or a **BadMatch** error results.\n\nThe components of the cursor can be transformed arbitrarily to meet display limitations.\nThe pixmaps can be freed immediately if no further explicit references to\nthem are to be made. Subsequent drawing in the source or mask pixmap has\nan undefined effect on the cursor. The X server might or might not make a copy of the pixmap.\n\n`create_pixmap_cursor` can generate **BadAlloc** and **BadPixmap** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadPixmap** A value for a *Pixmap* argument does not name a defined *Pixmap*.\n\n###See also\n`create_font_cursor`, `create_glyph_cursor`, `define_cursor`, `load_font`, `recolor_cursor`.","summary":"<p>Creates a cursor.</p>","abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"X11::C::Pixmap"},{"name":"mask","doc":null,"default_value":"","external_name":"mask","restriction":"X11::C::Pixmap"},{"name":"foreground_color","doc":null,"default_value":"","external_name":"foreground_color","restriction":"Color"},{"name":"background_color","doc":null,"default_value":"","external_name":"background_color","restriction":"Color"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"UInt32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"UInt32"}],"args_string":"(source : X11::C::Pixmap, mask : X11::C::Pixmap, foreground_color : Color, background_color : Color, x : UInt32, y : UInt32) : X11::C::Cursor","args_html":"(source : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>, mask : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>, foreground_color : <a href=\"../X11/Color.html\">Color</a>, background_color : <a href=\"../X11/Color.html\">Color</a>, x : UInt32, y : UInt32) : <a href=\"../X11/C/Cursor.html\">X11::C::Cursor</a>","location":{"filename":"src/x11/display.cr","line_number":605,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L605"},"def":{"name":"create_pixmap_cursor","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"X11::C::Pixmap"},{"name":"mask","doc":null,"default_value":"","external_name":"mask","restriction":"X11::C::Pixmap"},{"name":"foreground_color","doc":null,"default_value":"","external_name":"foreground_color","restriction":"Color"},{"name":"background_color","doc":null,"default_value":"","external_name":"background_color","restriction":"Color"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"UInt32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Cursor","visibility":"Public","body":"X.create_pixmap_cursor(@dpy, source, mask, foreground_color, background_color, x, y)"}},{"id":"create_pixmap_from_bitmap_data(d:X11::C::Drawable,data:Bytes,width:UInt32,height:UInt32,fg:UInt64,bg:UInt64,depth:UInt64):X11::C::Pixmap-instance-method","html_id":"create_pixmap_from_bitmap_data(d:X11::C::Drawable,data:Bytes,width:UInt32,height:UInt32,fg:UInt64,bg:UInt64,depth:UInt64):X11::C::Pixmap-instance-method","name":"create_pixmap_from_bitmap_data","doc":"Creates a pixmap.\n\n###Arguments\n- **d** Specifies the drawable that indicates the screen.\n- **data** Specifies the data in bitmap format.\n- **width**, **height** Specify the width and height.\n- **fg**, **bg** Specify the foreground and background pixel values to use.\n- **depth** Specifies the depth of the pixmap.\n\n###Description\nThe `create_pixmap_from_bitmap_data` function creates a pixmap of the given\ndepth and then does a bitmap-format `put_image` of the data into it.\nThe depth must be supported by the screen of the specified drawable, or a **BadMatch** error results.\n\n`create_pixmap_from_bitmap_data` can generate **BadAlloc**, **BadDrawable**, **BadGC**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `X11::C::GContext` argument does not name a defined `X11::C::GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and range but fails to match in some other way required by the request.\n\n###See also\n`create_bitmap_from_data`, `create_pixmap`, `put_image`, `read_bitmap_file`, `write_bitmap_file`.","summary":"<p>Creates a pixmap.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"fg","doc":null,"default_value":"","external_name":"fg","restriction":"UInt64"},{"name":"bg","doc":null,"default_value":"","external_name":"bg","restriction":"UInt64"},{"name":"depth","doc":null,"default_value":"","external_name":"depth","restriction":"UInt64"}],"args_string":"(d : X11::C::Drawable, data : Bytes, width : UInt32, height : UInt32, fg : UInt64, bg : UInt64, depth : UInt64) : X11::C::Pixmap","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, data : Bytes, width : UInt32, height : UInt32, fg : UInt64, bg : UInt64, depth : UInt64) : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>","location":{"filename":"src/x11/display.cr","line_number":847,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L847"},"def":{"name":"create_pixmap_from_bitmap_data","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"fg","doc":null,"default_value":"","external_name":"fg","restriction":"UInt64"},{"name":"bg","doc":null,"default_value":"","external_name":"bg","restriction":"UInt64"},{"name":"depth","doc":null,"default_value":"","external_name":"depth","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Pixmap","visibility":"Public","body":"X.create_pixmap_from_bitmap_data(@dpy, d, data.to_unsafe, width, height, fg, bg, depth)"}},{"id":"create_simple_window(parent:X11::C::Window,x:Int32,y:Int32,width:UInt32,height:UInt32,border_width:UInt32,border:UInt64,background:UInt64):X11::C::Window-instance-method","html_id":"create_simple_window(parent:X11::C::Window,x:Int32,y:Int32,width:UInt32,height:UInt32,border_width:UInt32,border:UInt64,background:UInt64):X11::C::Window-instance-method","name":"create_simple_window","doc":"Creates an unmapped subwindow.\n\n###Description\nThe `create_simple_window function creates an unmapped **InputOutput** subwindow\nfor a specified parent window, returns the window ID of the created window,\nand causes the X server to generate a **CreateNotify** event.\nThe created window is placed on top in the stacking order with respect to siblings.\nAny part of the window that extends outside its parent window is clipped.\nThe `border_width` for an **InputOnly** window must be zero, or a **BadMatch** error results.\n`create_simple_window` inherits its depth, class, and visual from its parent.\nAll other window attributes, except background and border, have their default values.\n\n`create_simple_window` can generate **BadAlloc**, **BadMatch**, **BadValue**, and **BadWindow** errors.\n\nFor more information see: `create_window`.","summary":"<p>Creates an unmapped subwindow.</p>","abstract":false,"args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"border_width","doc":null,"default_value":"","external_name":"border_width","restriction":"UInt32"},{"name":"border","doc":null,"default_value":"","external_name":"border","restriction":"UInt64"},{"name":"background","doc":null,"default_value":"","external_name":"background","restriction":"UInt64"}],"args_string":"(parent : X11::C::Window, x : Int32, y : Int32, width : UInt32, height : UInt32, border_width : UInt32, border : UInt64, background : UInt64) : X11::C::Window","args_html":"(parent : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, x : Int32, y : Int32, width : UInt32, height : UInt32, border_width : UInt32, border : UInt64, background : UInt64) : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/display.cr","line_number":866,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L866"},"def":{"name":"create_simple_window","args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"border_width","doc":null,"default_value":"","external_name":"border_width","restriction":"UInt32"},{"name":"border","doc":null,"default_value":"","external_name":"border","restriction":"UInt64"},{"name":"background","doc":null,"default_value":"","external_name":"background","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"X.create_simple_window(@dpy, parent, x, y, width, height, border_width, border, background)"}},{"id":"create_window(parent:X11::C::Window,x:Int32,y:Int32,width:UInt32,height:UInt32,border_width:UInt32,depth:Int32,c_class:UInt32,visual:Visual,valuemask:UInt64,attributes:SetWindowAttributes):X11::C::Window-instance-method","html_id":"create_window(parent:X11::C::Window,x:Int32,y:Int32,width:UInt32,height:UInt32,border_width:UInt32,depth:Int32,c_class:UInt32,visual:Visual,valuemask:UInt64,attributes:SetWindowAttributes):X11::C::Window-instance-method","name":"create_window","doc":"Creates a window.\n\n###Arguments\n- **attributes** Specifies the structure from which the values (as specified by the value mask) are to be taken. The value mask should have the appropriate bits set to indicate which attributes have been set in the structure.\n- **background** Specifies the background pixel value of the window.\n- **border** Specifies the border pixel value of the window.\n- **border_width** Specifies the width of the created window's border in pixels.\n- **class** Specifies the created window's class. You can pass `InputOutput`,\n`InputOnly`, or **CopyFromParent**. A class of **CopyFromParent** means the class is taken from the parent.\n- **depth** Specifies the window's depth. A depth of **CopyFromParent** means the depth is taken from the parent.\n- **parent** Specifies the parent window.\n- **valuemask** Specifies which window attributes are defined in the attributes argument.\nThis mask is the bitwise inclusive OR of the valid attribute mask bits. If valuemask is zero, the attributes are ignored and are not referenced.\n- **visual**Specifies the visual type. A visual of **CopyFromParent** means the visual type is taken from the parent.\n- **width**, **height** Specify the width and height, which are the created window's inside dimensions and do not include the created window's borders\n- **x**, **y** Specify the x and y coordinates, which are the top-left outside corner of the window's borders and are relative to the inside of the parent window's borders.\n\n###Description\nThe `create_window` function creates an unmapped subwindow for a specified parent window,\nreturns the window ID of the created window, and causes the X server to generate a `CreateNotify` event.\nThe created window is placed on top in the stacking order with respect to siblings.\n\nThe coordinate system has the X axis horizontal and the Y axis vertical with the origin [0, 0] at the upper-left corner.\nCoordinates are integral, in terms of pixels, and coincide with pixel centers.\nEach window and pixmap has its own coordinate system. For a window, the origin is inside the border at the inside, upper-left corner.\n\nThe border_width for an **InputOnly** window must be zero, or a **BadMatch** error results.\nFor class **InputOutput**, the visual type and depth must be a combination supported for the screen,\nor a BadMatch error results. The depth need not be the same as the parent,\nbut the parent must not be a window of class **InputOnly**, or a **BadMatch** error results.\nFor an **InputOnly** window, the depth must be zero, and the visual must be\none supported by the screen. If either condition is not met, a **BadMatch** error results.\nThe parent window, however, may have any depth and class. If you specify any invalid window attribute for a window, a **BadMatch** error results.\n\nThe created window is not yet displayed (mapped) on the user's display.\nTo display the window, call `map_window`. The new window initially uses\nthe same cursor as its parent. A new cursor can be defined for the new window\nby calling `define_cursor`. The window will not be visible on the screen\nunless it and all of its ancestors are mapped and it is not obscured by any of its ancestors.\n\n`create_window can generate **BadAlloc**, **BadColor**, **BadCursor**, **BadMatch**, **BadPixmap**, **BadValue**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested resource or server memory.\n- **BadColor** A value for a `Colormap` argument does not name a defined `Colormap`.\n- **BadCursor** A value for a `Cursor` argument does not name a defined `Cursor`.\n- **BadMatch** The values do not exist for an **InputOnly** window.\n- **BadMatch** Some argument or pair of arguments has the correct type and range but fails to match in some other way required by the request.\n- **BadPixmap** A value for a `Pixmap` argument does not name a defined `Pixmap`.\n- **BadValue** Some numeric value falls outside the range of values accepted by the request.\nUnless a specific range is specified for an argument, the full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a `Window` argument does not name a defined `Window`.\n\n###See also\n`change_window_attributes`, `configure_window`, `define_cursor`,\n`destroy_window`, `map_window`, `raise_window`, `unmap_window`.","summary":"<p>Creates a window.</p>","abstract":false,"args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"border_width","doc":null,"default_value":"","external_name":"border_width","restriction":"UInt32"},{"name":"depth","doc":null,"default_value":"","external_name":"depth","restriction":"Int32"},{"name":"c_class","doc":null,"default_value":"","external_name":"c_class","restriction":"UInt32"},{"name":"visual","doc":null,"default_value":"","external_name":"visual","restriction":"Visual"},{"name":"valuemask","doc":null,"default_value":"","external_name":"valuemask","restriction":"UInt64"},{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"SetWindowAttributes"}],"args_string":"(parent : X11::C::Window, x : Int32, y : Int32, width : UInt32, height : UInt32, border_width : UInt32, depth : Int32, c_class : UInt32, visual : Visual, valuemask : UInt64, attributes : SetWindowAttributes) : X11::C::Window","args_html":"(parent : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, x : Int32, y : Int32, width : UInt32, height : UInt32, border_width : UInt32, depth : Int32, c_class : UInt32, visual : <a href=\"../X11/Visual.html\">Visual</a>, valuemask : UInt64, attributes : <a href=\"../X11/SetWindowAttributes.html\">SetWindowAttributes</a>) : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/display.cr","line_number":949,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L949"},"def":{"name":"create_window","args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"border_width","doc":null,"default_value":"","external_name":"border_width","restriction":"UInt32"},{"name":"depth","doc":null,"default_value":"","external_name":"depth","restriction":"Int32"},{"name":"c_class","doc":null,"default_value":"","external_name":"c_class","restriction":"UInt32"},{"name":"visual","doc":null,"default_value":"","external_name":"visual","restriction":"Visual"},{"name":"valuemask","doc":null,"default_value":"","external_name":"valuemask","restriction":"UInt64"},{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"SetWindowAttributes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"X.create_window(@dpy, parent, x, y, width, height, border_width, depth, c_class, visual.to_unsafe, valuemask, attributes.to_unsafe)"}},{"id":"default(program:String,option:String):String-instance-method","html_id":"default(program:String,option:String):String-instance-method","name":"default","doc":"Returns the value of the resource *prog.option*\n\n###Arguments\n- **display** Specifies the connection to the X server.\n- **program** Specifies the program name for the Xlib defaults (usually argv[0] of the main program).\n- **option** Specifies the option name.\n\n###Description\nThe `default` function returns the value of the resource *prog.option*,\nwhere *prog* is the program argument with the directory prefix removed and option must be a single component.\nNote that multilevel resources cannot be used with `default`.\nThe class *\"Program.Name\"* is always used for the resource lookup.\nIf the specified option name does not exist for this program, `default` returns empty `String`.\n\nIf a database has been set with `X.rm_set_database`, that database is used for the lookup.\nOtherwise, a database is created and is set in the display (as if by calling `X.rm_set_database`).\nThe database is created in the current locale. To create a database, `default` uses resources from the `RESOURCE_MANAGER`\nproperty on the root window of screen zero. If no such property exists,\na resource file in the user's home directory is used. On a `POSIX`-conformant system,\nthis file is `\"$HOME/.Xdefaults\"`. After loading these defaults, `default` merges additional\ndefaults specified by the `XENVIRONMENT` environment variable. If `XENVIRONMENT` is defined,\nit contains a full path name for the additional resource file. If `XENVIRONMENT` is not defined,\n`default` looks for `\"$HOME/.Xdefaults-name\"`, where name specifies the name of the machine on which the application is running.","summary":"<p>Returns the value of the resource <em>prog.option</em></p>","abstract":false,"args":[{"name":"program","doc":null,"default_value":"","external_name":"program","restriction":"String"},{"name":"option","doc":null,"default_value":"","external_name":"option","restriction":"String"}],"args_string":"(program : String, option : String) : String","args_html":"(program : String, option : String) : String","location":{"filename":"src/x11/display.cr","line_number":397,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L397"},"def":{"name":"default","args":[{"name":"program","doc":null,"default_value":"","external_name":"program","restriction":"String"},{"name":"option","doc":null,"default_value":"","external_name":"option","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"pstr = X.get_default(@dpy, program, option)\nif pstr.null?\n  return \"\"\nend\nstr = String.new(pstr)\nX.free(pstr)\nstr\n"}},{"id":"default_colormap(screen_number:Int32):X11::C::Colormap-instance-method","html_id":"default_colormap(screen_number:Int32):X11::C::Colormap-instance-method","name":"default_colormap","doc":"Returns the default colormap ID for allocation on the specified screen.\nMost routine allocations of color should be made out of this colormap.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.","summary":"<p>Returns the default colormap ID for allocation on the specified screen.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : X11::C::Colormap","args_html":"(screen_number : Int32) : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>","location":{"filename":"src/x11/display.cr","line_number":1449,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1449"},"def":{"name":"default_colormap","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Colormap","visibility":"Public","body":"X.default_colormap(@dpy, screen_number)"}},{"id":"default_depth(screen_number:Int32):Int32-instance-method","html_id":"default_depth(screen_number:Int32):Int32-instance-method","name":"default_depth","doc":"Returns the depth (number of planes) of the default root window for the specified screen. Other depths may also be supported on this screen.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.","summary":"<p>Returns the depth (number of planes) of the default root window for the specified screen.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : Int32","args_html":"(screen_number : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":2952,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2952"},"def":{"name":"default_depth","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.default_depth(@dpy, screen_number)"}},{"id":"default_gc(screen_number:Int32):X11::C::X::GC-instance-method","html_id":"default_gc(screen_number:Int32):X11::C::X::GC-instance-method","name":"default_gc","doc":"Returns the default graphics context for the root window of the specified screen.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.\n\n###Description\nThis GC is created for the convenience of simple applications and contains\nthe default GC components with the foreground and background pixel values initialized to the black and white pixels for the screen, respectively.","summary":"<p>Returns the default graphics context for the root window of the specified screen.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : X11::C::X::GC","args_html":"(screen_number : Int32) : X11::C::X::GC","location":{"filename":"src/x11/display.cr","line_number":1388,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1388"},"def":{"name":"default_gc","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::GC","visibility":"Public","body":"X.default_gc(@dpy, screen_number)"}},{"id":"default_root_window:X11::C::Window-instance-method","html_id":"default_root_window:X11::C::Window-instance-method","name":"default_root_window","doc":"Returns the root window of the default screen.","summary":"<p>Returns the root window of the default screen.</p>","abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/display.cr","line_number":1368,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1368"},"def":{"name":"default_root_window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"X.default_root_window(@dpy)"}},{"id":"default_screen:Screen-instance-method","html_id":"default_screen:Screen-instance-method","name":"default_screen","doc":"Returns default screen.","summary":"<p>Returns default screen.</p>","abstract":false,"args":[],"args_string":" : Screen","args_html":" : <a href=\"../X11/Screen.html\">Screen</a>","location":{"filename":"src/x11/display.cr","line_number":1462,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1462"},"def":{"name":"default_screen","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Screen","visibility":"Public","body":"Screen.new(X.default_screen_of_display(@dpy))"}},{"id":"default_screen_number:Int32-instance-method","html_id":"default_screen_number:Int32-instance-method","name":"default_screen_number","doc":"Returns the default screen number.","summary":"<p>Returns the default screen number.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":2957,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2957"},"def":{"name":"default_screen_number","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.default_screen(@dpy)"}},{"id":"default_visual(screen_number:Int32):Visual-instance-method","html_id":"default_visual(screen_number:Int32):Visual-instance-method","name":"default_visual","doc":"Returns the default visual type for the specified screen.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.","summary":"<p>Returns the default visual type for the specified screen.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : Visual","args_html":"(screen_number : Int32) : <a href=\"../X11/Visual.html\">Visual</a>","location":{"filename":"src/x11/display.cr","line_number":1376,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1376"},"def":{"name":"default_visual","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Visual","visibility":"Public","body":"Visual.new(X.default_visual(@dpy, screen_number))"}},{"id":"define_cursor(w:X11::C::Window,cursor:X11::C::Cursor):Int32-instance-method","html_id":"define_cursor(w:X11::C::Window,cursor:X11::C::Cursor):Int32-instance-method","name":"define_cursor","doc":"Defines a cursor.\n\n###Arguments\n- **w** Specifies the window.\n- **cursor** Specifies the cursor that is to be displayed or **None**.\n\n###Description\nIf a cursor is set, it will be used when the pointer is in the window.\nIf the cursor is **None**, it is equivalent to `undefine_cursor`.\n\n`define_cursor` can generate **BadCursor** and **BadWindow** errors.\n\n###Diagnostics\n- **BadCursor** A value for a *Cursor* argument does not name a defined *Cursor*.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`create_font_cursor`, `recolor_cursor`, `undefine_cursor`.","summary":"<p>Defines a cursor.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"}],"args_string":"(w : X11::C::Window, cursor : X11::C::Cursor) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, cursor : <a href=\"../X11/C/Cursor.html\">X11::C::Cursor</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":2979,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L2979"},"def":{"name":"define_cursor","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.define_cursor(@dpy, w, cursor)"}},{"id":"delete_property(w:X11::C::Window,property:Atom|X11::C::Atom):Int32-instance-method","html_id":"delete_property(w:X11::C::Window,property:Atom|X11::C::Atom):Int32-instance-method","name":"delete_property","doc":"Deletes the specified property.\n\n###Arguments\n- **w** Specifies the window whose property you want to delete.\n- **property** Specifies the property name.\n\n###Description\nThe `delete_property` function deletes the specified property only if the\nproperty was defined on the specified window and causes the X server to\ngenerate a `PropertyNotify` event on the window unless the property does not exist.\n\n`delete_property` can generate **BadAtom** and **BadWindow** errors.\n\n###Diagnostics\n- **BadAtom** A value for an Atom argument does not name a defined Atom.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`change_property`, `window_property`, `properties`, `rotate_window_properties`.","summary":"<p>Deletes the specified property.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"property","doc":null,"default_value":"","external_name":"property","restriction":"Atom | X11::C::Atom"}],"args_string":"(w : X11::C::Window, property : Atom | X11::C::Atom) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, property : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":3002,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3002"},"def":{"name":"delete_property","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"property","doc":null,"default_value":"","external_name":"property","restriction":"Atom | X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.delete_property(@dpy, w, property.to_u64)"}},{"id":"depths(screen_number:Int32):Array(Int32)-instance-method","html_id":"depths(screen_number:Int32):Array(Int32)-instance-method","name":"depths","doc":"Returns the array of depths that are available on the specified screen.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.\n\n###Description\nThe `depths` function returns the array of depths that are available on the specified screen.\nIf the specified screen_number is valid and sufficient memory for the array can be allocated,\notherwise it returns an empty array.","summary":"<p>Returns the array of depths that are available on the specified screen.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : Array(Int32)","args_html":"(screen_number : Int32) : Array(Int32)","location":{"filename":"src/x11/display.cr","line_number":1492,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1492"},"def":{"name":"depths","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"pvalues = X.list_depths(@dpy, screen_number, out count)\nif count <= 0\n  return [] of Int32\nend\nvalues = Array(Int32).new\n(0...count).each do |i|\n  values << pvalues[i]\nend\nX.free(pvalues.as(PChar))\nvalues\n"}},{"id":"destroy_subwindows(w:X11::C::Window):Int32-instance-method","html_id":"destroy_subwindows(w:X11::C::Window):Int32-instance-method","name":"destroy_subwindows","doc":"Destroys all inferior windows of the specified window, in bottom-to-top stacking order.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `destroy_subwindows` function destroys all inferior windows of the\nspecified window, in bottom-to-top stacking order. It causes the X server\nto generate a `DestroyNotify` event for each window. If any mapped subwindows\nwere actually destroyed, `destroy_subwindows` causes the X server to generate\n`Expose` events on the specified window. This is much more efficient than\ndeleting many windows one at a time because much of the work need be\nperformed only once for all of the windows, rather than for each window.\nThe subwindows should never be referenced again.\n\n`destroy_subwindows` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `map_window`,  `raise_window`, `unmap_window`.","summary":"<p>Destroys all inferior windows of the specified window, in bottom-to-top stacking order.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":3058,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3058"},"def":{"name":"destroy_subwindows","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.destroy_subwindows(@dpy, w)"}},{"id":"destroy_window(w:X11::C::Window):Int32-instance-method","html_id":"destroy_window(w:X11::C::Window):Int32-instance-method","name":"destroy_window","doc":"Destroys the specified window as well as all of its subwindows.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `destroy_window` function destroys the specified window as well as all\nof its subwindows and causes the X server to generate a `DestroyNotify` event\nfor each window. The window should never be referenced again. If the window\nspecified by the w argument is mapped, it is unmapped automatically. The\nordering of the `DestroyNotify` events is such that for any given window\nbeing destroyed, `DestroyNotify` is generated on any inferiors of the window\nbefore being generated on the window itself. The ordering among siblings\nand across subhierarchies is not otherwise constrained. If the window you\nspecified is a root window, no windows are destroyed. Destroying a mapped\nwindow will generate `Expose` events on other windows that were obscured by the window being destroyed.\n\n`destroy_window` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`, `destroy_subwindows`,\n`map_window`, `raise_window`, `unmap_window`.","summary":"<p>Destroys the specified window as well as all of its subwindows.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":3031,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3031"},"def":{"name":"destroy_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.destroy_window(@dpy, w)"}},{"id":"disable_access_control:Int32-instance-method","html_id":"disable_access_control:Int32-instance-method","name":"disable_access_control","doc":"Disables the use of the access control list at each connection setup.\n\n###Description\nThe `disable_access_control` function disables the use of the access control list at each connection setup.\n\n`disable_access_control` can generate a **BadAccess** error.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n\n###See also\n`add_host`, `add_hosts`, `enable_access_control`, `X11::free`, `hosts`,\n`remove_host`, `remove_hosts`, `set_access_control`.","summary":"<p>Disables the use of the access control list at each connection setup.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":3076,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3076"},"def":{"name":"disable_access_control","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.disable_access_control(@dpy)"}},{"id":"display_string:String-instance-method","html_id":"display_string:String-instance-method","name":"display_string","doc":"Returns the string that was passed to `new` when the current display was opened.\nOn POSIX-conformant systems, if the passed string was **nil**,\nthese return the value of the DISPLAY environment variable when the current display was opened.\nThese are useful to applications that invoke the **fork** system call\nand want to open a new connection to the same display from the child process as well as for printing error messages.","summary":"<p>Returns the string that was passed to <code><a href=\"../X11/Display.html#new(name:String?=nil)-class-method\">.new</a></code> when the current display was opened.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/x11/display.cr","line_number":1438,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1438"},"def":{"name":"display_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"pstr = X.display_string(@dpy)\nif pstr.null?\n  return \"\"\nend\nString.new(pstr)\n"}},{"id":"dpy:X::PDisplay-instance-method","html_id":"dpy:X::PDisplay-instance-method","name":"dpy","doc":"Pointer to the underlieing XDisplay object.","summary":"<p>Pointer to the underlieing XDisplay object.</p>","abstract":false,"args":[],"args_string":" : X::PDisplay","args_html":" : X::PDisplay","location":{"filename":"src/x11/display.cr","line_number":13,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L13"},"def":{"name":"dpy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X::PDisplay","visibility":"Public","body":"@dpy"}},{"id":"draw_arc(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,width:UInt32,height:UInt32,angle1:Int32,angle2:Int32):Int32-instance-method","html_id":"draw_arc(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,width:UInt32,height:UInt32,angle1:Int32,angle2:Int32):Int32-instance-method","name":"draw_arc","doc":"Draws a single circular or elliptical arc.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **x**, **y** Specify the x and y coordinates, which are relative to the\norigin of the drawable and specify the upper-left corner of the bounding rectangle.\n- **width**, **height** Specify the width and height, which are the major and minor axes of the arc.\n- **angle1** Specifies the start of the arc relative to the three-o'clock position from the center, in units of degrees * 64.\n- **angle2** Specifies the path and extent of the arc relative to the start of the arc, in units of degrees * 64.\n\n###Description\n`draw_arc` draws a single circular or elliptical arc. The arc is specified\nby a rectangle and two angles. The center of the circle or ellipse is the\ncenter of the rectangle, and the major and minor axes are specified by the\nwidth and height. Positive angles indicate counterclockwise motion, and negative\nangles indicate clockwise motion. If the magnitude of angle2 is greater\nthan 360 degrees, `draw_arc` truncates it to 360 degrees.\n\nFor an arc specified as *[ x, y, width, height, angle1, angle2 ]*, the origin\nof the major and minor axes is at *[ x + width / 2 , y + height / 2 ]*,\nand the infinitely thin path describing the entire circle or ellipse intersects\nthe horizontal axis at *[ x, y + height / 2 ]* and *[ x + width , y + height / 2 ]*\nand intersects the vertical axis at *[ x + width / 2, y ]* and *[ x + width / 2, y + height ]*.\nThese coordinates can be fractional and so are not truncated to discrete coordinates.\nThe path should be defined by the ideal mathematical path. For a wide line\nwith line-width lw, the bounding outlines for filling are given by the two\ninfinitely thin paths consisting of all points whose perpendicular distance\nfrom the path of the circle/ellipse is equal to lw/2 (which may be a fractional value).\nThe cap-style and join-style are applied the same as for a line corresponding to the tangent of the circle/ellipse at the endpoint.\n\nFor an arc specified as *[ x, y, width, height, angle1, angle2 ]*, the\nangles must be specified in the effectively skewed coordinate system of the\nellipse (for a circle, the angles and coordinate systems are identical).\nThe relationship between these angles and angles expressed in the normal\ncoordinate system of the screen (as measured with a protractor) is as follows:\n```\nskewed-angle = atan ( tan ( normal-angle ) * width / height ) + adjust\n```\nThe skewed-angle and normal-angle are expressed in radians (rather than\nin degrees scaled by 64) in the range *[ 0, 2 pi ]* and where atan returns\na value in the range *[ -pi / 2 , pi / 2 ]* and adjust is:\n-  0 for normal-angle in the range *[ 0, pi / 2 ]*\n- pi for normal-angle in the range *[ pi / 2 , 3 pi / 2 ]*\n- 2 pi for normal-angle in the range *[ 3 pi / 2 , 2 pi ]*\nFor any given arc, `draw_arc` does not draw a pixel more than once. If\ntwo arcs join correctly and if the line-width is greater than zero and the\narcs intersect, `draw_arc` does not draw a pixel more than once. Otherwise,\nthe intersecting pixels of intersecting arcs are drawn multiple times.\nSpecifying an arc with one endpoint and a clockwise extent draws the same\npixels as specifying the other endpoint and an equivalent counterclockwise extent, except as it affects joins.\n\nIf the last point in one arc coincides with the first point in the following arc,\nthe two arcs will join correctly. If the first point in the first arc coincides\nwith the last point in the last arc, the two arcs will join correctly. By specifying\none axis to be zero, a horizontal or vertical line can be drawn. Angles are computed\nbased solely on the coordinate system and ignore the aspect ratio.\n\nThis function uses these GC components: function, plane-mask, line-width,\nline-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,\nclip-y-origin, and clip-mask. It also uses these GC mode-dependent components:\nforeground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list.\n\n`draw_arc` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_arc`, `draw_rectangle`, `draw_point`.","summary":"<p>Draws a single circular or elliptical arc.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Int32"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Int32"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x : Int32, y : Int32, width : UInt32, height : UInt32, angle1 : Int32, angle2 : Int32) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32, width : UInt32, height : UInt32, angle1 : Int32, angle2 : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3224,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3224"},"def":{"name":"draw_arc","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Int32"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_arc(@dpy, d, gc, x, y, width, height, angle1, angle2)"}},{"id":"draw_arcs(d:X11::C::Drawable,gc:X11::C::X::GC,arcs:Array(Arc)):Int32-instance-method","html_id":"draw_arcs(d:X11::C::Drawable,gc:X11::C::X::GC,arcs:Array(Arc)):Int32-instance-method","name":"draw_arcs","doc":"Draws multiple circular or elliptical arcs.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **arcs** Specifies an array of arcs.\n- **narcs** Specifies the number of arcs in the array.\n\n###Description\n`draw_arcs` draws multiple circular or elliptical arcs. Each arc is specified\nby a rectangle and two angles. The center of the circle or ellipse is the\ncenter of the rectangle, and the major and minor axes are specified by the\nwidth and height. Positive angles indicate counterclockwise motion, and negative\nangles indicate clockwise motion. If the magnitude of angle2 is greater than 360 degrees,\n`draw_arcs` truncates it to 360 degrees.\n\nFor an arc specified as *[ x, y, width, height, angle1, angle2 ]*, the origin\nof the major and minor axes is at *[ x + width / 2 , y + height / 2 ]*,\nand the infinitely thin path describing the entire circle or ellipse intersects\nthe horizontal axis at *[ x, y + height / 2 ]* and *[ x + width , y + height / 2 ]*\nand intersects the vertical axis at *[ x + width / 2, y ]* and *[ x + width / 2, y + height ]*.\nThese coordinates can be fractional and so are not truncated to discrete coordinates.\nThe path should be defined by the ideal mathematical path. For a wide line\nwith line-width lw, the bounding outlines for filling are given by the two\ninfinitely thin paths consisting of all points whose perpendicular distance\nfrom the path of the circle/ellipse is equal to lw/2 (which may be a fractional value).\nThe cap-style and join-style are applied the same as for a line\ncorresponding to the tangent of the circle/ellipse at the endpoint.\n\nFor an arc specified as *[ x, y, width, height, angle1, angle2 ]*, the\nangles must be specified in the effectively skewed coordinate system of the\nellipse (for a circle, the angles and coordinate systems are identical).\nThe relationship between these angles and angles expressed in the normal\ncoordinate system of the screen (as measured with a protractor) is as follows:\n```\nskewed-angle = atan ( tan ( normal-angle ) * width / height ) + adjust\n```\nThe skewed-angle and normal-angle are expressed in radians (rather than in\ndegrees scaled by 64) in the range *[ 0, 2 pi ]* and where atan returns a\nvalue in the range *[ -pi / 2 , pi / 2 ]* and adjust is:\n- 0 for normal-angle in the range *[ 0, pi / 2 ]*\n- pi for normal-angle in the range *[ pi / 2 , 3 pi / 2 ]*\n- 2 pi for normal-angle in the range *[ 3 pi / 2 , 2 pi ]*\n\nFor any given arc, `draw_arcs` does not draw a pixel more than once.\nIf two arcs join correctly and if the line-width is greater than zero and\nthe arcs intersect, `draw_arc` does not draw a pixel more than once.\nOtherwise, the intersecting pixels of intersecting arcs are drawn multiple\ntimes. Specifying an arc with one endpoint and a clockwise extent draws the\nsame pixels as specifying the other endpoint and an equivalent\ncounterclockwise extent, except as it affects joins.\n\nIf the last point in one arc coincides with the first point in the\nfollowing arc, the two arcs will join correctly. If the first point in the\nfirst arc coincides with the last point in the last arc, the two arcs will\njoin correctly. By specifying one axis to be zero, a horizontal or vertical\nline can be drawn. Angles are computed based solely on\nthe coordinate system and ignore the aspect ratio.\n\nThis function uses these GC components: function, plane-mask, line-width,\nline-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,\nclip-y-origin, and clip-mask. It also uses these GC mode-dependent components:\nforeground, background, tile, stipple, tile-stipple-x-origin,\ntile-stipple-y-origin, dash-offset, and dash-list.\n\n`draw_arcs` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_arc`, `draw_rectangle`, `draw_point`.","summary":"<p>Draws multiple circular or elliptical arcs.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"arcs","doc":null,"default_value":"","external_name":"arcs","restriction":"Array(Arc)"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, arcs : Array(Arc)) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, arcs : Array(<a href=\"../X11/Arc.html\">Arc</a>)) : Int32","location":{"filename":"src/x11/display.cr","line_number":3304,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3304"},"def":{"name":"draw_arcs","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"arcs","doc":null,"default_value":"","external_name":"arcs","restriction":"Array(Arc)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_arcs(@dpy, d, gc, arcs.to_unsafe, arcs.size)"}},{"id":"draw_image_string(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,string:String):Int32-instance-method","html_id":"draw_image_string(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,string:String):Int32-instance-method","name":"draw_image_string","doc":"Paints text with the foreground pixel.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **x**, **y** Specify the x and y coordinates, which are relative to the\norigin of the specified drawable and define the origin of the first character.\n- **string** Specifies the character string.\n- **length** Specifies the number of characters in the string argument.\n\n###Description\nThis function uses both the foreground and background pixels of the GC in the destination.\nThe effect is first to fill a destination rectangle with the background pixel\ndefined in the GC and then to paint the text with the foreground pixel.\nThe upper-left corner of the filled rectangle is at:\n```\n[x, y - font-ascent]\n```\nThe width is:\n```\noverall-width\n```\nThe height is:\n```\nfont-ascent + font-descent\n```\nThe overall-width, font-ascent, and font-descent are as would be returned\nby `query_text_extents` using gc and string. The function and fill-style\ndefined in the GC are ignored for these functions. The effective function\nis **GXcopy**, and the effective fill-style is **FillSolid**.\n\nFor fonts defined with 2-byte matrix indexing and used with `draw_image_string`,\neach byte is used as a byte2 with a byte1 of zero.\n\nThe function uses these GC components: plane-mask, foreground, background,\nfont, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.\n\n`draw_image_string` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_image_string_16`, `draw_string`, `draw_text`, `load_font`, `text_extents`.","summary":"<p>Paints text with the foreground pixel.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x : Int32, y : Int32, string : String) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32, string : String) : Int32","location":{"filename":"src/x11/display.cr","line_number":3356,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3356"},"def":{"name":"draw_image_string","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_image_string(@dpy, d, gc, x, y, string.to_unsafe, string.size)"}},{"id":"draw_image_string_16(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,string:Array(X11::C::X::PChar2b)):Int32-instance-method","html_id":"draw_image_string_16(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,string:Array(X11::C::X::PChar2b)):Int32-instance-method","name":"draw_image_string_16","doc":"Similar to `draw_image_string` except that it uses 2-byte or 16-bit characters.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **x**, **y** Specify the x and y coordinates, which are relative to the\norigin of the specified drawable and define the origin of the first character.\n- **string** Specifies the character string.\n\n###Description\nThe `draw_image_string_16` function is similar to `draw_image_string` except\nthat it uses 2-byte or 16-bit characters. Both functions also use both the\nforeground and background pixels of the GC in the destination.\n\nThe effect is first to fill a destination rectangle with the background pixel\ndefined in the GC and then to paint the text with the foreground pixel.\nThe upper-left corner of the filled rectangle is at:\n```\n[x, y - font-ascent]\n```\nThe width is:\n```\noverall-width\n```\nThe height is:\n```\nfont-ascent + font-descent\n```\nThe overall-width, font-ascent, and font-descent are as would be returned\nby `query_text_extents` using gc and string. The function and fill-style\ndefined in the GC are ignored for these functions. The effective function\nis **GXcopy**, and the effective fill-style is **FillSolid**.\n\nBoth functions use these GC components: plane-mask, foreground, background,\nfont, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.\n\n`draw_image_string_16` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_image_string`, `draw_string`, `draw_text`, `load_font`, `text_extents`.","summary":"<p>Similar to <code><a href=\"../X11/Display.html#draw_image_string(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,string:String):Int32-instance-method\">#draw_image_string</a></code> except that it uses 2-byte or 16-bit characters.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"Array(X11::C::X::PChar2b)"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x : Int32, y : Int32, string : Array(X11::C::X::PChar2b)) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32, string : Array(X11::C::X::PChar2b)) : Int32","location":{"filename":"src/x11/display.cr","line_number":3407,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3407"},"def":{"name":"draw_image_string_16","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"Array(X11::C::X::PChar2b)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_image_string_16(@dpy, d, gc, x, y, string.to_unsafe, string.size)"}},{"id":"draw_line(d:X11::C::Drawable,gc:X11::C::X::GC,x1:Int32,y1:Int32,x2:Int32,y2:Int32):Int32-instance-method","html_id":"draw_line(d:X11::C::Drawable,gc:X11::C::X::GC,x1:Int32,y1:Int32,x2:Int32,y2:Int32):Int32-instance-method","name":"draw_line","doc":"Draws a line between the specified set of points (x1, y1) and (x2, y2).\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **x1**, **y1**, **x2**, **y2** Specify the points (x1, y1) and (x2, y2) to be connected.\n\n###Description\nThe `draw_line` function uses the components of the specified GC to draw a\nline between the specified set of points (x1, y1) and (x2, y2). It does not\nperform joining at coincident endpoints. For any given line, `draw_line`\ndoes not draw a pixel more than once. If lines intersect, the intersecting pixels are drawn multiple times.\n\n`draw_line` use these GC components: function, plane-mask, line-width,\nline-style, cap-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin,\nand clip-mask. `draw_line` also uses these GC mode-dependent components:\nforeground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list.\n\n`draw_line`, can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_arc`, `draw_lines`, `draw_point`, `draw_rectangle`, `draw_segments`.","summary":"<p>Draws a line between the specified set of points (x1, y1) and (x2, y2).</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Int32"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Int32"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Int32"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Int32"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x1 : Int32, y1 : Int32, x2 : Int32, y2 : Int32) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x1 : Int32, y1 : Int32, x2 : Int32, y2 : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3440,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3440"},"def":{"name":"draw_line","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Int32"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Int32"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Int32"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_line(@dpy, d, gc, x1, y1, x2, y2)"}},{"id":"draw_lines(d:X11::C::Drawable,gc:X11::C::X::GC,points:Array(Point),mode:Int32):Int32-instance-method","html_id":"draw_lines(d:X11::C::Drawable,gc:X11::C::X::GC,points:Array(Point),mode:Int32):Int32-instance-method","name":"draw_lines","doc":"Draws lines between each pair of *points* array.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **points** Specifies an array of points.\n- **mode** Specifies the coordinate mode. You can pass **CoordModeOrigin** or **CoordModePrevious**.\n\n###Description\nThe `draw_lines` function uses the components of the specified GC to draw\n*points.size - 1* lines between each pair of points (point[i], point[i+1])\nin the array of `Point` structures. It draws the lines in the order listed in the array.\nThe lines join correctly at all intermediate points, and if the first and\nlast points coincide, the first and last lines also join correctly. For\nany given line, `draw_lines` does not draw a pixel more than once. If thin\n(zero line-width) lines intersect, the intersecting pixels are drawn multiple times.\nIf wide lines intersect, the intersecting pixels are drawn only once, as though\nthe entire **PolyLine** protocol request were a single, filled shape.\n**CoordModeOrigin** treats all coordinates as relative to the origin, and\n**CoordModePrevious** treats all coordinates after the first as relative to the previous point.\n\n`draw_lines` use these GC components: function, plane-mask, line-width,\nline-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,\nclip-y-origin, and clip-mask. `draw_lines` also uses these GC mode-dependent components:\nforeground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list.\n\n`draw_lines`, can generate **BadDrawable**, **BadGC**, **BadMatch** and **BadValue** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n\n###See also\n`draw_arc`, `draw_line`, `draw_point`, `draw_rectangle`, `draw_segments`.","summary":"<p>Draws lines between each pair of <em>points</em> array.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":"Array(Point)"},{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, points : Array(Point), mode : Int32) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, points : Array(<a href=\"../X11/Point.html\">Point</a>), mode : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3485,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3485"},"def":{"name":"draw_lines","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":"Array(Point)"},{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_lines(@dpy, d, gc, point.to_unsafe, points.size, mode)"}},{"id":"draw_point(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32):Int32-instance-method","html_id":"draw_point(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32):Int32-instance-method","name":"draw_point","doc":"Draws a single point into the specified drawable\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **x**, **y** Specify the x and y coordinates where you want the point drawn.\n\n###Description\nThe `draw_point` function uses the foreground pixel and function components\nof the GC to draw a single point into the specified drawable;\n\nThis function uses these GC components: function, plane-mask, foreground,\nsubwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.\n\n`draw_point` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_arc`, `draw_line`, `draw_points`, `draw_rectangle`.","summary":"<p>Draws a single point into the specified drawable</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x : Int32, y : Int32) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3514,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3514"},"def":{"name":"draw_point","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_point(@dpy, d, gc, x, y)"}},{"id":"draw_points(d:X11::Drawable,gc:X11::C::X::GC,points:Array(Point),mode:Int32):Int32-instance-method","html_id":"draw_points(d:X11::Drawable,gc:X11::C::X::GC,points:Array(Point),mode:Int32):Int32-instance-method","name":"draw_points","doc":"Draws multiple points the same way `draw_point` draws one point.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **points** Specifies an array of points.\n- **mode** Specifies the coordinate mode. You can pass **CoordModeOrigin** or **CoordModePrevious**.\n\n###Description\n`draw_points` draws multiple points the same way `draw_point` draws one point.\n**CoordModeOrigin** treats all coordinates as relative to the origin, and\n**CoordModePrevious** treats all coordinates after the first as relative\nto the previous point. `draw_points` draws the points in the order listed in the array.\n\nThis function uses these GC components: function, plane-mask, foreground,\nsubwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.\n`draw_points` can generate **BadDrawable**, **BadGC**, **BadMatch**, and **BadValue** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the full\nrange defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`draw_arc`, `draw_line`, `draw_point`, `draw_rectangle`.","summary":"<p>Draws multiple points the same way <code><a href=\"../X11/Display.html#draw_point(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32):Int32-instance-method\">#draw_point</a></code> draws one point.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":"Array(Point)"},{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"args_string":"(d : X11::Drawable, gc : X11::C::X::GC, points : Array(Point), mode : Int32) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::Drawable</a>, gc : X11::C::X::GC, points : Array(<a href=\"../X11/Point.html\">Point</a>), mode : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3549,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3549"},"def":{"name":"draw_points","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":"Array(Point)"},{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_points(@dpy, d, gc, points.to_unsafe, point.size, mode)"}},{"id":"draw_rectangle(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,width:UInt32,height:UInt32):Int32-instance-method","html_id":"draw_rectangle(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,width:UInt32,height:UInt32):Int32-instance-method","name":"draw_rectangle","doc":"Draws the outlines of the specified rectangle.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **x**, **y** Specify the x and y coordinates, which specify the upper-left corner of the rectangle.\n- **width**, **height** Specify the width and height, which specify the dimensions of the rectangle.\n\n###Description\nThe `draw_rectangle` function draws the outlines of the specified rectangle\nas if a five-point **PolyLine** protocol request were specified for the rectangle:\n```\n[x,y] [x+width,y] [x+width,y+height] [x,y+height] [x,y]\n```\nFor the specified rectangle, this function does not draw a pixel more than once.\n\nThis function uses these GC components: function, plane-mask, line-width,\nline-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,\nclip-y-origin, and clip-mask. It also uses these GC mode-dependent components:\nforeground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list.\n\n`draw_rectangle` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_arc`, `draw_rectangles`, `draw_point`.","summary":"<p>Draws the outlines of the specified rectangle.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x : Int32, y : Int32, width : UInt32, height : UInt32) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32, width : UInt32, height : UInt32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3585,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3585"},"def":{"name":"draw_rectangle","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_rectangle(@dpy, d, gc, x, y, width, height)"}},{"id":"draw_rectangles(d:X11::C::Drawable,gc:X11::C::X::GC,rectangles:Array(Rectangle)):Int32-instance-method","html_id":"draw_rectangles(d:X11::C::Drawable,gc:X11::C::X::GC,rectangles:Array(Rectangle)):Int32-instance-method","name":"draw_rectangles","doc":"Draws the outlines of the specified rectangles.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **rectangles** Specifies an array of rectangles.\n\n###Description\nThe `draw_rectangles` functions draw the outlines of the specified rectangles\nas if a five-point **PolyLine** protocol request were specified for each rectangle:\n```\n[x,y] [x+width,y] [x+width,y+height] [x,y+height] [x,y]\n```\nFor the specified rectangles, this function does not draw a pixel more than once.\n`draw_rectangles` draws the rectangles in the order listed in the array.\nIf rectangles intersect, the intersecting pixels are drawn multiple times.\n\nThis function uses these GC components: function, plane-mask, line-width,\nline-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin,\nclip-y-origin, and clip-mask. It also uses these GC mode-dependent components:\nforeground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list.\n\n`draw_rectangles` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_arc`, `draw_rectangle`, `draw_point`.","summary":"<p>Draws the outlines of the specified rectangles.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"rectangles","doc":null,"default_value":"","external_name":"rectangles","restriction":"Array(Rectangle)"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, rectangles : Array(Rectangle)) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, rectangles : Array(<a href=\"../X11/Rectangle.html\">Rectangle</a>)) : Int32","location":{"filename":"src/x11/display.cr","line_number":3622,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3622"},"def":{"name":"draw_rectangles","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"rectangles","doc":null,"default_value":"","external_name":"rectangles","restriction":"Array(Rectangle)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_rectangles(@dpy, d, gc, rectangles.to_unsafe, rectangles.size)"}},{"id":"draw_segments(d:X11::C::Drawable,gc:X11::C::X::GC,segments:Array(Segment)):Int32-instance-method","html_id":"draw_segments(d:X11::C::Drawable,gc:X11::C::X::GC,segments:Array(Segment)):Int32-instance-method","name":"draw_segments","doc":"Draws multiple, unconnected lines.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **segments** Specifies an array of segments.\n\n###Description\nThe `draw_segments` function draws multiple, unconnected lines. For each\nsegment, `draw_segments` draws a line between (x1, y1) and (x2, y2).\nIt draws the lines in the order listed in the array of `Segment` structures\nand does not perform joining at coincident endpoints. For any given line,\n`draw_segments` does not draw a pixel more than once.\nIf lines intersect, the intersecting pixels are drawn multiple times.\n\n`draw_segments` use these GC components: function, plane-mask, line-width,\nline-style, cap-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin,\nand clip-mask. `draw_segments` also uses these GC mode-dependent components:\nforeground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list.\n\n`draw_segments` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_arc`, `draw_line`, `draw_lines`, `draw_point`, `draw_rectangle`.","summary":"<p>Draws multiple, unconnected lines.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"segments","doc":null,"default_value":"","external_name":"segments","restriction":"Array(Segment)"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, segments : Array(Segment)) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, segments : Array(<a href=\"../X11/Segment.html\">Segment</a>)) : Int32","location":{"filename":"src/x11/display.cr","line_number":3657,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3657"},"def":{"name":"draw_segments","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"segments","doc":null,"default_value":"","external_name":"segments","restriction":"Array(Segment)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_segments(@dpy, d, gc, segments.to_unsafe, segments.size)"}},{"id":"draw_string(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,string:String):Int32-instance-method","html_id":"draw_string(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,string:String):Int32-instance-method","name":"draw_string","doc":"Draws a string.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **x**, **y** Specify the x and y coordinates, which are relative to the\norigin of the specified drawable and define the origin of the first character.\n- **string** Specifies the character string.\n\n###Description\nEach character image, as defined by the font in the GC, is treated as an\nadditional mask for a fill operation on the drawable. The drawable is\nmodified only where the font character has a bit set to 1.\n\nBoth functions use these GC components: function, plane-mask, fill-style,\nfont, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.\nThey also use these GC mode-dependent components: foreground, background,\ntile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin.\n\n`draw_string` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_image_string`, `load_font`, `draw_string_16`, `draw_text`.","summary":"<p>Draws a string.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x : Int32, y : Int32, string : String) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32, string : String) : Int32","location":{"filename":"src/x11/display.cr","line_number":3691,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3691"},"def":{"name":"draw_string","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_string(@dpy, d, gc, x, y, string.to_unsafe, string.size)"}},{"id":"draw_string_16(d:Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,string:Array(X11::C::X::PChar2b)):Int32-instance-method","html_id":"draw_string_16(d:Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,string:Array(X11::C::X::PChar2b)):Int32-instance-method","name":"draw_string_16","doc":"Draws a string.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC. which are relative to the origin of the\nspecified drawable and define the origin of the first character.\n- **x**, **y** Specify the x and y coordinates.\n- **string** Specifies the character string.\n\n###Description\nEach character image, as defined by the font in the GC, is treated as an\nadditional mask for a fill operation on the drawable. The drawable is\nmodified only where the font character has a bit set to 1. For fonts defined\nwith 2-byte matrix indexing and used with `draw_string_16`, each byte\nis used as a byte2 with a byte1 of zero.\n\nBoth functions use these GC components: function, plane-mask, fill-style,\nfont, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.\nThey also use these GC mode-dependent components: foreground, background,\ntile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin.\n\n`draw_string_16` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_image_string`, `draw_string`, `load_font`, `draw_text`.","summary":"<p>Draws a string.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"Array(X11::C::X::PChar2b)"}],"args_string":"(d : Drawable, gc : X11::C::X::GC, x : Int32, y : Int32, string : Array(X11::C::X::PChar2b)) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32, string : Array(X11::C::X::PChar2b)) : Int32","location":{"filename":"src/x11/display.cr","line_number":3727,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3727"},"def":{"name":"draw_string_16","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"Array(X11::C::X::PChar2b)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_string_16(@dpy, d, gc, x, y, string, string.size)"}},{"id":"draw_text(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,items:Array(TextItem)):Int32-instance-method","html_id":"draw_text(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,items:Array(TextItem)):Int32-instance-method","name":"draw_text","doc":"Allows complex spacing and font shifts between counted strings.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **x**, **y** Specify the x and y coordinates, which are relative to the\norigin of the specified drawable and define the origin of the first character.\n- **items** Specifies an array of text items.\n\n###Description\nThe `draw_text` function allows complex spacing and font shifts between counted strings.\n\nEach text item is processed in turn. A font member other than **None** in\nan item causes the font to be stored in the GC and used for subsequent text.\nA text element delta specifies an additional change in the position along\nthe x axis before the string is drawn. The delta is always added to the\ncharacter origin and is not dependent on any characteristics of the font.\nEach character image, as defined by the font in the GC, is treated as an\nadditional mask for a fill operation on the drawable. The drawable is modified\nonly where the font character has a bit set to 1. If a text item generates\na **BadFont** error, the previous text items may have been drawn.\n\nFor fonts defined with linear indexing rather than 2-byte matrix indexing,\neach `X11::C::X::Char2b` structure is interpreted as a 16-bit number with byte1 as the most-significant byte.\n\nThe function uses these GC components: function, plane-mask, fill-style,\nfont, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. It also\nuses these GC mode-dependent components: foreground, background, tile, stipple,\ntile-stipple-x-origin, and tile-stipple-y-origin.\n\n`draw_text` can generate **BadDrawable**, **BadFont**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadFont** A value for a font argument does not name a defined font (or, in some cases, `GContext`).\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_image_string`, `load_font`, `draw_string`, `draw_text_16`.","summary":"<p>Allows complex spacing and font shifts between counted strings.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"items","doc":null,"default_value":"","external_name":"items","restriction":"Array(TextItem)"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x : Int32, y : Int32, items : Array(TextItem)) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32, items : Array(<a href=\"../X11/TextItem.html\">TextItem</a>)) : Int32","location":{"filename":"src/x11/display.cr","line_number":3773,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3773"},"def":{"name":"draw_text","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"items","doc":null,"default_value":"","external_name":"items","restriction":"Array(TextItem)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_text(@dpy, d, gc, x, y, items.to_unsafe, items.size)"}},{"id":"draw_text_16(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,items:Array(TextItem16)):Int32-instance-method","html_id":"draw_text_16(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,items:Array(TextItem16)):Int32-instance-method","name":"draw_text_16","doc":"Similar to `draw_text` except that it uses 2-byte or 16-bit characters.\n\n###Arguments\n- *d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **x**, **y** Specify the x and y coordinates, which are relative to the\norigin of the specified drawable and define the origin of the first character.\n- **items** Specifies an array of text items.\n\n###Description\nThe `draw_text_16` function is similar to `draw_text` except that it uses\n2-byte or 16-bit characters. Both functions allow complex spacing and font\nshifts between counted strings.\n\nEach text item is processed in turn. A font member other than **None** in\nan item causes the font to be stored in the GC and used for subsequent text.\nA text element delta specifies an additional change in the position along\nthe x axis before the string is drawn. The delta is always added to the\ncharacter origin and is not dependent on any characteristics of the font.\nEach character image, as defined by the font in the GC, is treated as an\nadditional mask for a fill operation on the drawable. The drawable is\nmodified only where the font character has a bit set to 1. If a text item\ngenerates a **BadFont** error, the previous text items may have been drawn.\n\nFor fonts defined with linear indexing rather than 2-byte matrix indexing,\neach `X11::C::X::Char2b` structure is interpreted as a 16-bit number with\nbyte1 as the most-significant byte.\n\nThe function uses these GC components: function, plane-mask, fill-style,\nfont, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. It also\nuses these GC mode-dependent components: foreground, background, tile,\nstipple, tile-stipple-x-origin, and tile-stipple-y-origin.\n\n`draw_text_16` can generate **BadDrawable**, **BadFont**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadFont** A value for a font argument does not name a defined font (or, in some cases, `GContext`).\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_text`, `draw_image_string`, `load_font`, `draw_string`.","summary":"<p>Similar to <code><a href=\"../X11/Display.html#draw_text(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,items:Array(TextItem)):Int32-instance-method\">#draw_text</a></code> except that it uses 2-byte or 16-bit characters.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"items","doc":null,"default_value":"","external_name":"items","restriction":"Array(TextItem16)"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x : Int32, y : Int32, items : Array(TextItem16)) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32, items : Array(TextItem16)) : Int32","location":{"filename":"src/x11/display.cr","line_number":3822,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3822"},"def":{"name":"draw_text_16","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"items","doc":null,"default_value":"","external_name":"items","restriction":"Array(TextItem16)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.draw_text_16(@dpy, d, gc, x, y, items.to_unsafe, items.size)"}},{"id":"enable_access_control:Int32-instance-method","html_id":"enable_access_control:Int32-instance-method","name":"enable_access_control","doc":"Enables the use of the access control list at each connection setup.\n\n###Description\nThe `enable_access_control` function enables the use of the access control list at each connection setup.\n\n`enable_access_control` can generate a **BadAccess** error.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n\n###See also\n`add_host`, `add_hosts`, `disable_access_control`, `X11::free`, `hosts`,\n`remove_host`, `remove_hosts`, `set_access_control`.","summary":"<p>Enables the use of the access control list at each connection setup.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":3840,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3840"},"def":{"name":"enable_access_control","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.enable_access_control(@dpy)"}},{"id":"error_database_text(name:String,message:String,default_string:String):String-instance-method","html_id":"error_database_text(name:String,message:String,default_string:String):String-instance-method","name":"error_database_text","doc":"Returns a message from the error message database.\n\n###Arguments\n- **name** Specifies the name of the application.\n- **message** Specifies the type of the error message.\n- **default_string** Specifies the default error message if none is found in the database.\n\n###Description\nThe `error_database_text` function returns a message (or the default message)\nfrom the error message database. Xlib uses this function internally to look\nup its error messages. The text in the default_string argument is assumed\nto be in the encoding of the current locale, and the text stored in the\nbuffer_return argument is in the encoding of the current locale.\n\nThe name argument should generally be the name of your application. The\nmessage argument should indicate which type of error message you want.\nIf the name and message are not in the Host Portable Character Encoding,\nthe result is implementation dependent. Xlib uses three predefined\n +application names+ to report errors. In these names, uppercase and\nlowercase matter.\n\n- **XProtoError** The protocol error number is used as a string for the message argument.\n- **XlibMessage** These are the message strings that are used internally by the library.\n- **XRequest** For a core protocol request, the major request protocol number\nis used for the message argument. For an extension request, the extension name\n(as given by `init_extension`) followed by a period (.) and the minor request\nprotocol number is used for the message argument. If no string is found in\nthe error database, the default_string is returned to the buffer argument.\n\n###See also\n`name`, `error_text`, `new`, `set_error_handler`, `set_io_error_handler`, `synchronize`.","summary":"<p>Returns a message from the error message database.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"default_string","doc":null,"default_value":"","external_name":"default_string","restriction":"String"}],"args_string":"(name : String, message : String, default_string : String) : String","args_html":"(name : String, message : String, default_string : String) : String","location":{"filename":"src/x11/display.cr","line_number":4371,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4371"},"def":{"name":"error_database_text","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"default_string","doc":null,"default_value":"","external_name":"default_string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"buffer = Array(UInt8).new(1024)\nX.get_error_database_text(@dpy, name.to_unsafe, message.to_unsafe, default_string.to_unsafe, buffer.to_unsafe(1024))\nString.new(buffer.to_unsafe)\n"}},{"id":"error_text(code:Int32):String-instance-method","html_id":"error_text(code:Int32):String-instance-method","name":"error_text","doc":"Returns a string describing the specified error code.\n\n###Arguments\n- **code** Specifies the error code for which you want to obtain a description.\n\n###Description\nThe `error_text` function returns a string describing the\nspecified error code. The returned text is in the\nencoding of the current locale. It is recommended that you use this function\nto obtain an error description because extensions to Xlib may define their own error codes and error strings.\n\n###See also\n`name`, `error_database_text`, `new`, `set_error_handler`, `set_io_error_handler`, `synchronize`.","summary":"<p>Returns a string describing the specified error code.</p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"Int32"}],"args_string":"(code : Int32) : String","args_html":"(code : Int32) : String","location":{"filename":"src/x11/display.cr","line_number":4390,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4390"},"def":{"name":"error_text","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"buffer = Array(UInt8).new(1024)\nX.error_database_text(@dpy, name.to_unsafe, message.to_unsafe, default_string.to_unsafe, buffer.to_unsafe(1024))\nString.new(buffer.to_unsafe)\n"}},{"id":"event_data:GenericEventCookie?-instance-method","html_id":"event_data:GenericEventCookie?-instance-method","name":"event_data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : GenericEventCookie?","args_html":" : <a href=\"../X11/GenericEventCookie.html\">GenericEventCookie</a>?","location":{"filename":"src/x11/display.cr","line_number":8313,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8313"},"def":{"name":"event_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"GenericEventCookie | ::Nil","visibility":"Public","body":"if X.get_event_data(@dpy, cookie)\n  GenericEventCookie.new(cookie)\nelse\n  nil\nend"}},{"id":"events_queued(mode:Int32):Int32-instance-method","html_id":"events_queued(mode:Int32):Int32-instance-method","name":"events_queued","doc":"Returns the number of events already in the event queue.\n\n###Arguments\n- **mode** Specifies the mode. You can pass **QueuedAlready**,\n**QueuedAfterFlush**, or **QueuedAfterReading**.\n\n###Description\nIf mode is **QueuedAlready**, `events_queued` returns the number of events\nalready in the event queue (and never performs a system call). If mode is\n**QueuedAfterFlush**, `events_queued` returns the number of events already\nin the queue if the number is nonzero. If there are no events in the queue,\n`events_queued` flushes the output buffer, attempts to read more events out\nof the application's connection, and returns the number read. If mode is\n**QueuedAfterReading**, `events_queued` returns the number of events already\nin the queue if the number is nonzero. If there are no events in the queue,\n`events_queued` attempts to read more events out of the application's connection\nwithout flushing the output buffer and returns the number read.\n\n`events_queued` always returns immediately without I/O if there are events\nalready in the queue. `events_queued` with mode **QueuedAfterFlush** is\nidentical in behavior to `pending`. `events_queued` with mode\n**QueuedAlready** is identical to the `q_length` function.\n\n###See also\n`flush`, `if_event`, `next_event`, `pending`, `put_back_event`, `sync`.","summary":"<p>Returns the number of events already in the event queue.</p>","abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"args_string":"(mode : Int32) : Int32","args_html":"(mode : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3869,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3869"},"def":{"name":"events_queued","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.events_queued(@dpy, mode)"}},{"id":"extended_max_request_size:Int64-instance-method","html_id":"extended_max_request_size:Int64-instance-method","name":"extended_max_request_size","doc":"Returns the maximum request size.\n\n###Description\nThe `extended_max_request_size` function returns zero if the specified\ndisplay does not support an extended-length protocol encoding; otherwise,\nit returns the maximum request size (in 4-byte units) supported by the\nserver using the extended-length encoding. The Xlib functions\n`draw_lines`, `draw_arcs`, `fill_polygon`, `change_property`,\n`set_clip_rectangles`, and `set_region` will use the extended-length\nencoding as necessary, if supported by the server. Use of the\nextended-length encoding in other Xlib functions (for example,\n`draw_points`, `draw_rectangles`, `draw_degments`, `fill_arcs`,\n`fill_rectangles`, `put_image`) is permitted but not required; an Xlib\nimplementation may choose to split the data across multiple smaller requests instead.","summary":"<p>Returns the maximum request size.</p>","abstract":false,"args":[],"args_string":" : Int64","args_html":" : Int64","location":{"filename":"src/x11/display.cr","line_number":1240,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1240"},"def":{"name":"extended_max_request_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"X.extended_max_request_size(@dpy)"}},{"id":"extensions:Array(String)-instance-method","html_id":"extensions:Array(String)-instance-method","name":"extensions","doc":"Lists supported extensions.\n\n###Description\n\nThe `extensions` function returns a list of all extensions supported by the server.\nIf the data returned by the server is in the Latin Portable Character Encoding,\nthen the returned strings are in the Host Portable Character Encoding.\nOtherwise, the result is implementation dependent.\n\n###See also\n`query_extension`.","summary":"<p>Lists supported extensions.</p>","abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : Array(String)","location":{"filename":"src/x11/display.cr","line_number":1083,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1083"},"def":{"name":"extensions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"pstrings = X.list_extensions(@dpy, out num_extensions)\nif pstrings.null? || num_extensions <= 0\n  return [] of String\nend\nstrings = Array(String).new\n(0...num_extensions).each do |i|\n  strings << (String.new((pstrings + i).value))\nend\nX.free_extension_list(pstrings)\nstrings\n"}},{"id":"fetch_buffer(buffer:Int32):String-instance-method","html_id":"fetch_buffer(buffer:Int32):String-instance-method","name":"fetch_buffer","doc":"Returns data from a specified cut buffer.\n\n###Arguments\n- **buffer** Specifies the buffer from which you want the stored data returned.\n\n###Description\nReturns a non empty `String` if the buffer contains data.\nReturns an empty `String` if no dta in the buffer or the `buffer` is invalid.\n\n###See also\n`fetch_bytes`, `rotate_buffers`, `store_buffer`, `store_bytes`.","summary":"<p>Returns data from a specified cut buffer.</p>","abstract":false,"args":[{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"Int32"}],"args_string":"(buffer : Int32) : String","args_html":"(buffer : Int32) : String","location":{"filename":"src/x11/display.cr","line_number":337,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L337"},"def":{"name":"fetch_buffer","args":[{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"pstr = X.fetch_buffer(@dpy, out num_bytes, buffer)\nif num_bytes == 0\n  return \"\"\nend\nstr = String.new(pstr)\nX.free(pstr)\nstr\n"}},{"id":"fetch_bytes:String-instance-method","html_id":"fetch_bytes:String-instance-method","name":"fetch_bytes","doc":"Returns data from cut buffer 0\n\n###Description\nReturns a non empty `String` if the buffer contains data, otherwise returns an empty `String`.\n\n###See also\n`fetch_buffer`, `rotate_buffers`, `store_buffer`, `store_bytes`.","summary":"<p>Returns data from cut buffer 0</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/x11/display.cr","line_number":318,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L318"},"def":{"name":"fetch_bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"pstr = X.fetch_bytes(@dpy, out num_bytes)\nif num_bytes == 0\n  return \"\"\nend\nstr = String.new(pstr)\nX.free(pstr)\nstr\n"}},{"id":"fetch_name(w:X11::C::Window):String-instance-method","html_id":"fetch_name(w:X11::C::Window):String-instance-method","name":"fetch_name","doc":"Returns then window name.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `fetch_name` function returns the name of the specified window. If it\nsucceeds, it returns a string; otherwise, no name has been set for the window,\nand it returns empty string. If the data returned by the server is in the\nLatin Portable Character Encoding, then the returned string is in the\nHost Portable Character Encoding. Otherwise, the result is implementation dependent.\n\n`fetch_name` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`X11::alloc_class_hint`, `X11::alloc_icon_size`, `X11::alloc_size_hints`,\n`X11::alloc_wm_hints`, `X11::free`, `wm_name`, `set_command`, `set_text_property`,\n`set_transient_for_hint`, `set_wm_client_machine`, `set_wm_colormap_windows`,\n`set_wm_colormap_windows`, `set_wm_icon_name`, `set_wm_icon_name`, `set_wm_name`,\n`set_wm_properties`, `set_wm_protocols`, `store_name`, `X11::string_list_to_text_property`.","summary":"<p>Returns then window name.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : String","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : String","location":{"filename":"src/x11/display.cr","line_number":3896,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3896"},"def":{"name":"fetch_name","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"status = X.fetch_name(@dpy, w, out window_name_return)\nif status == 0\n  return \"\"\nend\nname = String.new(window_name_return)\nX.free(window_name_return)\nname\n"}},{"id":"fill_arc(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,width:UInt32,height:UInt32,angle1:Int32,angle2:Int32):Int32-instance-method","html_id":"fill_arc(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,width:UInt32,height:UInt32,angle1:Int32,angle2:Int32):Int32-instance-method","name":"fill_arc","doc":"Fills the region closed by the infinitely thin path described by the specified arc.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **x**, **y** Specify the x and y coordinates, which are relative to the\norigin of the drawable and specify the upper-left corner of the bounding rectangle.\n- **width**, **height** Specify the width and height, which are the major and minor axes of the arc.\n- **angle1** Specifies the start of the arc relative to the three-o'clock position from the center, in units of degrees * 64.\n- **angle2** Specifies the path and extent of the arc relative to the start of the arc, in units of degrees * 64.\n\n###Description\nFor each arc, `fill_arc` fills the region closed by the infinitely thin path\ndescribed by the specified arc and, depending on the arc-mode specified in the GC,\none or two line segments. For **ArcChord**, the single line segment joining\nthe endpoints of the arc is used. For **ArcPieSlice** , the two line segments\njoining the endpoints of the arc with the center point are used. For any given arc,\n`fill_arc` does not draw a pixel more than once. If regions intersect,\nthe intersecting pixels are drawn multiple times.\n\nBoth functions use these GC components: function, plane-mask, fill-style,\narc-mode, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.\nThey also use these GC mode-dependent components: foreground, background,\ntile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin.\n\n`fill_arc` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_arc`, ``draw_point`, `draw_rectangle`, `fill_arcs`, `fill_polygon`,\n`fill_rectangle`, `fill_rectangles`.","summary":"<p>Fills the region closed by the infinitely thin path described by the specified arc.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Int32"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Int32"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x : Int32, y : Int32, width : UInt32, height : UInt32, angle1 : Int32, angle2 : Int32) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32, width : UInt32, height : UInt32, angle1 : Int32, angle2 : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3941,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3941"},"def":{"name":"fill_arc","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"angle1","doc":null,"default_value":"","external_name":"angle1","restriction":"Int32"},{"name":"angle2","doc":null,"default_value":"","external_name":"angle2","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.fill_arc(@dpy, d, gc, x, y, width, height, angle1, angle2)"}},{"id":"fill_arcs(d:X11::C::Drawable,gc:X11::C::X::GC,arcs:Array(Arc)):Int32-instance-method","html_id":"fill_arcs(d:X11::C::Drawable,gc:X11::C::X::GC,arcs:Array(Arc)):Int32-instance-method","name":"fill_arcs","doc":"Fills the region closed by the infinitely thin path described by the specified arc.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **arcs** Specifies an array of arcs.\n\n###Description\nFor each arc, `fill_arcs` fills the region closed by the infinitely thin\npath described by the specified arc and, depending on the arc-mode specified\nin the GC, one or two line segments. For **ArcChord**, the single line\nsegment joining the endpoints of the arc is used. For **ArcPieSlice**, the\ntwo line segments joining the endpoints of the arc with the center point are used.\n`fill_arcs` fills the arcs in the order listed in the array. For any given arc,\n`fill_arcs` do not draw a pixel more than once. If regions intersect, the\nintersecting pixels are drawn multiple times.\n\nBoth functions use these GC components: function, plane-mask, fill-style,\narc-mode, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.\nThey also use these GC mode-dependent components: foreground, background,\ntile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin.\n\n`fill_arcs` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_arc`, `draw_point`, `draw_rectangle`, `fill_arcs`, `fill_polygon`,\n`fill_rectangle`, `fill_rectangles`.","summary":"<p>Fills the region closed by the infinitely thin path described by the specified arc.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"arcs","doc":null,"default_value":"","external_name":"arcs","restriction":"Array(Arc)"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, arcs : Array(Arc)) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, arcs : Array(<a href=\"../X11/Arc.html\">Arc</a>)) : Int32","location":{"filename":"src/x11/display.cr","line_number":3979,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3979"},"def":{"name":"fill_arcs","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"arcs","doc":null,"default_value":"","external_name":"arcs","restriction":"Array(Arc)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.fill_arcs(@dpy, d, gc, arcs.to_unsafe, arcs.size)"}},{"id":"fill_polygon(d:X11::C::Drawable,gc:X11::C::X::GC,points:Array(Point),shape:Int32,mode:Int32):Int32-instance-method","html_id":"fill_polygon(d:X11::C::Drawable,gc:X11::C::X::GC,points:Array(Point),shape:Int32,mode:Int32):Int32-instance-method","name":"fill_polygon","doc":"Fills the region closed by the specified path.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **points** Specifies an array of points.\n- **shape** Specifies a shape that helps the server to improve performance.\nYou can pass **Complex**, **Convex**, or **Nonconvex**.\n- **mode** Specifies the coordinate mode.\nYou can pass **CoordModeOrigin** or **CoordModePrevious**.\n\n###Description\n`fill_polygon` fills the region closed by the specified path. The path is\nclosed automatically if the last point in the list does not coincide with\nthe first point. `fill_polygon` does not draw a pixel of the region more\nthan once. **CoordModeOrigin** treats all coordinates as relative to the\norigin, and **CoordModePrevious** treats all coordinates after the first\nas relative to the previous point.\n\nDepending on the specified shape, the following occurs:\n- If shape is **Complex**, the path may self-intersect. Note that contiguous\ncoincident points in the path are not treated as self-intersection.\n- If shape is **Convex**, for every pair of points inside the polygon, the\nline segment connecting them does not intersect the path. If known by the\nclient, specifying **Convex** can improve performance. If you specify\n**Convex** for a path that is not convex, the graphics results are undefined.\n- If shape is **Nonconvex**, the path does not self-intersect, but the\nshape is not wholly convex. If known by the client, specifying **Nonconvex**\ninstead of **Complex** may improve performance. If you specify **Nonconvex**\nfor a self-intersecting path, the graphics results are undefined.\n\nThe fill-rule of the GC controls the filling behavior of self-intersecting polygons.\n\nThis function uses these GC components: function, plane-mask, fill-style,\nfill-rule, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.\nIt also uses these GC mode-dependent components: foreground, background,\ntile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin.\n\n`fill_polygon` can generate **BadDrawable**, **BadGC**, **BadMatch**, and **BadValue** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.\n\n###See also\n`draw_arc`, `draw_point`, `draw_rectangle`, `fill_arc`, `fill_arcs`,\n`fill_rectangle`, `fill_rectangles`.","summary":"<p>Fills the region closed by the specified path.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":"Array(Point)"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Int32"},{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, points : Array(Point), shape : Int32, mode : Int32) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, points : Array(<a href=\"../X11/Point.html\">Point</a>), shape : Int32, mode : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":4037,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4037"},"def":{"name":"fill_polygon","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"points","doc":null,"default_value":"","external_name":"points","restriction":"Array(Point)"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Int32"},{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.fill_polygon(@dpy, d, gc, points.to_unsafe, points.size, shape, mode)"}},{"id":"fill_rectangle(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,width:UInt32,height:UInt32):Int32-instance-method","html_id":"fill_rectangle(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,width:UInt32,height:UInt32):Int32-instance-method","name":"fill_rectangle","doc":"Fills the specified rectangle.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **x**, **y** Specify the x and y coordinates, which are relative to the\norigin of the drawable and specify the upper-left corner of the rectangle.\n- **width**, **height** Specify the width and height, which are the\ndimensions of the rectangle to be filled.\n\n###Description\nThe `fill_rectangle` function fills the specified rectangle as if a\nfour-point **FillPolygon** protocol request were specified for each rectangle:\n```\n[x,y] [x+width,y] [x+width,y+height] [x,y+height]\n```\nThe function uses the x and y coordinates, width and height dimensions, and GC you specify.\n\nFor any given rectangle, `fill_rectangle` does not draw a pixel more than once.\nIf rectangles intersect, the intersecting pixels are drawn multiple times.\n\nThe function uses these GC components: function, plane-mask, fill-style,\nsubwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. They also use\nthese GC mode-dependent components: foreground, background, tile, stipple,\ntile-stipple-x-origin, and tile-stipple-y-origin.\n\n`fill_rectangle` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_arc`, `draw_point`, `draw_rectangle`, `fill_arc`, `fill_arcs`,\n`fill_polygon`, `fill_rectangles`.","summary":"<p>Fills the specified rectangle.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x : Int32, y : Int32, width : UInt32, height : UInt32) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32, width : UInt32, height : UInt32) : Int32","location":{"filename":"src/x11/display.cr","line_number":4079,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4079"},"def":{"name":"fill_rectangle","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.fill_rectangle(@dpy, gc, x, y, width, height)"}},{"id":"fill_rectangles(d:X11::C::Drawable,gc:X11::C::X::GC,rectangles:Array(Rectangle)):Int32-instance-method","html_id":"fill_rectangles(d:X11::C::Drawable,gc:X11::C::X::GC,rectangles:Array(Rectangle)):Int32-instance-method","name":"fill_rectangles","doc":"Fills the specified rectangles.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **rectangles** Specifies an array of rectangles.\n\n###Description\nThe `fill_rectangles` function fills rectangles as if a four-point\n**FillPolygon** protocol request were specified for each rectangle:\n```\n[x,y] [x+width,y] [x+width,y+height] [x,y+height]\n```\nThe function uses the x and y coordinates, width and height dimensions, and GC you specify.\n\n`fill_rectangles` fills the rectangles in the order listed in the array.\nFor any given rectangle, `fill_rectangles` does not draw a pixel more than once.\nIf rectangles intersect, the intersecting pixels are drawn multiple times.\n\nThe function uses these GC components: function, plane-mask, fill-style,\nsubwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. They also use\nthese GC mode-dependent components: foreground, background, tile, stipple,\ntile-stipple-x-origin, and tile-stipple-y-origin.\n\n`fill_rectangles` can generate **BadDrawable**, **BadGC**, and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`draw_arc`, `draw_point`, `draw_rectangles`, `fill_arcs`, `fill_arcs`,\n`fill_polygon`, `fill_rectangles`.","summary":"<p>Fills the specified rectangles.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"rectangles","doc":null,"default_value":"","external_name":"rectangles","restriction":"Array(Rectangle)"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, rectangles : Array(Rectangle)) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, rectangles : Array(<a href=\"../X11/Rectangle.html\">Rectangle</a>)) : Int32","location":{"filename":"src/x11/display.cr","line_number":4119,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4119"},"def":{"name":"fill_rectangles","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"rectangles","doc":null,"default_value":"","external_name":"rectangles","restriction":"Array(Rectangle)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.fill_rectangles(@dpy, d, gc, rectangles.to_unsafe, rectangles.size)"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/display.cr","line_number":57,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L57"},"def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"close"}},{"id":"flush:Int32-instance-method","html_id":"flush:Int32-instance-method","name":"flush","doc":"Flushes the output buffer.\n\n###Description\nThe `flush` function flushes the output buffer. Most client applications\nneed not use this function because the output buffer is automatically flushed\nas needed by calls to `pending`, `next_event`, and `window_event`.\nEvents generated by the server may be enqueued into the library's event queue.\n\n###See also\n`events_queued`, `pending`, `sync`.","summary":"<p>Flushes the output buffer.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":4133,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4133"},"def":{"name":"flush","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.flush(@dpy)"}},{"id":"flush_gc(gc:X11::C::X::GC)-instance-method","html_id":"flush_gc(gc:X11::C::X::GC)-instance-method","name":"flush_gc","doc":"Forces GC component change.\n\n###Arguments\n- **display** Specifies the connection to the X server.\n- **gc** Specifies the GC.\n\n###Description\nForce sending GC component changes.","summary":"<p>Forces GC component change.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"}],"args_string":"(gc : X11::C::X::GC)","args_html":"(gc : X11::C::X::GC)","location":{"filename":"src/x11/display.cr","line_number":752,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L752"},"def":{"name":"flush_gc","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.flush_gc(@dpy, fc)\nself\n"}},{"id":"font_path:Array(String)-instance-method","html_id":"font_path:Array(String)-instance-method","name":"font_path","doc":"Returns an array of strings containing the search path.\n\n###Description\nThe `font_path` function allocates and returns an array of strings containing\nthe search path. The contents of these strings are implementation dependent\nand are not intended to be interpreted by client applications.\n\n###See also\n`set_font_path`, `fonts`, `load_font`.","summary":"<p>Returns an array of strings containing the search path.</p>","abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : Array(String)","location":{"filename":"src/x11/display.cr","line_number":1061,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1061"},"def":{"name":"font_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"pstrings = X.get_font_path(@dpy, out count)\nif pstrings.null? || count <= 0\n  return [] of String\nend\npathes = Array(String).new\n(0...count).each do |i|\n  pathes << (String.new((pstrings + i).value))\nend\nX.free_font_path(pstrings)\npathes\n"}},{"id":"fonts(pattern:String,max_names:Int32):Array(String)-instance-method","html_id":"fonts(pattern:String,max_names:Int32):Array(String)-instance-method","name":"fonts","doc":"Returns an array of available font names.\n\n###Arguments\n- **pattern** Specifies the null-terminated pattern string that can contain wildcard characters.\n- **max_names** Specifies the maximum number of names to be returned.\n\n###Description\nThe `fonts` function returns an array of available font names\n(as controlled by the font search path; see `set_font_path`) that match\nthe string you passed to the pattern argument. The pattern string can\ncontain any characters, but each asterisk (*) is a wildcard for any number\nof characters, and each question mark (?) is a wildcard for a single character.\nIf the pattern string is not in the Host Portable Character Encoding, the\nresult is implementation dependent. Use of uppercase or lowercase does\nnot matter. If the data returned\nby the server is in the Latin Portable Character Encoding, then the\nreturned strings are in the Host Portable Character Encoding. Otherwise,\nthe result is implementation dependent. If there are no matching font names,\n`fonts` returns empty array.\n\n###See also\n`fonts_with_info`, `load_font`, `set_font_path`.","summary":"<p>Returns an array of available font names.</p>","abstract":false,"args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"String"},{"name":"max_names","doc":null,"default_value":"","external_name":"max_names","restriction":"Int32"}],"args_string":"(pattern : String, max_names : Int32) : Array(String)","args_html":"(pattern : String, max_names : Int32) : Array(String)","location":{"filename":"src/x11/display.cr","line_number":1005,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1005"},"def":{"name":"fonts","args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"String"},{"name":"max_names","doc":null,"default_value":"","external_name":"max_names","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"pstrings = X.list_fonts(@dpy, pattern.to_unsafe, max_names, out count)\nif pstrings.null? || count <= 0\n  return [] of String\nend\nfont_names = Array(String).new\n(0...count).each do |i|\n  font_names << (String.new(pstrings[i]))\nend\nX.free_font_names(pstrings)\nfont_names\n"}},{"id":"fonts_with_info(pattern:String,max_names:Int32):Array(NamedTuple())-instance-method","html_id":"fonts_with_info(pattern:String,max_names:Int32):Array(NamedTuple())-instance-method","name":"fonts_with_info","doc":"Returns a list of font names and infos.\n\n###Arguments\n- **pattern** Specifies the null-terminated pattern string that can contain wildcard characters.\n- **max_names** Specifies the maximum number of names to be returned.\n\n###Description\nThe `fonts_with_info` function returns a list of font names and infos that\nmatch the specified pattern and their associated font information.\nThe list of names is limited to size specified by maxnames. The information\nreturned for each font is identical to what `load_query_font` would return\nexcept that the per-character metrics are not returned. The pattern string\ncan contain any characters, but each asterisk (*) is a wildcard for any\nnumber of characters, and each question mark (?) is a wildcard for a single character.\nIf the pattern string is not in the Host Portable Character Encoding,\nthe result is implementation dependent. Use of uppercase or lowercase does not matter.\nIf the data returned by the server is in the Latin Portable Character Encoding,\nthen the returned strings are in the Host Portable Character Encoding.\nOtherwise, the result is implementation dependent.\nIf there are no matching font names, `fonts_with_info` returns empty array.\n\n###See also\n`list_fonts`, `load_font`, `set_font_path`.","summary":"<p>Returns a list of font names and infos.</p>","abstract":false,"args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"String"},{"name":"max_names","doc":null,"default_value":"","external_name":"max_names","restriction":"Int32"}],"args_string":"(pattern : String, max_names : Int32) : Array(NamedTuple())","args_html":"(pattern : String, max_names : Int32) : Array(NamedTuple())","location":{"filename":"src/x11/display.cr","line_number":1039,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1039"},"def":{"name":"fonts_with_info","args":[{"name":"pattern","doc":null,"default_value":"","external_name":"pattern","restriction":"String"},{"name":"max_names","doc":null,"default_value":"","external_name":"max_names","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(NamedTuple(name: String, info: FontStruct))","visibility":"Public","body":"pstrings = X.list_fonts_with_info(@dpy, pattern.to_unsafe, max_names, out count, out infos)\nif pstrings.null? || count <= 0\n  return [] of NamedTuple(name: String, info: FontStruct)\nend\nfont_names_with_info = Array(NamedTuple(name: String, info: FontStruct)).new\n(0...count).each do |i|\n  name = String.new((pstrings + i).value)\n  info = FontStruct.new(self, (  infos + 1))\n  font_names_with_info << {name: name, info: info}\nend\nX.free_font_info(pstrings, infos, count)\nfont_names_with_info\n"}},{"id":"force_screen_saver(mode:Int32):Int32-instance-method","html_id":"force_screen_saver(mode:Int32):Int32-instance-method","name":"force_screen_saver","doc":"Activates the screen saver even if the screen saver had been disabled with a timeout of zero.\n\n###Arguments\n- **mode** Specifies the mode that is to be applied.\nYou can pass **ScreenSaverActive** or **ScreenSaverReset**.\n\n###Description\nIf the specified mode is **ScreenSaverActive** and the screen saver currently\nis deactivated, `force_screen_saver` activates the screen saver even if the\nscreen saver had been disabled with a timeout of zero. If the specified mode\nis **ScreenSaverReset** and the screen saver currently is enabled,\n`force_screen_saver` deactivates the screen saver if it was activated, and\nthe activation timer is reset to its initial state (as if device input had been received).\n\n`force_screen_saver` can generate a **BadValue** error.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n\n###See also\n`set_screen_saver`, `activate_screen_saver`, `reset_screen_saver`, `screen_saver`.","summary":"<p>Activates the screen saver even if the screen saver had been disabled with a timeout of zero.</p>","abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"args_string":"(mode : Int32) : Int32","args_html":"(mode : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":4161,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4161"},"def":{"name":"force_screen_saver","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.force_screen_saver(@dpy)"}},{"id":"free_colormap(colormap:X11::C::Colormap):Int32-instance-method","html_id":"free_colormap(colormap:X11::C::Colormap):Int32-instance-method","name":"free_colormap","doc":"Frees the colormap storage.\n\n###Arguments\n- **colormap** Specifies the colormap that you want to destroy.\n\n###Description\nThe `free_colormap` function deletes the association between the colormap\nresource ID and the colormap and frees the colormap storage. However, this\nfunction has no effect on the default colormap for a screen. If the\nspecified colormap is an installed map for a screen, it is uninstalled\n(see `uninstall_colormap`). If the specified colormap is defined as the\ncolormap for a window (by `create_window`, `set_window_colormap`, or\n`change_window_attributes`), `free_colormap` changes the colormap associated\nwith the window to **None** and generates a **ColormapNotify** event.\nX does not define the colors displayed for a window with a colormap of **None**.\n\n`free_colormap` can generate a **BadColor** error.\n\n###Diagnostics\n- **BadColor** A value for a *Colormap* argument does not name a defined *Colormap*.\n\n###See also\n`alloc_color`, `change_window_attributes`, `copy_colormap_and_free`,\n`create_colormap`, `create_window`, `query_color`, `store_colors`.","summary":"<p>Frees the colormap storage.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"args_string":"(colormap : X11::C::Colormap) : Int32","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":4189,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4189"},"def":{"name":"free_colormap","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.free_colormap(@dpy, colormap)"}},{"id":"free_colors(colormap:X11::C::Colormap,pixels:Array(UInt64),planes:UInt64):Int32-instance-method","html_id":"free_colors(colormap:X11::C::Colormap,pixels:Array(UInt64),planes:UInt64):Int32-instance-method","name":"free_colors","doc":"Frees the cells represented by pixels.\n\n###Arguments\n- **colormap** Specifies the colormap.\n- **pixels** Specifies an array of pixel values that map to the cells in the specified colormap.\n- **planes** Specifies the planes you want to free.\n\n###Description\nThe `free_colors` function frees the cells represented by pixels whose\nvalues are in the pixels array. The planes argument should not have any\nbits set to 1 in common with any of the pixels. The set of all pixels is\nproduced by **ORing** together subsets of the planes argument with the pixels.\nThe request frees all of these pixels that were allocated by the client\n(using `alloc_color`, `alloc_named_color`, `alloc_color_cells`, and `alloc_color_planes`).\nNote that freeing an individual pixel obtained from `alloc_color_planes`\nmay not actually allow it to be reused until all of its related pixels are\nalso freed. Similarly, a read-only entry is not actually freed until it has\nbeen freed by all clients, and if a client allocates the same read-only entry\nmultiple times, it must free the entry that many times before the entry is actually freed.\n\nAll specified pixels that are allocated by the client in the colormap are freed,\neven if one or more pixels produce an error. If a specified pixel is not a\nvalid index into the colormap, a **BadValue** error results. If a specified\npixel is not allocated by the client (that is, is unallocated or is only allocated\nby another client) or if the colormap was created with all entries writable\n(by passing **AllocAll** to `create_colormap`), a **BadAccess** error results.\nIf more than one pixel is in error, the one that gets reported is arbitrary.\n\n`free_colors` can generate **BadAccess**, **BadColor**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n- **BadColor** A value for a *Colormap* argument does not name a defined *Colormap*.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the full\nrange defined by the argument's type is accepted. Any argument defined as\na set of alternatives can generate this error.\n\n###See also\n`alloc_color`, `alloc_color_cells`, `alloc_color_planes`, `alloc_named_color`,\n`create_colormap`, `query_color`, `store_colors`.","summary":"<p>Frees the cells represented by pixels.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"pixels","doc":null,"default_value":"","external_name":"pixels","restriction":"Array(UInt64)"},{"name":"planes","doc":null,"default_value":"","external_name":"planes","restriction":"UInt64"}],"args_string":"(colormap : X11::C::Colormap, pixels : Array(UInt64), planes : UInt64) : Int32","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>, pixels : Array(UInt64), planes : UInt64) : Int32","location":{"filename":"src/x11/display.cr","line_number":4235,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4235"},"def":{"name":"free_colors","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"pixels","doc":null,"default_value":"","external_name":"pixels","restriction":"Array(UInt64)"},{"name":"planes","doc":null,"default_value":"","external_name":"planes","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.free_colors(@dpy, colormap, pixels.to_unsafe, pixels.size, planes)"}},{"id":"free_cursor(cursor:X11::C::Cursor):Int32-instance-method","html_id":"free_cursor(cursor:X11::C::Cursor):Int32-instance-method","name":"free_cursor","doc":"Deletes the association between the cursor resource ID and the specified cursor.\n\n###Arguments\n- **cursor** Specifies the cursor.\n\n###Description\nThe `free_cursor` function deletes the association between the cursor resource\nID and the specified cursor. The cursor storage is freed when no other\nresource references it. The specified cursor ID should not be referred to again.\n\n`free_cursor` can generate a **BadCursor** error.\n\n###Diagnostics\n- **BadCursor** A value for a *Cursor* argument does not name a defined *Cursor*.\n\n###See also\n`create_colormap`, `create_font_cursor`, `define_cursor`,\n`query_best_cursor`, `recolor_cursor`.","summary":"<p>Deletes the association between the cursor resource ID and the specified cursor.</p>","abstract":false,"args":[{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"}],"args_string":"(cursor : X11::C::Cursor) : Int32","args_html":"(cursor : <a href=\"../X11/C/Cursor.html\">X11::C::Cursor</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":4257,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4257"},"def":{"name":"free_cursor","args":[{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.free_cursor(@dpy, cursor)"}},{"id":"free_font_set(font_set:X11::C::X::FontSet)-instance-method","html_id":"free_font_set(font_set:X11::C::X::FontSet)-instance-method","name":"free_font_set","doc":null,"summary":null,"abstract":false,"args":[{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"}],"args_string":"(font_set : X11::C::X::FontSet)","args_html":"(font_set : X11::C::X::FontSet)","location":{"filename":"src/x11/display.cr","line_number":8237,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8237"},"def":{"name":"free_font_set","args":[{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.free_font_set(@dpy, font_set)"}},{"id":"free_gc(gc:X12::C::GC):Int32-instance-method","html_id":"free_gc(gc:X12::C::GC):Int32-instance-method","name":"free_gc","doc":"Destroys the specified GC.\n\n###Arguments\n- gc** Specifies the GC.\n\n###Description\nThe `free_gc` function destroys the specified GC as well as all the associated storage.\n\n`free_gc` can generate a **BadGC** error.\n\n###Diagnostics\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n\n###See also\n`X11::all_planes`, `change_gc`, `copy_area`, `copy_gc`, `create_gc`,\n`X11::create_region`, `draw_arc`, `draw_line`, `draw_rectangle`, `draw_text`,\n`fill_rectangle`, `X11::g_context_from_gc`, `gc_values`, `query_best_size`,\n`set_arc_mode`, `set_clip_origin`.","summary":"<p>Destroys the specified GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X12::C::GC"}],"args_string":"(gc : X12::C::GC) : Int32","args_html":"(gc : X12::C::GC) : Int32","location":{"filename":"src/x11/display.cr","line_number":4279,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4279"},"def":{"name":"free_gc","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X12::C::GC"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.free_gc(@dpy, gc)"}},{"id":"free_pixmap(pixmap:X11::C::Pixmap):Int32-instance-method","html_id":"free_pixmap(pixmap:X11::C::Pixmap):Int32-instance-method","name":"free_pixmap","doc":"Frees the pixmap storage.\n\n###Arguments\n- **pixmap** Specifies the pixmap.\n\n###Description\nThe `free_pixmap` function first deletes the association between the pixmap\nID and the pixmap. Then, the X server frees the pixmap storage when there\nare no references to it. The pixmap should never be referenced again.\n\n`free_pixmap` can generate a **BadPixmap** error.\n\n###Diagnostics\n- **BadPixmap** A value for a *Pixmap* argument does not name a defined *Pixmap*.\n\n###See also\n`create_pixmap`, `copy_area`.","summary":"<p>Frees the pixmap storage.</p>","abstract":false,"args":[{"name":"pixmap","doc":null,"default_value":"","external_name":"pixmap","restriction":"X11::C::Pixmap"}],"args_string":"(pixmap : X11::C::Pixmap) : Int32","args_html":"(pixmap : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":4300,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4300"},"def":{"name":"free_pixmap","args":[{"name":"pixmap","doc":null,"default_value":"","external_name":"pixmap","restriction":"X11::C::Pixmap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.free_pixmap(@dpy, pixmap)"}},{"id":"gc_values(gc:X11::C::X::GC,valuemask:UInt64):GCValues-instance-method","html_id":"gc_values(gc:X11::C::X::GC,valuemask:UInt64):GCValues-instance-method","name":"gc_values","doc":"Returns the components specified by valuemask for the specified GC.\n\n###Arguments\n- **gc** Specifies the GC.\n- **valuemask** Specifies which components in the GC are to be returned.\nThis argument is the bitwise inclusive OR of zero or more of the valid GC component mask bits.\n\n###Description\nThe `gc_values` function returns the components specified by valuemask for\nthe specified GC. If the valuemask contains a valid set of GC mask bits\n(**GCFunction**, **GCPlaneMask**, **GCForeground**, **GCBackground**,\n**GCLineWidth**, **GCLineStyle**, **GCCapStyle**, **GCJoinStyle**,\n**GCFillStyle**, **GCFillRule**, **GCTile**, **GCStipple**,\n**GCTileStipXOrigin**, **GCTileStipYOrigin**, **GCFont**, **GCSubwindowMode**,\n**GCGraphicsExposures**, **GCClipXOrigin**, **GCCLipYOrigin**, **GCDashOffset**,\nor **GCArcMode**) and no error occurs, `gc_values` sets the requested components\nin values_return and returns a nonzero status. Otherwise, it returns a\nzero status. Note that the clip-mask and dash-list (represented by the\n**GCClipMask** and **GCDashList** bits, respectively, in the valuemask)\ncannot be requested. Also note that an invalid resource ID (with one or\nmore of the three most-significant bits set to 1) will be returned for\n**GCFont**, **GCTile**, and **GCStipple** if the component has never been explicitly set by the client.\n\n###See also\n`X11::all_planes`, `change_gc`, `copy_area`, `copy_gc`, `create_gc`,\n`X11::create_region`, `draw_arc`, `draw_line`, `draw_rectangle`, `draw_text`,\n`fill_rectangle`, `free_gc`, `X11::g_context_from_gc`, `query_best_size`,\n`set_arc_mode`, `set_clip_origin`.","summary":"<p>Returns the components specified by valuemask for the specified GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"valuemask","doc":null,"default_value":"","external_name":"valuemask","restriction":"UInt64"}],"args_string":"(gc : X11::C::X::GC, valuemask : UInt64) : GCValues","args_html":"(gc : X11::C::X::GC, valuemask : UInt64) : <a href=\"../X11/GCValues.html\">GCValues</a>","location":{"filename":"src/x11/display.cr","line_number":4424,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4424"},"def":{"name":"gc_values","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"valuemask","doc":null,"default_value":"","external_name":"valuemask","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"GCValues","visibility":"Public","body":"X.get_gc_values(@dpy, gc, valuemask, out pgcvalues)\nGCValues.new(pgcvalues)\n"}},{"id":"geometry(d:X11::C::Drawable):NamedTuple()-instance-method","html_id":"geometry(d:X11::C::Drawable):NamedTuple()-instance-method","name":"geometry","doc":"Returns the root window and the current geometry of the drawable.\n\n###Arguments\n- **d** Specifies the drawable, which can be a window or a pixmap.\n\n###Return\n- **root** Returns the root window.\n- **x**, **y** Return the x and y coordinates that define the location of\nthe drawable. For a window, these coordinates specify the upper-left outer\ncorner relative to its parent's origin. For pixmaps, these coordinates are always zero.\n- **width**, **height** Return the drawable's dimensions (width and height).\nFor a window, these dimensions specify the inside size, not including the border.\n- **border_width** Returns the border width in pixels. If the drawable is a pixmap, it returns zero.\n- **depth** Returns the depth of the drawable (bits per pixel for the object).\n\n###Description\nThe `geometry` function returns the root window and the current geometry of\nthe drawable. The geometry of the drawable includes the x and y coordinates,\nwidth and height, border width, and depth. These are described in the argument\nlist. It is legal to pass to this function a window whose class is **InputOnly**.\n\n`geometry` can generate a **BadDrawable** error.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n\n###See also\n`window_attributes`, `query_pointer`, `query_tree`.","summary":"<p>Returns the root window and the current geometry of the drawable.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"}],"args_string":"(d : X11::C::Drawable) : NamedTuple()","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":4457,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4457"},"def":{"name":"geometry","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(root: X11::C::Window, x: Int32, y: Int32, width: UInt32, height: UInt32, border_width: Int32, depth: Int32, res: X11::C::X::Status)","visibility":"Public","body":"res = X.get_geometry(@dpy, d, out root_return, out x_return, out y_return, out width_return, out height_return, out border_width_return)\n{root: root_return, x: x_return, y: y_return, width: width_return, height: height_return, border_width: border_width_return, depth: depth_return, res: res}\n"}},{"id":"geometry(screen:Int32,position:String,default_position:String,bwidth:UInt32,fwidth:UInt32,fheight:UInt32,xadder:Int32,yadder:Int32):NamedTuple()-instance-method","html_id":"geometry(screen:Int32,position:String,default_position:String,bwidth:UInt32,fwidth:UInt32,fheight:UInt32,xadder:Int32,yadder:Int32):NamedTuple()-instance-method","name":"geometry","doc":"Determines the placement of a window using a geometry specification.\n\n###Arguments\n- **screen** Specifies the screen.\n- **position**, **default_position** Specify the geometry specifications.\n- **bwidth** Specifies the border width.\n- **fheight**, **fwidth** Specify the font height and width in pixels (increment size).\n- **xadder**, **yadder** Specify additional interior padding needed in the window.\n\n###Return\n- **x**, **y** Return the x and y offsets.\n- **width**, **height** Return the width and height determined.\n\n###Description\nYou pass in the border width (bwidth), size of the increments fwidth and\nfheight (typically font width and height), and any additional interior space\n(xadder and yadder) to make it easy to compute the resulting size.\nThe `geometry` function returns the position the window should be placed given\na position and a default position. `geometry` determines the placement of a\nwindow using a geometry specification as specified by `parse_geometry` and\nthe additional information about the window. Given a fully qualified default\ngeometry specification and an incomplete geometry specification,\n`parse_geometry` returns a bitmask value as defined above in the\n`parse_geometry` call, by using the position argument.\n\nThe returned width and height will be the width and height specified by\ndefault_position as overridden by any user-specified position. They are not\naffected by fwidth, fheight, xadder, or yadder. The x and y coordinates are\ncomputed by using the border width, the screen width and height, padding as\nspecified by xadder and yadder, and the fheight and fwidth times the width\nand height from the geometry specifications.","summary":"<p>Determines the placement of a window using a geometry specification.</p>","abstract":false,"args":[{"name":"screen","doc":null,"default_value":"","external_name":"screen","restriction":"Int32"},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"String"},{"name":"default_position","doc":null,"default_value":"","external_name":"default_position","restriction":"String"},{"name":"bwidth","doc":null,"default_value":"","external_name":"bwidth","restriction":"UInt32"},{"name":"fwidth","doc":null,"default_value":"","external_name":"fwidth","restriction":"UInt32"},{"name":"fheight","doc":null,"default_value":"","external_name":"fheight","restriction":"UInt32"},{"name":"xadder","doc":null,"default_value":"","external_name":"xadder","restriction":"Int32"},{"name":"yadder","doc":null,"default_value":"","external_name":"yadder","restriction":"Int32"}],"args_string":"(screen : Int32, position : String, default_position : String, bwidth : UInt32, fwidth : UInt32, fheight : UInt32, xadder : Int32, yadder : Int32) : NamedTuple()","args_html":"(screen : Int32, position : String, default_position : String, bwidth : UInt32, fwidth : UInt32, fheight : UInt32, xadder : Int32, yadder : Int32) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":4335,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4335"},"def":{"name":"geometry","args":[{"name":"screen","doc":null,"default_value":"","external_name":"screen","restriction":"Int32"},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"String"},{"name":"default_position","doc":null,"default_value":"","external_name":"default_position","restriction":"String"},{"name":"bwidth","doc":null,"default_value":"","external_name":"bwidth","restriction":"UInt32"},{"name":"fwidth","doc":null,"default_value":"","external_name":"fwidth","restriction":"UInt32"},{"name":"fheight","doc":null,"default_value":"","external_name":"fheight","restriction":"UInt32"},{"name":"xadder","doc":null,"default_value":"","external_name":"xadder","restriction":"Int32"},{"name":"yadder","doc":null,"default_value":"","external_name":"yadder","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(x: Int32, y: Int32, width: Int32, height: Int32, res: Int32)","visibility":"Public","body":"res = X.geometry(@dpy, screen, position.to_unsafe, default_position.to_unsafe, bwidth, fwidth, fheight, xadder, yadder, out x_return, out y_return, out width_return, out height_return)\n{x: x_return, y: y_return, width: width_return, height: height_return, res: res}\n"}},{"id":"grab_button(button:UInt32,modifiers:UInt32,grab_window:X11::C::Window,owner_events:Bool,event_mask:UInt32,pointer_mode:Int32,keyboard_mode:Int32,confine_to:X11::C::Window,cursor:X11::C::Cursor):Int32-instance-method","html_id":"grab_button(button:UInt32,modifiers:UInt32,grab_window:X11::C::Window,owner_events:Bool,event_mask:UInt32,pointer_mode:Int32,keyboard_mode:Int32,confine_to:X11::C::Window,cursor:X11::C::Cursor):Int32-instance-method","name":"grab_button","doc":"Establishes a passive grab.\n\n###Arguments\n- **button** Specifies the pointer button that is to be grabbed or **AnyButton**.\n- **modifiers** Specifies the set of keymasks or **AnyModifier**. The mask\nis the bitwise inclusive OR of the valid keymask bits.\n- **grab_window** Specifies the grab window.\n- **owner_events** Specifies a Boolean value that indicates whether the\npointer events are to be reported as usual or reported with respect to the\ngrab window if selected by the event mask.\n- **event_mask** Specifies which pointer events are reported to the client.\nThe mask is the bitwise inclusive OR of the valid pointer event mask bits.\n- **pointer_mode** Specifies further processing of pointer events.\nYou can pass **GrabModeSync** or **GrabModeAsync**.\n- **keyboard_mode** Specifies further processing of keyboard events.\nYou can pass **GrabModeSync** or **GrabModeAsync**.\n- **confine_to*** Specifies the window to confine the pointer in or **None**.\n- **cursor** Specifies the cursor that is to be displayed or **None**.\n\n###Description\nThe `grab_button` function establishes a passive grab. In the future, the\npointer is actively grabbed (as for `grab_pointer`), the last-pointer-grab\ntime is set to the time at which the button was pressed (as transmitted in\nthe **ButtonPress** event), and the **ButtonPress** event is reported if\nall of the following conditions are true:\n- The pointer is not grabbed, and the specified button is logically pressed\nwhen the specified modifier keys are logically down,\nand no other buttons or modifier keys are logically down.\n- The **grab_window** contains the pointer.\n- The **confine_to** window (if any) is viewable.\n- A passive grab on the same button/key combination does not exist on any ancestor of grab_window.\n\nThe interpretation of the remaining arguments is as for `grab_pointer`.\nThe active grab is terminated automatically when the logical state of the\npointer has all buttons released (independent of the state of the logical modifier keys).\n\nNote that the logical state of a device (as seen by client applications)\nmay lag the physical state if device event processing is frozen.\n\nThis request overrides all previous grabs by the same client on the same\nbutton/key combinations on the same window. A modifiers of **AnyModifier**\nis equivalent to issuing the grab request for all possible modifier combinations\n(including the combination of no modifiers). It is not required that all\nmodifiers specified have currently assigned **KeyCodes**. A button of\n**AnyButton** is equivalent to issuing the request for all possible buttons.\nOtherwise, it is not required that the specified button currently be assigned to a physical button.\n\nIf some other client has already issued a `grab_button` with the same\nbutton/key combination on the same window, a **BadAccess** error results.\nWhen using **AnyModifier** or **AnyButton**, the request fails completely,\nand a **BadAccess** error results (no grabs are established) if there is a\nconflicting grab for any combination. `grab_button` has no effect on an active grab.\n\n`grab_button` can generate **BadCursor**, **BadValue**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadCursor** A value for a *Cursor* argument does not name a defined *Cursor*.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`allow_events`, `change_active_pointer_grab`, `grab_key`, `grab_keyboard`,\n`grab_pointer`, `ungrab_pointer`.","summary":"<p>Establishes a passive grab.</p>","abstract":false,"args":[{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"UInt32"},{"name":"modifiers","doc":null,"default_value":"","external_name":"modifiers","restriction":"UInt32"},{"name":"grab_window","doc":null,"default_value":"","external_name":"grab_window","restriction":"X11::C::Window"},{"name":"owner_events","doc":null,"default_value":"","external_name":"owner_events","restriction":"Bool"},{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"UInt32"},{"name":"pointer_mode","doc":null,"default_value":"","external_name":"pointer_mode","restriction":"Int32"},{"name":"keyboard_mode","doc":null,"default_value":"","external_name":"keyboard_mode","restriction":"Int32"},{"name":"confine_to","doc":null,"default_value":"","external_name":"confine_to","restriction":"X11::C::Window"},{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"}],"args_string":"(button : UInt32, modifiers : UInt32, grab_window : X11::C::Window, owner_events : Bool, event_mask : UInt32, pointer_mode : Int32, keyboard_mode : Int32, confine_to : X11::C::Window, cursor : X11::C::Cursor) : Int32","args_html":"(button : UInt32, modifiers : UInt32, grab_window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, owner_events : Bool, event_mask : UInt32, pointer_mode : Int32, keyboard_mode : Int32, confine_to : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, cursor : <a href=\"../X11/C/Cursor.html\">X11::C::Cursor</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":4855,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4855"},"def":{"name":"grab_button","args":[{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"UInt32"},{"name":"modifiers","doc":null,"default_value":"","external_name":"modifiers","restriction":"UInt32"},{"name":"grab_window","doc":null,"default_value":"","external_name":"grab_window","restriction":"X11::C::Window"},{"name":"owner_events","doc":null,"default_value":"","external_name":"owner_events","restriction":"Bool"},{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"UInt32"},{"name":"pointer_mode","doc":null,"default_value":"","external_name":"pointer_mode","restriction":"Int32"},{"name":"keyboard_mode","doc":null,"default_value":"","external_name":"keyboard_mode","restriction":"Int32"},{"name":"confine_to","doc":null,"default_value":"","external_name":"confine_to","restriction":"X11::C::Window"},{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.grab_button(@dpy, buton, modifiers, grab_window, owner_events ? X::True : X::False, event_mask, pointer_mode, keyboard_mode, confine_to, cursor)"}},{"id":"grab_key(keycode:Int32,modifiers:UInt32,grab_window:X11::C::Window,owner_events:Bool,pointer_mode:Int32,keyboard_mode:Int32):Int32-instance-method","html_id":"grab_key(keycode:Int32,modifiers:UInt32,grab_window:X11::C::Window,owner_events:Bool,pointer_mode:Int32,keyboard_mode:Int32):Int32-instance-method","name":"grab_key","doc":"Establishes a passive grab on the keyboard.\n\n###Arguments\n- **keycode** Specifies the *KeyCode* or **AnyKey**.\n- **modifiers** Specifies the set of keymasks or **AnyModifier**.\nThe mask is the bitwise inclusive OR of the valid keymask bits.\n- **grab_window** Specifies the grab window.\n- **owner_events** Specifies a Boolean value that indicates whether the\nkeyboard events are to be reported as usual.\n- **pointer_mode** Specifies further processing of pointer events.\nYou can pass **GrabModeSync** or **GrabModeAsync**.\n- **keyboard_mode** Specifies further processing of keyboard events.\nYou can pass **GrabModeSync** or **GrabModeAsync**.\n\n###Description\nThe `grab_key` function establishes a passive grab on the keyboard. In the\nfuture, the keyboard is actively grabbed (as for `grab_keyboard`), the\nlast-keyboard-grab time is set to the time at which the key was pressed\n(as transmitted in the **KeyPress** event), and the **KeyPress** event is\nreported if all of the following conditions are true:\n- The keyboard is not grabbed and the specified key (which can itself be\na modifier key) is logically pressed when the specified modifier keys are\nlogically down, and no other modifier keys are logically down.\n- Either the grab_window is an ancestor of (or is) the focus window, or the\ngrab_window is a descendant of the focus window and contains the pointer.\n- A passive grab on the same key combination does not exist on any ancestor of grab_window.\n\nThe interpretation of the remaining arguments is as for `grab_keyboard`.\nThe active grab is terminated automatically when the logical state of the\nkeyboard has the specified key released (independent of the logical state of the modifier keys).\n\nNote that the logical state of a device (as seen by client applications)\nmay lag the physical state if device event processing is frozen.\n\nA modifiers argument of **AnyModifier** is equivalent to issuing the request\nfor all possible modifier combinations (including the combination of no modifiers).\nIt is not required that all modifiers specified have currently assigned KeyCodes.\nA keycode argument of **AnyKey** is equivalent to issuing the request for all\npossible KeyCodes. Otherwise, the specified keycode must be in the range\nspecified by min_keycode and max_keycode in the connection setup, or a **BadValue** error results.\n\nIf some other client has issued a `grab_key` with the same key combination\non the same window, a **BadAccess** error results. When using **AnyModifier**\nor **AnyKey**, the request fails completely, and a **BadAccess** error results\n(no grabs are established) if there is a conflicting grab for any combination.\n\n`grab_key` can generate **BadAccess**, **BadValue**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the full\nrange defined by the argument's type is accepted. Any argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`allow_events`, `grab_button`, `grab_keyboard`, `grab_pointer`, `ungrab_key`.","summary":"<p>Establishes a passive grab on the keyboard.</p>","abstract":false,"args":[{"name":"keycode","doc":null,"default_value":"","external_name":"keycode","restriction":"Int32"},{"name":"modifiers","doc":null,"default_value":"","external_name":"modifiers","restriction":"UInt32"},{"name":"grab_window","doc":null,"default_value":"","external_name":"grab_window","restriction":"X11::C::Window"},{"name":"owner_events","doc":null,"default_value":"","external_name":"owner_events","restriction":"Bool"},{"name":"pointer_mode","doc":null,"default_value":"","external_name":"pointer_mode","restriction":"Int32"},{"name":"keyboard_mode","doc":null,"default_value":"","external_name":"keyboard_mode","restriction":"Int32"}],"args_string":"(keycode : Int32, modifiers : UInt32, grab_window : X11::C::Window, owner_events : Bool, pointer_mode : Int32, keyboard_mode : Int32) : Int32","args_html":"(keycode : Int32, modifiers : UInt32, grab_window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, owner_events : Bool, pointer_mode : Int32, keyboard_mode : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":4917,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4917"},"def":{"name":"grab_key","args":[{"name":"keycode","doc":null,"default_value":"","external_name":"keycode","restriction":"Int32"},{"name":"modifiers","doc":null,"default_value":"","external_name":"modifiers","restriction":"UInt32"},{"name":"grab_window","doc":null,"default_value":"","external_name":"grab_window","restriction":"X11::C::Window"},{"name":"owner_events","doc":null,"default_value":"","external_name":"owner_events","restriction":"Bool"},{"name":"pointer_mode","doc":null,"default_value":"","external_name":"pointer_mode","restriction":"Int32"},{"name":"keyboard_mode","doc":null,"default_value":"","external_name":"keyboard_mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.grab_key(@dpy, keycode, modifiers, grab_window, owner_events, pointer_mode, keyboard_mode)"}},{"id":"grab_keyboard(grab_window:X11::C::Window,owner_events:Bool,pointer_mode:Int32,keyboard_mode:Int32,time:X11::C::Time):Int32-instance-method","html_id":"grab_keyboard(grab_window:X11::C::Window,owner_events:Bool,pointer_mode:Int32,keyboard_mode:Int32,time:X11::C::Time):Int32-instance-method","name":"grab_keyboard","doc":"Actively grabs control of the keyboard and generates **FocusIn** and **FocusOut** events.\n\n###Arguments\n- **grab_window** Specifies the grab window.\n- **owner_events** Specifies a Boolean value that indicates whether the\nkeyboard events are to be reported as usual.\n- **pointer_mode** Specifies further processing of pointer events.\nYou can pass **GrabModeSync** or **GrabModeAsync**.\n- **keyboard_mode** Specifies further processing of keyboard events.\nYou can pass **GrabModeSync** or **GrabModeAsync**.\n- **time** Specifies the time. You can pass either a timestamp or **CurrentTime**.\n\n###Description\nThe `grab_keyboard` function actively grabs control of the keyboard and\ngenerates **FocusIn** and **FocusOut** events. Further key events are\nreported only to the grabbing client. `grab_keyboard` overrides any active\nkeyboard grab by this client. If owner_events is **false**, all generated key\nevents are reported with respect to grab_window. If owner_events is **true**\nand if a generated key event would normally be reported to this client, it\nis reported normally; otherwise, the event is reported with respect to the grab_window.\nBoth **KeyPress** and **KeyRelease** events are always reported, independent\nof any event selection made by the client.\n\nIf the keyboard_mode argument is **GrabModeAsync**, keyboard event processing\ncontinues as usual. If the keyboard is currently frozen by this client, then\nprocessing of keyboard events is resumed. If the keyboard_mode argument is\n**GrabModeSync**, the state of the keyboard (as seen by client applications)\nappears to freeze, and the X server generates no further keyboard events until\nthe grabbing client issues a releasing `allow_events` call or until the keyboard\ngrab is released. Actual keyboard changes are not lost while the keyboard is\nfrozen; they are simply queued in the server for later processing.\n\nIf pointer_mode is **GrabModeAsync**, pointer event processing is unaffected\nby activation of the grab. If pointer_mode is **GrabModeSync**, the state\nof the pointer (as seen by client applications) appears to freeze, and the\nX server generates no further pointer events until the grabbing client issues\na releasing `allow_events` call or until the keyboard grab is released.\nActual pointer changes are not lost while the pointer is frozen;\nthey are simply queued in the server for later processing.\n\nIf the keyboard is actively grabbed by some other client, `grab_keyboard`\nfails and returns **AlreadyGrabbed**. If grab_window is not viewable, it\nfails and returns **GrabNotViewable**. If the keyboard is frozen by an active\ngrab of another client, it fails and returns **GrabFrozen**. If the specified time\nis earlier than the last-keyboard-grab time or later than the current X server\ntime, it fails and returns **GrabInvalidTime**. Otherwise, the last-keyboard-grab\ntime is set to the specified time (**CurrentTime** is replaced by the current X server time).\n\n`grab_keyboard` can generate **BadValue** and **BadWindow** errors.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`allow_events`, `grab_button`, `grab_key`, `grab_pointer`, `ungrab_keyboard`.","summary":"<p>Actively grabs control of the keyboard and generates <strong>FocusIn</strong> and <strong>FocusOut</strong> events.</p>","abstract":false,"args":[{"name":"grab_window","doc":null,"default_value":"","external_name":"grab_window","restriction":"X11::C::Window"},{"name":"owner_events","doc":null,"default_value":"","external_name":"owner_events","restriction":"Bool"},{"name":"pointer_mode","doc":null,"default_value":"","external_name":"pointer_mode","restriction":"Int32"},{"name":"keyboard_mode","doc":null,"default_value":"","external_name":"keyboard_mode","restriction":"Int32"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(grab_window : X11::C::Window, owner_events : Bool, pointer_mode : Int32, keyboard_mode : Int32, time : X11::C::Time) : Int32","args_html":"(grab_window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, owner_events : Bool, pointer_mode : Int32, keyboard_mode : Int32, time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":4980,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4980"},"def":{"name":"grab_keyboard","args":[{"name":"grab_window","doc":null,"default_value":"","external_name":"grab_window","restriction":"X11::C::Window"},{"name":"owner_events","doc":null,"default_value":"","external_name":"owner_events","restriction":"Bool"},{"name":"pointer_mode","doc":null,"default_value":"","external_name":"pointer_mode","restriction":"Int32"},{"name":"keyboard_mode","doc":null,"default_value":"","external_name":"keyboard_mode","restriction":"Int32"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.grab_keyboard(@dpy, grab_window, owner_events ? X::True : X::False, pointer_mode, keyboard_mode, time)"}},{"id":"grab_pointer(grab_window:X11::C::Window,owner_events:Bool,event_mask:UInt32,pointer_mode:Int32,keyboard_mode:Int32,confine_to:X11::C::Window,cursor:X11::C::Cursor,time:X11::C::Time):Int32-instance-method","html_id":"grab_pointer(grab_window:X11::C::Window,owner_events:Bool,event_mask:UInt32,pointer_mode:Int32,keyboard_mode:Int32,confine_to:X11::C::Window,cursor:X11::C::Cursor,time:X11::C::Time):Int32-instance-method","name":"grab_pointer","doc":"Actively grabs control of the pointer and returns **GrabSuccess** if the grab was successful.\n\n###Arguments\n- **grab_window** Specifies the grab window.\n- **owner_events** Specifies a Boolean value that indicates whether the\npointer events are to be reported as usual or reported with respect to the\ngrab window if selected by the event mask.\n- **event_mask** Specifies which pointer events are reported to the client.\nThe mask is the bitwise inclusive OR of the valid pointer event mask bits.\n- **pointer_mode** Specifies further processing of pointer events.\nYou can pass **GrabModeSync** or **GrabModeAsync**.\n- **keyboard_mode** Specifies further processing of keyboard events.\nYou can pass **GrabModeSync** or **GrabModeAsync**.\n- **confine_to** Specifies the window to confine the pointer in or **None**.\n- **cursor** Specifies the cursor that is to be displayed during the grab or **None**.\n- **time** Specifies the time. You can pass either a timestamp or **CurrentTime**.\n\n###Description\nThe `grab_pointer` function actively grabs control of the pointer and\nreturns **GrabSuccess** if the grab was successful. Further pointer events\nare reported only to the grabbing client. `grab_pointer` overrides any\nactive pointer grab by this client. If owner_events is **false**, all\ngenerated pointer events are reported with respect to grab_window and are\nreported only if selected by event_mask. If owner_events is **true** and\nif a generated pointer event would normally be reported to this client, it\nis reported as usual. Otherwise, the event is reported with respect to the\ngrab_window and is reported only if selected by event_mask. For either value\nof owner_events, unreported events are discarded.\n\nIf the pointer_mode is **GrabModeAsync**, pointer event processing continues\nas usual. If the pointer is currently frozen by this client, the processing\nof events for the pointer is resumed. If the pointer_mode is **GrabModeSync**,\nthe state of the pointer, as seen by client applications, appears to freeze,\nand the X server generates no further pointer events until the grabbing client\ncalls `allow_events` or until the pointer grab is released. Actual pointer\nchanges are not lost while the pointer is frozen;\nthey are simply queued in the server for later processing.\n\nIf the keyboard_mode is **GrabModeAsync**, keyboard event processing is\nunaffected by activation of the grab. If the keyboard_mode is **GrabModeSync**,\nthe state of the keyboard, as seen by client applications, appears to freeze,\nand the X server generates no further keyboard events until the grabbing client\ncalls `allow_events` or until the pointer grab is released. Actual keyboard\nchanges are not lost while the pointer is frozen;\nthey are simply queued in the server for later processing.\n\nIf a cursor is specified, it is displayed regardless of what window the pointer\nis in. If **None** is specified, the normal cursor for that window is displayed\nwhen the pointer is in grab_window or one of its subwindows; otherwise, the cursor for grab_window is displayed.\n\nIf a confine_to window is specified, the pointer is restricted to stay contained\nin that window. The confine_to window need have no relationship to the\ngrab_window. If the pointer is not initially in the confine_to window, it\nis warped automatically to the closest edge just before the grab activates\nand enter/leave events are generated as usual. If the confine_to window is\nsubsequently reconfigured, the pointer is warped automatically, as necessary,\nto keep it contained in the window.\n\nThe time argument allows you to avoid certain circumstances that come up if\napplications take a long time to respond or if there are long network delays.\nConsider a situation where you have two applications, both of which normally\ngrab the pointer when clicked on. If both applications specify the timestamp\nfrom the event, the second application may wake up faster and successfully\ngrab the pointer before the first application. The first application then will\nget an indication that the other application grabbed the pointer before its request was processed.\n\n`grab_pointer` generates **EnterNotify** and **LeaveNotify** events.\n\nEither if grab_window or confine_to window is not viewable or if the\nconfine_to window lies completely outside the boundaries of the root window,\n`grab_pointer` fails and returns **GrabNotViewable**. If the pointer is\nactively grabbed by some other client, it fails and returns **AlreadyGrabbed**.\nIf the pointer is frozen by an active grab of another client, it fails and\nreturns **GrabFrozen**. If the specified time is earlier than the\nlast-pointer-grab time or later than the current X server time, it fails\nand returns GrabInvalidTime. Otherwise, the last-pointer-grab time is set\nto the specified time (**CurrentTime** is replaced by the current X server time).\n\n`grab_pointer` can generate **BadCursor**, **BadValue**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadCursor** A value for a *Cursor* argument does not name a defined *Cursor*.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the full\nrange defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`allow_events`, `change_active_pointer_grab`, `grab_button`, `grab_key`,\n`grab_keyboard`, `ungrab_pointer`.","summary":"<p>Actively grabs control of the pointer and returns <strong>GrabSuccess</strong> if the grab was successful.</p>","abstract":false,"args":[{"name":"grab_window","doc":null,"default_value":"","external_name":"grab_window","restriction":"X11::C::Window"},{"name":"owner_events","doc":null,"default_value":"","external_name":"owner_events","restriction":"Bool"},{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"UInt32"},{"name":"pointer_mode","doc":null,"default_value":"","external_name":"pointer_mode","restriction":"Int32"},{"name":"keyboard_mode","doc":null,"default_value":"","external_name":"keyboard_mode","restriction":"Int32"},{"name":"confine_to","doc":null,"default_value":"","external_name":"confine_to","restriction":"X11::C::Window"},{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(grab_window : X11::C::Window, owner_events : Bool, event_mask : UInt32, pointer_mode : Int32, keyboard_mode : Int32, confine_to : X11::C::Window, cursor : X11::C::Cursor, time : X11::C::Time) : Int32","args_html":"(grab_window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, owner_events : Bool, event_mask : UInt32, pointer_mode : Int32, keyboard_mode : Int32, confine_to : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, cursor : <a href=\"../X11/C/Cursor.html\">X11::C::Cursor</a>, time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":5075,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5075"},"def":{"name":"grab_pointer","args":[{"name":"grab_window","doc":null,"default_value":"","external_name":"grab_window","restriction":"X11::C::Window"},{"name":"owner_events","doc":null,"default_value":"","external_name":"owner_events","restriction":"Bool"},{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"UInt32"},{"name":"pointer_mode","doc":null,"default_value":"","external_name":"pointer_mode","restriction":"Int32"},{"name":"keyboard_mode","doc":null,"default_value":"","external_name":"keyboard_mode","restriction":"Int32"},{"name":"confine_to","doc":null,"default_value":"","external_name":"confine_to","restriction":"X11::C::Window"},{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.grab_pointer(@dpy, owner_events ? X::True : X::False, event_mask, pointer_mode, keyboard_mode, confine_to, cursor, time)"}},{"id":"grab_server:Int32-instance-method","html_id":"grab_server:Int32-instance-method","name":"grab_server","doc":"Disables processing of requests and close downs\non all other connections than the one this request arrived on.\n\n###Description\nThe `grab_server` function disables processing of requests and close downs\non all other connections than the one this request arrived on.\nYou should not grab the X server any more than is absolutely necessary.\n\n###See also\n`grab_key`, `grab_keyboard`, `grab_pointer`, `ungrab_server`.","summary":"<p>Disables processing of requests and close downs on all other connections than the one this request arrived on.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":5089,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5089"},"def":{"name":"grab_server","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.grab_server(@dpy)"}},{"id":"height(screen_number:Int32):Int32-instance-method","html_id":"height(screen_number:Int32):Int32-instance-method","name":"height","doc":"Returns an integer that describes the height of the screen in pixels.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.","summary":"<p>Returns an integer that describes the height of the screen in pixels.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : Int32","args_html":"(screen_number : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3092,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3092"},"def":{"name":"height","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.display_height(@dpy, screen_number)"}},{"id":"height_mm(screen_number:Int32):Int32-instance-method","html_id":"height_mm(screen_number:Int32):Int32-instance-method","name":"height_mm","doc":"Returns the height of the specified screen in millimeters.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.","summary":"<p>Returns the height of the specified screen in millimeters.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : Int32","args_html":"(screen_number : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3100,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3100"},"def":{"name":"height_mm","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.display_height_mm(@dpy, screen_number)"}},{"id":"hosts:Array(HostAddress)-instance-method","html_id":"hosts:Array(HostAddress)-instance-method","name":"hosts","doc":"Returns current access control list.\n\n###Description\n\nThe `hosts` function returns the current access control list as well as whether\nthe use of the list at connection setup was enabled or disabled. `hosts` allows a\nprogram to find out what machines can make connections. It also returns an array of host objects\nthat were allocated by the function.\n\n###See also\n`add_host`, `add_hosts`, `disable_access_control`, `enable_access_control`\n`remove_host`, `remove_hosts`, `set_access_control`.","summary":"<p>Returns current access control list.</p>","abstract":false,"args":[],"args_string":" : Array(HostAddress)","args_html":" : Array(<a href=\"../X11/HostAddress.html\">HostAddress</a>)","location":{"filename":"src/x11/display.cr","line_number":1133,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1133"},"def":{"name":"hosts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(HostAddress)","visibility":"Public","body":"phosts = X.list_hosts(@dpy, out count, out state)\nif phosts.null? || count <= 0\n  return [] of HostAddress\nend\naddresses = Array(HostAddress).new\n(0...count).each do |i|\n  addresses << (HostAddress.new((  phosts + i)))\nend\nX.free(phosts.as(PChar))\naddresses\n"}},{"id":"icon_name(w:X11::C::Window):String-instance-method","html_id":"icon_name(w:X11::C::Window):String-instance-method","name":"icon_name","doc":"Returns the name to be displayed in the specified window's icon.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `icon_name` function returns the name to be displayed in the specified\nwindow's icon. If it succeeds, it returns a string; otherwise, if no icon\nname has been set for the window, it returns empty string. If the\ndata returned by the server is in the Latin Portable Character Encoding,\nthen the returned string is in the Host Portable Character Encoding.\nOtherwise, the result is implementation dependent.\n\n`icon_name` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`X11::alloc_class_hint`, `X11::alloc_icon_size`, `X11::alloc_size_hints`,\n`X11::alloc_wm_hints`, `X11::free`, `wm_icon_name`, `set_command`,\n`set_icon_name`, `set_text_property`, `set_transient_for_hint`,\n`set_wm_client_machine`, `set_wm_colormap_windows`, `set_wm_icon_name`,\n`set_wm_name`, `set_wm_properties`, `set_wm_protocols`, `X11:string_list_to_text_property`.","summary":"<p>Returns the name to be displayed in the specified window's icon.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : String","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : String","location":{"filename":"src/x11/display.cr","line_number":4486,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4486"},"def":{"name":"icon_name","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"X.get_icon_name(@dpy, w, out pstring)\nif pstring.null?\n  return \"\"\nend\nstr = String.new(pstring)\nX.free(pstring)\nstr\n"}},{"id":"iconify_window(w:X11::C::Window,screen_number:Int32):X11::C::X::Status-instance-method","html_id":"iconify_window(w:X11::C::Window,screen_number:Int32):X11::C::X::Status-instance-method","name":"iconify_window","doc":"Sends a WM_CHANGE_STATE ClientMessage event.\n\n###Arguments\n- **w** Specifies the window.\n- **screen_number** Specifies the appropriate screen number on the host server.\n\n###Description\nThe `iconify_window` function sends a WM_CHANGE_STATE ClientMessage event\nwith a format of 32 and a first data element of **IconicState** and a window\nof w to the root window of the specified screen with an event mask set to\n**SubstructureNotifyMask** | **SubstructureRedirectMask**.\nWindow managers may elect to receive this message and if the window is in\nits normal state, may treat it as a request to change the window's state\nfrom normal to iconic. If the WM_CHANGE_STATE property cannot be interned,\n`iconify_window` does not send a message and returns a zero status.\nIt returns a nonzero status if the client message is sent successfully; otherwise, it returns a zero status.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`, `destroy_window`,\n`map_window`, `raise_window`, `reconfigure_wm_window`, `unmap_window`, `withdraw_window`.","summary":"<p>Sends a WM_CHANGE_STATE ClientMessage event.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(w : X11::C::Window, screen_number : Int32) : X11::C::X::Status","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, screen_number : Int32) : X11::C::X::Status","location":{"filename":"src/x11/display.cr","line_number":1616,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1616"},"def":{"name":"iconify_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::Status","visibility":"Public","body":"X.iconify_window(@dpy, w, screen_number)"}},{"id":"if_event(predicate:X11::C::X::PDisplay,PEvent,Pointer->Bool,arg:X11::C::X::Pointer):Event?-instance-method","html_id":"if_event(predicate:X11::C::X::PDisplay,PEvent,Pointer->Bool,arg:X11::C::X::Pointer):Event?-instance-method","name":"if_event","doc":"Returns the matched event's associated structure.\n\n###Arguments\n- **predicate** Specifies the procedure that is to be called to determine\nif the next event in the queue matches what you want.\n- **arg** Specifies the user-supplied argument that will be passed to the predicate procedure.\n\n###Description\nThe `if_event` function completes only when the specified predicate procedure.\n`if_event` removes the matching event from the queue and returns it.\n\n###See also\n`check_if_event`, `next_event`, `peek_if_event`, `put_back_event`, `send_event`.","summary":"<p>Returns the matched event's associated structure.</p>","abstract":false,"args":[{"name":"predicate","doc":null,"default_value":"","external_name":"predicate","restriction":"(X11::C::X::PDisplay, PEvent, Pointer -> Bool)"},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"X11::C::X::Pointer"}],"args_string":"(predicate : X11::C::X::PDisplay, PEvent, Pointer -> Bool, arg : X11::C::X::Pointer) : Event?","args_html":"(predicate : X11::C::X::PDisplay, PEvent, Pointer -> Bool, arg : X11::C::X::Pointer) : <a href=\"../X11/Event.html\">Event</a>?","location":{"filename":"src/x11/display.cr","line_number":5106,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5106"},"def":{"name":"if_event","args":[{"name":"predicate","doc":null,"default_value":"","external_name":"predicate","restriction":"(X11::C::X::PDisplay, PEvent, Pointer -> Bool)"},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"X11::C::X::Pointer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"X.if_event(@dpy, out pevent, predicate, arg)\nif pevent.null?\n  nil\nelse\n  Event.from_xevent(pevent.value)\nend\n"}},{"id":"image(d:X11::C::Drawable,x:Int32,y:Int32,width:UInt32,height:UInt32,plane_mask:UInt64,format:Int32):Image-instance-method","html_id":"image(d:X11::C::Drawable,x:Int32,y:Int32,width:UInt32,height:UInt32,plane_mask:UInt64,format:Int32):Image-instance-method","name":"image","doc":"This function specifically supports rudimentary screen dumps.\n\n###Arguments\n- **d** Specifies the drawable.\n- **x**, **y** Specify the *x* and *y* coordinates, which are relative to the origin of the drawable and define the upper-left corner of the rectangle.\n- **width**, **height** Specify the *width* and *height* of the subimage, which define the dimensions of the rectangle.\n- **plane_mask** Specifies the plane mask.\n- **format** Specifies the format for the image. You can pass **XYPixmap** or **ZPixmap** .\n\n###Description\nThe `get_image` function returns an Image object.\nThis object provides you with the contents of the specified rectangle of the drawable in the format you specify.\nIf the `format` argument is **XYPixmap** , the image contains only the bit planes you passed to the plane_mask argument.\nIf the plane_mask argument only requests a subset of the planes of the display,\nthe depth of the returned image will be the number of planes requested.\nIf the format argument is **ZPixmap** , `get_image` returns as zero the bits in all planes not specified in the `plane_mask` argument.\nThe function performs no range checking on the values in `plane_mask` and ignores extraneous bits.\n\n`get_image` returns the depth of the image to the depth member of the Image object.\nThe depth of the image is as specified when the drawable was created,\nexcept when getting a subset of the planes in **XYPixmap** format,\nwhen the depth is given by the number of bits set to 1 in `plane_mask`.\n\nIf the drawable is a *pixmap*, the given rectangle must be wholly contained within the pixmap,\nor a **BadMatch** error results. If the drawable is a *window*,\nthe window must be viewable, and it must be the case that if there were no inferiors or overlapping windows,\nthe specified rectangle of the window would be fully visible on the screen and wholly contained within the outside edges of the window,\nor a **BadMatch** error results. Note that the borders of the window can be included and read with this request.\nIf the window has backing-store, the backing-store contents are returned for regions of the window that are obscured by noninferior windows.\nIf the window does not have backing-store, the returned contents of such obscured regions are undefined.\nThe returned contents of visible regions of inferiors of a different depth than the specified window's depth are also undefined.\nThe pointer cursor image is not included in the returned contents. If a problem occurs, `get_image` raises exception.\n\n`get_image` can generate **BadDrawable** , **BadMatch** , and **BadValue** errors.\n\n###Diagnostic\n- **BadDrawable** A value for a `Drawable` argument does not name a defined `Window` or `Pixmap`.\n- **BadMatch** An `InputOnly` window is used as a `Drawable`.\n- **BadMatch** Some argument or pair of arguments has the correct type and range but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values accepted by the request.\nUnless a specific range is specified for an argument, the full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`Image::add_pixel`, `create_image`, `Image::finalize`, `Image::pixel`, `Image::init`, `put_image`, `Image::put_pixel`, `sub_image`.","summary":"<p>This function specifically supports rudimentary screen dumps.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"plane_mask","doc":null,"default_value":"","external_name":"plane_mask","restriction":"UInt64"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Int32"}],"args_string":"(d : X11::C::Drawable, x : Int32, y : Int32, width : UInt32, height : UInt32, plane_mask : UInt64, format : Int32) : Image","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, x : Int32, y : Int32, width : UInt32, height : UInt32, plane_mask : UInt64, format : Int32) : <a href=\"../X11/Image.html\">Image</a>","location":{"filename":"src/x11/display.cr","line_number":262,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L262"},"def":{"name":"image","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"plane_mask","doc":null,"default_value":"","external_name":"plane_mask","restriction":"UInt64"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Image","visibility":"Public","body":"Image.new(X.get_image(@dpy, d, x, y, width, height, plane_mask, format))"}},{"id":"image_byte_order:Int32-instance-method","html_id":"image_byte_order:Int32-instance-method","name":"image_byte_order","doc":"Specify the required byte order for images for each scanline unit in XY\nformat (bitmap) or for each pixel value in Z format.\nThe function can return either **LSBFirst** or **MSBFirst**.","summary":"<p>Specify the required byte order for images for each scanline unit in XY format (bitmap) or for each pixel value in Z format.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":5118,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5118"},"def":{"name":"image_byte_order","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.image_byte_order(@dpy)"}},{"id":"init_extension(name:String):ExtCodes?-instance-method","html_id":"init_extension(name:String):ExtCodes?-instance-method","name":"init_extension","doc":"Determines if the named extension exists.\n\n###Arguments\n- **name** Specifies the extension name.\n\n###Description\nThe `init_extension` function determines if the named extension exists.\nThen, it allocates storage for maintaining the information about the\nextension on the connection, chains this onto the extension list for the\nconnection, and returns the information the stub implementor will need to\naccess the extension. If the extension does not exist, `init_extension` returns **nil**.\n\nIf the extension name is not in the Host Portable Character Encoding, the\nresult is implementation dependent. Uppercase and lowercase matter; the\nstrings \"thing\", \"Thing\", and \"thinG\" are all considered different names.\n\nThe extension number in the `ExtCodes` structure is needed in the other\ncalls that follow. This extension number is unique only to a single connection.\n\n###See also\n`add_extension`.","summary":"<p>Determines if the named extension exists.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : ExtCodes?","args_html":"(name : String) : <a href=\"../X11/ExtCodes.html\">ExtCodes</a>?","location":{"filename":"src/x11/display.cr","line_number":1334,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1334"},"def":{"name":"init_extension","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ExtCodes | ::Nil","visibility":"Public","body":"pcodes = X.init_extension(@dpy, name.to_unsafe)\nif pcodes.null?\n  return nil\nend\nExtCodes.new(pcodes)\n"}},{"id":"input_focus:NamedTuple()-instance-method","html_id":"input_focus:NamedTuple()-instance-method","name":"input_focus","doc":"Returns the focus window and the current focus state.\n\n###Return\n- **focus** Returns the focus window, **PointerRoot**, or **None**.\n- **revert_to** Returns the current focus state (**RevertToParent**,\n**RevertToPointerRoot**, or **RevertToNone**).\n\n###Description\nThe `input_focus` function returns the focus window and the current focus state.\n\n###See also\n`set_input_focus`, `warp_pointer`.","summary":"<p>Returns the focus window and the current focus state.</p>","abstract":false,"args":[],"args_string":" : NamedTuple()","args_html":" : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":4506,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4506"},"def":{"name":"input_focus","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(focus: X11::C::Window, revert_to: Int32, res: Int32)","visibility":"Public","body":"res = X.get_input_focus(@dpy, out focus_return, out revert_to_return)\n{focus: focus_return, revert_to: revert_to_return, res: res}\n"}},{"id":"install_colormap(colormap:X11::C::Colormap):Int32-instance-method","html_id":"install_colormap(colormap:X11::C::Colormap):Int32-instance-method","name":"install_colormap","doc":"Installs the specified colormap for its associated screen.\n\n###Arguments\n- **colormap** Specifies the colormap.\n\n###Description\nThe `install_colormap` function installs the specified colormap for its\nassociated screen. All windows associated with this colormap immediately\ndisplay with true colors. You associated the windows with this colormap\nwhen you created them by calling `create_window`, `create_simple_window`,\n`change_window_attributes`, or `set_window_colormap`.\n\nIf the specified colormap is not already an installed colormap, the X\nserver generates a **ColormapNotify** event on each window that has that\ncolormap. In addition, for every other colormap that is installed as a\nresult of a call to `install_colormap`, the X server generates a\n**ColormapNotify** event on each window that has that colormap.\n\n`install_colormap` can generate a **BadColor** error.\n\n###Diagnostics\n- **BadColor** A value for a *Colormap* argument does not name a defined *Colormap*.\n\n###See also\n`change_window_attributes`, `create_colormap`, `create_window`, `X11::free`,\n`installed_colormaps`, `uninstall_colormap`.","summary":"<p>Installs the specified colormap for its associated screen.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"args_string":"(colormap : X11::C::Colormap) : Int32","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":5148,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5148"},"def":{"name":"install_colormap","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.install_colormap(@dpy, colormap)"}},{"id":"installed_colormaps(w:X11::C::Window):Array(X11::C::Colormap)-instance-method","html_id":"installed_colormaps(w:X11::C::Window):Array(X11::C::Colormap)-instance-method","name":"installed_colormaps","doc":"Returns a list of the currently installed colormaps.\n\n###Arguments\n- **w** Specifies the window that determines the screen.\n\n###Description\nThe `installed_colormaps` function returns a list of the currently installed\ncolormaps for the screen of the specified window. The order of the colormaps\nin the list is not significant and is no explicit indication of the required list.\nWhen the allocated list is no longer needed.\n\n`installed_colormaps` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`change_window_attributes`, `create_colormap`, `create_window`,\n`install_colormap`, `uninstall_colormap`.","summary":"<p>Returns a list of the currently installed colormaps.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Array(X11::C::Colormap)","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Array(<a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>)","location":{"filename":"src/x11/display.cr","line_number":972,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L972"},"def":{"name":"installed_colormaps","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(X11::C::Colormap)","visibility":"Public","body":"pcolormaps = X.list_installed_colormaps(@dpy, w, out num)\nif pcolormaps.null? || num <= 0\n  return [] of X11::C::Colormap\nend\ncolormaps = Array(X11::C::Colormap).new\n(0...num).each do |i|\n  colormaps << (pcolormaps + i).value\nend\nX.free(pcolormaps.as(PChar))\ncolormaps\n"}},{"id":"intern_atom(atom_name:String,only_if_exists:Bool):X11::C::Atom-instance-method","html_id":"intern_atom(atom_name:String,only_if_exists:Bool):X11::C::Atom-instance-method","name":"intern_atom","doc":"Returns the atom identifier.\n\n###Arguments\n- **atom_name** Specifies the *name* associated with the atom you want returned.\n- **only_if_exists** Specifies a `Bool` value that indicates whether the atom must be created.\n\n###Description\n`intern_atom` function returns the atom identifier associated with the specified `atom_name` string.\nIf `only_if_exists` is **false**, the atom is created if it does not exist.\nTherefore, `intern_atom` can return `None`. If the atom name is not in the Host Portable Character Encoding,\nthe result is implementation dependent. Uppercase and lowercase matter; the strings ``thing'', ``Thing'', and ``thinG'' all designate different atoms.\nThe atom will remain defined even after the client's connection closes.\nIt will become undefined only when the last connection to the X server closes.\n\n`intern_atom` can generate **BadAlloc** and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadValue** Some numeric value falls outside the range of values accepted by the request.\nUnless a specific range is specified for an argument, the full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`atom_name`, `window_property`, `intern_atoms`.","summary":"<p>Returns the atom identifier.</p>","abstract":false,"args":[{"name":"atom_name","doc":null,"default_value":"","external_name":"atom_name","restriction":"String"},{"name":"only_if_exists","doc":null,"default_value":"","external_name":"only_if_exists","restriction":"Bool"}],"args_string":"(atom_name : String, only_if_exists : Bool) : X11::C::Atom","args_html":"(atom_name : String, only_if_exists : Bool) : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>","location":{"filename":"src/x11/display.cr","line_number":484,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L484"},"def":{"name":"intern_atom","args":[{"name":"atom_name","doc":null,"default_value":"","external_name":"atom_name","restriction":"String"},{"name":"only_if_exists","doc":null,"default_value":"","external_name":"only_if_exists","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Atom","visibility":"Public","body":"X.intern_atom(@dpy, atom_name.to_unsafe, only_if_exists ? X::True : X::False)"}},{"id":"internal_connection_numbers:Array(Int32)-instance-method","html_id":"internal_connection_numbers:Array(Int32)-instance-method","name":"internal_connection_numbers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","args_html":" : Array(Int32)","location":{"filename":"src/x11/display.cr","line_number":8291,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8291"},"def":{"name":"internal_connection_numbers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"X.internal_connection_numbers(@dpy, out fd_return, out count_return)\nif count_return > 0\n  fd = Array(Int32).new(count_return) do |i|\n    (fd_return + i).value\n  end\nelse\n  fd = [] of Int32\nend\nfd\n"}},{"id":"keyboard_control:KeyboardState-instance-method","html_id":"keyboard_control:KeyboardState-instance-method","name":"keyboard_control","doc":"Returns the current keyboard controls in the specified `KeyboardState` structure.\n\n###Description\nThe `keyboard_control` function returns the current control values for the\nkeyboard to the `KeyboardState` structure.\n\nFor the LEDs, the least-significant bit of **led_mask** corresponds to LED\none, and each bit set to 1 in led_mask indicates an LED that is lit.\nThe **global_auto_repeat** member can be set to **AutoRepeatModeOn** or\n**AutoRepeatModeOff**. The **auto_repeats** member is a bit vector. Each\nbit set to 1 indicates that auto-repeat is enabled for the corresponding key.\nThe vector is represented as 32 bytes. Byte N (from 0) contains the bits\nfor keys 8N to 8N + 7 with the least-significant bit in the byte representing key 8N.\n\n###See also\n`auto_repeat_off`, `auto_repeat_on`, `bell`, `change_keyboard_control`,\n`change_keyboard_mapping`, `keyboard_control`, `query_keymap`, `set_pointer_mapping`.","summary":"<p>Returns the current keyboard controls in the specified <code><a href=\"../X11/KeyboardState.html\">KeyboardState</a></code> structure.</p>","abstract":false,"args":[],"args_string":" : KeyboardState","args_html":" : <a href=\"../X11/KeyboardState.html\">KeyboardState</a>","location":{"filename":"src/x11/display.cr","line_number":4528,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4528"},"def":{"name":"keyboard_control","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"KeyboardState","visibility":"Public","body":"X.get_keyboard_control(@dpy, out pstate)\nKeyboardState.new(pstate)\n"}},{"id":"keyboard_mapping(first_keycode:X11::C::KeyCode,keycode_count:Int32):Array(X11::C::KeySym)-instance-method","html_id":"keyboard_mapping(first_keycode:X11::C::KeyCode,keycode_count:Int32):Array(X11::C::KeySym)-instance-method","name":"keyboard_mapping","doc":"Returns the symbols for the specified number of KeyCodes starting with first_keycode.\n\n###Arguments\n- **first_keycode** Specifies the first KeyCode that is to be returned.\n- **keycode_count** Specifies the number of KeyCodes that are to be returned.\n\n###Description\nThe `keyboard_mapping` function returns the symbols for the specified\nnumber of KeyCodes starting with first_keycode. The value specified in\nfirst_keycode must be greater than or equal to min_keycode as returned by\n`display_keycodes`, or a **BadValue** error results. In addition, the\nfollowing expression must be less than or equal to max_keycode as returned by `display_keycodes`:\n```\nfirst_keycode + keycode_count - 1\n```\nIf this is not the case, a **BadValue** error results. The number of elements in the KeySyms list is:\n```\nkeycode_count * keysyms_per_keycode\n```\nKeySym number N, counting from zero, for KeyCode K has the following index in the list, counting from zero:\n```\n(K - first_code) * keysyms_per_code + N\n```\nThe X server arbitrarily chooses the keysyms_per_keycode value to be large\nenough to report all requested symbols. A special KeySym value of\n**NoSymbol** is used to fill in unused elements for individual KeyCodes.\n\n`keyboard_mapping` can generate a **BadValue** error.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values\naccepted by the request. Unless a specific range is specified for an\nargument, the full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`change_keyboard_mapping`, `ModifierKeymap::delete_entry`, `display_keycodes`,\n`ModifierKeymap::finalize`, `modifier_mapping`, `ModifierKeymap::insert_entry`,\n`ModifierKeymap::new`, `set_modifier_mapping`, `set_pointer_mapping`.","summary":"<p>Returns the symbols for the specified number of KeyCodes starting with first_keycode.</p>","abstract":false,"args":[{"name":"first_keycode","doc":null,"default_value":"","external_name":"first_keycode","restriction":"X11::C::KeyCode"},{"name":"keycode_count","doc":null,"default_value":"","external_name":"keycode_count","restriction":"Int32"}],"args_string":"(first_keycode : X11::C::KeyCode, keycode_count : Int32) : Array(X11::C::KeySym)","args_html":"(first_keycode : <a href=\"../X11/C/KeyCode.html\">X11::C::KeyCode</a>, keycode_count : Int32) : Array(<a href=\"../X11/C/KeySym.html\">X11::C::KeySym</a>)","location":{"filename":"src/x11/display.cr","line_number":1200,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1200"},"def":{"name":"keyboard_mapping","args":[{"name":"first_keycode","doc":null,"default_value":"","external_name":"first_keycode","restriction":"X11::C::KeyCode"},{"name":"keycode_count","doc":null,"default_value":"","external_name":"keycode_count","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(X11::C::KeySym)","visibility":"Public","body":"pkeysyms = X.get_keyboard_mapping(@dpy, first_keycode, keycode_count, out keysyms_per_keycode)\nif (keysyms_per_keycode == 0) || pkeysyms.null?\n  return [] of X11::C::KeySym\nend\nkeysyms = Array(X11::C::KeySym).new\n(0...(keycode_count * keysyms_per_keycode)).each do |i|\n  keysyms << (pkeysyms + i).value\nend\nX.free(pkeysyms.as(PChar))\nkeysyms\n"}},{"id":"keycode_to_keysym(keycode:X11::C::KeyCode,index:Int32):X11::C::KeySym-instance-method","html_id":"keycode_to_keysym(keycode:X11::C::KeyCode,index:Int32):X11::C::KeySym-instance-method","name":"keycode_to_keysym","doc":"Returns the KeySym defined for the specified KeyCode.\n\n###Arguments\n- **keycode** Specifies the KeyCode.\n- **index** Specifies the element of KeyCode vector.\n\n###Description\nThe `keycode_to_keysym` function uses internal Xlib tables and returns the\nKeySym defined for the specified KeyCode and the element of the KeyCode vector.\nIf no symbol is defined, `keycode_to_keysym` returns `NoSymbol`.\n\n###See also\n`keysym_to_keycode`.","summary":"<p>Returns the KeySym defined for the specified KeyCode.</p>","abstract":false,"args":[{"name":"keycode","doc":null,"default_value":"","external_name":"keycode","restriction":"X11::C::KeyCode"},{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"args_string":"(keycode : X11::C::KeyCode, index : Int32) : X11::C::KeySym","args_html":"(keycode : <a href=\"../X11/C/KeyCode.html\">X11::C::KeyCode</a>, index : Int32) : <a href=\"../X11/C/KeySym.html\">X11::C::KeySym</a>","location":{"filename":"src/x11/display.cr","line_number":1157,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1157"},"def":{"name":"keycode_to_keysym","args":[{"name":"keycode","doc":null,"default_value":"","external_name":"keycode","restriction":"X11::C::KeyCode"},{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::KeySym","visibility":"Public","body":"X.keycode_to_keysym(@dpy, keycode, index)"}},{"id":"keycodes:NamedTuple-instance-method","html_id":"keycodes:NamedTuple-instance-method","name":"keycodes","doc":"Returns the min-keycodes and max-keycodes supported by the specified display.\n\n###Return\n- **min_keycodes** Returns the minimum number of KeyCodes.\n- **max_keycodes** Returns the maximum number of KeyCodes.\n\n###Description\nThen `keycodes` function returns the min-keycodes and max-keycodes supported\nby the specified display. The minimum number of KeyCodes returned is never\nless than 8, and the maximum number of KeyCodes returned is never greater\nthan 255. Not all KeyCodes in this range are required to have corresponding keys.\n\n###See also\n`change_keyboard_mapping`, `ModifierKeymap::delete_entry`, `X11::free`,\n`ModifierKeymap::finalize`, `keyboard_mapping`, `modifier_mapping`,\n`ModifierKeymap::insert_entry`, `ModifierKeymap::new`,\n`set_modifier_mapping`, `set_pointer_mapping`.","summary":"<p>Returns the min-keycodes and max-keycodes supported by the specified display.</p>","abstract":false,"args":[],"args_string":" : NamedTuple","args_html":" : NamedTuple","location":{"filename":"src/x11/display.cr","line_number":3121,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3121"},"def":{"name":"keycodes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple","visibility":"Public","body":"{min_keycodes : Int32, max_keycode : Int32, res : Int32}\nres = X.display_keycodes(@dpy, out min, out max)\n{min_keycodes: min, max_keycodes: max, result: res}\n"}},{"id":"keysym_to_keycode(keysym:X11::C::KeySym):X11::C::KeyCode-instance-method","html_id":"keysym_to_keycode(keysym:X11::C::KeySym):X11::C::KeyCode-instance-method","name":"keysym_to_keycode","doc":"Returns KeyCode for the specified KeySym.\n\n###Arguments\n- **keysym** Specifies the *KeySym* that is to be searched for or converted.\n\n###Description\nStandard *KeySym* names are obtained from `c/keysymdef.cr` by removing the\nXK_ prefix from each name. *KeySyms* that are not part of the Xlib standard\nalso may be obtained with this function. The set of *KeySyms* that are\navailable in this manner and the mechanisms by which Xlib obtains them is implementation-dependent.\n\nIf the *KeySym* name is not in the Host Portable Character Encoding, the result is implementation-dependent.\n\n###See also\n`KeyEvent::lookup_keysym`.","summary":"<p>Returns KeyCode for the specified KeySym.</p>","abstract":false,"args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"X11::C::KeySym"}],"args_string":"(keysym : X11::C::KeySym) : X11::C::KeyCode","args_html":"(keysym : <a href=\"../X11/C/KeySym.html\">X11::C::KeySym</a>) : <a href=\"../X11/C/KeyCode.html\">X11::C::KeyCode</a>","location":{"filename":"src/x11/display.cr","line_number":5167,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5167"},"def":{"name":"keysym_to_keycode","args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"X11::C::KeySym"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::KeyCode","visibility":"Public","body":"X.keysym_to_keycode(@dpy, keysym)"}},{"id":"kill_client(resource:X11::C::XID):Int32-instance-method","html_id":"kill_client(resource:X11::C::XID):Int32-instance-method","name":"kill_client","doc":"Forces a close-down of the client.\n\n###Arguments\n- **resource** Specifies any resource associated with the client\nthat you want to destroy or **AllTemporary**.\n\n###Description\nThe `kill_client` function forces a close-down of the client that created\nthe resource if a valid resource is specified. If the client has already\nterminated in either **RetainPermanent** or **RetainTemporary** mode, all\nof the client's resources are destroyed. If **AllTemporary** is specified,\nthe resources of all clients that have terminated in **RetainTemporary**\nare destroyed. This permits implementation of window manager facilities\nthat aid debugging. A client can set its close-down mode to **RetainTemporary**.\nIf the client then crashes, its windows would not be destroyed. The programmer\ncan then inspect the application's window tree and use the window manager to destroy the zombie windows.\n\n`kill_client` can generate a **BadValue** error.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n\n###See also\n`set_close_down_mode`.","summary":"<p>Forces a close-down of the client.</p>","abstract":false,"args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":"X11::C::XID"}],"args_string":"(resource : X11::C::XID) : Int32","args_html":"(resource : <a href=\"../X11/C/XID.html\">X11::C::XID</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":5198,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5198"},"def":{"name":"kill_client","args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":"X11::C::XID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.kill_client(@dpy, resource)"}},{"id":"last_known_request_processed:UInt64-instance-method","html_id":"last_known_request_processed:UInt64-instance-method","name":"last_known_request_processed","doc":"Returns the full serial number of the last request known by Xlib to have\nbeen processed by the X server. Xlib automatically sets this number when replies,\nevents, and errors are received. extract the full serial number of the last\nrequest known by Xlib to have been processed by the X server.\nXlib automatically sets this number when replies, events, and errors are received.","summary":"<p>Returns the full serial number of the last request known by Xlib to have been processed by the X server.</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/display.cr","line_number":1419,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1419"},"def":{"name":"last_known_request_processed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"X.last_known_request_processed(@dpy)"}},{"id":"load_font(name:String):X11::X::Font-instance-method","html_id":"load_font(name:String):X11::X::Font-instance-method","name":"load_font","doc":"Loads the specified font\n\n###Arguments\n- **name** Specifies the name of the font, which is a string.\n\n###Description\nThe `load_font` function loads the specified font and returns its\nassociated font ID. If the font name is not in the Host Portable Character Encoding,\nthe result is implementation dependent. Use of uppercase or lowercase does not matter.\nWhen the characters \"?\" and \"*\" are used in a font name, a pattern match\nis performed and any matching font is used. In the pattern, the \"?\" character\nwill match any single character, and the \"*\" character will match any number of characters.\nA structured format for font names is specified in the X Consortium standard\n**X Logical Font Description Conventions**. If `load_font` was unsuccessful at loading the specified font,\na **BadName** error results. Fonts are not associated with a particular\nscreen and can be stored as a component of any `X11::C::X::GC`.\nWhen the font is no longer needed, call `unload_font`.\n\n`load_font` can generate **BadAlloc** and **BadName** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadName** A font or color of the specified name does not exist.\n\n###See also\n`create_gc`, `free_font`, `FontStruct::property`, `list_fonts`,\n`load_query_font`, `query_font`, `set_font_path`, `unload_font`.","summary":"<p>Loads the specified font</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : X11::X::Font","args_html":"(name : String) : X11::X::Font","location":{"filename":"src/x11/display.cr","line_number":705,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L705"},"def":{"name":"load_font","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::X::Font","visibility":"Public","body":"X.load_font(@dpy, name.to_unsafe)"}},{"id":"load_query_font(name:String):FontStruct-instance-method","html_id":"load_query_font(name:String):FontStruct-instance-method","name":"load_query_font","doc":"Provides the most common way for accessing a font.\n\n###Arguments\n- **name** Specifies the name of the font.\n\n###Description\n`load_query_font` function provides the most common way for accessing a font.\n`load_query_font` both opens (loads) the specified font and returns a pointer\nto the appropriate `FontStruct` structure. If the font name is not in the\nHost Portable Character Encoding, the result is implementation dependent.\nIf the font does not exist, `load_query_font` returns **nil**.\n\n`load_query_font` can generate a **BadAlloc** error.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n\n###See also\n`create_gc`, `free_font`, `FontStruct::property`, `list_fonts`, `load_font`,\n`query_font`, `set_font_path`, `unload_font`.","summary":"<p>Provides the most common way for accessing a font.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : FontStruct","args_html":"(name : String) : <a href=\"../X11/FontStruct.html\">FontStruct</a>","location":{"filename":"src/x11/display.cr","line_number":111,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L111"},"def":{"name":"load_query_font","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontStruct","visibility":"Public","body":"FontStruct.new(self, X.load_query_font(@dpy, name.to_unsafe))"}},{"id":"lock-instance-method","html_id":"lock-instance-method","name":"lock","doc":"Locks out all other threads from using the actual display.\n\n###Description\nThe `lock` function locks out all other threads from using the actual display.\nOther threads attempting to use the display will block until the display is\nunlocked by this thread. Nested calls to `lock` work correctly; the display\nwill not actually be unlocked until `unlock` has been called the same number\nof times as `lock_display`. This function has no effect unless Xlib was\nsuccessfully initialized for threads using `X11::init_threads`.\n\n###See also\n`X11::init_threads`, `unlock_display`.","summary":"<p>Locks out all other threads from using the actual display.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/display.cr","line_number":1291,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1291"},"def":{"name":"lock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.lock_display\nself\n"}},{"id":"lookup_color(colormap:X11::C::Colormap,color_name:String):NamedTuple()-instance-method","html_id":"lookup_color(colormap:X11::C::Colormap,color_name:String):NamedTuple()-instance-method","name":"lookup_color","doc":"Looks up the string name of a color with respect\nto the screen associated with the specified colormap.\n\n###Arguments\n- **colormap** Specifies the colormap.\n- **color_name** Specifies the color name string (for example, red) whose\ncolor definition structure you want returned.\n\n###Return\n- **exact_def** Returns the exact RGB values.\n- **screen_def** Returns the closest RGB values provided by the hardware.\n\n###Description\nThe `lookup_color` function looks up the string name of a color with respect\nto the screen associated with the specified colormap. It returns both the\nexact color values and the closest values provided by the screen with respect\nto the visual type of the specified colormap. If the color name is not in\nthe Host Portable Character Encoding, the result is implementation dependent.\nUse of uppercase or lowercase does not matter.\n\n`lookup_color` can generate a **BadColor** error.\n\n###Diagnostics\n- **BadColor** A value for a *Colormap* argument does not name a defined *Colormap*.\n\n###See also\n`alloc_color`, `create_colormap`, `lookup_color`, `parse_color`,\n`query_color`, `query_colors`, `store_colors`.","summary":"<p>Looks up the string name of a color with respect to the screen associated with the specified colormap.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"color_name","doc":null,"default_value":"","external_name":"color_name","restriction":"String"}],"args_string":"(colormap : X11::C::Colormap, color_name : String) : NamedTuple()","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>, color_name : String) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":5230,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5230"},"def":{"name":"lookup_color","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"color_name","doc":null,"default_value":"","external_name":"color_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(exact_def: Color, screen_def: Color, res: X11::C::Status)","visibility":"Public","body":"res = X.lookup_color(@dpy, colormap, color_name.to_unsafe, out exact_def_return, out screen_def_return)\n{exact_def: Color.new(exact_def_return), screen_def: Color.new(screen_def_return), res: res}\n"}},{"id":"lower_window(w:X11::C::Window):Int32-instance-method","html_id":"lower_window(w:X11::C::Window):Int32-instance-method","name":"lower_window","doc":"Lowers the specified window to the bottom of\nthe stack so that it does not obscure any sibling windows.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `lower_window` function lowers the specified window to the bottom of\nthe stack so that it does not obscure any sibling windows. If the windows\nare regarded as overlapping sheets of paper stacked on a desk, then lowering\na window is analogous to moving the sheet to the bottom of the stack but\nleaving its x and y location on the desk constant. Lowering a mapped window\nwill generate **Expose** events on any windows it formerly obscured.\n\nIf the override-redirect attribute of the window is **false** and some\nother client has selected **SubstructureRedirectMask** on the parent, the\nX server generates a **ConfigureRequest** event, and no processing is performed.\nOtherwise, the window is lowered to the bottom of the stack.\n\n`lower_window` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `circulate_subwindows`, `circulate_subwindows_down`,\n`circulate_subwindows_up`, `configure_window`, `create_window`,\n`destroy_window`, `map_window`, `raise_window`, `restack_windows`.","summary":"<p>Lowers the specified window to the bottom of the stack so that it does not obscure any sibling windows.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":5263,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5263"},"def":{"name":"lower_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.lower_window(@dpy, w)"}},{"id":"map_raised(w:X11::C::Window):Int32-instance-method","html_id":"map_raised(w:X11::C::Window):Int32-instance-method","name":"map_raised","doc":"Maps the window and all of its subwindows that have had map requests.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `map_raised` function essentially is similar to `map_window` in that\nit maps the window and all of its subwindows that have had map requests.\nHowever, it also raises the specified window to the top of the stack.\nFor additional information, see `map_window`.\n\n`map_raised` can generate multiple **BadWindow** errors.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `map_subwindows`, `map_window`, `unmap_window`.","summary":"<p>Maps the window and all of its subwindows that have had map requests.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":5286,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5286"},"def":{"name":"map_raised","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.map_raised(@dpy, w)"}},{"id":"map_subwindows(w:X11::C::Window):Int32-instance-method","html_id":"map_subwindows(w:X11::C::Window):Int32-instance-method","name":"map_subwindows","doc":"Maps all subwindows for a specified window in top-to-bottom stacking order.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `map_subwindows` function maps all subwindows for a specified window\nin top-to-bottom stacking order. The X server generates **Expose** events\non each newly displayed window. This may be much more efficient than mapping\nmany windows one at a time because the server needs to perform much of the\nwork only once, for all of the windows, rather than for each window.\n\n`map_subwindows` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a **Window** argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `map_raised`, `map_window`, `unmap_window`.","summary":"<p>Maps all subwindows for a specified window in top-to-bottom stacking order.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":5310,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5310"},"def":{"name":"map_subwindows","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.map_subwindows(@dpy, w)"}},{"id":"map_window(w:X11::C::Window):Int32-instance-method","html_id":"map_window(w:X11::C::Window):Int32-instance-method","name":"map_window","doc":"Maps the window and all of its subwindows that have had map requests.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `map_window` function maps the window and all of its subwindows that\nhave had map requests. Mapping a window that has an unmapped ancestor does\nnot display the window but marks it as eligible for display when the ancestor\nbecomes mapped. Such a window is called unviewable. When all its ancestors\nare mapped, the window becomes viewable and will be visible on the screen\nif it is not obscured by another window. This function has no effect if\nthe window is already mapped.\n\nIf the override-redirect of the window is **false** and if some other client\nhas selected **SubstructureRedirectMask** on the parent window, then the\nX server generates a **MapRequest** event, and the `map_window` function\ndoes not map the window. Otherwise, the window is mapped,\nand the X server generates a **MapNotify** event.\n\nIf the window becomes viewable and no earlier contents for it are remembered,\nthe X server tiles the window with its background. If the window's background\nis undefined, the existing screen contents are not altered, and the X server\ngenerates zero or more **Expose** events. If backing-store was maintained\nwhile the window was unmapped, no **Expose** events are generated. If\nbacking-store will now be maintained, a full-window exposure is always\ngenerated. Otherwise, only visible regions may be reported. Similar\ntiling and exposure take place for any newly viewable inferiors.\n\nIf the window is an **InputOutput** window, `map_window` generates\n**Expose** events on each **InputOutput** window that it causes to be displayed.\nIf the client maps and paints the window and if the client begins processing\nevents, the window is painted twice. To avoid this, first ask for **Expose**\nevents and then map the window, so the client processes input events as usual.\nThe event list will include Expose for each window that has appeared on the screen.\nThe client's normal response to an Expose event should be to repaint the window.\nThis method usually leads to simpler programs and to proper interaction with window managers.\n\n`map_window` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure`, `create_window`,\n`destroy_window`, `map_raised`, `map_subwindows`, `unmap_window`.","summary":"<p>Maps the window and all of its subwindows that have had map requests.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":5360,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5360"},"def":{"name":"map_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.map_window(@dpy, w)"}},{"id":"mask_event(event_mask:Int64):Event?-instance-method","html_id":"mask_event(event_mask:Int64):Event?-instance-method","name":"mask_event","doc":"Returns the matched event's associated structure.\n\n###Arguments\n- **event_mask** Specifies the event mask.\n\n###Description\nThe `mask_event` function searches the event queue for the events associated\nwith the specified mask. When it finds a match, `mask_event` removes that event.\nThe other events stored in the queue are not discarded. If the event you\nrequested is not in the queue, `mask_event` flushes the output buffer and blocks until one is received.\n\n###See also\n`check_mask_event`, `check_typed_event`, `check_typed_window_event`,\n`check_window_event`, `if_event`, `next_event`, `peek_event`,\n`put_back_event`, `send_event`, `window_event`.","summary":"<p>Returns the matched event's associated structure.</p>","abstract":false,"args":[{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"Int64"}],"args_string":"(event_mask : Int64) : Event?","args_html":"(event_mask : Int64) : <a href=\"../X11/Event.html\">Event</a>?","location":{"filename":"src/x11/display.cr","line_number":5379,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5379"},"def":{"name":"mask_event","args":[{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"X.mask_event(@dpy, event_mask, out pevent)\nif pevent.null?\n  nil\nelse\n  Event.from_xevent(pevent.value)\nend\n"}},{"id":"max_request_size:Int64-instance-method","html_id":"max_request_size:Int64-instance-method","name":"max_request_size","doc":"Returns the maximum request size.\n\n###Description\nThe `max_request_size` function returns the maximum request size (in 4-byte units)\nsupported by the server without using an extended-length protocol encoding.\nSingle protocol requests to the server can be no larger than this size unless\nan extended-length protocol encoding is supported by the server. The protocol\nguarantees the size to be no smaller than 4096 units (16384 bytes). Xlib\nautomatically breaks data up into multiple protocol requests as necessary\nfor the following functions: `draw_points`, `draw_rectangles`,\n`draw_segments`, `fill_arcs`, `fill_rectangles`, and `put_image`.","summary":"<p>Returns the maximum request size.</p>","abstract":false,"args":[],"args_string":" : Int64","args_html":" : Int64","location":{"filename":"src/x11/display.cr","line_number":1222,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1222"},"def":{"name":"max_request_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"X.max_request_size(@dpy)"}},{"id":"mb_draw_image_string(d:X11::C::Drawable,font_set:X11::C::X::FontSet,gc:X11::C::X::GC,x:Int32,y:Int32,text:String)-instance-method","html_id":"mb_draw_image_string(d:X11::C::Drawable,font_set:X11::C::X::FontSet,gc:X11::C::X::GC,x:Int32,y:Int32,text:String)-instance-method","name":"mb_draw_image_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(d : X11::C::Drawable, font_set : X11::C::X::FontSet, gc : X11::C::X::GC, x : Int32, y : Int32, text : String)","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, font_set : X11::C::X::FontSet, gc : X11::C::X::GC, x : Int32, y : Int32, text : String)","location":{"filename":"src/x11/display.cr","line_number":8265,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8265"},"def":{"name":"mb_draw_image_string","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.mb_draw_image_string(@dpy, d, font_set, gc, x, y, text.to_unsafe, text.size)"}},{"id":"mb_draw_string(d:X11::C::Drawable,font_set:X11::C::X::FontSet,gc:X11::C::X::GC,x:Int32,y:Int32,text:String)-instance-method","html_id":"mb_draw_string(d:X11::C::Drawable,font_set:X11::C::X::FontSet,gc:X11::C::X::GC,x:Int32,y:Int32,text:String)-instance-method","name":"mb_draw_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(d : X11::C::Drawable, font_set : X11::C::X::FontSet, gc : X11::C::X::GC, x : Int32, y : Int32, text : String)","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, font_set : X11::C::X::FontSet, gc : X11::C::X::GC, x : Int32, y : Int32, text : String)","location":{"filename":"src/x11/display.cr","line_number":8253,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8253"},"def":{"name":"mb_draw_string","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.mb_draw_string(@dpy, s, font_set, gc, x, y, text.to_unsafe, text.size)"}},{"id":"mb_draw_text(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,text_items:Array(MbTextItem))-instance-method","html_id":"mb_draw_text(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,text_items:Array(MbTextItem))-instance-method","name":"mb_draw_text","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text_items","doc":null,"default_value":"","external_name":"text_items","restriction":"Array(MbTextItem)"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x : Int32, y : Int32, text_items : Array(MbTextItem))","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32, text_items : Array(<a href=\"../X11/MbTextItem.html\">MbTextItem</a>))","location":{"filename":"src/x11/display.cr","line_number":8241,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8241"},"def":{"name":"mb_draw_text","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text_items","doc":null,"default_value":"","external_name":"text_items","restriction":"Array(MbTextItem)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.mb_draw_text(@dpy, d, gc, x, y, text_items.to_unsafe.as(X11::C::X::PmbTextItem), text_items.size)"}},{"id":"modifier_mapping:ModifierKeymap-instance-method","html_id":"modifier_mapping:ModifierKeymap-instance-method","name":"modifier_mapping","doc":"Returns a newly created `ModifierKeymap` object that contains the keys being used as modifiers.\n\n###See also\n`change_keyboard_mapping`, `ModifierKeymap::delete_entry`, `display_keycodes`,\n`ModifierKeymap::finalize`, `keyboard_mapping`, `ModifierKeymap::insert_entry`,\n`ModifierKeymap::new`, `set_modifier_mapping`, `set_pointer_mapping`.","summary":"<p>Returns a newly created <code><a href=\"../X11/ModifierKeymap.html\">ModifierKeymap</a></code> object that contains the keys being used as modifiers.</p>","abstract":false,"args":[],"args_string":" : ModifierKeymap","args_html":" : <a href=\"../X11/ModifierKeymap.html\">ModifierKeymap</a>","location":{"filename":"src/x11/display.cr","line_number":175,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L175"},"def":{"name":"modifier_mapping","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ModifierKeymap","visibility":"Public","body":"ModifierKeymap.new(X.get_modifier_mapping(@dpy))"}},{"id":"motion_buffer_size:UInt64-instance-method","html_id":"motion_buffer_size:UInt64-instance-method","name":"motion_buffer_size","doc":"Returns the motion-buffer size.\n\n###Description\nThe server may retain the recent history of the pointer motion and do so\nto a finer granularity than is reported by `MotionNotify` events.\nThe `motion_events` function makes this history available.\n\n###See also\n`motion_events`, `if_event`, `next_event`, `put_back_event`, `send_event`.","summary":"<p>Returns the motion-buffer size.</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/display.cr","line_number":1275,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1275"},"def":{"name":"motion_buffer_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"X.display_motion_buffer_size(@dpy)"}},{"id":"motion_events(w:X11::C::Window,start:X11::C::Time,stop:X11::C::Time):Array(TimeCoord)-instance-method","html_id":"motion_events(w:X11::C::Window,start:X11::C::Time,stop:X11::C::Time):Array(TimeCoord)-instance-method","name":"motion_events","doc":"Returns all events in an array from the motion history buffer that fall between the specified start and stop times,\ninclusive, and that have coordinates that lie within the specified window (including its borders) at its present placement.\nIf the server does not support motion history, if the start time is later than the stop time,\nor if the start time is in the future, no events are returned; *motion_events* returns empty array.\nIf the stop time is in the future, it is equivalent to specifying *CurrentTime* .\n\n###Arguments\n- **w** Specifies the window.\n- **start**, **stop** Specify the time interval in which the events are\nreturned from the motion history buffer. You can pass a timestamp or **CurrentTime**.\n###Description\nThe `motion_events` function returns all events in the motion history buffer\nthat fall between the specified start and stop times, inclusive,\nand that have coordinates that lie within the specified window (including its borders)\nat its present placement. If the server does not support motion history,\nif the start time is later than the stop time, or if the start time is in\nthe future, no events are returned; `motion_events` returns **nil**.\nIf the stop time is in the future, it is equivalent to specifying **CurrentTime**.\n\n`motion_events` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`display_motion_buffer_size`, `if_event`, `next_event`, `put_back_event`, `send_event`.","summary":"<p>Returns all events in an array from the motion history buffer that fall between the specified start and stop times, inclusive, and that have coordinates that lie within the specified window (including its borders) at its present placement.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"X11::C::Time"},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":"X11::C::Time"}],"args_string":"(w : X11::C::Window, start : X11::C::Time, stop : X11::C::Time) : Array(TimeCoord)","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, start : <a href=\"../X11/C/Time.html\">X11::C::Time</a>, stop : <a href=\"../X11/C/Time.html\">X11::C::Time</a>) : Array(<a href=\"../X11/TimeCoord.html\">TimeCoord</a>)","location":{"filename":"src/x11/display.cr","line_number":160,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L160"},"def":{"name":"motion_events","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"X11::C::Time"},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(TimeCoord)","visibility":"Public","body":"p_time_coords = X.get_motion_events(@dpy, w, start, stop, out num_time_coords)\nif num_time_coords == 0\n  return [] of TimeCoord\nend\ntime_coords = Array(TimeCoord).new(num_time_coords)\n(0...num_time_coords).each do |i|\n  time_coords[i] = TimeCoord.new(p_time_coords[i])\nend\n"}},{"id":"move_resize_window(w:X11::C::Window,x:Int32,y:Int32,width:UInt32,height:UInt32):Int32-instance-method","html_id":"move_resize_window(w:X11::C::Window,x:Int32,y:Int32,width:UInt32,height:UInt32):Int32-instance-method","name":"move_resize_window","doc":"Changes the size and location of the specified window without raising it.\n\n###Arguments\n- **w** Specifies the window to be reconfigured.\n- **x**, **y** Specify the x and y coordinates, which define the new\nposition of the window relative to its parent.\n- **width**, **height** Specify the width and height, which define the interior size of the window.\n\n###Description\nThe `move_resize_window` function changes the size and location of the\nspecified window without raising it. Moving and resizing a mapped window\nmay generate an **Expose** event on the window. Depending on the new size\nand location parameters, moving and resizing a window may generate **Expose**\nevents on windows that the window formerly obscured.\n\nIf the override-redirect flag of the window is **false** and some other\nclient has selected **SubstructureRedirectMask** on the parent, the X server\ngenerates a **ConfigureRequest** event, and no further processing is performed.\nOtherwise, the window size and location are changed.\n\n`move_resize_window` can generate **BadValue** and **BadWindow** errors.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `map_window`, `move_window`, `raise_window`,\n`resize_window`, `set_window_border_width`, `unmap_window`.","summary":"<p>Changes the size and location of the specified window without raising it.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"args_string":"(w : X11::C::Window, x : Int32, y : Int32, width : UInt32, height : UInt32) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, x : Int32, y : Int32, width : UInt32, height : UInt32) : Int32","location":{"filename":"src/x11/display.cr","line_number":5421,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5421"},"def":{"name":"move_resize_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.move_resize_window(@dpy, w, x, y, width, height)"}},{"id":"move_window(w:X11::C::Window,x:Int32,y:Int32):Int32-instance-method","html_id":"move_window(w:X11::C::Window,x:Int32,y:Int32):Int32-instance-method","name":"move_window","doc":"Function moves the specified window to the specified x and y coordinates.\n\n###Arguments\n- **w** Specifies the window to be moved\n- **x**, **y** Specify the x and y coordinates, which define the new\nlocation of the top-left pixel of the window's border or the window itself if it has no border.\n\n###Description\nThe `move_window` function moves the specified window to the specified x\nand y coordinates, but it does not change the window's size, raise the window,\nor change the mapping state of the window. Moving a mapped window may or may\nnot lose the window's contents depending on if the window is obscured by\nnonchildren and if no backing store exists. If the contents of the window\nare lost, the X server generates **Expose** events. Moving a mapped window\ngenerates **Expose** events on any formerly obscured windows.\n\nIf the override-redirect flag of the window is False and some other client\nhas selected **SubstructureRedirectMask** on the parent, the X server\ngenerates a **ConfigureRequest** event, and no further processing is\nperformed. Otherwise, the window is moved.\n\n`move_window` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `map_window`, `move_resize_window`, `raise_window`,\n`resize_window`, `set_window_border_width`, `unmap_window`.","summary":"<p>Function moves the specified window to the specified x and y coordinates.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(w : X11::C::Window, x : Int32, y : Int32) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, x : Int32, y : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":5455,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5455"},"def":{"name":"move_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.move_window(@dpy, w, x, y)"}},{"id":"next_event:Event?-instance-method","html_id":"next_event:Event?-instance-method","name":"next_event","doc":"Returns the next event in the queue.\n\n###See also\n`AnyEvent`, `check_mask_event`, `check_typed_event`, `check_typed_window_event`,\n`check_window_event`, `if_event`, `mask_event`, `peek_event`,\n`put_back_event`, `send_event`, `window_event`.","summary":"<p>Returns the next event in the queue.</p>","abstract":false,"args":[],"args_string":" : Event?","args_html":" : <a href=\"../X11/Event.html\">Event</a>?","location":{"filename":"src/x11/display.cr","line_number":5465,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5465"},"def":{"name":"next_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"if X.next_event(@dpy, out xevent)\n  Event.from_xevent(xevent)\nelse\n  nil\nend"}},{"id":"next_request:UInt64-instance-method","html_id":"next_request:UInt64-instance-method","name":"next_request","doc":"Returns the full serial number that is to be used for the next request.\nSerial numbers are maintained separately for each display connection.","summary":"<p>Returns the full serial number that is to be used for the next request.</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/display.cr","line_number":1410,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1410"},"def":{"name":"next_request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"X.next_request(@dpy)"}},{"id":"no_op:Int32-instance-method","html_id":"no_op:Int32-instance-method","name":"no_op","doc":"sends a **NoOperation** protocol request to the X server, thereby exercising the connection.","summary":"<p>sends a <strong>NoOperation</strong> protocol request to the X server, thereby exercising the connection.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":5474,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5474"},"def":{"name":"no_op","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.no_op(@dpy)"}},{"id":"open_im(rdb:X11::C::X::PrmHashBucketRec,res_name:String,res_class:String):X11::C::XIM-instance-method","html_id":"open_im(rdb:X11::C::X::PrmHashBucketRec,res_name:String,res_class:String):X11::C::XIM-instance-method","name":"open_im","doc":null,"summary":null,"abstract":false,"args":[{"name":"rdb","doc":null,"default_value":"","external_name":"rdb","restriction":"X11::C::X::PrmHashBucketRec"},{"name":"res_name","doc":null,"default_value":"","external_name":"res_name","restriction":"String"},{"name":"res_class","doc":null,"default_value":"","external_name":"res_class","restriction":"String"}],"args_string":"(rdb : X11::C::X::PrmHashBucketRec, res_name : String, res_class : String) : X11::C::XIM","args_html":"(rdb : X11::C::X::PrmHashBucketRec, res_name : String, res_class : String) : X11::C::XIM","location":{"filename":"src/x11/display.cr","line_number":8277,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8277"},"def":{"name":"open_im","args":[{"name":"rdb","doc":null,"default_value":"","external_name":"rdb","restriction":"X11::C::X::PrmHashBucketRec"},{"name":"res_name","doc":null,"default_value":"","external_name":"res_name","restriction":"String"},{"name":"res_class","doc":null,"default_value":"","external_name":"res_class","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::XIM","visibility":"Public","body":"X.open_im(@dpy, rdb, res_name.to_unsafe, res_class.to_unsafe)"}},{"id":"open_om(rdb:X11::C::X::PrmHashBucketRec,res_name:String,res_class:String):X11::C::XOM-instance-method","html_id":"open_om(rdb:X11::C::X::PrmHashBucketRec,res_name:String,res_class:String):X11::C::XOM-instance-method","name":"open_om","doc":null,"summary":null,"abstract":false,"args":[{"name":"rdb","doc":null,"default_value":"","external_name":"rdb","restriction":"X11::C::X::PrmHashBucketRec"},{"name":"res_name","doc":null,"default_value":"","external_name":"res_name","restriction":"String"},{"name":"res_class","doc":null,"default_value":"","external_name":"res_class","restriction":"String"}],"args_string":"(rdb : X11::C::X::PrmHashBucketRec, res_name : String, res_class : String) : X11::C::XOM","args_html":"(rdb : X11::C::X::PrmHashBucketRec, res_name : String, res_class : String) : X11::C::XOM","location":{"filename":"src/x11/display.cr","line_number":8211,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8211"},"def":{"name":"open_om","args":[{"name":"rdb","doc":null,"default_value":"","external_name":"rdb","restriction":"X11::C::X::PrmHashBucketRec"},{"name":"res_name","doc":null,"default_value":"","external_name":"res_name","restriction":"String"},{"name":"res_class","doc":null,"default_value":"","external_name":"res_class","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::XOM","visibility":"Public","body":"X.open_om(@dpy, rdb, res_name.to_unsafe, res_class.to_unsafe)"}},{"id":"parse_color(colormap:X11::C::Colormap,spec:String):String-instance-method","html_id":"parse_color(colormap:X11::C::Colormap,spec:String):String-instance-method","name":"parse_color","doc":"Returns the exact color value for later use and sets the **DoRed**, **DoGreen**, and **DoBlue** flags.\n\n###Arguments\n- **colormap** Specifies the colormap.\n- **spec** Specifies the color name string; case is ignored.\n\n###Description\nThe `parse_color` function looks up the string name of a color with respect\nto the screen associated with the specified colormap. It returns the exact\ncolor value. If the color name is not in the Host Portable Character Encoding,\nthe result is implementation dependent. Use of uppercase or lowercase does\nnot matter.\n\n`parse_color` can generate a **BadColor** error.\n\n###Diagnostics\n- **BadColor** A value for a *Colormap* argument does not name a defined *Colormap*.\n\n###See also\n`alloc_color`, `create_colormap`, `lookup_color`,\n`query_color`, `query_colors`, `store_colors`.","summary":"<p>Returns the exact color value for later use and sets the <strong>DoRed</strong>, <strong>DoGreen</strong>, and <strong>DoBlue</strong> flags.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"spec","doc":null,"default_value":"","external_name":"spec","restriction":"String"}],"args_string":"(colormap : X11::C::Colormap, spec : String) : String","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>, spec : String) : String","location":{"filename":"src/x11/display.cr","line_number":5499,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5499"},"def":{"name":"parse_color","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"spec","doc":null,"default_value":"","external_name":"spec","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if X.parse_color(@dpy, colormap, out exact_def_return)\n  str = String.new(exact_def_return)\n  X.free(exact_def_return)\n  str\nelse\n  \"\"\nend"}},{"id":"peek_event:Event?-instance-method","html_id":"peek_event:Event?-instance-method","name":"peek_event","doc":"Returns a copy of the matched event's associated structure.\n\n###Description\nThe `peek_event` function returns the first event from the event queue,\nbut it does not remove the event from the queue. If the queue is empty,\n`peek_event` flushes the output buffer and blocks until an event is received.\nIt then copies the event into the client-supplied `Event` structure without\nremoving it from the event queue.\n\n###See also\n`check_mask_event`, `check_typed_event`, `check_typed_window_event`,\n`check_window_event`, `if_event`, `mask_event`, `next_event`,\n`put_back_event`, `send_event`, `window_event`.","summary":"<p>Returns a copy of the matched event's associated structure.</p>","abstract":false,"args":[],"args_string":" : Event?","args_html":" : <a href=\"../X11/Event.html\">Event</a>?","location":{"filename":"src/x11/display.cr","line_number":5522,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5522"},"def":{"name":"peek_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"if X.peek_event(@dpy, out xevent)\n  Event.from_xevent(xevent)\nelse\n  nil\nend"}},{"id":"peek_if_event(predicate:X11::C::X::PDisplay,PEvent,Pointer->Bool,arg:X11::C::X::Pointer):Event?-instance-method","html_id":"peek_if_event(predicate:X11::C::X::PDisplay,PEvent,Pointer->Bool,arg:X11::C::X::Pointer):Event?-instance-method","name":"peek_if_event","doc":"Returns the matched event's structure.\n\n###Arguments\n- **predicate** Specifies the procedure that is to be called to determine\nif the next event in the queue matches what you want.\n- **arg** Specifies the user-supplied argument that will be passed to the predicate procedure.\n\n###Description\nThe `peek_if_event` function returns only when the specified predicate\nprocedure returns **True** for an event. After the predicate procedure finds\na match, `peek_if_event` copies the matched event into the client-supplied `Event`\nstructure without removing the event from the queue.\n\n###See also\n`check_if_event`, `if_event`, `next_event`, `put_back_event`, `send_event`.","summary":"<p>Returns the matched event's structure.</p>","abstract":false,"args":[{"name":"predicate","doc":null,"default_value":"","external_name":"predicate","restriction":"(X11::C::X::PDisplay, PEvent, Pointer -> Bool)"},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"X11::C::X::Pointer"}],"args_string":"(predicate : X11::C::X::PDisplay, PEvent, Pointer -> Bool, arg : X11::C::X::Pointer) : Event?","args_html":"(predicate : X11::C::X::PDisplay, PEvent, Pointer -> Bool, arg : X11::C::X::Pointer) : <a href=\"../X11/Event.html\">Event</a>?","location":{"filename":"src/x11/display.cr","line_number":5545,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5545"},"def":{"name":"peek_if_event","args":[{"name":"predicate","doc":null,"default_value":"","external_name":"predicate","restriction":"(X11::C::X::PDisplay, PEvent, Pointer -> Bool)"},{"name":"arg","doc":null,"default_value":"","external_name":"arg","restriction":"X11::C::X::Pointer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"if X.peek_if_event(@dpy, out xevent, predicate, arg)\n  Event.from_xevent(xevent)\nelse\n  nil\nend"}},{"id":"pending:Int32-instance-method","html_id":"pending:Int32-instance-method","name":"pending","doc":"Returns the number of events that have been received from the X server.\n\n###Description\nThe `pending` function returns the number of events that have been received\nfrom the X server but have not been removed from the event queue.\n`pending` is identical to `events_queued` with the mode **QueuedAfterFlush** specified.\n\n###See also\n`events_queued`, `flush`, `if_event`, `next_event`, `put_back_event`, `sync`.","summary":"<p>Returns the number of events that have been received from the X server.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":5562,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5562"},"def":{"name":"pending","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.pending(@dpy)"}},{"id":"pixmap_formats:Array(PixmapFormatValues)-instance-method","html_id":"pixmap_formats:Array(PixmapFormatValues)-instance-method","name":"pixmap_formats","doc":"Returns informations of the supported pixel formats.\n\n###Description\nThe `pixmap_formats` function returns an array of `PixmapFormatValues` objects\nthat describe the types of Z format images supported by the specified display.\nIf insufficient memory is available, `pixmap_formats` returns empty array.","summary":"<p>Returns informations of the supported pixel formats.</p>","abstract":false,"args":[],"args_string":" : Array(PixmapFormatValues)","args_html":" : Array(<a href=\"../X11/PixmapFormatValues.html\">PixmapFormatValues</a>)","location":{"filename":"src/x11/display.cr","line_number":1472,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1472"},"def":{"name":"pixmap_formats","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(PixmapFormatValues)","visibility":"Public","body":"pvalues = X.list_pixmap_formats(@dpy, out count)\nif count <= 0\n  return [] of PixmapFormatValues\nend\nvalues = Array(PixmapFormatValues).new\n(0...count).each do |i|\n  values << (PixmapFormatValues.new(pvalues[i]))\nend\nX.free(pvalues.as(PChar))\nvalues\n"}},{"id":"planes(screen_number:Int32):Int32-instance-method","html_id":"planes(screen_number:Int32):Int32-instance-method","name":"planes","doc":"Returns the depth of the root window of the specified screen.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.","summary":"<p>Returns the depth of the root window of the specified screen.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : Int32","args_html":"(screen_number : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3130,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3130"},"def":{"name":"planes","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.display_planes(@dpy, screen_number)"}},{"id":"pointer_control:NamedTuple()-instance-method","html_id":"pointer_control:NamedTuple()-instance-method","name":"pointer_control","doc":"Returns the pointer's current acceleration multiplier and acceleration threshold.\n\n###Return\n- **accel_numerator** Returns the numerator for the acceleration multiplier.\n- **accel_denominator** Returns the denominator for the acceleration multiplier.\n- **threshold** Returns the acceleration threshold.\n\n###Description\nThe `pointer_control` function returns the pointer's current acceleration multiplier and acceleration threshold.\n\n###See also\n`change_pointer_control`.","summary":"<p>Returns the pointer's current acceleration multiplier and acceleration threshold.</p>","abstract":false,"args":[],"args_string":" : NamedTuple()","args_html":" : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":4545,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4545"},"def":{"name":"pointer_control","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(accel_numerator: Int32, accel_denominator: Int32, threshold: Int32, res: Int32)","visibility":"Public","body":"res = X.get_pointer_control(@dpy, out accel_numerator_return, out accel_denominator_return, out threshold_return)\n{accel_numerator: accel_numerator_return, accel_denominator: accel_denominator_return, threshold: threshold_return, res: res}\n"}},{"id":"pointer_mapping(nmap:Int32):Array(UInt8)-instance-method","html_id":"pointer_mapping(nmap:Int32):Array(UInt8)-instance-method","name":"pointer_mapping","doc":"Returns the current mapping of the pointer.\n\n###Arguments\n- nmap\tSpecifies the number of items in the mapping list.\n\n###Description\nThe `pointer_mapping` function returns the current mapping of the pointer.\nPointer buttons are numbered starting from one. `pointer_mapping` returns\nthe number of physical buttons actually on the pointer. The nominal mapping\nfor a pointer is map[i]=i+1. The nmap argument specifies the length of the\narray where the pointer mapping is returned,\nand only the first nmap elements are returned.\n\n###See also\n`change_keyboard_control`, `change_keyboard_mapping`, `set_pointer_mapping`.","summary":"<p>Returns the current mapping of the pointer.</p>","abstract":false,"args":[{"name":"nmap","doc":null,"default_value":"","external_name":"nmap","restriction":"Int32"}],"args_string":"(nmap : Int32) : Array(UInt8)","args_html":"(nmap : Int32) : Array(UInt8)","location":{"filename":"src/x11/display.cr","line_number":4565,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4565"},"def":{"name":"pointer_mapping","args":[{"name":"nmap","doc":null,"default_value":"","external_name":"nmap","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(UInt8)","visibility":"Public","body":"X.get_pointer_mapping(@dpy, out map_return, nmap)\nmap = Array(UInt8).new(nmap) do |i|\n  ((pointerof(map_return)) + i).value\nend\n"}},{"id":"process_internal_connection(fd:Int32)-instance-method","html_id":"process_internal_connection(fd:Int32)-instance-method","name":"process_internal_connection","doc":null,"summary":null,"abstract":false,"args":[{"name":"fd","doc":null,"default_value":"","external_name":"fd","restriction":"Int32"}],"args_string":"(fd : Int32)","args_html":"(fd : Int32)","location":{"filename":"src/x11/display.cr","line_number":8301,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8301"},"def":{"name":"process_internal_connection","args":[{"name":"fd","doc":null,"default_value":"","external_name":"fd","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.process_internal_connection(@dpy, fd)"}},{"id":"properties(w:X11::C::Window):Array(X11::C::Atom)-instance-method","html_id":"properties(w:X11::C::Window):Array(X11::C::Atom)-instance-method","name":"properties","doc":"Return property-atoms.\n\n###Arguments\n- **w** Specifies the window whose property list you want to obtain.\n\n###Description\nThe `properties` function returns an array of atom properties\nthat are defined for the specified window or returns empty array if no properties were found.\n\n`properties` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`change_property`, `delete_property`, `window_property`, `rotate_window_properties`.","summary":"<p>Return property-atoms.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Array(X11::C::Atom)","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Array(<a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)","location":{"filename":"src/x11/display.cr","line_number":1110,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1110"},"def":{"name":"properties","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(X11::C::Atom)","visibility":"Public","body":"patoms = X.list_properties(@dpy, w, out num_properties)\nif patoms.null? || num_properties <= 0\n  return [] of X11::C::Atom\nend\natoms = Array(X11::C::Atom).new\n(0...num_properties).each do |i|\n  atoms << patoms[i]\nend\nX.free(patoms.as(PChar))\natoms\n"}},{"id":"protocol_revision:Int32-instance-method","html_id":"protocol_revision:Int32-instance-method","name":"protocol_revision","doc":"Returns the minor protocol revision number of the X server.","summary":"<p>Returns the minor protocol revision number of the X server.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":5567,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5567"},"def":{"name":"protocol_revision","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.protocol_revision(@dpy)"}},{"id":"protocol_version:Int32-instance-method","html_id":"protocol_version:Int32-instance-method","name":"protocol_version","doc":"Returns the major version number (11) of the X protocol associated with the connected display.","summary":"<p>Returns the major version number (11) of the X protocol associated with the connected display.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":5572,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5572"},"def":{"name":"protocol_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.protocol_version(@dpy)"}},{"id":"put_back_event(event:Event):Int32-instance-method","html_id":"put_back_event(event:Event):Int32-instance-method","name":"put_back_event","doc":"Pushes an event back onto the head of the display's event queue.\n\n###Arguments\n- **event** Specifies the event.\n\n###Description\nThe `put_back_event` function pushes an event back onto the head of the\ndisplay's event queue by copying the event into the queue. This can be\nuseful if you read an event and then decide that you would rather deal\nwith it later. There is no limit to the number of times in succession that you can call `put_back_event`.\n\n###See also\n`if_event`, `next_event`, `send_event`.","summary":"<p>Pushes an event back onto the head of the display's event queue.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"Event"}],"args_string":"(event : Event) : Int32","args_html":"(event : <a href=\"../X11/Event.html\">Event</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":5589,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5589"},"def":{"name":"put_back_event","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"Event"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.put_back_event(@dpy, event.to_unsafe)"}},{"id":"put_image(d:X11::C::Drawable,gc:X11::C::X::GC,image:Image,src_x:Int32,src_y:Int32,dest_x:Int32,dest_y:Int32,width:UInt32,height:UInt32):Int32-instance-method","html_id":"put_image(d:X11::C::Drawable,gc:X11::C::X::GC,image:Image,src_x:Int32,src_y:Int32,dest_x:Int32,dest_y:Int32,width:UInt32,height:UInt32):Int32-instance-method","name":"put_image","doc":"Combines an image with a rectangle of the specified drawable.\n\n###Arguments\n- **d** Specifies the drawable.\n- **gc** Specifies the GC.\n- **image** Specifies the image you want combined with the rectangle.\n- **src_x** Specifies the offset in X from the left edge of the image defined by the `Image` object.\n- **src_y** Specifies the offset in Y from the top edge of the image defined by the `Image` object.\n- **dest_x**, **dest_y** Specify the x and y coordinates, which are relative\nto the origin of the drawable and are the coordinates of the subimage.\n- **width**, **height** Specify the width and height of the subimage,\nwhich define the dimensions of the rectangle.\n\n###Description\nThe `put_image` function combines an image with a rectangle of the specified\ndrawable. The section of the image defined by the src_x, src_y, width, and\nheight arguments is drawn on the specified part of the drawable. If\n**XYBitmap** format is used, the depth of the image must be one, or a\n**BadMatch** error results. The foreground pixel in the GC defines the\nsource for the one bits in the image, and the background pixel defines the\nsource for the zero bits. For **XYPixmap** and **ZPixmap**, the depth of\nthe image must match the depth of the drawable, or a **BadMatch** error results.\n\nIf the characteristics of the image (for example, byte_order and bitmap_unit)\ndiffer from what the server requires, `put_image` automatically makes the appropriate conversions.\n\nThis function uses these GC components: function, plane-mask, subwindow-mode,\nclip-x-origin, clip-y-origin, and clip-mask. It also uses these GC\nmode-dependent components: foreground and background.\n\n`put_image` can generate **BadDrawable**, **BadGC**, **BadMatch**, and **BadValue** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`add_pixel`, `create_image`, `destroy_image`, `get_pixel`, `init_image`,\n`put_pixel`, `get_sub_image`.","summary":"<p>Combines an image with a rectangle of the specified drawable.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"Image"},{"name":"src_x","doc":null,"default_value":"","external_name":"src_x","restriction":"Int32"},{"name":"src_y","doc":null,"default_value":"","external_name":"src_y","restriction":"Int32"},{"name":"dest_x","doc":null,"default_value":"","external_name":"dest_x","restriction":"Int32"},{"name":"dest_y","doc":null,"default_value":"","external_name":"dest_y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, image : Image, src_x : Int32, src_y : Int32, dest_x : Int32, dest_y : Int32, width : UInt32, height : UInt32) : Int32","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, image : <a href=\"../X11/Image.html\">Image</a>, src_x : Int32, src_y : Int32, dest_x : Int32, dest_y : Int32, width : UInt32, height : UInt32) : Int32","location":{"filename":"src/x11/display.cr","line_number":5639,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5639"},"def":{"name":"put_image","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"Image"},{"name":"src_x","doc":null,"default_value":"","external_name":"src_x","restriction":"Int32"},{"name":"src_y","doc":null,"default_value":"","external_name":"src_y","restriction":"Int32"},{"name":"dest_x","doc":null,"default_value":"","external_name":"dest_x","restriction":"Int32"},{"name":"dest_y","doc":null,"default_value":"","external_name":"dest_y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.put_image(@dpy, d, gc, image.to_unsafe, src_x, xrc_y, dest_x, dest_y, width, height)"}},{"id":"q_length:Int32-instance-method","html_id":"q_length:Int32-instance-method","name":"q_length","doc":"Returns the length of the event queue for the connected display. Note that\nthere may be more events that have not been read into the queue yet (see `events_queued`).","summary":"<p>Returns the length of the event queue for the connected display.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":5645,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5645"},"def":{"name":"q_length","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.q_length(@dpy)"}},{"id":"query_best_cursor(d:X11::C::Drawable,width:UInt32,height:UInt32):NamedTuple()-instance-method","html_id":"query_best_cursor(d:X11::C::Drawable,width:UInt32,height:UInt32):NamedTuple()-instance-method","name":"query_best_cursor","doc":"Provides a way to find out what size cursors are actually possible on the display.\n\n###Arguments\n- **d** Specifies the drawable, which indicates the screen.\n- **width**, **height** Specify the width and height of the cursor that you want the size information for.\n\n###Returns\n- **width**, **height** Returns the best width and height that is closest to the specified width and height.\n\n###Description\nSome displays allow larger cursors than other displays. The `query_best_cursor`\nfunction provides a way to find out what size cursors are actually possible on\nthe display. It returns the largest size that can be displayed. Applications\nshould be prepared to use smaller cursors on displays that cannot support large ones.\n\n`query_best_cursor` can generate a **BadDrawable** error.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n\n###See also\n`create_colormap`, `create_font_cursor`, `define_cursor`, `free_cursor`, `recolor_cursor`.","summary":"<p>Provides a way to find out what size cursors are actually possible on the display.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"args_string":"(d : X11::C::Drawable, width : UInt32, height : UInt32) : NamedTuple()","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, width : UInt32, height : UInt32) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":5671,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5671"},"def":{"name":"query_best_cursor","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(width: UInt32, height: UInt32, status: X11::C::X::Status)","visibility":"Public","body":"status = X.query_best_cursor(@dpy, d, width, height, out width_return, out height_return)\n{width: width_return, height: height_return, status: status}\n"}},{"id":"query_best_size(c_class:Int32,which_screen:X11::C::Drawable,width:UInt32,height:UInt32):NamedTuple()-instance-method","html_id":"query_best_size(c_class:Int32,which_screen:X11::C::Drawable,width:UInt32,height:UInt32):NamedTuple()-instance-method","name":"query_best_size","doc":"Returns the best or closest size to the specified size.\n\n###Arguments\n- **c_class** Specifies the class that you are interested in.\nYou can pass **TileShape**, **CursorShape**, or **StippleShape**.\n- **which_screen** Specifies any drawable on the screen.\n- **width**, **height** Specify the width and height.\n\n###Returns\n- **width**, **height** Return the width and height of the object best supported by the display hardware.\n\n###Description\nThe `query_best_size` function returns the best or closest size to the\nspecified size. For **CursorShape**, this is the largest size that can be\nfully displayed on the screen specified by which_screen. For **TileShape**,\nthis is the size that can be tiled fastest. For **StippleShape**, this is\nthe size that can be stippled fastest. For **CursorShape**, the drawable\nindicates the desired screen. For **TileShape** and **StippleShape**, the\ndrawable indicates the screen and possibly the window class and depth.\nAn **InputOnly** window cannot be used as the drawable for **TileShape** or\n**StippleShape**, or a **BadMatch** error results.\n\n`query_best_size` can generate **BadDrawable**, **BadMatch**, and **BadValue** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the full\nrange defined by the argument's type is accepted. Any argument defined as a set of alternatives can generate this error.\n\n###See also\n`create_gc`, `query_best_tile`, `query_best_stipple`, `set_arc_mode`,\n`set_clip_origin`, `set_fill_style`, `set_font`, `set_line_attributes`,\n`set_state`, `set_tile`.","summary":"<p>Returns the best or closest size to the specified size.</p>","abstract":false,"args":[{"name":"c_class","doc":null,"default_value":"","external_name":"c_class","restriction":"Int32"},{"name":"which_screen","doc":null,"default_value":"","external_name":"which_screen","restriction":"X11::C::Drawable"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"args_string":"(c_class : Int32, which_screen : X11::C::Drawable, width : UInt32, height : UInt32) : NamedTuple()","args_html":"(c_class : Int32, which_screen : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, width : UInt32, height : UInt32) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":5713,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5713"},"def":{"name":"query_best_size","args":[{"name":"c_class","doc":null,"default_value":"","external_name":"c_class","restriction":"Int32"},{"name":"which_screen","doc":null,"default_value":"","external_name":"which_screen","restriction":"X11::C::Drawable"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(width: UInt32, height: UInt32, status: X11::C::X::Status)","visibility":"Public","body":"status = X.query_best_size(@dpy, c_class, which_screen, width, height, out width_return, out height_return)\n{width: width_return, height: height_return, status: status}\n"}},{"id":"query_best_stipple(which_screen:X11::C::Drawable,width:UInt32,height:UInt32):NamedTuple()-instance-method","html_id":"query_best_stipple(which_screen:X11::C::Drawable,width:UInt32,height:UInt32):NamedTuple()-instance-method","name":"query_best_stipple","doc":"Returns the best or closest size.\n\n###Arguments\n- **which_screen** Specifies any drawable on the screen.\n- **width**, **height** Specify the width and height.\n\n###Returns\n- **width**, **height** Return the width and height of the object best\nsupported by the display hardware.\n\n###Description\nThe `query_best_stipple` function returns the best or closest size, that\nis, the size that can be stippled fastest on the screen specified by\nwhich_screen. The drawable indicates the screen and possibly the window\nclass and depth. If an **InputOnly** window is used as the drawable, a **BadMatch** error results.\n`query_best_stipple` can generate **BadDrawable** and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`create_gc`, `query_best_tile`, `query_best_size`, `set_arc_mode`,\n`set_clip_origin`, `set_fill_style`, `set_font`, `set_line_attributes`,\n`set_state`, `set_tile`.","summary":"<p>Returns the best or closest size.</p>","abstract":false,"args":[{"name":"which_screen","doc":null,"default_value":"","external_name":"which_screen","restriction":"X11::C::Drawable"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"args_string":"(which_screen : X11::C::Drawable, width : UInt32, height : UInt32) : NamedTuple()","args_html":"(which_screen : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, width : UInt32, height : UInt32) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":5745,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5745"},"def":{"name":"query_best_stipple","args":[{"name":"which_screen","doc":null,"default_value":"","external_name":"which_screen","restriction":"X11::C::Drawable"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(width: UInt32, height: UInt32, status: X11::C::X::Status)","visibility":"Public","body":"status = X.query_best_stipple(@dpy, which_screen, width, height, out width_return, out height_return)\n{width: width_return, height: height_return, status: status}\n"}},{"id":"query_best_tile(which_screen:X11::C::Drawable,width:UInt32,height:UInt32):NamedTuple()-instance-method","html_id":"query_best_tile(which_screen:X11::C::Drawable,width:UInt32,height:UInt32):NamedTuple()-instance-method","name":"query_best_tile","doc":"Returns the best or closest size.\n\n###Arguments\n- **which** Specifies any drawable on the screen.\n- **width**, **height** Specify the width and height.\n\n###Returns\n- **width**, **height** Return the width and height of the object best\nsupported by the display hardware.\n\n###Description\nThe `query_best_tile` function returns the best or closest size, that is,\nthe size that can be tiled fastest on the screen specified by which_screen.\nThe drawable indicates the screen and possibly the window class and depth.\nIf an **InputOnly** window is used as the drawable, a **BadMatch** error results.\n\n`query_best_tile` can generate **BadDrawable** and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`create_gc`, `query_best_size`, `query_best_stipple`, `set_arc_mode`,\n`set_clip_origin`, `set_fill_style`, `set_font`,\n`set_line_attributes`, `set_state`, `set_tile`.","summary":"<p>Returns the best or closest size.</p>","abstract":false,"args":[{"name":"which_screen","doc":null,"default_value":"","external_name":"which_screen","restriction":"X11::C::Drawable"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"args_string":"(which_screen : X11::C::Drawable, width : UInt32, height : UInt32) : NamedTuple()","args_html":"(which_screen : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, width : UInt32, height : UInt32) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":5778,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5778"},"def":{"name":"query_best_tile","args":[{"name":"which_screen","doc":null,"default_value":"","external_name":"which_screen","restriction":"X11::C::Drawable"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(width: UInt32, height: UInt32, status: X11::C::X::Status)","visibility":"Public","body":"status = X.query_best_tile(@dpy, which_screen, width, height, out width_return, out height_return)\n{width: width_return, height: height_return, status: status}\n"}},{"id":"query_color(colormap:X11::C::Colormap,def_in:Color):Color-instance-method","html_id":"query_color(colormap:X11::C::Colormap,def_in:Color):Color-instance-method","name":"query_color","doc":"Returns the current RGB value for the pixel in the `Color` structure.\n\n###Arguments\n- **colormap** Specifies the colormap.\n- **def_in** Specifies and returns the RGB values for the pixel specified in the structure.\n\n###Description\nThe `query_color` function returns the current RGB value for the pixel in\nthe `Color` structure and sets the **DoRed**, **DoGreen**, and **DoBlue** flags.\n\n`query_color` can generate **BadColor** and **BadValue** errors.\n\n###Diagnostics\n- **BadColor** A value for a *Colormap* argument does not name a defined *Colormap*.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`alloc_color`, `create_colormap`, `lookup_color`, `parse_color`,\n`query_colors`, `store_colors`.","summary":"<p>Returns the current RGB value for the pixel in the <code><a href=\"../X11/Color.html\">Color</a></code> structure.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"def_in","doc":null,"default_value":"","external_name":"def_in","restriction":"Color"}],"args_string":"(colormap : X11::C::Colormap, def_in : Color) : Color","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>, def_in : <a href=\"../X11/Color.html\">Color</a>) : <a href=\"../X11/Color.html\">Color</a>","location":{"filename":"src/x11/display.cr","line_number":5805,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5805"},"def":{"name":"query_color","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"def_in","doc":null,"default_value":"","external_name":"def_in","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Color","visibility":"Public","body":"xcolor = def_in.to_x\nX.query_color(@dpy, colormap, pointerof(xcolor))\nColor.new(xcolor)\n"}},{"id":"query_colors(colormap:X11::C::Colormap,defs_in:Array(Color)):Array(Color)-instance-method","html_id":"query_colors(colormap:X11::C::Colormap,defs_in:Array(Color)):Array(Color)-instance-method","name":"query_colors","doc":"Returns the RGB value for each pixel in each `Color` structure.\n\n###Arguments\n- **colormap** Specifies the colormap.\n- **defs_in Specifies and returns an array of color definition structures\nfor the pixel specified in the structure.\n\n###Description\nThe `query_colors` function returns the RGB value for each pixel in each\n`Color` structure and sets the **DoRed**, **DoGreen**, and **DoBlue** flags in each structure.\n\n`query_colors` can generate **BadColor** and **BadValue** errors.\n\n###Diagnostics\n- **BadColor** A value for a *Colormap* argument does not name a defined *Colormap*.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument,\nthe full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`alloc_color`, `create_colormap`, `lookup_color`, `parse_color`,\n`query_color`, `query_colors`, `store_colors`.","summary":"<p>Returns the RGB value for each pixel in each <code><a href=\"../X11/Color.html\">Color</a></code> structure.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"defs_in","doc":null,"default_value":"","external_name":"defs_in","restriction":"Array(Color)"}],"args_string":"(colormap : X11::C::Colormap, defs_in : Array(Color)) : Array(Color)","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>, defs_in : Array(<a href=\"../X11/Color.html\">Color</a>)) : Array(<a href=\"../X11/Color.html\">Color</a>)","location":{"filename":"src/x11/display.cr","line_number":5834,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5834"},"def":{"name":"query_colors","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"defs_in","doc":null,"default_value":"","external_name":"defs_in","restriction":"Array(Color)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Color)","visibility":"Public","body":"xcolors = defs_in.map(&.to_x)\nX.query_colors(@dpy, colormap(xcolors.to_unsafe, xcolors.size))\nxcolors.map do |xcolor|\n  Color.new(xcolor)\nend\n"}},{"id":"query_extension(name:String):NamedTuple()-instance-method","html_id":"query_extension(name:String):NamedTuple()-instance-method","name":"query_extension","doc":"Determines if the named extension is present.\n\n###Arguments\n- **name** Specifies the extension name.\n\n###Returns\n- **major_opcode** Returns the major opcode.\n- **first_event** Returns the first event code, if any. Specifies the extension list.\n\n###Description\nThe `query_extension` function determines if the named extension is present.\nIf the extension is not present, `query_extension` returns **false**;\notherwise, it returns **true**. If the extension is present,\n`query_extension` returns the major opcode for the extension to major_opcode;\notherwise, it returns zero. Any minor opcode and the request formats are specific\nto the extension. If the extension involves additional event types,\n`query_extension` returns the base event type code to first_event;\notherwise, it returns zero. The format of the events is specific to the extension.\nIf the extension involves additional error codes, `query_extension` returns\nthe base error code to first_error; otherwise, it returns zero.\nThe format of additional data in the errors is specific to the extension.\n\n###See also\n`extensions`.","summary":"<p>Determines if the named extension is present.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : NamedTuple()","args_html":"(name : String) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":5864,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5864"},"def":{"name":"query_extension","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(major_opcode: Int32, first_event: Int32, first_error: Int32, res: Bool)","visibility":"Public","body":"res = X.query_extension(@dpy, name.to_unsafe, out major_opcode_return, out first_event_return, out first_error_return)\n{major_opcode: major_opcode_return, first_event: first_event_return, first_error: first_error_return, res: res == X::True ? true : false}\n"}},{"id":"query_font(font_id:X11::C::XID):FontStruct-instance-method","html_id":"query_font(font_id:X11::C::XID):FontStruct-instance-method","name":"query_font","doc":"Returns a `FontStruct` structure, which contains information associated with the font.\n\n###Arguments\n- **font_id** Specifies the font ID or the `GContext` ID.\n\n###Description\nThe `query_font` function returns a `FontStruct` structure, which contains\ninformation associated with the font. You can query a font or the font stored in a GC.\nThe font ID stored in the `FontStruct` structure will be the `GContext` ID,\nand you need to be careful when using this ID in other functions (see `g_context_from_gc`).\nIf the font does not exist, `query_font` returns **nil**. To free this data, use `X11::X.free_font_info`.\n\n###See also\n`create_gc`, `free_font`, `FontStruct::property`, `list_fonts`, `load_font`,\n`load_query_font`, `set_font_path`, `unload_font`.","summary":"<p>Returns a <code><a href=\"../X11/FontStruct.html\">FontStruct</a></code> structure, which contains information associated with the font.</p>","abstract":false,"args":[{"name":"font_id","doc":null,"default_value":"","external_name":"font_id","restriction":"X11::C::XID"}],"args_string":"(font_id : X11::C::XID) : FontStruct","args_html":"(font_id : <a href=\"../X11/C/XID.html\">X11::C::XID</a>) : <a href=\"../X11/FontStruct.html\">FontStruct</a>","location":{"filename":"src/x11/display.cr","line_number":130,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L130"},"def":{"name":"query_font","args":[{"name":"font_id","doc":null,"default_value":"","external_name":"font_id","restriction":"X11::C::XID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"FontStruct","visibility":"Public","body":"FontStruct.new(self, X.query_font(@dpy, font_id))"}},{"id":"query_keymap:StaticArray(UInt8,32)-instance-method","html_id":"query_keymap:StaticArray(UInt8,32)-instance-method","name":"query_keymap","doc":"Returns a bit vector for the logical state of the keyboard.\n\n###Description\nThe `query_keymap` function returns a bit vector for the logical state of\nthe keyboard, where each bit set to 1 indicates that the corresponding key\nis currently pressed down. The vector is represented as 32 bytes.\nByte N (from 0) contains the bits for keys 8N to 8N + 7 with the\nleast-significant bit in the byte representing key 8N.\n\nNote that the logical state of a device (as seen by client applications)\nmay lag the physical state if device event processing is frozen.\n\n###See also\n`auto_repeat_off`, `auto_repeat_on`, `bell`, `change_keyboard_control`,\n`change_keyboard_mapping`, `keyboard_control`, `set_pointer_mapping`.","summary":"<p>Returns a bit vector for the logical state of the keyboard.</p>","abstract":false,"args":[],"args_string":" : StaticArray(UInt8, <span class=\"n\">32</span>)","args_html":" : StaticArray(UInt8, <span class=\"n\">32</span>)","location":{"filename":"src/x11/display.cr","line_number":5884,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5884"},"def":{"name":"query_keymap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"StaticArray(UInt8, 32)","visibility":"Public","body":"keys_return = StaticArray(UInt8, 32).new\nX.query_keymap(@dpy, keys_return.to_unsafe)\nkeys_return\n"}},{"id":"query_pointer(w:X11::C::Window):NamedTuple()-instance-method","html_id":"query_pointer(w:X11::C::Window):NamedTuple()-instance-method","name":"query_pointer","doc":"Returns the root window the pointer is logically\non and the pointer coordinates relative to the root window's origin.\n\n###Arguments\n- **w** Specifies the window.\n\n###Returns\n- **root** Returns the root window that the pointer is in.\n- **child** Returns the child window that the pointer is located in, if any.\n- **root_x**, **root_y** Return the pointer coordinates relative to the root window's origin.\n- **win_x**, **win_y** Return the pointer coordinates relative to the specified window.\n- **mask** Returns the current state of the modifier keys and pointer buttons.\n\n###Description\nThe `query_pointer` function returns the root window the pointer is logically\non and the pointer coordinates relative to the root window's origin.\nIf `query_pointer` returns **false**, the pointer is not on the same screen\nas the specified window, and `query_pointer` returns **None** to child\nand zero to win_X and win_y. If `query_pointer` returns **true**,\nthe pointer coordinates returned to win_x and win_y are relative\nto the origin of the specified window. In this case, `query_pointer` returns\nthe child that contains the pointer, if any, or else **None** to child.\n\n`query_pointer` returns the current logical state of the keyboard buttons\nand the modifier keys in mask. It sets mask_return to the bitwise inclusive\nOR of one or more of the button or modifier key bitmasks to match the\ncurrent state of the mouse buttons and the modifier keys.\n\nNote that the logical state of a device (as seen through Xlib) may lag the\nphysical state if device event processing is frozen.\n\n`query_pointer` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`window_attributes`, `query_tree`.","summary":"<p>Returns the root window the pointer is logically on and the pointer coordinates relative to the root window's origin.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : NamedTuple()","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":5928,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5928"},"def":{"name":"query_pointer","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(root: X11::C::Window, child: X11::C::Window, root_x: Int32, root_y: Int32, win_x: Int32, win_y: Int32, mask: UInt32, res: Bool)","visibility":"Public","body":"res = X.query_pointer(@dpy, w, out root_return, out child_return, out root_x_return, out root_y_return, out win_x_return, out win_y_return, out mask_return)\n{root: root_return, child: child_return, root_x: root_x_return, root_y: root_y_return, win_x: win_x_return, win_y: win_y_return, mask: mask_return, res: res == X::True ? true : false}\n"}},{"id":"query_text_extents(font_id:X11::C::XID,string:String):NamedTuple()-instance-method","html_id":"query_text_extents(font_id:X11::C::XID,string:String):NamedTuple()-instance-method","name":"query_text_extents","doc":"Returns the bounding box of the specified 8-bit character string in the\nspecified font or the font contained in the specified GC.\n\n###Arguments\n- **font_id** Specifies either the font ID or the `GContext` ID that contains the font.\n- **string** Specifies the character string.\n\n###Returns\n- **direction** Returns the value of the direction hint (**FontLeftToRight** or **FontRightToLeft**).\n- **font_ascent** Returns the font ascent.\n- **font_descent** Returns the font descent.\n- **overall** Returns the overall size in the specified `CharStruct` structure.\n\n###Description\nThe `query_text_extents` function returns the bounding box of the specified 8-bit\ncharacter string in the specified font or the font contained in the specified GC.\nThis function queries the X server and, therefore, suffer the round-trip overhead\nthat is avoided by `text_extents`. The function returns a `CharStruct` structure,\nwhose members are set to the values as follows.\n\nThe ascent member is set to the maximum of the ascent metrics of all characters\nin the string. The descent member is set to the maximum of the descent metrics.\nThe width member is set to the sum of the character-width metrics of all characters\nin the string. For each character in the string, let W be the sum of the\ncharacter-width metrics of all characters preceding it in the string.\nLet L be the left-side-bearing metric of the character plus W. Let R be the\nright-side-bearing metric of the character plus W. The lbearing member is\nset to the minimum L of all characters in the string. The rbearing member\nis set to the maximum R.\n\nFor fonts defined with linear indexing rather than 2-byte matrix indexing,\neach `X11::C::X::Char2b` structure is interpreted as a 16-bit number with\nbyte1 as the most-significant byte. If the font has no defined default\ncharacter, undefined characters in the string are taken to have all zero metrics.\n\nCharacters with all zero metrics are ignored. If the font has no defined\ndefault_char, the undefined characters in the string are also ignored.\n\n`query_text_extents` can generate **BadFont** and **BadGC** errors.\n\n###Diagnostics\n- **BadFont** A value for a font argument does not name a defined font (or, in some cases, `GContext`).\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n\n###See also\n`load_font`, `query_text_extents_16`, `text_extents`, `text_extents_16`, `text_width`.","summary":"<p>Returns the bounding box of the specified 8-bit character string in the specified font or the font contained in the specified GC.</p>","abstract":false,"args":[{"name":"font_id","doc":null,"default_value":"","external_name":"font_id","restriction":"X11::C::XID"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(font_id : X11::C::XID, string : String) : NamedTuple()","args_html":"(font_id : <a href=\"../X11/C/XID.html\">X11::C::XID</a>, string : String) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":5979,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L5979"},"def":{"name":"query_text_extents","args":[{"name":"font_id","doc":null,"default_value":"","external_name":"font_id","restriction":"X11::C::XID"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(direction: Int32, font_ascent: Int32, font_descent: Int32, overall: CharStruct, res: Int32)","visibility":"Public","body":"res = X.query_text_extents(@dpy, font_id, string.to_unsafe, string.size, out direction_return, out font_ascent_return, out font_descent_return, out overall_return)\n{direction: direction_return, font_ascent: font_ascent_return, font_descent: font_descent_return, overall: overall_return, res: res}\n"}},{"id":"query_text_extents_16(font_id:X11::C::XID,string:Array(X11::C::X::Char2b)):NamedTuple()-instance-method","html_id":"query_text_extents_16(font_id:X11::C::XID,string:Array(X11::C::X::Char2b)):NamedTuple()-instance-method","name":"query_text_extents_16","doc":"Returns the bounding box of the specified 16-bit character string in the\nspecified font or the font contained in the specified GC.\n\n###Arguments\n- **font_id** Specifies either the font ID or the `GContext` ID that contains the font.\n- **string** Specifies the character string.\n\n###Returns\n- **direction** Returns the value of the direction hint (**FontLeftToRight** or **FontRightToLeft**).\n- **font_ascent** Returns the font ascent.\n- **font_descent** Returns the font descent.\n- **overall** Returns the overall size in the specified `CharStruct` structure.\n\n###Description\nThe `query_text_extents_16` function returns the bounding box of the\nspecified 16-bit character string in the specified font or the font contained\nin the specified GC. This function queries the X server and, therefore,\nsuffer the round-trip overhead that is avoided by `text_extents_16`.\nThe function returns a `CharStruct` structure, whose members are set to the values as follows.\n\nThe ascent member is set to the maximum of the ascent metrics of all\ncharacters in the string. The descent member is set to the maximum of the\ndescent metrics. The width member is set to the sum of the character-width\nmetrics of all characters in the string. For each character in the string,\nlet W be the sum of the character-width metrics of all characters preceding\nit in the string. Let L be the left-side-bearing metric of the character\nplus W. Let R be the right-side-bearing metric of the character plus W.\nThe lbearing member is set to the minimum L of all characters in the string.\nThe rbearing member is set to the maximum R.\n\nFor fonts defined with linear indexing rather than 2-byte matrix indexing,\neach `X11::C::X::Char2b` structure is interpreted as a 16-bit number with\nbyte1 as the most-significant byte. If the font has no defined default character,\nundefined characters in the string are taken to have all zero metrics.\n\nCharacters with all zero metrics are ignored. If the font has no defined\ndefault_char, the undefined characters in the string are also ignored.\n\n`query_text_extents_16` can generate **BadFont** and **BadGC** errors.\n\n###Diagnostics\n- **BadFont** A value for a font argument does not name a defined font (or, in some cases, `GContext`).\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n\n###See also\n`load_font`, `query_text_extents`, `text_extents`,\n`text_extents_16`, `text_width`.","summary":"<p>Returns the bounding box of the specified 16-bit character string in the specified font or the font contained in the specified GC.</p>","abstract":false,"args":[{"name":"font_id","doc":null,"default_value":"","external_name":"font_id","restriction":"X11::C::XID"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"Array(X11::C::X::Char2b)"}],"args_string":"(font_id : X11::C::XID, string : Array(X11::C::X::Char2b)) : NamedTuple()","args_html":"(font_id : <a href=\"../X11/C/XID.html\">X11::C::XID</a>, string : Array(X11::C::X::Char2b)) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":6031,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6031"},"def":{"name":"query_text_extents_16","args":[{"name":"font_id","doc":null,"default_value":"","external_name":"font_id","restriction":"X11::C::XID"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"Array(X11::C::X::Char2b)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(direction: Int32, font_ascent: Int32, font_descent: Int32, overall: CharStruct, res: Int32)","visibility":"Public","body":"res = X.query_text_extents_16(@dpy, font_id, string.to_unsafe, string.size, out direction_return, out font_ascent_return, out font_descent_return, out overall_return)\n{direction: direction_return, font_ascent: font_ascent_return, font_descent: font_descent_return, overall: overall_return, res: res}\n"}},{"id":"query_tree(w:X11::C::Window):NamedTuple()-instance-method","html_id":"query_tree(w:X11::C::Window):NamedTuple()-instance-method","name":"query_tree","doc":"Returns the root ID, the parent window ID, a the list of children windows.\n\n###Arguments\n- **w** Specifies the window whose list of children, root, parent, and\nnumber of children you want to obtain.\n\n###Returns\n- **root** Returns the root window.\n- **parent** Returns the parent window.\n- **children** Returns the list of children.\n\n###Description\n- The `query_tree` function returns the root ID, the parent window ID,\na pointer to the list of children windows (empty array when there are no\nchildren), and the number of children in the list for the specified window.\nThe children are listed in current stacking order, from bottommost (first)\nto topmost (last).\n\n`query_tree` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`window_attributes`, `query_pointer`.","summary":"<p>Returns the root ID, the parent window ID, a the list of children windows.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : NamedTuple()","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":6061,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6061"},"def":{"name":"query_tree","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(root: X11::C::Window, parent: X11::C::Window, children: Array(X11::C::Window), status: X11::C::X::Status)","visibility":"Public","body":"status = X.query_tree(@dpy, w, out root_return, out parent_return, out children_return, out nchildren_return)\nif nchildren_return > 0\n  children = Array(X11::C::Window).new(nchildren_return) do |i|\n    (children_return + i).value\n  end\nelse\n  children = [] of X11::C::Window\nend\n{root: root_return, parent: parent_return, children: children, status: status}\n"}},{"id":"raise_window(w:X11::C::Window):Int32-instance-method","html_id":"raise_window(w:X11::C::Window):Int32-instance-method","name":"raise_window","doc":"Raises the specified window to the top of the\nstack so that no sibling window obscures it.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `raise_window` function raises the specified window to the top of the\nstack so that no sibling window obscures it. If the windows are regarded as\noverlapping sheets of paper stacked on a desk, then raising a window is\nanalogous to moving the sheet to the top of the stack but leaving its x and\ny location on the desk constant. Raising a mapped window may generate\n**Expose** events for the window and any mapped subwindows that were formerly obscured.\n\nIf the override-redirect attribute of the window is **false** and some other\nclient has selected **SubstructureRedirectMask** on the parent, the X\nserver generates a **ConfigureRequest** event, and no processing is performed.\nOtherwise, the window is raised.\n\n`raise_window` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `circulate_subwindows`, `circulate_subwindows_down`m\n`circulate_subwindows_up`, `configure_window`, `create_window`, `destroy_window`,\n`lower_window`, `map_window`, `restack_windows`.","summary":"<p>Raises the specified window to the top of the stack so that no sibling window obscures it.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":6101,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6101"},"def":{"name":"raise_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.raise_window(@dpy, w)"}},{"id":"read_bitmap_file(d:X11::C::Drawable,filename:String):NamedTuple()-instance-method","html_id":"read_bitmap_file(d:X11::C::Drawable,filename:String):NamedTuple()-instance-method","name":"read_bitmap_file","doc":"Reads in a file containing a bitmap.\n\n###Arguments\n- **d** Specifies the drawable that indicates the screen.\n- **filename** Specifies the file name to use.\nThe format of the file name is operating-system dependent.\n\n###Returns\n- **width**, **height** Return the width and height values of the read in bitmap file.\n- **bitmap** Returns the bitmap that is created.\n- **x_hot**, **y_hot** Return the hotspot coordinates.\n\n###Description\nThe `read_bitmap_file` function reads in a file containing a bitmap.\nThe file is parsed in the encoding of the current locale. The ability to\nread other than the standard format is implementation dependent. If the\nfile cannot be opened, `read_bitmap_file` returns **BitmapOpenFailed**.\nIf the file can be opened but does not contain valid bitmap data, it\nreturns **BitmapFileInvalid**. If insufficient working storage is allocated,\nit returns **BitmapNoMemory**. If the file is readable and valid, it returns **BitmapSuccess**.\n\n`read_bitmap_file` returns the bitmap's height and width, as read from the\nfile, to width and height. It then creates a pixmap of the appropriate size,\nreads the bitmap data from the file into the pixmap, and assigns the pixmap\nto the caller's variable bitmap. The caller must free the bitmap using\n`free_pixmap` when finished. If name_x_hot and name_y_hot exist,\n`read_bitmap_file` returns them to x_hot and y_hot; otherwise, it returns -1,-1.\n\n`read_bitmap_file` can generate **BadAlloc**, **BadDrawable**, and **BadGC** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n\n###See also\n`create_bitmap_from_data`, `create_pixmap`, `create_pixmap_from_bitmap_data`,\n`put_image`, `write_bitmap_file`.","summary":"<p>Reads in a file containing a bitmap.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(d : X11::C::Drawable, filename : String) : NamedTuple()","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, filename : String) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":6143,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6143"},"def":{"name":"read_bitmap_file","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(width: UInt32, height: UInt32, bitmap: Pixmap, x_hot: Int32, y_hot: Int32, res: Int32)","visibility":"Public","body":"res = (X.read_bitmap_file(@dpy, d, filename.to_unsafe, out width_return, out height_return)).out(bitmap_return, out x_hot_return, out y_hot_return)\n{width: width_return, height: height_return, bitmap: bitmap_return, x_hot: x_hot_return, y_hot: y_hot_return, res: res}\n"}},{"id":"rebind_keysym(keysym:KeySym,list:Array(KeySym),string:String):Int32-instance-method","html_id":"rebind_keysym(keysym:KeySym,list:Array(KeySym),string:String):Int32-instance-method","name":"rebind_keysym","doc":"Rebind the meaning of a KeySym for the client.\n\n###Arguments\n- **keysym** Specifies the KeySym that is to be rebound.\n- **list** Specifies the KeySyms to be used as modifiers.\n- **string** Specifies the string that is copied and will\nbe returned by `KeyEvent::lookup_string`.\n\n###Description\nThe `rebind_keysym` function can be used to rebind the meaning of a KeySym\nfor the client. It does not redefine any key in the X server but merely\nprovides an easy way for long strings to be attached to keys.\n`KexEvent::lookup_string` returns this string when the appropriate set of\nmodifier keys are pressed and when the KeySym would have been used for the\ntranslation. No text conversions are performed; the client is responsible\nfor supplying appropriately encoded strings. Note that you can rebind a KeySym that may not exist.\n\n###See also\n`lookup_keysym`, `KeyEvent::lookup_string`, `refresh_keyboard_mapping`,\n`string_to_keysym`, `ButtonEvent`, `MapEvent`.","summary":"<p>Rebind the meaning of a KeySym for the client.</p>","abstract":false,"args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"},{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"Array(KeySym)"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(keysym : KeySym, list : Array(KeySym), string : String) : Int32","args_html":"(keysym : <a href=\"../X11/C/KeySym.html\">KeySym</a>, list : Array(<a href=\"../X11/C/KeySym.html\">KeySym</a>), string : String) : Int32","location":{"filename":"src/x11/display.cr","line_number":6168,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6168"},"def":{"name":"rebind_keysym","args":[{"name":"keysym","doc":null,"default_value":"","external_name":"keysym","restriction":"KeySym"},{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"Array(KeySym)"},{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.rebind_keysym(@dpy, keysym, list.to_unsafe, list.size, string.to_unsafe, string.size)"}},{"id":"recolor_cursor(cursor:X11::C::Cursor,foreground_color:Color,background_color:Color):Int32-instance-method","html_id":"recolor_cursor(cursor:X11::C::Cursor,foreground_color:Color,background_color:Color):Int32-instance-method","name":"recolor_cursor","doc":"Changes the color of the specified cursor.\n\n###Arguments\n- **cursor** Specifies the cursor.\n- **foreground_color** Specifies the RGB values for the foreground of the source.\n- **background_color** Specifies the RGB values for the background of the source.\n\n###Description\nThe `recolor_cursor` function changes the color of the specified cursor,\nand if the cursor is being displayed on a screen, the change is visible\nimmediately. The pixel members of the `Color` structures are ignored; only the RGB values are used.\n\n`recolor_cursor` can generate a **BadCursor** error.\n\n###See also\n`create_colormap`, `create_font_cursor`, `define_cursor`,\n`free_cursor`, `query_best_cursor`.","summary":"<p>Changes the color of the specified cursor.</p>","abstract":false,"args":[{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"},{"name":"foreground_color","doc":null,"default_value":"","external_name":"foreground_color","restriction":"Color"},{"name":"background_color","doc":null,"default_value":"","external_name":"background_color","restriction":"Color"}],"args_string":"(cursor : X11::C::Cursor, foreground_color : Color, background_color : Color) : Int32","args_html":"(cursor : <a href=\"../X11/C/Cursor.html\">X11::C::Cursor</a>, foreground_color : <a href=\"../X11/Color.html\">Color</a>, background_color : <a href=\"../X11/Color.html\">Color</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":6189,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6189"},"def":{"name":"recolor_cursor","args":[{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"},{"name":"foreground_color","doc":null,"default_value":"","external_name":"foreground_color","restriction":"Color"},{"name":"background_color","doc":null,"default_value":"","external_name":"background_color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.recolor_cursor(@dpy, cursor, foreground_color.to_unsafe, background_color.to_unsafe)"}},{"id":"reconfigure_wm_window(w:X11::C::Window,screen_number:Int32,mask:UInt32,changes:WindowChanges):X11::C::Status-instance-method","html_id":"reconfigure_wm_window(w:X11::C::Window,screen_number:Int32,mask:UInt32,changes:WindowChanges):X11::C::Status-instance-method","name":"reconfigure_wm_window","doc":"Issues a **ConfigureWindow** request on the specified top-level window.\n\n###Arguments\n- **w** Specifies the window.\n- **screen_number** Specifies the appropriate screen number on the host server.\n- **value_mask** Specifies which values are to be set using information in\nthe values structure. This mask is the bitwise inclusive OR of the valid configure window values bits.\n- **values** Specifies the `WindowChanges` structure.\n\n###Description\nThe `reconfigure_wm_window` function issues a **ConfigureWindow** request\non the specified top-level window. If the stacking mode is changed and the\nrequest fails with a **BadMatch** error, the error is trapped by Xlib and\na synthetic **ConfigureRequestEvent** containing the same configuration\nparameters is sent to the root of the specified window. Window managers\nmay elect to receive this event and treat it as a request to reconfigure\nthe indicated window. It returns a nonzero status if the request or event\nis successfully sent; otherwise, it returns a zero status.\n\n`reconfigure_wm_window` can generate **BadValue** and **BadWindow** errors.\n\n###Diagnostics\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`, `destroy_window`,\n`iconify_window`, `map_window`, `raise_window`, `unmap_window`, `withdraw_window`.","summary":"<p>Issues a <strong>ConfigureWindow</strong> request on the specified top-level window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"},{"name":"mask","doc":null,"default_value":"","external_name":"mask","restriction":"UInt32"},{"name":"changes","doc":null,"default_value":"","external_name":"changes","restriction":"WindowChanges"}],"args_string":"(w : X11::C::Window, screen_number : Int32, mask : UInt32, changes : WindowChanges) : X11::C::Status","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, screen_number : Int32, mask : UInt32, changes : <a href=\"../X11/WindowChanges.html\">WindowChanges</a>) : X11::C::Status","location":{"filename":"src/x11/display.cr","line_number":1530,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1530"},"def":{"name":"reconfigure_wm_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"},{"name":"mask","doc":null,"default_value":"","external_name":"mask","restriction":"UInt32"},{"name":"changes","doc":null,"default_value":"","external_name":"changes","restriction":"WindowChanges"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Status","visibility":"Public","body":"X.reconfigure_wm_window(@dpy, w, screen_number, mask, changes.to_unsafe)"}},{"id":"register_im_instantiate_callback(rdb:X11::C::X::PrmHashBucketRec,res_name:String,res_class:String,callback:X11::C::X::IDProc,client_data:X11::C::X::Pointer):Bool-instance-method","html_id":"register_im_instantiate_callback(rdb:X11::C::X::PrmHashBucketRec,res_name:String,res_class:String,callback:X11::C::X::IDProc,client_data:X11::C::X::Pointer):Bool-instance-method","name":"register_im_instantiate_callback","doc":null,"summary":null,"abstract":false,"args":[{"name":"rdb","doc":null,"default_value":"","external_name":"rdb","restriction":"X11::C::X::PrmHashBucketRec"},{"name":"res_name","doc":null,"default_value":"","external_name":"res_name","restriction":"String"},{"name":"res_class","doc":null,"default_value":"","external_name":"res_class","restriction":"String"},{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"X11::C::X::IDProc"},{"name":"client_data","doc":null,"default_value":"","external_name":"client_data","restriction":"X11::C::X::Pointer"}],"args_string":"(rdb : X11::C::X::PrmHashBucketRec, res_name : String, res_class : String, callback : X11::C::X::IDProc, client_data : X11::C::X::Pointer) : Bool","args_html":"(rdb : X11::C::X::PrmHashBucketRec, res_name : String, res_class : String, callback : X11::C::X::IDProc, client_data : X11::C::X::Pointer) : Bool","location":{"filename":"src/x11/display.cr","line_number":8281,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8281"},"def":{"name":"register_im_instantiate_callback","args":[{"name":"rdb","doc":null,"default_value":"","external_name":"rdb","restriction":"X11::C::X::PrmHashBucketRec"},{"name":"res_name","doc":null,"default_value":"","external_name":"res_name","restriction":"String"},{"name":"res_class","doc":null,"default_value":"","external_name":"res_class","restriction":"String"},{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"X11::C::X::IDProc"},{"name":"client_data","doc":null,"default_value":"","external_name":"client_data","restriction":"X11::C::X::Pointer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"res = X.register_im_instantiate_callback(@dpy, rdb, res_name.to_unsafe, res_class.to_unsafe, callback, client_data)\nres == X::True ? true : false\n"}},{"id":"remove_connection_watch(callback:X11::C::X::ConnectionWatchProc,client_data:X11::C::X::Pointer)-instance-method","html_id":"remove_connection_watch(callback:X11::C::X::ConnectionWatchProc,client_data:X11::C::X::Pointer)-instance-method","name":"remove_connection_watch","doc":null,"summary":null,"abstract":false,"args":[{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"X11::C::X::ConnectionWatchProc"},{"name":"client_data","doc":null,"default_value":"","external_name":"client_data","restriction":"X11::C::X::Pointer"}],"args_string":"(callback : X11::C::X::ConnectionWatchProc, client_data : X11::C::X::Pointer)","args_html":"(callback : X11::C::X::ConnectionWatchProc, client_data : X11::C::X::Pointer)","location":{"filename":"src/x11/display.cr","line_number":8309,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8309"},"def":{"name":"remove_connection_watch","args":[{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"X11::C::X::ConnectionWatchProc"},{"name":"client_data","doc":null,"default_value":"","external_name":"client_data","restriction":"X11::C::X::Pointer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.remove_connection_watch(@dpy, callback, client_data)"}},{"id":"remove_from_save_set(w:X11::C::Window):Int32-instance-method","html_id":"remove_from_save_set(w:X11::C::Window):Int32-instance-method","name":"remove_from_save_set","doc":"Removes the specified window from the client's save-set.\n\n###Arguments\n- **w** Specifies the window that you want to delete from the client's save-set.\n\n###Description\nThe `remove_from_save_set` function removes the specified window from the\nclient's save-set. The specified window must have been created by\nsome other client, or a **BadMatch** error results.\n\n`remove_from_save_set` can generate **BadMatch** and **BadWindow** errors.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type\nand range but fails to match in some other way required by the request.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`add_to_save_set`, `change_save_set`, `reparent_window`.","summary":"<p>Removes the specified window from the client's save-set.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":6213,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6213"},"def":{"name":"remove_from_save_set","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.remove_from_save_set(@dpy, w)"}},{"id":"remove_host(host:HostAddress):Int32-instance-method","html_id":"remove_host(host:HostAddress):Int32-instance-method","name":"remove_host","doc":"Removes the specified host from the access control list for that display.\n\n###Arguments\n- **host** Specifies the host that is to be removed.\n\n###Description\nThe `remove_host` function removes the specified host from the access control\nlist for that display. The server must be on the same host as the client\nprocess, or a **BadAccess** error results. If you remove your machine from\nthe access list, you can no longer connect to that server, and this\noperation cannot be reversed unless you reset the server.\n\n`remove_host` can generate **BadAccess** and **BadValue** errors.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n\n###See also\n`add_host`, `add_hosts`, `disable_access_control`, `enable_access_control`,\n`hosts`, `remove_hosts`, `set_access_control`.","summary":"<p>Removes the specified host from the access control list for that display.</p>","abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"HostAddress"}],"args_string":"(host : HostAddress) : Int32","args_html":"(host : <a href=\"../X11/HostAddress.html\">HostAddress</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":6242,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6242"},"def":{"name":"remove_host","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"HostAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.remove_host(@dpy, host.to_unsafe)"}},{"id":"remove_hosts(hosts:Array(HostAddress)):Int32-instance-method","html_id":"remove_hosts(hosts:Array(HostAddress)):Int32-instance-method","name":"remove_hosts","doc":"Removes each specified host from the access control list for that display.\n\n###Arguments\n- **hosts** Specifies each host that is to be removed.\n\n###Description\nThe `remove_hosts` function removes each specified host from the access\ncontrol list for that display. The X server must be on the same host as\nthe client process, or a **BadAccess** error results. If you remove your\nmachine from the access list, you can no longer connect to that server,\nand this operation cannot be reversed unless you reset the server.\n\n`remove_hosts` can generate **BadAccess** and **BadValue** errors.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n\n###See also\n`add_host`, `add_hosts`, `disable_access_control`, `enable_access_control`,\n`hosts`, `remove_host`, `remove_hosts`, `set_access_control`.","summary":"<p>Removes each specified host from the access control list for that display.</p>","abstract":false,"args":[{"name":"hosts","doc":null,"default_value":"","external_name":"hosts","restriction":"Array(HostAddress)"}],"args_string":"(hosts : Array(HostAddress)) : Int32","args_html":"(hosts : Array(<a href=\"../X11/HostAddress.html\">HostAddress</a>)) : Int32","location":{"filename":"src/x11/display.cr","line_number":6271,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6271"},"def":{"name":"remove_hosts","args":[{"name":"hosts","doc":null,"default_value":"","external_name":"hosts","restriction":"Array(HostAddress)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.remove_hosts(@dpy, hosts.to_unsafe, hosts.size)"}},{"id":"reparent_window(w:X11::C::Window,parent:X11::C::Window,x:Int32,y:Int32):Int32-instance-method","html_id":"reparent_window(w:X11::C::Window,parent:X11::C::Window,x:Int32,y:Int32):Int32-instance-method","name":"reparent_window","doc":"Places the window in the stacking order on top with respect to sibling windows.\n\n###Arguments\n- **w** Specifies the window.\n- **parent** Specifies the parent window.\n- **x**, **y** Specify the x and y coordinates of the position in the new parent window.\n\n###Description\nIf the specified window is mapped, `reparent_window` automatically performs\nan **UnmapWindow** request on it, removes it from its current position in\nthe hierarchy, and inserts it as the child of the specified parent. The\nwindow is placed in the stacking order on top with respect to sibling windows.\n\nAfter reparenting the specified window, `reparent_window` causes the X server\nto generate a **ReparentNotify** event. The override_redirect member returned\nin this event is set to the window's corresponding attribute. Window manager\nclients usually should ignore this window if this member is set to **true**.\nFinally, if the specified window was originally mapped, the X server\nautomatically performs a **MapWindow** request on it.\n\nThe X server performs normal exposure processing on formerly obscured windows.\nThe X server might not generate **Expose** events for regions from the initial\n**UnmapWindow** request that are immediately obscured by the final\n**MapWindow** request. A **BadMatch** error results if:\n- The new parent window is not on the same screen as the old parent window.\n- The new parent window is the specified window or an inferior of the specified window.\n- The new parent is **InputOnly**, and the window is not.\n- The specified window has a ParentRelative background, and the\nnew parent window is not the same depth as the specified window.\n\n`reparent_window` can generate **BadMatch** and **BadWindow** errors.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_save_set`.","summary":"<p>Places the window in the stacking order on top with respect to sibling windows.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(w : X11::C::Window, parent : X11::C::Window, x : Int32, y : Int32) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, parent : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, x : Int32, y : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":6315,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6315"},"def":{"name":"reparent_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.reparent_window(@dpy, w, parent, x, y)"}},{"id":"reset_screen_saver:Int32-instance-method","html_id":"reset_screen_saver:Int32-instance-method","name":"reset_screen_saver","doc":"Resets the screen saver.\n\n###Description\nThe `reset_screen_saver` function resets the screen saver.\n\n###See also\n`set_screen_saver`, `force_screen_saver`, `activate_screen_saver`, `screen_saver`.","summary":"<p>Resets the screen saver.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":6326,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6326"},"def":{"name":"reset_screen_saver","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.reset_screen_saver(@dpy)"}},{"id":"resize_window(w:X11::C::Window,width:UInt32,height:UInt32):Int32-instance-method","html_id":"resize_window(w:X11::C::Window,width:UInt32,height:UInt32):Int32-instance-method","name":"resize_window","doc":"Changes the inside dimensions of the specified window, not including its borders.\n\n###Arguments\n- **w** Specifies the window.\n- **width**, **height** Specify the width and height, which are the\ninterior dimensions of the window after the call completes.\n\n###Description\nThe `resize_window` function changes the inside dimensions of the specified\nwindow, not including its borders. This function does not change the\nwindow's upper-left coordinate or the origin and does not restack the window.\nChanging the size of a mapped window may lose its contents and generate\n**Expose** events. If a mapped window is made smaller, changing its size\ngenerates **Expose** events on windows that the mapped window formerly obscured.\n\nIf the override-redirect flag of the window is **false** and some other client\nhas selected **SubstructureRedirectMask** on the parent, the X server generates\na **ConfigureRequest** event, and no further processing is performed. If\neither width or height is zero, a **BadValue** error results.\n\n`resize_window` can generate **BadValue** and **BadWindow** errors.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `map_window`, `move_resize_window`, `move_window`,\n`raise_window`, `set_window_border_width`, `unmap_window`.","summary":"<p>Changes the inside dimensions of the specified window, not including its borders.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"args_string":"(w : X11::C::Window, width : UInt32, height : UInt32) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, width : UInt32, height : UInt32) : Int32","location":{"filename":"src/x11/display.cr","line_number":6363,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6363"},"def":{"name":"resize_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.resize_window(@dpy, w, width, height)"}},{"id":"resource_manager_string:String-instance-method","html_id":"resource_manager_string:String-instance-method","name":"resource_manager_string","doc":"Returns the RESOURCE_MANAGER property from the server's root window of screen zero.\n\n###Description\nThe `resource_manager_string` function returns the RESOURCE_MANAGER property\nfrom the server's root window of screen zero, which was returned when the\nconnection was opened using `Display::new`. The property is converted from\ntype STRING to the current locale. The conversion is identical to that produced\nby `mb_text_property_to_text_list` for a single element STRING property.\nThe returned string is owned by Xlib and should not be freed by the client.\nThe property value must be in a format that is acceptable to `X11::rm_get_string_database`.\nIf no property exists, empty string is returned.\n\n###See also\n`Screen::resource_string`.","summary":"<p>Returns the RESOURCE_MANAGER property from the server's root window of screen zero.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/x11/display.cr","line_number":1258,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1258"},"def":{"name":"resource_manager_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"pstr = X.resource_manager_string(@dpy)\nif pstr.null?\n  return \"\"\nend\nstr = String.new(pstr)\nX.free(pstr)\nstr\n"}},{"id":"restack_windows(windows:Array(X11::C::Window)):Int32-instance-method","html_id":"restack_windows(windows:Array(X11::C::Window)):Int32-instance-method","name":"restack_windows","doc":"Restacks the windows in the order specified, from top to bottom.\n\n###Arguments\n- **windows** Specifies an array containing the windows to be restacked.\n\n###Description\nThe `restack_windows` function restacks the windows in the order specified,\nfrom top to bottom. The stacking order of the first window in the windows\narray is unaffected, but the other windows in the array are stacked\nunderneath the first window, in the order of the array. The stacking order\nof the other windows is not affected. For each window in the window array\nthat is not a child of the specified window, a **BadMatch** error results.\n\nIf the override-redirect attribute of a window is **false** and some other\nclient has selected **SubstructureRedirectMask** on the parent, the X server\ngenerates **ConfigureRequest** events for each window whose override-redirect\nflag is not set, and no further processing is performed.\nOtherwise, the windows will be restacked in top to bottom order.\n\n`restack_windows` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `circulate_subwindows`,\n`circulate_subwindows_down`, `circulate_subwindows_up`, `configure_window`,\n`create_window`, `destroy_window`, `lower_window`, `map_window`, `raise_window`.","summary":"<p>Restacks the windows in the order specified, from top to bottom.</p>","abstract":false,"args":[{"name":"windows","doc":null,"default_value":"","external_name":"windows","restriction":"Array(X11::C::Window)"}],"args_string":"(windows : Array(X11::C::Window)) : Int32","args_html":"(windows : Array(<a href=\"../X11/C/Window.html\">X11::C::Window</a>)) : Int32","location":{"filename":"src/x11/display.cr","line_number":6395,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6395"},"def":{"name":"restack_windows","args":[{"name":"windows","doc":null,"default_value":"","external_name":"windows","restriction":"Array(X11::C::Window)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.restack_windows(@dpy, windows.to_unsafe, windows.size)"}},{"id":"root_window(screen_number:Int32):X11::C::Window-instance-method","html_id":"root_window(screen_number:Int32):X11::C::Window-instance-method","name":"root_window","doc":"Returns the root window of the specified screen.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.\n\n###See Also\n`default_root_window`.","summary":"<p>Returns the root window of the specified screen.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : X11::C::Window","args_html":"(screen_number : Int32) : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/display.cr","line_number":1363,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1363"},"def":{"name":"root_window","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"X.root_window(@dpy, screen_number)"}},{"id":"rotate_buffers(rotate:Int32):Int32-instance-method","html_id":"rotate_buffers(rotate:Int32):Int32-instance-method","name":"rotate_buffers","doc":"Rotates the cut buffers.\n\n###Arguments\n- **rotate** Specifies how much to rotate the cut buffers.\n\n###Description\nThe `rotate_buffers` function rotates the cut buffers, such that buffer\n0 becomes buffer n, buffer 1 becomes n + 1 mod 8, and so on. This cut\nbuffer numbering is global to the display. Note that `rotate_buffers`\ngenerates **BadMatch** errors if any of the eight buffers have not been created.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n\n###See also\n`fetch_buffer`, `fetch_bytes`, `store_buffer`, `store_bytes`.","summary":"<p>Rotates the cut buffers.</p>","abstract":false,"args":[{"name":"rotate","doc":null,"default_value":"","external_name":"rotate","restriction":"Int32"}],"args_string":"(rotate : Int32) : Int32","args_html":"(rotate : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":6417,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6417"},"def":{"name":"rotate_buffers","args":[{"name":"rotate","doc":null,"default_value":"","external_name":"rotate","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.rotate_buffers(@dpy, rotate)"}},{"id":"rotate_window_properties(w:X11::C::Window,properties:Array(Atom|X11::C::Atom),npositions:Int32):Int32-instance-method","html_id":"rotate_window_properties(w:X11::C::Window,properties:Array(Atom|X11::C::Atom),npositions:Int32):Int32-instance-method","name":"rotate_window_properties","doc":"Allows you to rotate properties on a window.\n\n###Arguments\n- **w** Specifies the window.\n- **properties** Specifies the array of properties that are to be rotated.\n- **npositions** Specifies the rotation amount.\n\n###Description\nThe `rotate_window_properties` function allows you to rotate properties on\na window and causes the X server to generate **PropertyNotify** events.\nIf the property names in the properties array are viewed as being numbered\nstarting from zero and if there are `properties.size` property names in the list,\nthen the value associated with property name I becomes the value associated with\nproperty name (I + npositions) mod N for all I from zero to N - 1.\nThe effect is to rotate the states by npositions places around the virtual\nring of property names (right for positive npositions, left for negative npositions).\nIf npositions mod N is nonzero, the X server generates a **PropertyNotify**\nevent for each property in the order that they are listed in the array.\nIf an atom occurs more than once in the list or no property with that name\nis defined for the window, a **BadMatch** error results. If a **BadAtom**\nor **BadMatch** error results, no properties are changed.\n\n`rotate_window_properties` can generate **BadAtom**, **BadMatch**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadAtom** A value for an Atom argument does not name a defined Atom.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadPixmap** A value for a *Pixmap* argument does not name a defined *Pixmap*.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_property`, `delete_property`, `window_property`, `properties`.","summary":"<p>Allows you to rotate properties on a window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(Atom | X11::C::Atom)"},{"name":"npositions","doc":null,"default_value":"","external_name":"npositions","restriction":"Int32"}],"args_string":"(w : X11::C::Window, properties : Array(Atom | X11::C::Atom), npositions : Int32) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, properties : Array(<a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>), npositions : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":6455,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6455"},"def":{"name":"rotate_window_properties","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(Atom | X11::C::Atom)"},{"name":"npositions","doc":null,"default_value":"","external_name":"npositions","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.rotate_window_properties(@dpy, w, properties.to_unsafe.as(::Pointer(X11::C::Atom)), properties.size, npositions)"}},{"id":"screen(screen_number:Int32):Screen-instance-method","html_id":"screen(screen_number:Int32):Screen-instance-method","name":"screen","doc":"Returns the indicated screen.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.","summary":"<p>Returns the indicated screen.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : Screen","args_html":"(screen_number : Int32) : <a href=\"../X11/Screen.html\">Screen</a>","location":{"filename":"src/x11/display.cr","line_number":1457,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1457"},"def":{"name":"screen","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Screen","visibility":"Public","body":"Screen.new(X.screen_of_display(@dpy, screen_number))"}},{"id":"screen_count:Int32-instance-method","html_id":"screen_count:Int32-instance-method","name":"screen_count","doc":"Returns the number of available screens.","summary":"<p>Returns the number of available screens.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":6460,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6460"},"def":{"name":"screen_count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.screen_count(@dpy)"}},{"id":"screen_saver:NamedTuple()-instance-method","html_id":"screen_saver:NamedTuple()-instance-method","name":"screen_saver","doc":"Returns the current screen saver values.\n\n###Return\n- **timeout** Returns the timeout, in seconds, until the screen saver turns on.\n- **interval** Returns the interval between screen saver invocations.\n- **prefer_blanking** Returns the current screen blanking preference\n(**DontPreferBlanking**, **PreferBlanking**, or **DefaultBlanking**).\n- **allow_exposures** Returns the current screen save control value\n(**DontAllowExposures**, **AllowExposures**, or **DefaultExposures**).\n\n###Description\nThe `screen_saver` function gets the current screen saver values.\n\n###See also\n`set_screen_saver`, `force_screen_saver`, `activate_screen_saver`, `reset_screen_saver`.","summary":"<p>Returns the current screen saver values.</p>","abstract":false,"args":[],"args_string":" : NamedTuple()","args_html":" : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":4587,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4587"},"def":{"name":"screen_saver","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(timeout: Int32, interval: Int32, prefer_blanking: Int32, allow_exposures: Int32, res: Int32)","visibility":"Public","body":"res = X.get_screen_saver(@dpy, out timeout_return, out interval_return, out prefer_blanking_return, out allow_exposures_return)\n{timeout: timeout_return, interval: interval_return, prefer_blanking: prefer_blanking_return, allow_exposures: allow_exposures_return, res: res}\n"}},{"id":"select_input(w:X11::C::Window,event_mask:Int64):Int32-instance-method","html_id":"select_input(w:X11::C::Window,event_mask:Int64):Int32-instance-method","name":"select_input","doc":"Requests that the X server report the events associated with the specified event mask.\n\n###Arguments\n- **w** Specifies the window whose events you are interested in.\n- **event_mask** Specifies the event mask.\n\n###Description\nThe `select_input` function requests that the X server report the events\nassociated with the specified event mask. Initially, X will not report any\nof these events. Events are reported relative to a window. If a window is\nnot interested in a device event, it usually propagates to the closest\nancestor that is interested, unless the do_not_propagate mask prohibits it.\n\nSetting the event-mask attribute of a window overrides any previous call\nfor the same window but not for other clients. Multiple clients can select\nfor the same events on the same window with the following restrictions:\n- Multiple clients can select events on the same window because their event\nmasks are disjoint. When the X server generates an event, it reports it to all interested clients.\n- Only one client at a time can select **CirculateRequest**,\n**ConfigureRequest**, or **MapRequest** events, which are associated with\nthe event mask **SubstructureRedirectMask**.\n- Only one client at a time can select a **ResizeRequest** event,\nwhich is associated with the event mask **ResizeRedirectMask**.\n- Only one client at a time can select a **ButtonPress** event, which\nis associated with the event mask **ButtonPressMask**.\nThe server reports the event to all interested clients.\n\n`select_input` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.","summary":"<p>Requests that the X server report the events associated with the specified event mask.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"Int64"}],"args_string":"(w : X11::C::Window, event_mask : Int64) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, event_mask : Int64) : Int32","location":{"filename":"src/x11/display.cr","line_number":6495,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6495"},"def":{"name":"select_input","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.select_input(@dpy, w, event_mask)"}},{"id":"selection_owner(selection:Atom|X11::C::Atom):X11::C::Window-instance-method","html_id":"selection_owner(selection:Atom|X11::C::Atom):X11::C::Window-instance-method","name":"selection_owner","doc":"Returns the selection owner.\n\n###Arguments\n- **display** Specifies the connection to the X server.\n- **selection** Specifies the selection atom whose owner you want returned.\n\n###Description\nThe `selection_owner` function returns the window ID associated with\nthe window that currently owns the specified selection. If no selection was\nspecified, the function returns the constant `None`. If `None` is returned, there is no owner for the selection.\n\n`selection_owner` can generate a **BadAtom** error.\n\n###Diagnostics\n- **BadAtom** A value for an `Atom` argument does not name a defined `Atom`.\n\n###See also\n`convert_selection`, `set_selection_owner`.","summary":"<p>Returns the selection owner.</p>","abstract":false,"args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"Atom | X11::C::Atom"}],"args_string":"(selection : Atom | X11::C::Atom) : X11::C::Window","args_html":"(selection : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>) : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/display.cr","line_number":888,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L888"},"def":{"name":"selection_owner","args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"Atom | X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"X.get_selection_owner(@dpy, selection.to_u64)"}},{"id":"send_event(w:X11::C::Window,propagate:Bool,event_mask:Int64,event_send:Event):X11::C::X::Status-instance-method","html_id":"send_event(w:X11::C::Window,propagate:Bool,event_mask:Int64,event_send:Event):X11::C::X::Status-instance-method","name":"send_event","doc":"Identifies the destination window, determines which clients should\nreceive the specified events, and ignores any active grabs.\n\n###Arguments\n- **w** Specifies the window the event is to be sent to,\nor **PointerWindow**, or **InputFocus**.\n- **propagate** Specifies a Boolean value.\n- **event_mask** Specifies the event mask.\n- **event_send** Specifies the event that is to be sent.\n\n###Description\nThe `send_event` function identifies the destination window, determines\nwhich clients should receive the specified events, and ignores any active\ngrabs. This function requires you to pass an event mask. For a discussion\nof the valid event mask names, see section \"Event Masks\". This function\nuses the w argument to identify the destination window as follows:\n- If w is **PointerWindow**, the destination window is the window that contains the pointer.\n- If w is **InputFocus** and if the focus window contains the pointer,\nthe destination window is the window that contains the pointer; otherwise,\nthe destination window is the focus window.\nTo determine which clients should receive the specified events,\n`send_event` uses the propagate argument as follows:\n- If event_mask is the empty set, the event is sent to the client that\ncreated the destination window. If that client no longer exists, no event is sent.\n- If propagate is **false**, the event is sent to every client selecting\non destination any of the event types in the event_mask argument.\n- If propagate is **true** and no clients have selected on destination any\nof the event types in event-mask, the destination is replaced with the closest\nancestor of destination for which some client has selected a type in event-mask\nand for which no intervening window has that type in its do-not-propagate-mask.\nIf no such window exists or if the window is an ancestor of the focus window\nand **InputFocus** was originally specified as the destination, the event\nis not sent to any clients. Otherwise, the event is reported to every client\nselecting on the final destination any of the types specified in event_mask.\n\nThe event in the `Event` object must be one of the core events or one of\nthe events defined by an extension (or a **BadValue** error results) so that\nthe X server can correctly byte-swap the contents as necessary. The contents\nof the event are otherwise unaltered and unchecked by the X server except to\nforce send_event to **true** in the forwarded event and to set the serial\nnumber in the event correctly; therefore these fields and the display\nfield are ignored by `send_event`.\n\n`send_event` returns zero if the conversion to wire protocol\nformat failed and returns nonzero otherwise.\n\n`send_event` can generate **BadValue** and **BadWindow** errors.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values\naccepted by the request. Unless a specific range is specified for an\nargument, the full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`motion_buffer_size`, `motion_events`, `if_event`, `next_event`, `put_back_event`.","summary":"<p>Identifies the destination window, determines which clients should receive the specified events, and ignores any active grabs.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"propagate","doc":null,"default_value":"","external_name":"propagate","restriction":"Bool"},{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"Int64"},{"name":"event_send","doc":null,"default_value":"","external_name":"event_send","restriction":"Event"}],"args_string":"(w : X11::C::Window, propagate : Bool, event_mask : Int64, event_send : Event) : X11::C::X::Status","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, propagate : Bool, event_mask : Int64, event_send : <a href=\"../X11/Event.html\">Event</a>) : X11::C::X::Status","location":{"filename":"src/x11/display.cr","line_number":6556,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6556"},"def":{"name":"send_event","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"propagate","doc":null,"default_value":"","external_name":"propagate","restriction":"Bool"},{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"Int64"},{"name":"event_send","doc":null,"default_value":"","external_name":"event_send","restriction":"Event"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::Status","visibility":"Public","body":"X.send_event(@dpy, w, propagate ? X::True : X::False, event_mask, event_send.to_unsafe.as(X11::C::X::PEvent))"}},{"id":"server_vendor:String-instance-method","html_id":"server_vendor:String-instance-method","name":"server_vendor","doc":"Returns string that provides some identification of the owner of the X server implementation.\nIf the data returned by the server is in the Latin Portable Character Encoding,\nthen the string is in the Host Portable Character Encoding. Otherwise,\nthe contents of the string are implementation dependent.","summary":"<p>Returns string that provides some identification of the owner of the X server implementation.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/x11/display.cr","line_number":1427,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1427"},"def":{"name":"server_vendor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"pstr = X.server_vendor(@dpy)\nif pstr.null?\n  return \"\"\nend\nString.new(pstr)\n"}},{"id":"set_access_control(mode:Int32):Int32-instance-method","html_id":"set_access_control(mode:Int32):Int32-instance-method","name":"set_access_control","doc":"Enables or disables the use of the access control list at each connection setup.\n\n###Arguments\n- **mode** Specifies the mode. You can pass **EnableAccess** or **DisableAccess**.\n\n###Description\nThe `set_access_control` function either enables or disables the use of\nthe access control list at each connection setup.\n\n`set_access_control` can generate **BadAccess** and **BadValue** errors.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.\n\n###See also\n`add_host`, `add_hosts`, `disable_access_control`, `enable_access_control`,\n`hosts`, `remove_host`, `remove_hosts`.","summary":"<p>Enables or disables the use of the access control list at each connection setup.</p>","abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"args_string":"(mode : Int32) : Int32","args_html":"(mode : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":6582,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6582"},"def":{"name":"set_access_control","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_access_control(@dpy, mode)"}},{"id":"set_after_function(procedure:X11::C::X::PDisplay->Int32):X11::C::X::PDisplay->Int32-instance-method","html_id":"set_after_function(procedure:X11::C::X::PDisplay->Int32):X11::C::X::PDisplay->Int32-instance-method","name":"set_after_function","doc":"Returns the previous after function.\n\n###Arguments\n- **procedure** Specifies the procedure to be called.\n\n###Description\nThe specified procedure is called with only a display pointer.\n`set_after_function` returns the previous after function.\n\n###See also\n`set_error_handler`, `synchronize`.","summary":"<p>Returns the previous after function.</p>","abstract":false,"args":[{"name":"procedure","doc":null,"default_value":"","external_name":"procedure","restriction":"(X11::C::X::PDisplay -> Int32)"}],"args_string":"(procedure : X11::C::X::PDisplay -> Int32) : X11::C::X::PDisplay -> Int32","args_html":"(procedure : X11::C::X::PDisplay -> Int32) : X11::C::X::PDisplay -> Int32","location":{"filename":"src/x11/display.cr","line_number":456,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L456"},"def":{"name":"set_after_function","args":[{"name":"procedure","doc":null,"default_value":"","external_name":"procedure","restriction":"(X11::C::X::PDisplay -> Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(X11::C::X::PDisplay -> Int32)","visibility":"Public","body":"X.set_after_function(@dpy, procedure)"}},{"id":"set_arc_mode(gc:X11::C::X::GC,arc_mode:Int32):Int32-instance-method","html_id":"set_arc_mode(gc:X11::C::X::GC,arc_mode:Int32):Int32-instance-method","name":"set_arc_mode","doc":"Sets the arc mode.\n\n###Arguments\n- **gc** Specifies the GC.\n- **arc_mode** Specifies the arc mode. You can pass **ArcChord** or **ArcPieSlice**.\n\n###Description\n`set_arc_mode` can generate **BadAlloc**, **BadGC**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.\n\n###See also\n`copy_area`, `create_gc`, `query_best_size`, `set_clip_origin`,\n`set_fill_style`, `set_font`, `set_graphics_exposures`, `set_line_attributes`,\n`set_state`, `set_subwindow_mode`, `set_tile`.","summary":"<p>Sets the arc mode.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"arc_mode","doc":null,"default_value":"","external_name":"arc_mode","restriction":"Int32"}],"args_string":"(gc : X11::C::X::GC, arc_mode : Int32) : Int32","args_html":"(gc : X11::C::X::GC, arc_mode : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":6607,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6607"},"def":{"name":"set_arc_mode","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"arc_mode","doc":null,"default_value":"","external_name":"arc_mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_arc_mode(@dpy, gc, arc_mode)"}},{"id":"set_background(gc:X11::C::X::GC,background:UInt64):Int32-instance-method","html_id":"set_background(gc:X11::C::X::GC,background:UInt64):Int32-instance-method","name":"set_background","doc":"Sets the background.\n\n###Arguments\n- **gc** Specifies the GC.\n- **background** Specifies the background you want to set for the specified GC.\n\n###Description\n`set_background` can generate **BadAlloc** and **BadGC** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_background`,\n`set_clip_origin`, `set_fill_style`, `set_font`, `set_foreground`,\n`set_function`, `set_line_attributes`, `set_plane_mask`,\n`set_state`, `set_tile`.","summary":"<p>Sets the background.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"background","doc":null,"default_value":"","external_name":"background","restriction":"UInt64"}],"args_string":"(gc : X11::C::X::GC, background : UInt64) : Int32","args_html":"(gc : X11::C::X::GC, background : UInt64) : Int32","location":{"filename":"src/x11/display.cr","line_number":6629,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6629"},"def":{"name":"set_background","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"background","doc":null,"default_value":"","external_name":"background","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_background(@dpy, gc, background)"}},{"id":"set_clip_mask(gc:X11::C::X::GC,pixmap:X11::C::Pixmap):Int32-instance-method","html_id":"set_clip_mask(gc:X11::C::X::GC,pixmap:X11::C::Pixmap):Int32-instance-method","name":"set_clip_mask","doc":"Sets the clip mask.\n\n###Arguments\n- **gc** Specifies the GC.\n- **pixmap** Specifies the pixmap or **None**.\n\n###Description\nIf the clip-mask is set to **None**, the pixels are are always drawn (regardless of the clip-origin).\n\n`set_clip_mask` can generate **BadAlloc**, **BadGC**, **BadMatch**, and **BadPixmap** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadPixmap** A value for a *Pixmap* argument does not name a defined *Pixmap*.\n\n###See also\n`create_gc`, `draw_rectangle`, `query_best_size`, `set_arc_mode`,\n`set_clip_origin`, `set_clip_rectangles`, `set_fill_style`, `set_font`,\n`set_line_attributes`, `set_state`, `set_tile`.","summary":"<p>Sets the clip mask.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"pixmap","doc":null,"default_value":"","external_name":"pixmap","restriction":"X11::C::Pixmap"}],"args_string":"(gc : X11::C::X::GC, pixmap : X11::C::Pixmap) : Int32","args_html":"(gc : X11::C::X::GC, pixmap : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":6656,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6656"},"def":{"name":"set_clip_mask","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"pixmap","doc":null,"default_value":"","external_name":"pixmap","restriction":"X11::C::Pixmap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_clip_mask(@dpy, gc, pixmap)"}},{"id":"set_clip_origin(gc:X11::C::GC,clip_x_origin:Int32,clip_y_origin:Int32):Int32-instance-method","html_id":"set_clip_origin(gc:X11::C::GC,clip_x_origin:Int32,clip_y_origin:Int32):Int32-instance-method","name":"set_clip_origin","doc":"Sets clip origin.\n\n###Arguments\n- **gc** Specifies the GC.\n- **clip_x_origin**, **clip_y_origin** Specify the x and y coordinates of the clip-mask origin.\n\n###Description\nThe clip-mask origin is interpreted relative to the origin of whatever\ndestination drawable is specified in the graphics request.\n\n`set_clip_origin` can generate **BadAlloc** and **BadGC** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n\n###See also\n`create_gc`, `draw_rectangle`, `query_best_size`, `set_arc_mode`,\n`set_clip_mask`, `set_clip_rectangles`, `set_fill_style`, `set_font`,\n`set_line_attributes`, `set_state`, `set_tile`.","summary":"<p>Sets clip origin.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::GC"},{"name":"clip_x_origin","doc":null,"default_value":"","external_name":"clip_x_origin","restriction":"Int32"},{"name":"clip_y_origin","doc":null,"default_value":"","external_name":"clip_y_origin","restriction":"Int32"}],"args_string":"(gc : X11::C::GC, clip_x_origin : Int32, clip_y_origin : Int32) : Int32","args_html":"(gc : X11::C::GC, clip_x_origin : Int32, clip_y_origin : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":6680,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6680"},"def":{"name":"set_clip_origin","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::GC"},{"name":"clip_x_origin","doc":null,"default_value":"","external_name":"clip_x_origin","restriction":"Int32"},{"name":"clip_y_origin","doc":null,"default_value":"","external_name":"clip_y_origin","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_clip_origin(@dpy, gc, clip_x_origin, clip_y_origin)"}},{"id":"set_clip_rectangles(gc:X11::C::X::GC,clip_x_origin:Int32,clip_y_origin:Int32,rectangles:Array(Rectangle),ordering:Int32):Int32-instance-method","html_id":"set_clip_rectangles(gc:X11::C::X::GC,clip_x_origin:Int32,clip_y_origin:Int32,rectangles:Array(Rectangle),ordering:Int32):Int32-instance-method","name":"set_clip_rectangles","doc":"Changes the clip-mask in the specified\nGC to the specified list of rectangles and sets the clip origin.\n\n###Arguments\n- **gc** Specifies the GC.\n- **clip_x_origin**, **clip_y_origin** Specify the x and y coordinates of the clip-mask origin.\n- **rectangles** Specifies an array of rectangles that define the clip-mask.\n- **ordering** Specifies the ordering relations on the rectangles.\nYou can pass **Unsorted**, **YSorted**, **YXSorted**, or **YXBanded**.\n\n###Description\nThe `set_clip_rectangles` function changes the clip-mask in the specified\nGC to the specified list of rectangles and sets the clip origin. The output\nis clipped to remain contained within the rectangles. The clip-origin is\ninterpreted relative to the origin of whatever destination drawable is specified\nin a graphics request. The rectangle coordinates are interpreted relative to\nthe clip-origin. The rectangles should be nonintersecting, or the graphics\nresults will be undefined. Note that the list of rectangles can be empty,\nwhich effectively disables output. This is the opposite of passing **None**\nas the clip-mask in `create_gc`, `change_gc`, and `set_clip_mask`.\n\nIf known by the client, ordering relations on the rectangles can be specified\nwith the ordering argument. This may provide faster operation by the server.\nIf an incorrect ordering is specified, the X server may generate a **BadMatch**\nerror, but it is not required to do so. If no error is generated, the graphics\nresults are undefined. Unsorted means the rectangles are in arbitrary order.\n**YSorted** means that the rectangles are nondecreasing in their Y origin.\n**YXSorted** additionally constrains **YSorted** order in that all rectangles\nwith an equal Y origin are nondecreasing in their X origin. **YXBanded**\nadditionally constrains **YXSorted** by requiring that, for every possible\nY scanline, all rectangles that include that scanline have an identical Y origins and Y extents.\n\n`set_clip_rectangles` can generate **BadAlloc**, **BadGC**, **BadMatch**,\nand **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.\n\n###See also\n`create_gc`, `draw_rectangle`, `query_best_size`, `set_arc_mode`,\n`set_clip_mask`, `set_clip_origin`, `set_fill_style`, `set_font`,\n`set_line_attributes`, `set_state`, `set_title`.","summary":"<p>Changes the clip-mask in the specified GC to the specified list of rectangles and sets the clip origin.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"clip_x_origin","doc":null,"default_value":"","external_name":"clip_x_origin","restriction":"Int32"},{"name":"clip_y_origin","doc":null,"default_value":"","external_name":"clip_y_origin","restriction":"Int32"},{"name":"rectangles","doc":null,"default_value":"","external_name":"rectangles","restriction":"Array(Rectangle)"},{"name":"ordering","doc":null,"default_value":"","external_name":"ordering","restriction":"Int32"}],"args_string":"(gc : X11::C::X::GC, clip_x_origin : Int32, clip_y_origin : Int32, rectangles : Array(Rectangle), ordering : Int32) : Int32","args_html":"(gc : X11::C::X::GC, clip_x_origin : Int32, clip_y_origin : Int32, rectangles : Array(<a href=\"../X11/Rectangle.html\">Rectangle</a>), ordering : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":6734,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6734"},"def":{"name":"set_clip_rectangles","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"clip_x_origin","doc":null,"default_value":"","external_name":"clip_x_origin","restriction":"Int32"},{"name":"clip_y_origin","doc":null,"default_value":"","external_name":"clip_y_origin","restriction":"Int32"},{"name":"rectangles","doc":null,"default_value":"","external_name":"rectangles","restriction":"Array(Rectangle)"},{"name":"ordering","doc":null,"default_value":"","external_name":"ordering","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_clip_rectangles(@dpy, gc, clip_x_origin, clip_y_origin, rectangles.to_unsafe, rectangles.size, ordering)"}},{"id":"set_close_down_mode(close_mode:Int32):Int32-instance-method","html_id":"set_close_down_mode(close_mode:Int32):Int32-instance-method","name":"set_close_down_mode","doc":"Defines what will happen to the client's resources at connection close.\n\n###Arguments\n- **close_mode** Specifies the client close-down mode. You can pass\n**DestroyAll**, **RetainPermanent**, or **RetainTemporary**.\n\n###Description\nThe `set_close_down_mode` defines what will happen to the client's resources\nat connection close. A connection starts in **DestroyAll** mode.\nFor information on what happens to the client's resources when the\nclose_mode argument is **RetainPermanent** or **RetainTemporary**,\nsee \"X Server Connection Close Operations\".\n\n`set_close_down_mode` can generate a **BadValue** error.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values\naccepted by the request. Unless a specific range is specified for an\nargument, the full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.","summary":"<p>Defines what will happen to the client's resources at connection close.</p>","abstract":false,"args":[{"name":"close_mode","doc":null,"default_value":"","external_name":"close_mode","restriction":"Int32"}],"args_string":"(close_mode : Int32) : Int32","args_html":"(close_mode : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":6758,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6758"},"def":{"name":"set_close_down_mode","args":[{"name":"close_mode","doc":null,"default_value":"","external_name":"close_mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_close_down_mode(@dpy, close_mode)"}},{"id":"set_command(w:X11::C::Window,argv:Array(String)):Int32-instance-method","html_id":"set_command(w:X11::C::Window,argv:Array(String)):Int32-instance-method","name":"set_command","doc":"Sets the command and arguments used to invoke the application.\n\n###Arguments\n- **w** Specifies the window.\n- **argv** Specifies the application's argument list.\n\n###Description\nThe `set_command` function sets the command and arguments used to invoke\nthe application. (Typically, argv is the argv array of your main program.)\nIf the strings are not in the Host Portable Character Encoding,\nthe result is implementation dependent.\n\n`set_command` can generate **BadAlloc** and **BadWindow** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`X11::alloc_class_hint`, `X11::alloc_icon_size`, `X11::alloc_size_hints`,\n`X11::alloc_wm_hints`, `command`, `set_text_property`,\n`set_transient_for_hint`, `set_wm_client_machine`, `set_wm_colormap_windows`,\n`set_wm_icon_name`, `set_wm_name`, `set_wm_properties`,\n`set_wm_protocols`, `X11::string_list_to_text_property`.","summary":"<p>Sets the command and arguments used to invoke the application.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":"Array(String)"}],"args_string":"(w : X11::C::Window, argv : Array(String)) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, argv : Array(String)) : Int32","location":{"filename":"src/x11/display.cr","line_number":6786,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6786"},"def":{"name":"set_command","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"argv","doc":null,"default_value":"","external_name":"argv","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"pargv = argb.map(&.to_unsafe)\nX.set_command(@dpy, w, pargv.to_unsafe, pargv.size)\n"}},{"id":"set_dashes(gc:X11::C::X::GC,dash_offset:Int32,dash_list:String):Int32-instance-method","html_id":"set_dashes(gc:X11::C::X::GC,dash_offset:Int32,dash_list:String):Int32-instance-method","name":"set_dashes","doc":"Sets the dash-offset and dash-list attributes for\ndashed line styles in the specified GC.\n\n###Arguments\n- **gc** Specifies the GC.\n- **dash_offset** Specifies the phase of the pattern for the dashed line-style you want to set for the specified GC.\n- **dash_list** Specifies the dash-list for the dashed line-style you want to set for the specified GC.\n\n###Description\nThe `set_dashes` function sets the dash-offset and dash-list attributes for\ndashed line styles in the specified GC. There must be at least one element\nin the specified dash_list, or a **BadValue** error results. The initial\nand alternating elements (second, fourth, and so on) of the dash_list are\nthe even dashes, and the others are the odd dashes. Each element specifies\na dash length in pixels. All of the elements must be nonzero, or a\n**BadValue** error results. Specifying an odd-length list is equivalent to\nspecifying the same list concatenated with itself to produce an even-length list.\n\nThe dash-offset defines the phase of the pattern, specifying how many\npixels into the dash-list the pattern should actually begin in any single\ngraphics request. Dashing is continuous through path elements combined with\na join-style but is reset to the dash-offset between each sequence of joined lines.\n\nThe unit of measure for dashes is the same for the ordinary coordinate system.\nIdeally, a dash length is measured along the slope of the line, but\nimplementations are only required to match this ideal for horizontal and\nvertical lines. Failing the ideal semantics, it is suggested that the length\nbe measured along the major axis of the line. The major axis is defined as\nthe x axis for lines drawn at an angle of between -45 and +45 degrees or\nbetween 135 and 225 degrees from the x axis. For all other lines, the major axis is the y axis.\n\n`set_dashes` can generate **BadAlloc**, **BadGC**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_clip_origin`,\n`set_fill_style`, `set_font`, `set_line_attributes`, `set_state`, `set_tile`.","summary":"<p>Sets the dash-offset and dash-list attributes for dashed line styles in the specified GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"dash_offset","doc":null,"default_value":"","external_name":"dash_offset","restriction":"Int32"},{"name":"dash_list","doc":null,"default_value":"","external_name":"dash_list","restriction":"String"}],"args_string":"(gc : X11::C::X::GC, dash_offset : Int32, dash_list : String) : Int32","args_html":"(gc : X11::C::X::GC, dash_offset : Int32, dash_list : String) : Int32","location":{"filename":"src/x11/display.cr","line_number":6835,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6835"},"def":{"name":"set_dashes","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"dash_offset","doc":null,"default_value":"","external_name":"dash_offset","restriction":"Int32"},{"name":"dash_list","doc":null,"default_value":"","external_name":"dash_list","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_dashes(@dpy, gc, dash_offset, dash_list.to_unsafe, dash_list.size)"}},{"id":"set_fill_rule(gc:X11::C::X::GC,fill_rule:Int32):Int32-instance-method","html_id":"set_fill_rule(gc:X11::C::X::GC,fill_rule:Int32):Int32-instance-method","name":"set_fill_rule","doc":"Sets the fill rule.\n\n###Arguments\n- **gc** Specifies the GC.\n- **fill_rule** Specifies the fill-rule you want to set for the specified GC.\nYou can pass **EvenOddRule** or **WindingRule**.\n\n###Description\n`set_fill_rule` can generate **BadAlloc**, **BadGC**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_clip_origin`,\n`set_fill_rule`, `set_fill_style`, `set_font`, `set_line_attributes`,\n`set_state`, `set_tile`.","summary":"<p>Sets the fill rule.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"fill_rule","doc":null,"default_value":"","external_name":"fill_rule","restriction":"Int32"}],"args_string":"(gc : X11::C::X::GC, fill_rule : Int32) : Int32","args_html":"(gc : X11::C::X::GC, fill_rule : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":6861,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6861"},"def":{"name":"set_fill_rule","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"fill_rule","doc":null,"default_value":"","external_name":"fill_rule","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_fill_rule(@dpy, gc, fill_rule)"}},{"id":"set_fill_style(gc:X11::C::X::GC,fill_style:Int32):Int32-instance-method","html_id":"set_fill_style(gc:X11::C::X::GC,fill_style:Int32):Int32-instance-method","name":"set_fill_style","doc":"Sets the fill style.\n\n###Arguments\n- **gc** Specifies the GC.\n- **fill_style** Specifies the fill-style you want to set for the\nspecified GC. You can pass **FillSolid**, **FillTiled**,\n**FillStippled**, or **FillOpaqueStippled**.\n\n###Description\n`set_fill_style` can generate **BadAlloc**, **BadGC**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_clip_origin`,\n`set_fill_rule`, `set_font`, `set_line_attributes`, `set_state`, `set_tile`.","summary":"<p>Sets the fill style.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"fill_style","doc":null,"default_value":"","external_name":"fill_style","restriction":"Int32"}],"args_string":"(gc : X11::C::X::GC, fill_style : Int32) : Int32","args_html":"(gc : X11::C::X::GC, fill_style : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":6887,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6887"},"def":{"name":"set_fill_style","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"fill_style","doc":null,"default_value":"","external_name":"fill_style","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_fill_style(@dpy, gc, fill_style)"}},{"id":"set_font(gc:X11::C::X::GC,font:X11::C::Font):Int32-instance-method","html_id":"set_font(gc:X11::C::X::GC,font:X11::C::Font):Int32-instance-method","name":"set_font","doc":"Sets the font.\n\n###Arguments\n- **gc** Specifies the GC.\n- **font** Specifies the font.\n\n###Description\n`set_font` can generate **BadAlloc**, **BadFont**, and **BadGCs** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadFont** A value for a font argument does not name a defined font (or, in some cases, `GContext`).\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_clip_origin`,\n`set_fill_style`, `set_line_attributes`, `set_state`, `set_tile`.","summary":"<p>Sets the font.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"font","doc":null,"default_value":"","external_name":"font","restriction":"X11::C::Font"}],"args_string":"(gc : X11::C::X::GC, font : X11::C::Font) : Int32","args_html":"(gc : X11::C::X::GC, font : <a href=\"../X11/C/Font.html\">X11::C::Font</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":6908,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6908"},"def":{"name":"set_font","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"font","doc":null,"default_value":"","external_name":"font","restriction":"X11::C::Font"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_font(@dpy, gc, font)"}},{"id":"set_font_path(directories:Array(String)):Int32-instance-method","html_id":"set_font_path(directories:Array(String)):Int32-instance-method","name":"set_font_path","doc":"Defines the directory search path for font lookup.\n\n###Arguments\n- **directories** Specifies the directory path used to look for a font.\nSetting the path to the empty list restores the default path defined for the X server.\n\n###Description\nThe `set_font_path` function defines the directory search path for font lookup.\nThere is only one search path per X server, not one per client. The encoding\nand interpretation of the strings is implementation dependent, but typically\nthey specify directories or font servers to be searched in the order listed.\nAn X server is permitted to cache font information internally; for example,\nit might cache an entire font from a file and not check on subsequent opens\nof that font to see if the underlying font file has changed. However, when\nthe font path is changed, the X server is guaranteed to flush all cached\ninformation about fonts for which there currently are no explicit resource\nIDs allocated. The meaning of an error from this request is implementation dependent.\n\n`set_font_path`  can generate a **BadValue** error.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n\n###See also\n`font_path`, `fonts`, `load_font`.","summary":"<p>Defines the directory search path for font lookup.</p>","abstract":false,"args":[{"name":"directories","doc":null,"default_value":"","external_name":"directories","restriction":"Array(String)"}],"args_string":"(directories : Array(String)) : Int32","args_html":"(directories : Array(String)) : Int32","location":{"filename":"src/x11/display.cr","line_number":6940,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6940"},"def":{"name":"set_font_path","args":[{"name":"directories","doc":null,"default_value":"","external_name":"directories","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"pdirs = directories.map(&.to_unsafe)\nX.set_font_path(@dpy, pdirst.to_unsafe, pdirs.size)\n"}},{"id":"set_foreground(gc:X11::C::X::GC,foreground:UInt64):Int32-instance-method","html_id":"set_foreground(gc:X11::C::X::GC,foreground:UInt64):Int32-instance-method","name":"set_foreground","doc":"Sets foreground.\n\n###Arguments\n- **gc** Specifies the GC.\n- **foreground** Specifies the foreground you want to set for the specified GC.\n\n###Description\n`set_foreground` can generate **BadAlloc** and **BadGC** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_background`,\n`set_clip_origin`, `set_fill_style`, `set_font`, `set_foreground`,\n`set_function`, `set_line_attributes`, `set_plane_mask`, `set_state`, `set_tile`.","summary":"<p>Sets foreground.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"foreground","doc":null,"default_value":"","external_name":"foreground","restriction":"UInt64"}],"args_string":"(gc : X11::C::X::GC, foreground : UInt64) : Int32","args_html":"(gc : X11::C::X::GC, foreground : UInt64) : Int32","location":{"filename":"src/x11/display.cr","line_number":6962,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6962"},"def":{"name":"set_foreground","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"foreground","doc":null,"default_value":"","external_name":"foreground","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_foreground(@dpy, gc, foreground)"}},{"id":"set_function(gc:X11::C::GC,function:Int32):Int32-instance-method","html_id":"set_function(gc:X11::C::GC,function:Int32):Int32-instance-method","name":"set_function","doc":"Sets the display function.\n\n###Arguments\n- **gc** Specifies the GC.\n- **function** Specifies the function you want to set for the specified GC.\n\n###Description\n`set_function` can generate **BadAlloc**, **BadGC**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_background`,\n`set_clip_origin`, `set_fill_style`, `set_font`, `set_foreground`,\n`set_function`, `set_line_attributes`, `set_plane_mask`, `set_state`, `set_tile`.","summary":"<p>Sets the display function.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::GC"},{"name":"function","doc":null,"default_value":"","external_name":"function","restriction":"Int32"}],"args_string":"(gc : X11::C::GC, function : Int32) : Int32","args_html":"(gc : X11::C::GC, function : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":6987,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6987"},"def":{"name":"set_function","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::GC"},{"name":"function","doc":null,"default_value":"","external_name":"function","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_function(@dpy, gc, function)"}},{"id":"set_graphics_exposures(gc:X11::C::X::GC,graphics_exposures:Bool):Int32-instance-method","html_id":"set_graphics_exposures(gc:X11::C::X::GC,graphics_exposures:Bool):Int32-instance-method","name":"set_graphics_exposures","doc":"Sets the graphics-exposures flag of a given GC.\n\n###Arguments\n- **gc** Specifies the GC.\n- **graphics_exposures** Specifies a Boolean value that indicates whether\nyou want **GraphicsExpose** and **NoExpose** events to be reported when calling\n`copy_area` and `copy_plane` with this GC.\n\n###Description\n`set_graphics_exposures` can generate **BadAlloc**, **BadGC**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`copy_area`, `create_gc`, `query_best_size`, `set_arc_mode`, `set_clip_origin`,\n`set_fill_style`, `set_font`, `set_line_attributes`, `set_state`,\n`set_subwindow_mode`, `set_tile`.","summary":"<p>Sets the graphics-exposures flag of a given GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"graphics_exposures","doc":null,"default_value":"","external_name":"graphics_exposures","restriction":"Bool"}],"args_string":"(gc : X11::C::X::GC, graphics_exposures : Bool) : Int32","args_html":"(gc : X11::C::X::GC, graphics_exposures : Bool) : Int32","location":{"filename":"src/x11/display.cr","line_number":7014,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7014"},"def":{"name":"set_graphics_exposures","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"graphics_exposures","doc":null,"default_value":"","external_name":"graphics_exposures","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_graphics_exposures(@dpy, gc, graphics_exposures ? X::True : X::False)"}},{"id":"set_icon_name(w:X11::C::Window,icon_name:String):Int32-instance-method","html_id":"set_icon_name(w:X11::C::Window,icon_name:String):Int32-instance-method","name":"set_icon_name","doc":"Set a window's WM_ICON_NAME property.\n\n###Arguments\n- **w** Specifies the window.\n- **icon_name** Specifies the icon name, which should be a null-terminated string.\n\n###Description\nIf the string is not in the Host Portable Character Encoding, the result\nis implementation dependent. `set_icon_name` can generate **BadAlloc** and **BadWindow** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`icon_name`, `wm_icon_name`, `set_command`, `set_text_property`,\n`set_transient_for_hint`, `set_wm_client_machine`, `set_wm_colormap_windows`,\n`set_wm_icon_name`, `set_wm_name`, `set_wm_properties`, `set_wm_protocols`.","summary":"<p>Set a window's WM_ICON_NAME property.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"icon_name","doc":null,"default_value":"","external_name":"icon_name","restriction":"String"}],"args_string":"(w : X11::C::Window, icon_name : String) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, icon_name : String) : Int32","location":{"filename":"src/x11/display.cr","line_number":7036,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7036"},"def":{"name":"set_icon_name","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"icon_name","doc":null,"default_value":"","external_name":"icon_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_icon_name(@dpy, w, icon_name.to_unsafe)"}},{"id":"set_input_focus(focus:X11::C::Window,revert_to:Int32,time:X11::C::Time):Int32-instance-method","html_id":"set_input_focus(focus:X11::C::Window,revert_to:Int32,time:X11::C::Time):Int32-instance-method","name":"set_input_focus","doc":"Changes the input focus and the last-focus-change time.\n\n###Arguments\n- **focus** Specifies the window, **PointerRoot**, or **None**.\n- **revert_to** Specifies where the input focus reverts to if the window\nbecomes not viewable. You can pass **RevertToParent**,\n**RevertToPointerRoot**, or **RevertToNone**.\n- **time** Specifies the time. You can pass either a timestamp or **CurrentTime**.\n\n###Description\nThe `set_input_focus` function changes the input focus and the\nlast-focus-change time. It has no effect if the specified time is earlier\nthan the current last-focus-change time or is later than the current X\nserver time. Otherwise, the last-focus-change time is set to the specified\ntime (**CurrentTime** is replaced by the current X server time).\n`set_input_focus` causes the X server to generate **FocusIn** and **FocusOut** events.\n\nDepending on the focus argument, the following occurs:\n- If focus is **None**, all keyboard events are discarded until a new focus\nwindow is set, and the revert_to argument is ignored.\n- If focus is a window, it becomes the keyboard's focus window. If a generated\nkeyboard event would normally be reported to this window or one of its inferiors,\nthe event is reported as usual. Otherwise, the event is reported relative to the focus window.\n- If focus is **PointerRoot**, the focus window is dynamically taken to be\nthe root window of whatever screen the pointer is on at each keyboard event.\nIn this case, the revert_to argument is ignored.\n\nThe specified focus window must be viewable at the time `set_input_focus`\nis called, or a **BadMatch** error results. If the focus window later\nbecomes not viewable, the X server evaluates the revert_to argument to\ndetermine the new focus window as follows:\n- If revert_to is **RevertToParent**, the focus reverts to the parent\n(or the closest viewable ancestor), and the new revert_to value is taken to be **RevertToNone**.\n- If revert_to is **RevertToPointerRoot** or **RevertToNone**, the focus\nreverts to **PointerRoot** or **None**, respectively. When the focus reverts,\nthe X server generates **FocusIn** and **FocusOut** events,\nbut the last-focus-change time is not affected.\n\n`set_input_focus` can generate **BadMatch**, **BadValue**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`input_focus`, `warp_pointer`.","summary":"<p>Changes the input focus and the last-focus-change time.</p>","abstract":false,"args":[{"name":"focus","doc":null,"default_value":"","external_name":"focus","restriction":"X11::C::Window"},{"name":"revert_to","doc":null,"default_value":"","external_name":"revert_to","restriction":"Int32"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(focus : X11::C::Window, revert_to : Int32, time : X11::C::Time) : Int32","args_html":"(focus : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, revert_to : Int32, time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7095,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7095"},"def":{"name":"set_input_focus","args":[{"name":"focus","doc":null,"default_value":"","external_name":"focus","restriction":"X11::C::Window"},{"name":"revert_to","doc":null,"default_value":"","external_name":"revert_to","restriction":"Int32"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_input_focus(@dpy, focus, revert_to, time)"}},{"id":"set_line_attributes(gc:X11::C::X::GC,line_width:UInt32,line_style:Int32,cap_style:Int32,join_style:Int32):Int32-instance-method","html_id":"set_line_attributes(gc:X11::C::X::GC,line_width:UInt32,line_style:Int32,cap_style:Int32,join_style:Int32):Int32-instance-method","name":"set_line_attributes","doc":"Sets the line drawing components of a given GC.\n\n###Arguments\n- **gc** Specifies the GC.\n- **line_width** Specifies the line-width you want to set for the specified GC.\n- **line_style** Specifies the line-style you want to set for the specified GC.\nYou can pass **LineSolid**, **LineOnOffDash**, or **LineDoubleDash**.\n- **cap_style** Specifies the line-style and cap-style you want to set for\nthe specified GC. You can pass **CapNotLast**, **CapButt**, **CapRound**, or **CapProjecting**.\n- **join_style** Specifies the line join-style you want to set for the\nspecified GC. You can pass **JoinMiter**, **JoinRound**, or **JoinBevel**.\n\n###Description\n`set_line_attributes` can generate **BadAlloc**, **BadGC**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- *BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_clip_origin`,\n`set_dashes`, `set_fill_style`, `set_font`, `set_state`, `set_tile`.","summary":"<p>Sets the line drawing components of a given GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"line_width","doc":null,"default_value":"","external_name":"line_width","restriction":"UInt32"},{"name":"line_style","doc":null,"default_value":"","external_name":"line_style","restriction":"Int32"},{"name":"cap_style","doc":null,"default_value":"","external_name":"cap_style","restriction":"Int32"},{"name":"join_style","doc":null,"default_value":"","external_name":"join_style","restriction":"Int32"}],"args_string":"(gc : X11::C::X::GC, line_width : UInt32, line_style : Int32, cap_style : Int32, join_style : Int32) : Int32","args_html":"(gc : X11::C::X::GC, line_width : UInt32, line_style : Int32, cap_style : Int32, join_style : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":7125,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7125"},"def":{"name":"set_line_attributes","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"line_width","doc":null,"default_value":"","external_name":"line_width","restriction":"UInt32"},{"name":"line_style","doc":null,"default_value":"","external_name":"line_style","restriction":"Int32"},{"name":"cap_style","doc":null,"default_value":"","external_name":"cap_style","restriction":"Int32"},{"name":"join_style","doc":null,"default_value":"","external_name":"join_style","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_line_attributes(@dpy, gc, line_width, line_style, cap_stype, join_style)"}},{"id":"set_modifier_mapping(modmap:ModifierKeymap):Int32-instance-method","html_id":"set_modifier_mapping(modmap:ModifierKeymap):Int32-instance-method","name":"set_modifier_mapping","doc":"Specifies the KeyCodes of the keys that are to be used as modifiers.\n\n###Arguments\n- **modmap** Specifies the `ModifierKeymap` structure.\n\n###Description\nThe `set_modifier_mapping` function specifies the KeyCodes of the keys\n(if any) that are to be used as modifiers. If it succeeds, the X server\ngenerates a **MappingNotify** event, and `set_modifier_mapping` returns\n**MappingSuccess**. X permits at most eight modifier keys. If more than\neight are specified in the `ModifierKeymap` structure, a **BadLength** error results.\n\nThe modifiermap member of the `ModifierKeymap` structure contains eight sets\nof max_keypermod KeyCodes, one for each modifier in the order **Shift**,\n**Lock**, **Control**, **Mod1**, **Mod2**, **Mod3**, **Mod4**, and **Mod5**.\nOnly nonzero KeyCodes have meaning in each set, and zero KeyCodes are ignored.\nIn addition, all of the nonzero KeyCodes must be in the range specified by\nmin_keycode and max_keycode in the `Display` object, or a **BadValue** error results.\n\nAn X server can impose restrictions on how modifiers can be changed, for\nexample, if certain keys do not generate up transitions in hardware, if\nauto-repeat cannot be disabled on certain keys, or if multiple modifier keys\nare not supported. If some such restriction is violated, the status reply is\n**MappingFailed**, and none of the modifiers are changed. If the new KeyCodes\nspecified for a modifier differ from those currently defined and any\n(current or new) keys for that modifier are in the logically down state,\n`set_modifier_mapping` returns **MappingBusy**, and none of the modifiers is changed.\n\n`set_modifier_mapping` can generate **BadAlloc** and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n\n###See also\n`change_keyboard_mapping`, `ModifierKeymap::delete_entry`, `keycodes`,\n`keyboard_mapping`, `modifier_mapping`, `ModifierKeymap::insert_entry`,\n`ModifierKeymap::new`, `set_pointer_mapping`.","summary":"<p>Specifies the KeyCodes of the keys that are to be used as modifiers.</p>","abstract":false,"args":[{"name":"modmap","doc":null,"default_value":"","external_name":"modmap","restriction":"ModifierKeymap"}],"args_string":"(modmap : ModifierKeymap) : Int32","args_html":"(modmap : <a href=\"../X11/ModifierKeymap.html\">ModifierKeymap</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7166,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7166"},"def":{"name":"set_modifier_mapping","args":[{"name":"modmap","doc":null,"default_value":"","external_name":"modmap","restriction":"ModifierKeymap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_modifier_mapping(@dpy, modmap.to_unsafe)"}},{"id":"set_plane_mask(gc:X11::C::X::GC,plane_mask:UInt64):Int32-instance-method","html_id":"set_plane_mask(gc:X11::C::X::GC,plane_mask:UInt64):Int32-instance-method","name":"set_plane_mask","doc":"Sets the plane mask of a given GC.\n\n###Arguments\n- **gc** Specifies the GC.\n- **plane_mask** Specifies the plane mask.\n\n###Description\n`set_plane_mask` can generate **BadAlloc** and **BadGC** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_background`,\n`set_clip_origin`, `set_fill_style`, `set_font`, `set_foreground`,\n`set_function`, `set_line_attributes`, `set_plane_mask`, `set_state`, `set_tile`.","summary":"<p>Sets the plane mask of a given GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"plane_mask","doc":null,"default_value":"","external_name":"plane_mask","restriction":"UInt64"}],"args_string":"(gc : X11::C::X::GC, plane_mask : UInt64) : Int32","args_html":"(gc : X11::C::X::GC, plane_mask : UInt64) : Int32","location":{"filename":"src/x11/display.cr","line_number":7187,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7187"},"def":{"name":"set_plane_mask","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"plane_mask","doc":null,"default_value":"","external_name":"plane_mask","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_plane_mask(@dpy, gc, plane_mask)"}},{"id":"set_pointer_mapping(map:Array(UInt8)):Int32-instance-method","html_id":"set_pointer_mapping(map:Array(UInt8)):Int32-instance-method","name":"set_pointer_mapping","doc":"Sets the mapping of the pointer.\n\n###Arguments\n- **map** Specifies the mapping list.\n\n###Description\nThe `set_pointer_mapping` function sets the mapping of the pointer. If it\nsucceeds, the X server generates a **MappingNotify** event, and\n`set_pointer_mapping` returns **MappingSuccess**. Element map[i] defines\nthe logical button number for the physical button i+1. The length of the\nlist must be the same as `pointer_mapping` would return, or a **BadValue**\nerror results. A zero element disables a button, and elements are not\nrestricted in value by the number of physical buttons. However, no two\nelements can have the same nonzero value, or a **BadValue** error results.\nIf any of the buttons to be altered are logically in the down state,\n`set_pointer_mapping` returns **MappingBusy**, and the mapping is not changed.\n\n`set_pointer_mapping` can generate a **BadValue** error.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.\n\n###See also\n`change_keyboard_mapping`, `change_keyboard_mapping`, `pointer_mapping`.","summary":"<p>Sets the mapping of the pointer.</p>","abstract":false,"args":[{"name":"map","doc":null,"default_value":"","external_name":"map","restriction":"Array(UInt8)"}],"args_string":"(map : Array(UInt8)) : Int32","args_html":"(map : Array(UInt8)) : Int32","location":{"filename":"src/x11/display.cr","line_number":7218,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7218"},"def":{"name":"set_pointer_mapping","args":[{"name":"map","doc":null,"default_value":"","external_name":"map","restriction":"Array(UInt8)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_pointer_mapping(@dpy, map.to_unsafe, map.size)"}},{"id":"set_screen_saver(timeout:Int32,interval:Int32,prefer_blanking:Int32,allow_exposures:Int32):Int32-instance-method","html_id":"set_screen_saver(timeout:Int32,interval:Int32,prefer_blanking:Int32,allow_exposures:Int32):Int32-instance-method","name":"set_screen_saver","doc":"Sets the screen saver mode.\n\n###Arguments\n- **timeout** Specifies the timeout, in seconds, until the screen saver turns on.\n- **interval* Specifies the interval, in seconds, between screen saver alterations.\n- **prefer_blanking** Specifies how to enable screen blanking. You can pass\n**DontPreferBlanking**, **PreferBlanking**, or **DefaultBlanking**.\n- **allow_exposures** Specifies the screen save control values. You can pass\n**DontAllowExposures**, **AllowExposures**, or **DefaultExposures**.\n\n###Description\nTimeout and interval are specified in seconds. A timeout of 0 disables the\nscreen saver (but an activated screen saver is not deactivated), and a\ntimeout of -1 restores the default. Other negative values generate a\n**BadValue** error. If the timeout value is nonzero, `set_screen_saver`\nenables the screen saver. An interval of 0 disables the random-pattern motion.\nIf no input from devices (keyboard, mouse, and so on) is generated for the\nspecified number of timeout seconds once the screen saver is enabled, the screen saver is activated.\n\nFor each screen, if blanking is preferred and the hardware supports video\nblanking, the screen simply goes blank. Otherwise, if either exposures are\nallowed or the screen can be regenerated without sending **Expose** events\nto clients, the screen is tiled with the root window background tile randomly\nre-origined each interval seconds. Otherwise, the screens' state do not change,\nand the screen saver is not activated. The screen saver is deactivated, and\nall screen states are restored at the next keyboard or pointer input or at the\nnext call to `force_screen_saver` with mode **ScreenSaverReset**.\n\nIf the server-dependent screen saver method supports periodic change, the\ninterval argument serves as a hint about how long the change period should\nbe, and zero hints that no periodic change should be made. Examples of ways\nto change the screen include scrambling the colormap periodically, moving an\nicon image around the screen periodically, or tiling the screen with the\nroot window background tile, randomly re-origined periodically.\n\n`set_screen_saver` can generate a **BadValue** error.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values\naccepted by the request. Unless a specific range is specified for an\nargument, the full range defined by the argument's type is accepted. Any\nargument defined as a set of alternatives can generate this error.\n\n###See also\n`force_screen_saver`, `activate_screen_saver`, `reset_screen_saver`, `screen_saver`.","summary":"<p>Sets the screen saver mode.</p>","abstract":false,"args":[{"name":"timeout","doc":null,"default_value":"","external_name":"timeout","restriction":"Int32"},{"name":"interval","doc":null,"default_value":"","external_name":"interval","restriction":"Int32"},{"name":"prefer_blanking","doc":null,"default_value":"","external_name":"prefer_blanking","restriction":"Int32"},{"name":"allow_exposures","doc":null,"default_value":"","external_name":"allow_exposures","restriction":"Int32"}],"args_string":"(timeout : Int32, interval : Int32, prefer_blanking : Int32, allow_exposures : Int32) : Int32","args_html":"(timeout : Int32, interval : Int32, prefer_blanking : Int32, allow_exposures : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":7267,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7267"},"def":{"name":"set_screen_saver","args":[{"name":"timeout","doc":null,"default_value":"","external_name":"timeout","restriction":"Int32"},{"name":"interval","doc":null,"default_value":"","external_name":"interval","restriction":"Int32"},{"name":"prefer_blanking","doc":null,"default_value":"","external_name":"prefer_blanking","restriction":"Int32"},{"name":"allow_exposures","doc":null,"default_value":"","external_name":"allow_exposures","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_screen_saver(@dpy, timeout, interval, prefer_blanking, allow_exposures)"}},{"id":"set_selection_owner(selection:Atom|X11::C::Atom,owner:X11::C::Window,time:X11::C::Time):Int32-instance-method","html_id":"set_selection_owner(selection:Atom|X11::C::Atom,owner:X11::C::Window,time:X11::C::Time):Int32-instance-method","name":"set_selection_owner","doc":"Changes the owner and last-change time for the specified selection.\n\n###Arguments\n- **selection** Specifies the selection atom.\n- **owner** Specifies the owner of the specified selection atom. You can pass a window or **None**.\n- **time** Specifies the time. You can pass either a timestamp or **CurrentTime**.\n\n###Description\nThe `set_selection_owner` function changes the owner and last-change time\nfor the specified selection and has no effect if the specified time is\nearlier than the current last-change time of the specified selection or is\nlater than the current X server time. Otherwise, the last-change time is\nset to the specified time, with **CurrentTime** replaced by the current\nserver time. If the owner window is specified as **None**, then the owner\nof the selection becomes **None** (that is, no owner). Otherwise, the\nowner of the selection becomes the client executing the request.\n\nIf the new owner (whether a client or **None**) is not the same as the\ncurrent owner of the selection and the current owner is not **None**,\nthe current owner is sent a **SelectionClear** event. If the client that\nis the owner of a selection is later terminated (that is, its connection\nis closed) or if the owner window it has specified in the request is later\ndestroyed, the owner of the selection automatically reverts to **None**,\nbut the last-change time is not affected. The selection atom is\nuninterpreted by the X server. `selection_owner` returns the owner window,\nwhich is reported in **SelectionRequest** and **SelectionClear** events.\nSelections are global to the X server.\n\n`set_selection_owner` can generate **BadAtom** and **BadWindow** errors.\n\n###Diagnostics\n- **BadAtom** A value for an *Atom* argument does not name a defined *Atom*.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`convert_selection`, `selection_owner`.","summary":"<p>Changes the owner and last-change time for the specified selection.</p>","abstract":false,"args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"Atom | X11::C::Atom"},{"name":"owner","doc":null,"default_value":"","external_name":"owner","restriction":"X11::C::Window"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(selection : Atom | X11::C::Atom, owner : X11::C::Window, time : X11::C::Time) : Int32","args_html":"(selection : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>, owner : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7307,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7307"},"def":{"name":"set_selection_owner","args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"Atom | X11::C::Atom"},{"name":"owner","doc":null,"default_value":"","external_name":"owner","restriction":"X11::C::Window"},{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_selection_owner(@dpy, selection.to_u64, owner, time)"}},{"id":"set_state(gc:X11::C::X::GC,foreground:UInt64,background:UInt64,function:Int32,plane_mask:UInt64):Int32-instance-method","html_id":"set_state(gc:X11::C::X::GC,foreground:UInt64,background:UInt64,function:Int32,plane_mask:UInt64):Int32-instance-method","name":"set_state","doc":"Sets the foreground, background, plane mask, and function components for a given GC.\n\n###Arguments\n- **gc** Specifies the GC.\n- **foreground** Specifies the foreground you want to set for the specified GC.\n- **background** Specifies the background you want to set for the specified GC.\n- **function** Specifies the function you want to set for the specified GC.\n- **plane_mask** Specifies the plane mask.\n\n###Description\n`set_state` can generate **BadAlloc**, **BadGC**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_background`,\n`set_clip_origin`, `set_fill_style`, `set_font`, `set_foreground`,\n`set_function`, `set_line_attributes`, `set_plane_mask`, `set_tile`.","summary":"<p>Sets the foreground, background, plane mask, and function components for a given GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"foreground","doc":null,"default_value":"","external_name":"foreground","restriction":"UInt64"},{"name":"background","doc":null,"default_value":"","external_name":"background","restriction":"UInt64"},{"name":"function","doc":null,"default_value":"","external_name":"function","restriction":"Int32"},{"name":"plane_mask","doc":null,"default_value":"","external_name":"plane_mask","restriction":"UInt64"}],"args_string":"(gc : X11::C::X::GC, foreground : UInt64, background : UInt64, function : Int32, plane_mask : UInt64) : Int32","args_html":"(gc : X11::C::X::GC, foreground : UInt64, background : UInt64, function : Int32, plane_mask : UInt64) : Int32","location":{"filename":"src/x11/display.cr","line_number":7335,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7335"},"def":{"name":"set_state","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"foreground","doc":null,"default_value":"","external_name":"foreground","restriction":"UInt64"},{"name":"background","doc":null,"default_value":"","external_name":"background","restriction":"UInt64"},{"name":"function","doc":null,"default_value":"","external_name":"function","restriction":"Int32"},{"name":"plane_mask","doc":null,"default_value":"","external_name":"plane_mask","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_state(@dpy, gc, foreground, background, function, plane_mask)"}},{"id":"set_stipple(gc:X11::C::X::GC,stipple:X11::C::Pixmap):Int32-instance-method","html_id":"set_stipple(gc:X11::C::X::GC,stipple:X11::C::Pixmap):Int32-instance-method","name":"set_stipple","doc":"Sets the stipple of a given GC.\n\n###Arguments\n- **gc** Specifies the GC.\n- **stipple** Specifies the stipple you want to set for the specified GC.\n\n###Description\nThe stipple must have a depth of one, or a **BadMatch** error results.\n`set_stipple` can generate **BadAlloc**, **BadGC**, **BadMatch**, and **BadPixmap** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadPixmap** A value for a *Pixmap* argument does not name a defined *Pixmap*.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_clip_origin`,\n`set_fill_style`, `set_font`, `set_line_attributes`, `set_state`,\n`set_tile`, `set_ts_origin`.","summary":"<p>Sets the stipple of a given GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"stipple","doc":null,"default_value":"","external_name":"stipple","restriction":"X11::C::Pixmap"}],"args_string":"(gc : X11::C::X::GC, stipple : X11::C::Pixmap) : Int32","args_html":"(gc : X11::C::X::GC, stipple : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7361,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7361"},"def":{"name":"set_stipple","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"stipple","doc":null,"default_value":"","external_name":"stipple","restriction":"X11::C::Pixmap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_stipple(@dpy, gc, stipple)"}},{"id":"set_subwindow_mode(gc:X11::C::X::GC,subwindow_mode:Int32):Int32-instance-method","html_id":"set_subwindow_mode(gc:X11::C::X::GC,subwindow_mode:Int32):Int32-instance-method","name":"set_subwindow_mode","doc":"Sets the subwindow mode of a given GC.\n\n###Arguments\n- **gc** Specifies the GC.\n- **subwindow_mode** Specifies the subwindow mode.\nYou can pass **ClipByChildren** or **IncludeInferiors**.\n\n###Description\n`set_subwindow_mode` can generate **BadAlloc**, **BadGC**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n\n###See also\n`copy_area`, `create_gc`, `query_best_size`, `set_arc_mode`,\n`set_clip_origin`, `set_fill_style`, `set_font`, `set_graphics_exposures`,\n`set_line_attributes`, `set_state`, `set_tile`.","summary":"<p>Sets the subwindow mode of a given GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"subwindow_mode","doc":null,"default_value":"","external_name":"subwindow_mode","restriction":"Int32"}],"args_string":"(gc : X11::C::X::GC, subwindow_mode : Int32) : Int32","args_html":"(gc : X11::C::X::GC, subwindow_mode : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":7387,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7387"},"def":{"name":"set_subwindow_mode","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"subwindow_mode","doc":null,"default_value":"","external_name":"subwindow_mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_subwindow_mode(@dpy, gc, subwindow_mode)"}},{"id":"set_tile(gc:X11::C::X::GC,tile:X11::C::Pixmap):Int32-instance-method","html_id":"set_tile(gc:X11::C::X::GC,tile:X11::C::Pixmap):Int32-instance-method","name":"set_tile","doc":"Sets the tile or stipple origin of a given GC.\n\n###Arguments\n- **gc** Specifies the GC.\n- **tile** Specifies the fill tile you want to set for the specified GC.\n\n###Description\nThe tile and GC must have the same depth, or a **BadMatch** error results.\n\n`set_tile` can generate **BadAlloc**, **BadGC**, **BadMatch**, and **BadPixmap** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadPixmap** A value for a *Pixmap* argument does not name a defined *Pixmap*.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_clip_origin`,\n`set_fill_style`, `set_font`, `set_line_attributes`, `set_state`,\n`set_stipple`, `set_ts_origin`.","summary":"<p>Sets the tile or stipple origin of a given GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"tile","doc":null,"default_value":"","external_name":"tile","restriction":"X11::C::Pixmap"}],"args_string":"(gc : X11::C::X::GC, tile : X11::C::Pixmap) : Int32","args_html":"(gc : X11::C::X::GC, tile : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7438,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7438"},"def":{"name":"set_tile","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"tile","doc":null,"default_value":"","external_name":"tile","restriction":"X11::C::Pixmap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_title(@dpy, gc, tile)"}},{"id":"set_transient_for_hint(w:X11::C::Window,prop_window:X11::C::Window):Int32-instance-method","html_id":"set_transient_for_hint(w:X11::C::Window,prop_window:X11::C::Window):Int32-instance-method","name":"set_transient_for_hint","doc":"Sets the WM_TRANSIENT_FOR property of the specified window to the specified prop_window.\n\n###Arguments\n- **w** Specifies the window.\n- **prop_window** Specifies the window that the WM_TRANSIENT_FOR property is to be set to.\n\n###Description\nThe `set_transient_for_hint` function sets the WM_TRANSIENT_FOR property of the specified window to the specified prop_window.\n`set_transient_for_hint` can generate **BadAlloc** and **BadWindow** errors.\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\nSee also\n`X11::alloc_class_hint`, `X11::alloc_icon_size`, `X11::alloc_size_hints`,\n`X11::alloc_wm_hints`, `transient_for_hint`, `set_command`, `set_text_property`,\n`set_wm_client_machine`, `set_wm_colormap_windows`, `set_wm_icon_name`,\n`set_wm_name`, `set_wm_properties`, `set_wm_protocols`, `X11::string_list_to_text_property`.","summary":"<p>Sets the WM_TRANSIENT_FOR property of the specified window to the specified prop_window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"prop_window","doc":null,"default_value":"","external_name":"prop_window","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window, prop_window : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, prop_window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":1756,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1756"},"def":{"name":"set_transient_for_hint","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"prop_window","doc":null,"default_value":"","external_name":"prop_window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_transient_for_hint(@dpy, w, prop_window)"}},{"id":"set_ts_origin(gc:X11::C::X::GC,ts_x_origin:Int32,ts_y_origin:Int32):Int32-instance-method","html_id":"set_ts_origin(gc:X11::C::X::GC,ts_x_origin:Int32,ts_y_origin:Int32):Int32-instance-method","name":"set_ts_origin","doc":"Sets the tile or stipple origin of a given GC.\n\n###Arguments\n- **gc** Specifies the GC.\n- **ts_x_origin**, **ts_y_origin** Specify the x and y coordinates of the tile and stipple origin.\n\n###Description\nWhen graphics requests call for tiling or stippling, the parent's origin\nwill be interpreted relative to whatever destination drawable is specified in the graphics request.\n\n`set_ts_origin` can generate **BadAlloc** and **BadGC** error.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadGC** A value for a `GContext` argument does not name a defined `GContext`.\n\n###See also\n`create_gc`, `query_best_size`, `set_arc_mode`, `set_clip_origin`,\n`set_fill_style`, `set_font`, `set_line_attributes`, `set_state`,\n`set_stipple`, `set_tile`.","summary":"<p>Sets the tile or stipple origin of a given GC.</p>","abstract":false,"args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"ts_x_origin","doc":null,"default_value":"","external_name":"ts_x_origin","restriction":"Int32"},{"name":"ts_y_origin","doc":null,"default_value":"","external_name":"ts_y_origin","restriction":"Int32"}],"args_string":"(gc : X11::C::X::GC, ts_x_origin : Int32, ts_y_origin : Int32) : Int32","args_html":"(gc : X11::C::X::GC, ts_x_origin : Int32, ts_y_origin : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":7411,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7411"},"def":{"name":"set_ts_origin","args":[{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"ts_x_origin","doc":null,"default_value":"","external_name":"ts_x_origin","restriction":"Int32"},{"name":"ts_y_origin","doc":null,"default_value":"","external_name":"ts_y_origin","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_ts_origin(@dpy, gc, ts_x_origin, ts_y_origin)"}},{"id":"set_window_background(w:X11::C::Window,background_pixel:UInt64):Int32-instance-method","html_id":"set_window_background(w:X11::C::Window,background_pixel:UInt64):Int32-instance-method","name":"set_window_background","doc":"Sets the background of the window to the specified pixel value.\n\n###Arguments\n- **w** Specifies the window.\n- **background_pixel** Specifies the pixel that is to be used for the background.\n\n###Description\nThe `set_window_background` function sets the background of the window to\nthe specified pixel value. Changing the background does not cause the window\ncontents to be changed. `set_window_background` uses a pixmap of undefined\nsize filled with the pixel value you passed. If you try to change the\nbackground of an **InputOnly** window, a **BadMatch** error results.\n\n`set_window_background` can generate **BadMatch** and **BadWindow** errors.\n\nNote `set_window_background` and `set_window_background_pixmap` do not\nchange the current contents of the window.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `install_colormap`, `map_window`, `raise_window`,\n`set_window_background_pixmap`, `set_window_border`,\n`set_window_border_pixmap`, `set_window_colormap`, `unmap_window`.","summary":"<p>Sets the background of the window to the specified pixel value.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"background_pixel","doc":null,"default_value":"","external_name":"background_pixel","restriction":"UInt64"}],"args_string":"(w : X11::C::Window, background_pixel : UInt64) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, background_pixel : UInt64) : Int32","location":{"filename":"src/x11/display.cr","line_number":7471,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7471"},"def":{"name":"set_window_background","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"background_pixel","doc":null,"default_value":"","external_name":"background_pixel","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_window_background(@dpy, w, background_pixel)"}},{"id":"set_window_background_pixmap(w:X11::C::Window,background_pixmap:X11::C::Pixmap):Int32-instance-method","html_id":"set_window_background_pixmap(w:X11::C::Window,background_pixmap:X11::C::Pixmap):Int32-instance-method","name":"set_window_background_pixmap","doc":"Sets the background pixmap of the window to the specified pixmap.\n\n###Arguments\n- **w** Specifies the window.\n- **background_pixmap** Specifies the background pixmap, **ParentRelative**, or **None**.\n\n###Description\nThe `set_window_background_pixmap` function sets the background pixmap of\nthe window to the specified pixmap. The background pixmap can immediately\nbe freed if no further explicit references to it are to be made. If\n**ParentRelative** is specified, the background pixmap of the window's\nparent is used, or on the root window, the default background is restored.\nIf you try to change the background of an **InputOnly** window, a **BadMatch**\nerror results. If the background is set to **None**, the window has no defined background.\n\n`set_window_background_pixmap` can generate **BadMatch**, **BadPixmap**, and **BadWindow** errors.\n\nNote `set_window_background` and `set_window_background_pixmap` do\nnot change the current contents of the window.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadPixmap** A value for a *Pixmap* argument does not name a defined *Pixmap*.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `install_colormap`, `map_window`, `raise_window`,\n`set_window_background`, `set_window_border`, `set_window_border_pixmap`,\n`set_window_colormap`, `unmap_window`.","summary":"<p>Sets the background pixmap of the window to the specified pixmap.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"background_pixmap","doc":null,"default_value":"","external_name":"background_pixmap","restriction":"X11::C::Pixmap"}],"args_string":"(w : X11::C::Window, background_pixmap : X11::C::Pixmap) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, background_pixmap : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7507,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7507"},"def":{"name":"set_window_background_pixmap","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"background_pixmap","doc":null,"default_value":"","external_name":"background_pixmap","restriction":"X11::C::Pixmap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_window_background_pixmap(@dpy, w, background_pixmap)"}},{"id":"set_window_border(w:X11::C::Window,border_pixel:UInt64):Int32-instance-method","html_id":"set_window_border(w:X11::C::Window,border_pixel:UInt64):Int32-instance-method","name":"set_window_border","doc":"Sets the border of the window to the pixel value you specify.\n\n###Arguments\n- **w** Specifies the window.\n- **border_pixel** Specifies the entry in the colormap.\n\n###Description\nThe `set_window_border` function sets the border of the window to the\npixel value you specify. If you attempt to perform this on an\n**InputOnly** window, a **BadMatch** error results.\n\n`set_window_border` can generate **BadMatch** and **BadWindow** errors.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `install_colormap`, `map_window`, `raise_window`,\n`set_window_background`, `set_window_background_pixmap`,\n`set_window_border_pixmap`, `set_window_colormap`, `unmap_window`.","summary":"<p>Sets the border of the window to the pixel value you specify.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"border_pixel","doc":null,"default_value":"","external_name":"border_pixel","restriction":"UInt64"}],"args_string":"(w : X11::C::Window, border_pixel : UInt64) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, border_pixel : UInt64) : Int32","location":{"filename":"src/x11/display.cr","line_number":7535,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7535"},"def":{"name":"set_window_border","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"border_pixel","doc":null,"default_value":"","external_name":"border_pixel","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_window_border(@dpy, w, border_pixel)"}},{"id":"set_window_border_pixmap(w:X11::C::Window,border_pixmap:X11::C::Pixmap):Int32-instance-method","html_id":"set_window_border_pixmap(w:X11::C::Window,border_pixmap:X11::C::Pixmap):Int32-instance-method","name":"set_window_border_pixmap","doc":"Sets the border pixmap of the window to the pixmap you specify.\n\n###Arguments\n- **w** Specifies the window.\n- **border_pixmap** Specifies the border pixmap or **CopyFromParent**.\n\n###Description\n- The `set_window_border_pixmap` function sets the border pixmap of the\nwindow to the pixmap you specify. The border pixmap can be freed immediately\nif no further explicit references to it are to be made. If you specify\n**CopyFromParent**, a copy of the parent window's border pixmap is used.\nIf you attempt to perform this on an **InputOnly** window, a **BadMatch** error results.\n\n`set_window_border_pixmap` can generate **BadMatch**, **BadPixmap**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadPixmap** A value for a *Pixmap* argument does not name a defined *Pixmap*.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `installed_colormap`, `map_window`, `raise_window`,\n`set_window_background`, `set_window_background_pixmap`, `set_window_border`,\n`set_window_colormap`, `unmap_window`.","summary":"<p>Sets the border pixmap of the window to the pixmap you specify.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"border_pixmap","doc":null,"default_value":"","external_name":"border_pixmap","restriction":"X11::C::Pixmap"}],"args_string":"(w : X11::C::Window, border_pixmap : X11::C::Pixmap) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, border_pixmap : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7566,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7566"},"def":{"name":"set_window_border_pixmap","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"border_pixmap","doc":null,"default_value":"","external_name":"border_pixmap","restriction":"X11::C::Pixmap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_window_border_pixmap(@dpy, w, border_pixmap)"}},{"id":"set_window_border_width(w:X11::C::Window,width:UInt32):Int32-instance-method","html_id":"set_window_border_width(w:X11::C::Window,width:UInt32):Int32-instance-method","name":"set_window_border_width","doc":"Sets the specified window's border width to the specified width.\n\n###Arguments\n**w** Specifies the window.\n- **width** Specifies the width of the window border.\n\n###Description\nThe `set_window_border_width` function sets the specified window's border width to the specified width.\n\n`set_window_border_width` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `map_window`, `move_resize_window`, `move_window`,\n`raise_window`, `resize_window`, `unmap_window`.","summary":"<p>Sets the specified window's border width to the specified width.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"}],"args_string":"(w : X11::C::Window, width : UInt32) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, width : UInt32) : Int32","location":{"filename":"src/x11/display.cr","line_number":7588,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7588"},"def":{"name":"set_window_border_width","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_window_border_width(@dpy, w, width)"}},{"id":"set_window_colormap(w:X11::C::Window,colormap:X11::C::Colormap):Int32-instance-method","html_id":"set_window_colormap(w:X11::C::Window,colormap:X11::C::Colormap):Int32-instance-method","name":"set_window_colormap","doc":"Sets the specified colormap of the specified window.\n\n###Arguments\n**w** Specifies the window.\n- **colormap** Specifies the colormap.\n\n###Description\nThe `set_window_colormap` function sets the specified colormap of the\nspecified window. The colormap must have the same visual type as the\nwindow, or a **BadMatch** error results.\n\n`set_window_colormap` can generate **BadColor**, **BadMatch**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadColor** A value for a *Colormap* argument does not name a defined *Colormap*.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and\nrange but fails to match in some other way required by the request.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `installed_colormap`, `map_window`, `raise_window`,\n`set_window_background`, `set_window_background_pixmap`,\n`set_window_border`, `set_window_border_pixmap`, `unmap_window`.","summary":"<p>Sets the specified colormap of the specified window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"args_string":"(w : X11::C::Window, colormap : X11::C::Colormap) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7617,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7617"},"def":{"name":"set_window_colormap","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.set_window_colormap(@dpy, w, colormap)"}},{"id":"set_wm_colormap_windows(w:X11::C::Window,colormap_windows:Array(X11::C::Window)):X11::C::X::Status-instance-method","html_id":"set_wm_colormap_windows(w:X11::C::Window,colormap_windows:Array(X11::C::Window)):X11::C::X::Status-instance-method","name":"set_wm_colormap_windows","doc":"Replaces the WM_COLORMAP_WINDOWS property on the specified window.\n\n###Arguments\n- **w** Specifies the window.\n- **colormap_windows** Specifies the list of windows.\n\n###Description\nThe `set_wm_colormap_windows` function replaces the WM_COLORMAP_WINDOWS\nproperty on the specified window with the list of windows specified by\nthe colormap_windows argument. It the property does not already exist,\n`set_wm_colormap_windows` sets the WM_COLORMAP_WINDOWS property on the\nspecified window to the list of windows specified by the colormap_windows argument.\nThe property is stored with a type of WINDOW and a format of 32.\nIf it cannot intern the WM_COLORMAP_WINDOWS atom, `set_wm_colormap_windows` returns a zero status.\nOtherwise, it returns a nonzero status.\n\n`set_wm_colormap_windows` can generate **BadAlloc** and **BadWindow** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`X11::alloc_class_hint`, `X11::alloc_icon_size`, `X11::alloc_size_hints`,\n`X11::alloc_wm_hints`, `wm_colormap_windows`, `set_command`, `set_text_property`,\n`set_transient_for_hint`,`set_transient_for_hint`, `set_wm_client_machine`,\n`set_wm_colormap_windows`, `set_wm_icon_name`, `set_wm_name`,\n`set_wm_properties`, `set_wm_protocols`, `X11::string_list_to_text_property`.","summary":"<p>Replaces the WM_COLORMAP_WINDOWS property on the specified window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"colormap_windows","doc":null,"default_value":"","external_name":"colormap_windows","restriction":"Array(X11::C::Window)"}],"args_string":"(w : X11::C::Window, colormap_windows : Array(X11::C::Window)) : X11::C::X::Status","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, colormap_windows : Array(<a href=\"../X11/C/Window.html\">X11::C::Window</a>)) : X11::C::X::Status","location":{"filename":"src/x11/display.cr","line_number":1734,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1734"},"def":{"name":"set_wm_colormap_windows","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"colormap_windows","doc":null,"default_value":"","external_name":"colormap_windows","restriction":"Array(X11::C::Window)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::Status","visibility":"Public","body":"X.set_wm_colormap_windows(@dpy, w, colormap_windows.to_unsafe, colormap_windows.size)"}},{"id":"set_wm_protocols(w:X11::C::Window,protocols:Array(Atom|X11::C::Atom)):X11::C::X::Status-instance-method","html_id":"set_wm_protocols(w:X11::C::Window,protocols:Array(Atom|X11::C::Atom)):X11::C::X::Status-instance-method","name":"set_wm_protocols","doc":"Replaces the WM_PROTOCOLS property on the specified window.\n\n###Arguments\n- **w** Specifies the window.\n- **protocols** Specifies the list of protocols.\n\n###Description\nThe `set_wm_protocols` function replaces the WM_PROTOCOLS property on the\nspecified window with the list of atoms specified by the protocols argument.\nIf the property does not already exist, `set_wm_protocols` sets the WM_PROTOCOLS property\non the specified window to the list of atoms specified by the protocols argument.\nThe property is stored with a type of `X11::C::Atom` and a format of 32.\nIf it cannot intern the WM_PROTOCOLS atom, `set_wm_protocols` returns a zero status.\nOtherwise, it returns a nonzero status.\n\n`set_wm_protocols` can generate **BadAlloc** and **BadWindow** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`X11::alloc_class_hint`, `X11::alloc_icon_size`, `X11::alloc_size_hints`,\n`X11::alloc_wm_hints`, `wm_protocols`, `set_command`, `set_text_property`, `set_transient_for_hint`,\n`set_wm_client_machine`, `set_wm_colormap_windows`, `set_wm_icon_name`,\n`set_wm_name`, `set_wm_properties`, `X11::string_list_to_text_property`.","summary":"<p>Replaces the WM_PROTOCOLS property on the specified window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"protocols","doc":null,"default_value":"","external_name":"protocols","restriction":"Array(Atom | X11::C::Atom)"}],"args_string":"(w : X11::C::Window, protocols : Array(Atom | X11::C::Atom)) : X11::C::X::Status","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, protocols : Array(<a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)) : X11::C::X::Status","location":{"filename":"src/x11/display.cr","line_number":1592,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1592"},"def":{"name":"set_wm_protocols","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"protocols","doc":null,"default_value":"","external_name":"protocols","restriction":"Array(Atom | X11::C::Atom)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::Status","visibility":"Public","body":"X.set_wm_protocols(@dpy, w, protocols.to_unsafe.as(X11::C::PAtom), protocols.size)"}},{"id":"store_buffer(bytes:Bytes,nbytes:Int32,buffer:Int32):Int32-instance-method","html_id":"store_buffer(bytes:Bytes,nbytes:Int32,buffer:Int32):Int32-instance-method","name":"store_buffer","doc":"Stores data in a specified cut buffer.\n\n###Arguments\n- **bytes** Specifies the bytes, which are not necessarily ASCII or null-terminated.\n- **nbytes** Specifies the number of bytes to be stored.\n- **buffer** Specifies the buffer in which you want to store the bytes.\n\n###Description\nIf an invalid buffer is specified, the call has no effect.\nThe data can have embedded null characters and need not be null-terminated.\n\n`store_buffer` can generate a **BadAlloc** error.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n\n###See also\n`fetch_buffer`, `fetch_bytes`, `rotate_buffers`, `store_buffer`, `store_bytes`.","summary":"<p>Stores data in a specified cut buffer.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"nbytes","doc":null,"default_value":"","external_name":"nbytes","restriction":"Int32"},{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"Int32"}],"args_string":"(bytes : Bytes, nbytes : Int32, buffer : Int32) : Int32","args_html":"(bytes : Bytes, nbytes : Int32, buffer : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":7639,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7639"},"def":{"name":"store_buffer","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"},{"name":"nbytes","doc":null,"default_value":"","external_name":"nbytes","restriction":"Int32"},{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.store_buffer(@dpy, bytes.to_unsafe, nbytes, buffer)"}},{"id":"store_bytes(bytes:Bytes):Int32-instance-method","html_id":"store_bytes(bytes:Bytes):Int32-instance-method","name":"store_bytes","doc":"Stores data in cut buffer 0.\n\n###Arguments\n- **bytes** Specifies the bytes, which are not necessarily ASCII or null-terminated.\n- **nbytes** Specifies the number of bytes to be stored.\n\n###Description\nThe data can have embedded null characters and need not be null-terminated.\nThe cut buffer's contents can be retrieved later by any client calling `fetch_bytes`.\n\n`store_bytes` can generate a **BadAlloc** error.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n\n###See also\n`fetch_buffer`, `fetch_bytes`, `rotate_buffers`, `store_buffer`.","summary":"<p>Stores data in cut buffer 0.</p>","abstract":false,"args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes) : Int32","args_html":"(bytes : Bytes) : Int32","location":{"filename":"src/x11/display.cr","line_number":7660,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7660"},"def":{"name":"store_bytes","args":[{"name":"bytes","doc":null,"default_value":"","external_name":"bytes","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.store_bytes(@dpy, bytes.to_unsafe, bytes.size)"}},{"id":"store_color(colormap:X11::C::Colormap,color:Color):Int32-instance-method","html_id":"store_color(colormap:X11::C::Colormap,color:Color):Int32-instance-method","name":"store_color","doc":"Changes the colormap entry of the pixel value\nspecified in the pixel member of the `Color` structure.\n\n###Arguments\n- **colormap** Specifies the colormap.\n- **color** Specifies the pixel and RGB values.\n\n###Description\nThe `store_color` function changes the colormap entry of the pixel value\nspecified in the pixel member of the `Color` structure. You specified this\nvalue in the pixel member of the `Color` structure. This pixel value must\nbe a read/write cell and a valid index into the colormap. If a specified\npixel is not a valid index into the colormap, a **BadValue** error results.\n`store_color` also changes the red, green, and/or blue color components.\nYou specify which color components are to be changed by setting\n**DoRed**, **DoGreen**, and/or **DoBlue** in the flags member of the\n`Color` structure. If the colormap is an installed map for its screen,\nthe changes are visible immediately.\n\n`store_color` can generate **BadAccess**, **BadColor**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n- **BadColor** A value for a *Colormap* argument does not name a defined *Colormap*.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n\n###See also\n`alloc_color`, `create_colormap`, `query_color`, `store_colors`, `store_named_color`.","summary":"<p>Changes the colormap entry of the pixel value specified in the pixel member of the <code><a href=\"../X11/Color.html\">Color</a></code> structure.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"args_string":"(colormap : X11::C::Colormap, color : Color) : Int32","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>, color : <a href=\"../X11/Color.html\">Color</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7696,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7696"},"def":{"name":"store_color","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.store_color(@dpy, colormap, color.to_unsafe)"}},{"id":"store_colors(colormap:X11::C::Colormap,color:Array(Color)):Int32-instance-method","html_id":"store_colors(colormap:X11::C::Colormap,color:Array(Color)):Int32-instance-method","name":"store_colors","doc":"Changes the colormap entries of the pixel values\nspecified in the pixel members of the `Color` structures.\n\n###Arguments\n- **colormap** Specifies the colormap.\n- **color** Specifies an array of color definition structures to be stored.\n\n###Description\nThe `store_colors` function changes the colormap entries of the pixel values\nspecified in the pixel members of the `Color` structures. You specify which\ncolor components are to be changed by setting **DoRed**, **DoGreen**,\nand/or **DoBlue** in the flags member of the `Color` structures. If the\ncolormap is an installed map for its screen, the changes are visible\nimmediately. `store_colors` changes the specified pixels if they are\nallocated writable in the colormap by any client, even if one or more\npixels generates an error. If a specified pixel is not a valid index into\nthe colormap, a **BadValue** error results. If a specified pixel either is\nunallocated or is allocated read-only, a **BadAccess** error results. If\nmore than one pixel is in error, the one that gets reported is arbitrary.\n\n`store_colors` can generate **BadAccess**, **BadColor**, and **BadValue** errors.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n- **BadColor** A value for a *Colormap* argument does not name a defined *Colormap*.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.\n\n###See also\n`alloc_color`, `create_colormap`, `query_color`, `store_color`,\n`store_colors`, `store_named_color`.","summary":"<p>Changes the colormap entries of the pixel values specified in the pixel members of the <code><a href=\"../X11/Color.html\">Color</a></code> structures.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Array(Color)"}],"args_string":"(colormap : X11::C::Colormap, color : Array(Color)) : Int32","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>, color : Array(<a href=\"../X11/Color.html\">Color</a>)) : Int32","location":{"filename":"src/x11/display.cr","line_number":7734,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7734"},"def":{"name":"store_colors","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Array(Color)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.store_colors(@dpy, colormap, color.to_unsafe)"}},{"id":"store_name(w:X11::C::Window,window_name:String):Int32-instance-method","html_id":"store_name(w:X11::C::Window,window_name:String):Int32-instance-method","name":"store_name","doc":"Assigns the name passed to window_name to the specified window.\n\n###Arguments\n**w** Specifies the window.\n- **window_name** Specifies the window name, which should be a null-terminated string.\n\n###Description\nThe `store_name` function assigns the name passed to window_name to the\nspecified window. A window manager can display the window name in some\nprominent place, such as the title bar, to allow users to identify windows\neasily. Some window managers may display a window's name in the window's\nicon, although they are encouraged to use the window's icon name if one is\nprovided by the application. If the string is not in the Host Portable\nCharacter Encoding, the result is implementation dependent.\n\n`store_name` can generate **BadAlloc** and **BadWindow** errors.\n\n###Diagnostics\n- **BadAlloc** The server failed to allocate the requested source or server memory.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`fetch_name`, `wm_name`, `set_command`, `set_text_property`,\n`set_transient_for_hint`, `set_wm_client_machine`, `set_wm_colormap_windows`,\n`set_wm_colormap_windows`, `set_wm_icon_name`, `set_wm_icon_name`,\n`set_wm_name`, `set_wm_properties`, `set_wm_protocols`.","summary":"<p>Assigns the name passed to window_name to the specified window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"window_name","doc":null,"default_value":"","external_name":"window_name","restriction":"String"}],"args_string":"(w : X11::C::Window, window_name : String) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, window_name : String) : Int32","location":{"filename":"src/x11/display.cr","line_number":7764,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7764"},"def":{"name":"store_name","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"window_name","doc":null,"default_value":"","external_name":"window_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.store_name(@dpy, w, window_name.to_unsafe)"}},{"id":"store_named_color(colormap:X11::C::Colormap,color:Color,pixel:UInt64,flags:Int32):Int32-instance-method","html_id":"store_named_color(colormap:X11::C::Colormap,color:Color,pixel:UInt64,flags:Int32):Int32-instance-method","name":"store_named_color","doc":"Looks up the named color with respect to the screen associated with the\ncolormap and stores the result in the specified colormap.\n\n###Arguments\n**colormap** Specifies the colormap.\n- **color** Specifies the color name string (for example, red).\n- **pixel** Specifies the entry in the colormap.\n- **flags** Specifies which red, green, and blue components are set.\n\n###Description\nThe `store_named_color` function looks up the named color with respect to\nthe screen associated with the colormap and stores the result in the\nspecified colormap. The pixel argument determines the entry in the colormap.\nThe flags argument determines which of the red, green, and blue components are set.\nYou can set this member to the bitwise inclusive OR of the bits **DoRed**,\n**DoGreen**, and **DoBlue**. If the color name is not in the Host Portable\nCharacter Encoding, the result is implementation dependent. Use of uppercase\nor lowercase does not matter. If the specified pixel is not a valid index\ninto the colormap, a **BadValue** error results. If the specified pixel\neither is unallocated or is allocated read-only, a **BadAccess** error results.\n\n`store_named_color` can generate **BadAccess**, **BadColor**, **BadName**,\nand **BadValue** errors.\n\n###Diagnostics\n- **BadAccess** A client attempted to free a color map entry that it did not already allocate.\n- **BadAccess** A client attempted to store into a read-only color map entry.\n- **BadColor** A value for a *Colormap* argument does not name a defined *Colormap*.\n- **BadName** A font or color of the specified name does not exist.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.\n\n###See also\n`alloc_color`, `create_colormap`, `query_color`, `store_color`, `store_colors`.","summary":"<p>Looks up the named color with respect to the screen associated with the colormap and stores the result in the specified colormap.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"},{"name":"pixel","doc":null,"default_value":"","external_name":"pixel","restriction":"UInt64"},{"name":"flags","doc":null,"default_value":"","external_name":"flags","restriction":"Int32"}],"args_string":"(colormap : X11::C::Colormap, color : Color, pixel : UInt64, flags : Int32) : Int32","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>, color : <a href=\"../X11/Color.html\">Color</a>, pixel : UInt64, flags : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":7804,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7804"},"def":{"name":"store_named_color","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"},{"name":"color","doc":null,"default_value":"","external_name":"color","restriction":"Color"},{"name":"pixel","doc":null,"default_value":"","external_name":"pixel","restriction":"UInt64"},{"name":"flags","doc":null,"default_value":"","external_name":"flags","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.store_named_color(@dpy, colormap, color.to_unsafe, pixel, flags)"}},{"id":"sub_image(d:X11::C::Drawable,x:Int32,y:Int32,width:UInt32,height:UInt32,plane_mask:UInt64,format:Int32,dest_image:Image,dest_x:Int32,dest_y:Int32):Image-instance-method","html_id":"sub_image(d:X11::C::Drawable,x:Int32,y:Int32,width:UInt32,height:UInt32,plane_mask:UInt64,format:Int32,dest_image:Image,dest_x:Int32,dest_y:Int32):Image-instance-method","name":"sub_image","doc":"Updates *dest_image* with the specified subimage in the same manner as #get_image.\n\n###Arguments\n- **d** Specifies the drawable.\n- **x**, **y** Specify the *x* and *y* coordinates, which are relative to the origin of the drawable and define the upper-left corner of the rectangle.\n- **width**, **height** Specify the *width* and *height* of the subimage, which define the dimensions of the rectangle.\n- **plane_mask** Specifies the plane mask.\n- **format** Specifies the format for the image. You can pass **XYPixmap** or **ZPixmap**.\n- **dest_image** Specifies the destination image.\n- **dest_x**, **dest_y** Specify the *x* and *y* coordinates, which are relative to the origin of the destination rectangle, specify its upper-left corner, and determine where the subimage is placed in the destination image.\n\n###Description\nThe `sub_image` function updates *dest_image* with the specified subimage in the same manner as `image`.\nIf the *format* argument is **XYPixmap**, the image contains only the bit planes you passed to the *plane_mask* argument.\nIf the *format* argument is **ZPixmap** , #get_sub_image returns as zero the bits in all planes not specified in the *plane_mask* argument.\nThe function performs no range checking on the values in *plane_mask* and ignores extraneous bits.\nAs a convenience, `sub_image` returns an image object specified by *dest_image*.\nThe depth of the destination `Image` object must be the same as that of the drawable.\nIf the specified subimage does not fit at the specified location on the destination image,\nthe right and bottom edges are clipped. If the drawable is a *pixmap*,\nthe given rectangle must be wholly contained within the *pixmap*,\nor a **BadMatch** error results. If the drawable is a *window*,\nthe window must be viewable, and it must be the case that if there were no inferiors or overlapping windows,\nthe specified rectangle of the window would be fully visible on the screen and wholly contained within the outside edges of the window,\nor a **BadMatch** error results. If the window has backing-store,\nthen the backing-store contents are returned for regions of the window that are obscured by noninferior windows.\nIf the window does not have backing-store, the returned contents of such obscured regions are undefined.\nThe returned contents of visible regions of inferiors of a different depth than the specified window's depth are also undefined.\nIf a problem occurs, `sub_image` raises exception.\n\n`sub_image` can generate **BadDrawable**, **BadGC**, **BadMatch**, and **BadValue** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadGC** A value for a *GContext* argument does not name a defined *GContext*.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*.\n- **BadMatch** Some argument or pair of arguments has the correct type and range but fails to match in some other way required by the request.\n- **BadValue** Some numeric value falls outside the range of values accepted by the request. Unless a specific range is specified for an argument, the full range defined by the argument's type is accepted. Any argument defined as a set of alternatives can generate this error.\n\n##See also\n`Image::add_pixel`, `create_image`, `Image::finalize`, `Image::pixel`, `Image::init`, `put_image`, `put_pixel`.","summary":"<p>Updates <em>dest_image</em> with the specified subimage in the same manner as #get_image.</p>","abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"plane_mask","doc":null,"default_value":"","external_name":"plane_mask","restriction":"UInt64"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Int32"},{"name":"dest_image","doc":null,"default_value":"","external_name":"dest_image","restriction":"Image"},{"name":"dest_x","doc":null,"default_value":"","external_name":"dest_x","restriction":"Int32"},{"name":"dest_y","doc":null,"default_value":"","external_name":"dest_y","restriction":"Int32"}],"args_string":"(d : X11::C::Drawable, x : Int32, y : Int32, width : UInt32, height : UInt32, plane_mask : UInt64, format : Int32, dest_image : Image, dest_x : Int32, dest_y : Int32) : Image","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, x : Int32, y : Int32, width : UInt32, height : UInt32, plane_mask : UInt64, format : Int32, dest_image : <a href=\"../X11/Image.html\">Image</a>, dest_x : Int32, dest_y : Int32) : <a href=\"../X11/Image.html\">Image</a>","location":{"filename":"src/x11/display.cr","line_number":307,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L307"},"def":{"name":"sub_image","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"plane_mask","doc":null,"default_value":"","external_name":"plane_mask","restriction":"UInt64"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"Int32"},{"name":"dest_image","doc":null,"default_value":"","external_name":"dest_image","restriction":"Image"},{"name":"dest_x","doc":null,"default_value":"","external_name":"dest_x","restriction":"Int32"},{"name":"dest_y","doc":null,"default_value":"","external_name":"dest_y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Image","visibility":"Public","body":"Image.new(X.get_sub_image(@dpy, d, x, y, width, height, plane_mask, format, dest_image.imagem(dest_x, dest_y)))"}},{"id":"sync(discard:Bool):Int32-instance-method","html_id":"sync(discard:Bool):Int32-instance-method","name":"sync","doc":"Flushes the output buffer and then waits until all\nrequests have been received and processed by the X server.\n\n###Arguments\n- **discard** Specifies a Boolean value that indicates whether\n`sync` discards all events on the event queue.\n\n###Description\nThe `sync` function flushes the output buffer and then waits until all\nrequests have been received and processed by the X server. Any errors\ngenerated must be handled by the error handler. For each protocol error\nreceived by Xlib, `sync` calls the client application's error handling\nroutine (see \"Using the Default Error Handlers\"). Any events generated by\nthe server are enqueued into the library's event queue.\n\nFinally, if you passed **false**, `sync` does not discard the events in\nthe queue. If you passed **true**, `sync` discards all events in the queue,\nincluding those events that were on the queue before `sync` was called.\nClient applications seldom need to call `sync`.\n\n###See also\n`events_queued`, `flush`, `pending`.","summary":"<p>Flushes the output buffer and then waits until all requests have been received and processed by the X server.</p>","abstract":false,"args":[{"name":"discard","doc":null,"default_value":"","external_name":"discard","restriction":"Bool"}],"args_string":"(discard : Bool) : Int32","args_html":"(discard : Bool) : Int32","location":{"filename":"src/x11/display.cr","line_number":7830,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7830"},"def":{"name":"sync","args":[{"name":"discard","doc":null,"default_value":"","external_name":"discard","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.sync(@dpy, discard ? X::True : X::False)"}},{"id":"synchronize(onoff:Bool):X11::C::X::PDisplay->Int32-instance-method","html_id":"synchronize(onoff:Bool):X11::C::X::PDisplay->Int32-instance-method","name":"synchronize","doc":"Returns the previous after function.\n\n###Arguments\n- **onoff** Specifies a Boolean value that indicates whether to enable or disable synchronization.\n\n###Description\nThe `synchronize` function returns the previous after function.\nIf onoff is **true**, `synchronize` turns on synchronous behavior.\nIf onoff is **false**, `synchronize` turns off synchronous behavior.\n\n###See also\n`set_after_function`, `set_error_handler`.","summary":"<p>Returns the previous after function.</p>","abstract":false,"args":[{"name":"onoff","doc":null,"default_value":"","external_name":"onoff","restriction":"Bool"}],"args_string":"(onoff : Bool) : X11::C::X::PDisplay -> Int32","args_html":"(onoff : Bool) : X11::C::X::PDisplay -> Int32","location":{"filename":"src/x11/display.cr","line_number":441,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L441"},"def":{"name":"synchronize","args":[{"name":"onoff","doc":null,"default_value":"","external_name":"onoff","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(X11::C::X::PDisplay -> Int32)","visibility":"Public","body":"X.synchronize(@dpy, onoff ? X::True : X::False)"}},{"id":"to_unsafe:X11::C::X::PDisplay-instance-method","html_id":"to_unsafe:X11::C::X::PDisplay-instance-method","name":"to_unsafe","doc":"Pointer to the underlieing XDisplay object.","summary":"<p>Pointer to the underlieing XDisplay object.</p>","abstract":false,"args":[],"args_string":" : X11::C::X::PDisplay","args_html":" : X11::C::X::PDisplay","location":{"filename":"src/x11/display.cr","line_number":8322,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8322"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PDisplay","visibility":"Public","body":"@dpy"}},{"id":"transient_for_hint(w:X11::C::Window):X11::C::Window-instance-method","html_id":"transient_for_hint(w:X11::C::Window):X11::C::Window-instance-method","name":"transient_for_hint","doc":"Returns the WM_TRANSIENT_FOR property for the specified window.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `transient_for_hint` function returns the WM_TRANSIENT_FOR property\nfor the specified window. It returns a nonzero Window on success;\notherwise, it returns a zero.\n\n`transient_for_hint` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`X11::alloc_class_hint`, `X11::alloc_icon_size`, `X11::alloc_size_hints`,\n`X11::alloc_wm_hints`, `set_command`, `set_text_property`, `set_transient_for_hint`,\n`set_wm_client_machine`, `set_wm_colormap_windows`, `set_wm_icon_name`,\n`set_wm_name`, `set_wm_properties`, `set_wm_protocols`, `X11::string_list_to_text_property`.","summary":"<p>Returns the WM_TRANSIENT_FOR property for the specified window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : X11::C::Window","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/display.cr","line_number":4612,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4612"},"def":{"name":"transient_for_hint","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"X.get_transient_for_hint(@dpy, w, out prop_window_return)\nprop_window_return\n"}},{"id":"translate_coordinates(src_w:X11::C::Window,dest_w:X11::C::Window,src_x:Int32,src_y:Int32):NamedTuple()-instance-method","html_id":"translate_coordinates(src_w:X11::C::Window,dest_w:X11::C::Window,src_x:Int32,src_y:Int32):NamedTuple()-instance-method","name":"translate_coordinates","doc":"Transforms coordinates from the coordinate space of one window to another window.\n\n###Arguments\n- **src_w** Specifies the source window.\n- **dest_w** Specifies the destination window.\n- **src_x**, **src_y** Specify the x and y coordinates within the source window.\n\n###Returns\n- **dest_x**, **dest_y** Return the x and y coordinates within the destination window.\n- **child_return** Returns the child if the coordinates are contained in a mapped child of the destination window.\n\n###Description\nIf `translate_coordinates` returns **true**, it takes the src_x and src_y\ncoordinates relative to the source window's origin and returns these\ncoordinates to dest_x and dest_y relative to the destination window's origin.\nIf `translate_coordinates` returns **false**, src_w and dest_w are on\ndifferent screens, and dest_x and dest_y are zero. If the coordinates are\ncontained in a mapped child of dest_w, that child is returned to\nchild. Otherwise, child is set to **None**.\n\n`translate_coordinates` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.","summary":"<p>Transforms coordinates from the coordinate space of one window to another window.</p>","abstract":false,"args":[{"name":"src_w","doc":null,"default_value":"","external_name":"src_w","restriction":"X11::C::Window"},{"name":"dest_w","doc":null,"default_value":"","external_name":"dest_w","restriction":"X11::C::Window"},{"name":"src_x","doc":null,"default_value":"","external_name":"src_x","restriction":"Int32"},{"name":"src_y","doc":null,"default_value":"","external_name":"src_y","restriction":"Int32"}],"args_string":"(src_w : X11::C::Window, dest_w : X11::C::Window, src_x : Int32, src_y : Int32) : NamedTuple()","args_html":"(src_w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, dest_w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, src_x : Int32, src_y : Int32) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":7858,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7858"},"def":{"name":"translate_coordinates","args":[{"name":"src_w","doc":null,"default_value":"","external_name":"src_w","restriction":"X11::C::Window"},{"name":"dest_w","doc":null,"default_value":"","external_name":"dest_w","restriction":"X11::C::Window"},{"name":"src_x","doc":null,"default_value":"","external_name":"src_x","restriction":"Int32"},{"name":"src_y","doc":null,"default_value":"","external_name":"src_y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(dest_x: Int32, dest_y: Int32, child: X11::C::Window, res: Bool)","visibility":"Public","body":"res = X.translate_coordinates(@dpy, src_w, dest_w, src_x, src_y, out dest_x_return, out dest_y_return, out child_return)\n{dest_x: dest_x_return, dest_y: dest_y_return, child: child_return}\n"}},{"id":"undefine_cursor(w:X11::C::Window):Int32-instance-method","html_id":"undefine_cursor(w:X11::C::Window):Int32-instance-method","name":"undefine_cursor","doc":"Undoes the effect of a previous `define_cursor` for this window.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `undefine_cursor` function undoes the effect of a previous\n`define_cursor` for this window. When the pointer is in the window,\nthe parent's cursor will now be used. On the root window, the default cursor is restored.\n\n`undefine_cursor` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`create_font_cursor`, `define_cursor`, `recolor_cursor`.","summary":"<p>Undoes the effect of a previous <code><a href=\"../X11/Display.html#define_cursor(w:X11::C::Window,cursor:X11::C::Cursor):Int32-instance-method\">#define_cursor</a></code> for this window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7880,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7880"},"def":{"name":"undefine_cursor","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.undefine_cursor(@dpy, w)"}},{"id":"ungrab_button(button:UInt32,modifiers:UInt32,grab_window:X11::C::Window):Int32-instance-method","html_id":"ungrab_button(button:UInt32,modifiers:UInt32,grab_window:X11::C::Window):Int32-instance-method","name":"ungrab_button","doc":"Releases the passive button/key combination\non the specified window if it was grabbed by this client.\n\n###Arguments\n- **button** Specifies the pointer button that is to be released or **AnyButton**.\n- **modifiers** Specifies the set of keymasks or **AnyModifier**. The mask\nis the bitwise inclusive OR of the valid keymask bits.\n- **grab_window** Specifies the grab window.\n\n###Description\nThe `ungrab_button` function releases the passive button/key combination\non the specified window if it was grabbed by this client. A modifiers of\n**AnyModifier** is equivalent to issuing the ungrab request for all\npossible modifier combinations, including the combination of no modifiers.\nA button of **AnyButton** is equivalent to issuing the request for all\npossible buttons. `ungrab_button` has no effect on an active grab.\n\n`ungrab_button` can generate **BadValue** and **BadWindow** errors.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values\naccepted by the request. Unless a specific range is specified for an\nargument, the full range defined by the argument's type is accepted.\nAny argument defined as a set of alternatives can generate this error.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`allow_events`, `change_active_pointer_grab`, `grab_button`,\n`grab_key`, `grab_keyboard`, `grab_pointer`, `ungrab_pointer`.","summary":"<p>Releases the passive button/key combination on the specified window if it was grabbed by this client.</p>","abstract":false,"args":[{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"UInt32"},{"name":"modifiers","doc":null,"default_value":"","external_name":"modifiers","restriction":"UInt32"},{"name":"grab_window","doc":null,"default_value":"","external_name":"grab_window","restriction":"X11::C::Window"}],"args_string":"(button : UInt32, modifiers : UInt32, grab_window : X11::C::Window) : Int32","args_html":"(button : UInt32, modifiers : UInt32, grab_window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7913,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7913"},"def":{"name":"ungrab_button","args":[{"name":"button","doc":null,"default_value":"","external_name":"button","restriction":"UInt32"},{"name":"modifiers","doc":null,"default_value":"","external_name":"modifiers","restriction":"UInt32"},{"name":"grab_window","doc":null,"default_value":"","external_name":"grab_window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.ungrab_button(@dpy, button, modifiers, grab_window)"}},{"id":"ungrab_key(keycode:Int32,modifiers:UInt32,grab_window:X11::C::Window):Int32-instance-method","html_id":"ungrab_key(keycode:Int32,modifiers:UInt32,grab_window:X11::C::Window):Int32-instance-method","name":"ungrab_key","doc":"Releases the key combination on the specified window if it was grabbed by this client.\n\n###Arguments\n- **keycode** Specifies the KeyCode or **AnyKey**.\n- **modifiers** Specifies the set of keymasks or **AnyModifier**.\nThe mask is the bitwise inclusive OR of the valid keymask bits.\n- **grab_window** Specifies the grab window.\n\n###Description\nThe `ungrab_key` function releases the key combination on the specified\nwindow if it was grabbed by this client. It has no effect on an active grab.\nA modifiers of **AnyModifier** is equivalent to issuing the request for all\npossible modifier combinations (including the combination of no modifiers).\nA keycode argument of **AnyKey** is equivalent to issuing the request for all possible key codes.\n\n`ungrab_key` can generate **BadValue** and **BadWindow** errors.\n\n###Diagnostics\n- **BadValue** Some numeric value falls outside the range of values\naccepted by the request. Unless a specific range is specified for an argument,\nthe full range defined by the argument's type is accepted. Any argument\ndefined as a set of alternatives can generate this error.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`grab_key`, `allow_events`, `grab_button`, `grab_keyboard`, `grab_pointer`.","summary":"<p>Releases the key combination on the specified window if it was grabbed by this client.</p>","abstract":false,"args":[{"name":"keycode","doc":null,"default_value":"","external_name":"keycode","restriction":"Int32"},{"name":"modifiers","doc":null,"default_value":"","external_name":"modifiers","restriction":"UInt32"},{"name":"grab_window","doc":null,"default_value":"","external_name":"grab_window","restriction":"X11::C::Window"}],"args_string":"(keycode : Int32, modifiers : UInt32, grab_window : X11::C::Window) : Int32","args_html":"(keycode : Int32, modifiers : UInt32, grab_window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7943,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7943"},"def":{"name":"ungrab_key","args":[{"name":"keycode","doc":null,"default_value":"","external_name":"keycode","restriction":"Int32"},{"name":"modifiers","doc":null,"default_value":"","external_name":"modifiers","restriction":"UInt32"},{"name":"grab_window","doc":null,"default_value":"","external_name":"grab_window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.ungrab_key(@dpy, keycode, modifiers, grab_window)"}},{"id":"ungrab_keyboard(time:X11::C::Time):Int32-instance-method","html_id":"ungrab_keyboard(time:X11::C::Time):Int32-instance-method","name":"ungrab_keyboard","doc":"Releases the keyboard and any queued events if this client has it\nactively grabbed from either `grab_keyboard` or `grab_key`.\n\n###Arguments\n- **time** Specifies the time. You can pass either a timestamp or **CurrentTime**.\n\n###Description\nThe `ungrab_keyboard` function releases the keyboard and any queued events\nif this client has it actively grabbed from either `grab_keyboard` or\n`grab_key`. `ungrab_keyboard` does not release the keyboard and any queued\nevents if the specified time is earlier than the last-keyboard-grab time\nor is later than the current X server time. It also generates **FocusIn**\nand **FocusOut** events. The X server automatically performs an\n**UngrabKeyboard** request if the event window for an active keyboard grab becomes not viewable.\n\n###See also\n`allow_events`, `grab_button`, `grab_key`, `grab_keyboard`, `grab_pointer`.","summary":"<p>Releases the keyboard and any queued events if this client has it actively grabbed from either <code><a href=\"../X11/Display.html#grab_keyboard(grab_window:X11::C::Window,owner_events:Bool,pointer_mode:Int32,keyboard_mode:Int32,time:X11::C::Time):Int32-instance-method\">#grab_keyboard</a></code> or <code><a href=\"../X11/Display.html#grab_key(keycode:Int32,modifiers:UInt32,grab_window:X11::C::Window,owner_events:Bool,pointer_mode:Int32,keyboard_mode:Int32):Int32-instance-method\">#grab_key</a></code>.</p>","abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(time : X11::C::Time) : Int32","args_html":"(time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7964,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7964"},"def":{"name":"ungrab_keyboard","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.ungrab_keyboard(@dpy, time)"}},{"id":"ungrab_pointer(time:X11::C::Time):Int32-instance-method","html_id":"ungrab_pointer(time:X11::C::Time):Int32-instance-method","name":"ungrab_pointer","doc":"Releases the pointer and any queued events.\n\n###Arguments\n- **time** Specifies the time. You can pass either a timestamp or **CurrentTime**.\n\n###Description\nThe `ungrab_pointer` function releases the pointer and any queued events\nif this client has actively grabbed the pointer from `grab_pointer`,\n`grab_button`, or from a normal button press. `ungrab_pointer` does not\nrelease the pointer if the specified time is earlier than the\nlast-pointer-grab time or is later than the current X server time. It also\ngenerates **EnterNotify** and **LeaveNotify** events. The X server performs\nan **UngrabPointer** request automatically if the event window or confine_to\nwindow for an active pointer grab becomes not viewable or if window\nreconfiguration causes the confine_to window to lie completely outside\nthe boundaries of the root window.\n\n###See also\n`allow_events`, `change_active_pointer_grab`, `grab_button`,\n`grab_key`, `grab_keyboard`, `grab_pointer`.","summary":"<p>Releases the pointer and any queued events.</p>","abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(time : X11::C::Time) : Int32","args_html":"(time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":7988,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7988"},"def":{"name":"ungrab_pointer","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.ungrab_pointer(@dpy, time)"}},{"id":"ungrab_server:Int32-instance-method","html_id":"ungrab_server:Int32-instance-method","name":"ungrab_server","doc":"Restarts processing of requests and close downs on other connections.\n\n###Description\nThe `ungrab_server` function restarts processing of requests and close\ndowns on other connections. You should avoid grabbing the X server as much as possible.\n\n###See also\n`grab_server`, `grab_key`, `grab_keyboard`, `grab_pointer`.","summary":"<p>Restarts processing of requests and close downs on other connections.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":8000,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8000"},"def":{"name":"ungrab_server","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.ungrab_server(@dpy)"}},{"id":"uninstall_colormap(colormap:X11::C::Colormap):Int32-instance-method","html_id":"uninstall_colormap(colormap:X11::C::Colormap):Int32-instance-method","name":"uninstall_colormap","doc":"Removes the specified colormap from the required list for its screen.\n\n###Arguments\n- **colormap** Specifies the colormap.\n\n###Description\nThe `uninstall_colormap` function removes the specified colormap from the\nrequired list for its screen. As a result, the specified colormap might be\nuninstalled, and the X server might implicitly install or uninstall\nadditional colormaps. Which colormaps get installed or uninstalled is\nserver-dependent except that the required list must remain installed.\n\nIf the specified colormap becomes uninstalled, the X server generates a\n**ColormapNotify** event on each window that has that colormap. In\naddition, for every other colormap that is installed or uninstalled as a\nresult of a call to `uninstall_colormap`, the X server generates a\n**ColormapNotify** event on each window that has that colormap.\n\n`uninstall_colormap` can generate a **BadColor** error.\n\n###Diagnostics\n- **BadColor** A value for a *Colormap* argument does not name a defined *Colormap*.\n\n###See also\n`change_window_attributes`, `create_colormap`, `create_window`,\n`install_colormap`, `installed_colormap`.","summary":"<p>Removes the specified colormap from the required list for its screen.</p>","abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"args_string":"(colormap : X11::C::Colormap) : Int32","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":8030,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8030"},"def":{"name":"uninstall_colormap","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.uninstall_colormap(@dpy, colormap)"}},{"id":"unload_font(font:X11::C::Font):Int32-instance-method","html_id":"unload_font(font:X11::C::Font):Int32-instance-method","name":"unload_font","doc":"Deletes the association between the font resource ID and the specified font.\n\n###Arguments\n- **font** Specifies the font.\n\n###Description\nThe `unload_font` function deletes the association between the font\nresource ID and the specified font. The font itself will be freed when no\nother resource references it. The font should not be referenced again.\n\n`unload_font` can generate a **BadFont** error.\n\n###Diagnostics\n- **BadFont** A value for a font argument does not name a defined\nfont (or, in some cases, `GContext`).\n\n###See also\n`create_gc`, `free_font`, `FontStruct::property`, `fonts`, `load_font`,\n`load_query_font`, `query_font`, `set_font_path`.","summary":"<p>Deletes the association between the font resource ID and the specified font.</p>","abstract":false,"args":[{"name":"font","doc":null,"default_value":"","external_name":"font","restriction":"X11::C::Font"}],"args_string":"(font : X11::C::Font) : Int32","args_html":"(font : <a href=\"../X11/C/Font.html\">X11::C::Font</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":8053,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8053"},"def":{"name":"unload_font","args":[{"name":"font","doc":null,"default_value":"","external_name":"font","restriction":"X11::C::Font"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.unload_font"}},{"id":"unlock-instance-method","html_id":"unlock-instance-method","name":"unlock","doc":"Allows other threads to use the specified display again.\n\n###Description\nThe `unlock` function allows other threads to use the specified display again.\nAny threads that have blocked on the display are allowed to continue.\nNested locking works correctly; if `lock` has been called multiple times by a thread,\nthen `unlock` must be called an equal number of times before the display\nis actually unlocked. This function has no effect unless Xlib was successfully\ninitialized for threads using `X11::init_threads`.\n\n###See also\n`X11::init_threads`, `lock`.","summary":"<p>Allows other threads to use the specified display again.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/display.cr","line_number":1308,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1308"},"def":{"name":"unlock","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.unlock_display(@dpy)\nself\n"}},{"id":"unmap_subwindows(w:X11::C::Window):Int32-instance-method","html_id":"unmap_subwindows(w:X11::C::Window):Int32-instance-method","name":"unmap_subwindows","doc":"Unmaps all subwindows for the specified window in bottom-to-top stacking order.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `unmap_subwindows` function unmaps all subwindows for the specified\nwindow in bottom-to-top stacking order. It causes the X server to generate\nan **UnmapNotify** event on each subwindow and **Expose** events on formerly\nobscured windows. Using this function is much more efficient than unmapping\nmultiple windows one at a time because the server needs to perform much of\nthe work only once, for all of the windows, rather than for each window.\n\n`unmap_subwindows` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `map_window`, `raise_window`, `unmap_window`.","summary":"<p>Unmaps all subwindows for the specified window in bottom-to-top stacking order.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":8078,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8078"},"def":{"name":"unmap_subwindows","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.unmap_subwindows(@dpy, w)"}},{"id":"unmap_window(w:X11::C::Window):Int32-instance-method","html_id":"unmap_window(w:X11::C::Window):Int32-instance-method","name":"unmap_window","doc":"Unmaps the specified window and causes the X server to generate an **UnmapNotify** event.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `unmap_window` function unmaps the specified window and causes the X\nserver to generate an **UnmapNotify** event. If the specified window is\nalready unmapped, `unmap_window` has no effect. Normal exposure processing\non formerly obscured windows is performed. Any child window will no longer\nbe visible until another map call is made on the parent. In other words,\nthe subwindows are still mapped but are not visible until the parent is\nmapped. Unmapping a window will generate **Expose** events on windows that were formerly obscured by it.\n\n`unmap_window` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`,\n`destroy_window`, `map_window`, `raise_window`, `unmap_subwindows`.","summary":"<p>Unmaps the specified window and causes the X server to generate an <strong>UnmapNotify</strong> event.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Int32","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Int32","location":{"filename":"src/x11/display.cr","line_number":8104,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8104"},"def":{"name":"unmap_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.unmap_window(@dpy, w)"}},{"id":"unregister_im_instantiate_callback(rdb:X11::C::X::PrmHashBucketRec,res_name:String,res_class:String,callback:X11::C::X::IDProc,client_data:X11::C::X::Pointer):Bool-instance-method","html_id":"unregister_im_instantiate_callback(rdb:X11::C::X::PrmHashBucketRec,res_name:String,res_class:String,callback:X11::C::X::IDProc,client_data:X11::C::X::Pointer):Bool-instance-method","name":"unregister_im_instantiate_callback","doc":null,"summary":null,"abstract":false,"args":[{"name":"rdb","doc":null,"default_value":"","external_name":"rdb","restriction":"X11::C::X::PrmHashBucketRec"},{"name":"res_name","doc":null,"default_value":"","external_name":"res_name","restriction":"String"},{"name":"res_class","doc":null,"default_value":"","external_name":"res_class","restriction":"String"},{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"X11::C::X::IDProc"},{"name":"client_data","doc":null,"default_value":"","external_name":"client_data","restriction":"X11::C::X::Pointer"}],"args_string":"(rdb : X11::C::X::PrmHashBucketRec, res_name : String, res_class : String, callback : X11::C::X::IDProc, client_data : X11::C::X::Pointer) : Bool","args_html":"(rdb : X11::C::X::PrmHashBucketRec, res_name : String, res_class : String, callback : X11::C::X::IDProc, client_data : X11::C::X::Pointer) : Bool","location":{"filename":"src/x11/display.cr","line_number":8286,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8286"},"def":{"name":"unregister_im_instantiate_callback","args":[{"name":"rdb","doc":null,"default_value":"","external_name":"rdb","restriction":"X11::C::X::PrmHashBucketRec"},{"name":"res_name","doc":null,"default_value":"","external_name":"res_name","restriction":"String"},{"name":"res_class","doc":null,"default_value":"","external_name":"res_class","restriction":"String"},{"name":"callback","doc":null,"default_value":"","external_name":"callback","restriction":"X11::C::X::IDProc"},{"name":"client_data","doc":null,"default_value":"","external_name":"client_data","restriction":"X11::C::X::Pointer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"res = X.unregister_im_instantiate_callback(@dpy, edb, res_name.to_unsafe, res_class.to_unsafe, callback, client_data)\nres == X::True ? true : false\n"}},{"id":"utf8_draw_image_string(d:X11::C::Drawable,font_set:X11::C::X::FontSet,gc:X11::C::X::GC,x:Int32,y:Int32,text:String)-instance-method","html_id":"utf8_draw_image_string(d:X11::C::Drawable,font_set:X11::C::X::FontSet,gc:X11::C::X::GC,x:Int32,y:Int32,text:String)-instance-method","name":"utf8_draw_image_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(d : X11::C::Drawable, font_set : X11::C::X::FontSet, gc : X11::C::X::GC, x : Int32, y : Int32, text : String)","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, font_set : X11::C::X::FontSet, gc : X11::C::X::GC, x : Int32, y : Int32, text : String)","location":{"filename":"src/x11/display.cr","line_number":8273,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8273"},"def":{"name":"utf8_draw_image_string","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.utf8_draw_image_string(@dpy, d, font_set, gc, x, y, text.to_unsafe, text.size)"}},{"id":"utf8_draw_string(d:X11::C::Drawable,font_set:X11::C::X::FontSet,gc:X11::C::X::GC,x:Int32,y:Int32,text:String)-instance-method","html_id":"utf8_draw_string(d:X11::C::Drawable,font_set:X11::C::X::FontSet,gc:X11::C::X::GC,x:Int32,y:Int32,text:String)-instance-method","name":"utf8_draw_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"args_string":"(d : X11::C::Drawable, font_set : X11::C::X::FontSet, gc : X11::C::X::GC, x : Int32, y : Int32, text : String)","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, font_set : X11::C::X::FontSet, gc : X11::C::X::GC, x : Int32, y : Int32, text : String)","location":{"filename":"src/x11/display.cr","line_number":8261,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8261"},"def":{"name":"utf8_draw_string","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.utf8_draw_string(@dpy, d, font_set, gc, x, y, text.to_unsafe, text.size)"}},{"id":"utf8_draw_text(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,text_items:Array(MbTextItem))-instance-method","html_id":"utf8_draw_text(d:X11::C::Drawable,gc:X11::C::X::GC,x:Int32,y:Int32,text_items:Array(MbTextItem))-instance-method","name":"utf8_draw_text","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text_items","doc":null,"default_value":"","external_name":"text_items","restriction":"Array(MbTextItem)"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::X::GC, x : Int32, y : Int32, text_items : Array(MbTextItem))","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::X::GC, x : Int32, y : Int32, text_items : Array(<a href=\"../X11/MbTextItem.html\">MbTextItem</a>))","location":{"filename":"src/x11/display.cr","line_number":8249,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8249"},"def":{"name":"utf8_draw_text","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text_items","doc":null,"default_value":"","external_name":"text_items","restriction":"Array(MbTextItem)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.utf8_draw_text(@dpy, d, gc, x, y, text_items.to_unsafe.as(X11::C::X::PmbTextItem), text_items.size)"}},{"id":"vendor_release:Int32-instance-method","html_id":"vendor_release:Int32-instance-method","name":"vendor_release","doc":"Returns a number related to a vendor's release of the X server.","summary":"<p>Returns a number related to a vendor's release of the X server.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/display.cr","line_number":8109,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8109"},"def":{"name":"vendor_release","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.vendor_release(@dpy)"}},{"id":"warp_pointer(src_w:X11::C::Window,dest_w:X11::C::Window,src_x:Int32,src_y:Int32,src_width:UInt32,src_height:UInt32,dest_x:Int32,dest_y:Int32):Int32-instance-method","html_id":"warp_pointer(src_w:X11::C::Window,dest_w:X11::C::Window,src_x:Int32,src_y:Int32,src_width:UInt32,src_height:UInt32,dest_x:Int32,dest_y:Int32):Int32-instance-method","name":"warp_pointer","doc":"Moves the pointer by the offsets relative to the current position of the pointer.\n\n###Arguments\n- **src_w** Specifies the source window or **None**.\n- **dest_w** Specifies the destination window or **None**.\n- **src_x**, **src_y**, **src_width**, **src_height** Specify a rectangle in the source window.\n- **dest_x**, **dest_y** Specify the x and y coordinates within the destination window.\n\n###Description\nIf dest_w is **None**, `warp_pointer` moves the pointer by the offsets\n(dest_x, dest_y) relative to the current position of the pointer.\nIf dest_w is a window, `warp_pointer` moves the pointer to the offsets\n(dest_x, dest_y) relative to the origin of dest_w. However, if src_w is a\nwindow, the move only takes place if the window src_w contains the pointer\nand if the specified rectangle of src_w contains the pointer.\n\nThe src_x and src_y coordinates are relative to the origin of src_w. If\nsrc_height is zero, it is replaced with the current height of src_w minus\nsrc_y. If src_width is zero, it is replaced with the current width of src_w minus src_x.\n\nThere is seldom any reason for calling this function. The pointer should\nnormally be left to the user. If you do use this function, however, it\ngenerates events just as if the user had instantaneously moved the\npointer from one position to another. Note that you cannot use `warp_pointer`\nto move the pointer outside the confine_to window of an active pointer grab.\nAn attempt to do so will only move the pointer as far as the closest edge of the confine_to window.\n\n`warp_pointer` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n- `set_input_focus`.","summary":"<p>Moves the pointer by the offsets relative to the current position of the pointer.</p>","abstract":false,"args":[{"name":"src_w","doc":null,"default_value":"","external_name":"src_w","restriction":"X11::C::Window"},{"name":"dest_w","doc":null,"default_value":"","external_name":"dest_w","restriction":"X11::C::Window"},{"name":"src_x","doc":null,"default_value":"","external_name":"src_x","restriction":"Int32"},{"name":"src_y","doc":null,"default_value":"","external_name":"src_y","restriction":"Int32"},{"name":"src_width","doc":null,"default_value":"","external_name":"src_width","restriction":"UInt32"},{"name":"src_height","doc":null,"default_value":"","external_name":"src_height","restriction":"UInt32"},{"name":"dest_x","doc":null,"default_value":"","external_name":"dest_x","restriction":"Int32"},{"name":"dest_y","doc":null,"default_value":"","external_name":"dest_y","restriction":"Int32"}],"args_string":"(src_w : X11::C::Window, dest_w : X11::C::Window, src_x : Int32, src_y : Int32, src_width : UInt32, src_height : UInt32, dest_x : Int32, dest_y : Int32) : Int32","args_html":"(src_w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, dest_w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, src_x : Int32, src_y : Int32, src_width : UInt32, src_height : UInt32, dest_x : Int32, dest_y : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":8147,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8147"},"def":{"name":"warp_pointer","args":[{"name":"src_w","doc":null,"default_value":"","external_name":"src_w","restriction":"X11::C::Window"},{"name":"dest_w","doc":null,"default_value":"","external_name":"dest_w","restriction":"X11::C::Window"},{"name":"src_x","doc":null,"default_value":"","external_name":"src_x","restriction":"Int32"},{"name":"src_y","doc":null,"default_value":"","external_name":"src_y","restriction":"Int32"},{"name":"src_width","doc":null,"default_value":"","external_name":"src_width","restriction":"UInt32"},{"name":"src_height","doc":null,"default_value":"","external_name":"src_height","restriction":"UInt32"},{"name":"dest_x","doc":null,"default_value":"","external_name":"dest_x","restriction":"Int32"},{"name":"dest_y","doc":null,"default_value":"","external_name":"dest_y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.warp_pointer(@dpy, src_w, dest_w, src_x, src_y, src_width, src_height, dest_x, dest_y)"}},{"id":"wc_draw_image_string(d:X11::C::Drawable,font_set:X11::C::X::FontSet,gc:X11::C::X::GC,x:Int32,y:Int32,text:X11::C::X::PWChar_t,num_wchars:Int32)-instance-method","html_id":"wc_draw_image_string(d:X11::C::Drawable,font_set:X11::C::X::FontSet,gc:X11::C::X::GC,x:Int32,y:Int32,text:X11::C::X::PWChar_t,num_wchars:Int32)-instance-method","name":"wc_draw_image_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"X11::C::X::PWChar_t"},{"name":"num_wchars","doc":null,"default_value":"","external_name":"num_wchars","restriction":"Int32"}],"args_string":"(d : X11::C::Drawable, font_set : X11::C::X::FontSet, gc : X11::C::X::GC, x : Int32, y : Int32, text : X11::C::X::PWChar_t, num_wchars : Int32)","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, font_set : X11::C::X::FontSet, gc : X11::C::X::GC, x : Int32, y : Int32, text : X11::C::X::PWChar_t, num_wchars : Int32)","location":{"filename":"src/x11/display.cr","line_number":8269,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8269"},"def":{"name":"wc_draw_image_string","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"X11::C::X::PWChar_t"},{"name":"num_wchars","doc":null,"default_value":"","external_name":"num_wchars","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.wc_draw_image_string(@dpy, font_set, gc, x, y, text, num_wchars)"}},{"id":"wc_draw_string(d:X11::C::Drawable,font_set:X11::C::X::FontSet,gc:X11::C::X::GC,x:Int32,y:Int32,text:X11::C::X::PWChar_t,num_wchars:Int32)-instance-method","html_id":"wc_draw_string(d:X11::C::Drawable,font_set:X11::C::X::FontSet,gc:X11::C::X::GC,x:Int32,y:Int32,text:X11::C::X::PWChar_t,num_wchars:Int32)-instance-method","name":"wc_draw_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"X11::C::X::PWChar_t"},{"name":"num_wchars","doc":null,"default_value":"","external_name":"num_wchars","restriction":"Int32"}],"args_string":"(d : X11::C::Drawable, font_set : X11::C::X::FontSet, gc : X11::C::X::GC, x : Int32, y : Int32, text : X11::C::X::PWChar_t, num_wchars : Int32)","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, font_set : X11::C::X::FontSet, gc : X11::C::X::GC, x : Int32, y : Int32, text : X11::C::X::PWChar_t, num_wchars : Int32)","location":{"filename":"src/x11/display.cr","line_number":8257,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8257"},"def":{"name":"wc_draw_string","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::X::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":"X11::C::X::PWChar_t"},{"name":"num_wchars","doc":null,"default_value":"","external_name":"num_wchars","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.wc_draw_string(@dpy, d, font_set, gc, x, y, text, num_wchars)"}},{"id":"wc_draw_text(d:X11::C::Drawable,gc:X11::C::GC,x:Int32,y:Int32,text_items:Array(WcTextItem))-instance-method","html_id":"wc_draw_text(d:X11::C::Drawable,gc:X11::C::GC,x:Int32,y:Int32,text_items:Array(WcTextItem))-instance-method","name":"wc_draw_text","doc":null,"summary":null,"abstract":false,"args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text_items","doc":null,"default_value":"","external_name":"text_items","restriction":"Array(WcTextItem)"}],"args_string":"(d : X11::C::Drawable, gc : X11::C::GC, x : Int32, y : Int32, text_items : Array(WcTextItem))","args_html":"(d : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>, gc : X11::C::GC, x : Int32, y : Int32, text_items : Array(<a href=\"../X11/WcTextItem.html\">WcTextItem</a>))","location":{"filename":"src/x11/display.cr","line_number":8245,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8245"},"def":{"name":"wc_draw_text","args":[{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"X11::C::Drawable"},{"name":"gc","doc":null,"default_value":"","external_name":"gc","restriction":"X11::C::GC"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"},{"name":"text_items","doc":null,"default_value":"","external_name":"text_items","restriction":"Array(WcTextItem)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.wc_draw_text(@dpy, d, gc, x, y, text_items.to_unsafe.as(X11::C::X::PwcTextItem), text_items.size)"}},{"id":"white_pixel(screen_number:Int32):UInt64-instance-method","html_id":"white_pixel(screen_number:Int32):UInt64-instance-method","name":"white_pixel","doc":"Returns the white pixel value for the specified screen.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.","summary":"<p>Returns the white pixel value for the specified screen.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : UInt64","args_html":"(screen_number : Int32) : UInt64","location":{"filename":"src/x11/display.cr","line_number":1404,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1404"},"def":{"name":"white_pixel","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"X.white_pixel(@dpy, screen_number)"}},{"id":"width(screen_number:Int32):Int32-instance-method","html_id":"width(screen_number:Int32):Int32-instance-method","name":"width","doc":"Returns the width of the screen in pixels.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.","summary":"<p>Returns the width of the screen in pixels.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : Int32","args_html":"(screen_number : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3138,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3138"},"def":{"name":"width","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.display_width(@dpy, screen_number)"}},{"id":"width_mm(screen_number:Int32):Int32-instance-method","html_id":"width_mm(screen_number:Int32):Int32-instance-method","name":"width_mm","doc":"Returns the width of the specified screen in millimeters.\n\n###Arguments\n- **screen_number** Specifies the appropriate screen number on the host server.","summary":"<p>Returns the width of the specified screen in millimeters.</p>","abstract":false,"args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(screen_number : Int32) : Int32","args_html":"(screen_number : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":3146,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L3146"},"def":{"name":"width_mm","args":[{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.display_width_mm(@dpy, screen_number)"}},{"id":"window_attributes(w:X11::C::Window):WindowAttributes-instance-method","html_id":"window_attributes(w:X11::C::Window):WindowAttributes-instance-method","name":"window_attributes","doc":"Returns the specified window's attributes in the `WindowAttributes` structure.\n\n###Arguments\n- **w** Specifies the window whose current attributes you want to obtain.\n\n###Description\nThe `window_attributes` function returns the current attributes for the\nspecified window to an `WindowAttributes` structure.\n\nThe **x** and **y** members are set to the upper-left outer corner relative to the parent window's origin.\n\nThe **width** and **height** members are set to the inside size of the window, not including the border.\n\nThe **border_width** member is set to the window's border width in pixels.\n\nThe **depth** member is set to the depth of the window (that is, bits per pixel for the object).\n\nThe **visual** member is a pointer to the screen's associated `Visual` structure.\n\nThe **root** member is set to the root window of the screen containing the window.\n\nThe **class** member is set to the window's class and can be either **InputOutput** or **InputOnly**.\n\nThe **bit_gravity** member is set to the window's bit gravity and can be one of the following:\n- **ForgetGravity**    **EastGravity**\n- **NorthWestGravity** **SouthWestGravity**\n- **NorthGravity**     **SouthGravity**\n- **NorthEastGravity** **SouthEastGravity**\n- **WestGravity**      **StaticGravity**\n- **CenterGravity**\n\nThe **win_gravity** member is set to the window's window gravity and can be one of the following:\n- **UnmapGravity**     **EastGravity**\n- **NorthWestGravity** **SouthWestGravity**\n- **NorthGravity**     **SouthGravity**\n- **NorthEastGravity** **SouthEastGravity**\n- **WestGravity**      **StaticGravity**\n- **CenterGravity**\n\nThe **backing_store** member is set to indicate how the X server should maintain\nthe contents of a window and can be **WhenMapped**, **Always**, or **NotUseful**.\n\nThe **backing_planes** member is set to indicate (with bits set to 1) which\nbit planes of the window hold dynamic data that must be preserved in backing_stores and during save_unders.\n\nThe **backing_pixel** member is set to indicate what values to use for planes not set in backing_planes.\n\nThe **save_under** member is set to **true** or **false**.\n\nThe **colormap** member is set to the colormap for the specified window and can be a colormap ID or **None**.\n\nThe **map_installed** member is set to indicate whether the colormap is currently installed and can be **true** or **false**.\n\nThe **map_state** member is set to indicate the state of the window and can\nbe **IsUnmapped**, **IsUnviewable**, or **IsViewable**. **IsUnviewable** is\nused if the window is mapped but some ancestor is unmapped.\n\nThe **all_event_masks** member is set to the bitwise inclusive OR of all\nevent masks selected on the window by all clients.\n\nThe **your_event_mask** member is set to the bitwise inclusive OR of all\nevent masks selected by the querying client.\n\nThe **do_not_propagate_mask** member is set to the bitwise inclusive OR of\nthe set of events that should not propagate.\n\nThe **override_redirect** member is set to indicate whether this window\noverrides structure control facilities and can be **true** or **false**.\nWindow manager clients should ignore the window if this member is **true**.\n\nThe **screen** member is set to a screen pointer that gives you a back\npointer to the correct screen. This makes it easier to obtain the screen\ninformation without having to loop over the root window fields to see which field matches.\n\n`window_attributes` can generate **BadDrawable** and **BadWindow** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`geometry`, `query_pointer`, `query_tree`.","summary":"<p>Returns the specified window's attributes in the <code>WindowAttributes</code> structure.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : WindowAttributes","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : WindowAttributes","location":{"filename":"src/x11/display.cr","line_number":4784,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4784"},"def":{"name":"window_attributes","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"WindowAttributes","visibility":"Public","body":"X.get_window_property(@dpy, w, out pattributes)\nWindowAttributes.new(pattributes)\n"}},{"id":"window_event(w:X11::C::Window,event_mask:Int64):Event?-instance-method","html_id":"window_event(w:X11::C::Window,event_mask:Int64):Event?-instance-method","name":"window_event","doc":"Returns the matched event's associated object.\n\n###Arguments\n- **w** Specifies the window whose events you are interested in.\n- **event_mask** Specifies the event mask.\n\n###Description\nThe `window_event` function searches the event queue for an event that\nmatches both the specified window and event mask. When it finds a match,\n`window_event` removes that event from the queue and copies it into the\nspecified `Event` object. The other events stored in the queue are not\ndiscarded. If a matching event is not in the queue, `window_event`\nflushes the output buffer and blocks until one is received.\n\n###See also\n`check_mask_event`, `check_typed_event`, `check_typed_window_event`,\n`check_window_event`, `if_event`, `mask_event`, `next_event`,\n`peek_event`, `put_back_event`, `send_event`.","summary":"<p>Returns the matched event's associated object.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"Int64"}],"args_string":"(w : X11::C::Window, event_mask : Int64) : Event?","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, event_mask : Int64) : <a href=\"../X11/Event.html\">Event</a>?","location":{"filename":"src/x11/display.cr","line_number":8169,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8169"},"def":{"name":"window_event","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"event_mask","doc":null,"default_value":"","external_name":"event_mask","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event | ::Nil","visibility":"Public","body":"if X.window_event(@dpy, w, event_mask, xevent)\n  Event.from_xevent(xevent)\nelse\n  nil\nend"}},{"id":"window_property(w:X11::C::Window,property:Atom|X11::C::Atom,long_offset:Int64,long_length:Int64,delete:Bool,req_type:Atom|X11::C::Atom):NamedTuple()-instance-method","html_id":"window_property(w:X11::C::Window,property:Atom|X11::C::Atom,long_offset:Int64,long_length:Int64,delete:Bool,req_type:Atom|X11::C::Atom):NamedTuple()-instance-method","name":"window_property","doc":"Returns the actual type of the property; the actual format of the property;\nthe number of 8-bit, 16-bit, or 32-bit items transferred; the number of\nbytes remaining to be read in the property; and a string of the data actually returned.\n\n###Arguments\n- **w** Specifies the window whose property you want to obtain.\n- **property** Specifies the property name.\n- **long_offset** Specifies the offset in the specified property\n(in 32-bit quantities) where the data is to be retrieved.\n- **long_length** Specifies the length in 32-bit multiples of the data to be retrieved.\n- **delete** Specifies a Boolean value that determines whether the property is deleted.\n- **req_type** Specifies the atom identifier associated with the property type or **AnyPropertyType**.\n\n###Return\n- **actual_type** Returns the atom identifier that defines the actual type of the property.\n- **actual_format** Returns the actual format of the property.\n- **nitems** Returns the actual number of 8-bit, 16-bit, or 32-bit items stored in the prop_return data.\n- **bytes_after** Returns the number of bytes remaining to be read in the property if a partial read was performed.\n- **prop** Returns the data in the specified format.\n\n###Description\nThe `window_property` function returns the actual type of the property;\nthe actual format of the property; the number of 8-bit, 16-bit, or 32-bit\nitems transferred; the number of bytes remaining to be read in the property;\nand a string of the data actually returned. `window_property` sets the return arguments as follows:\n- If the specified property does not exist for the specified window,\n`window_property` returns **None** to actual_type_return and the value zero\nto actual_format_return and bytes_after_return. The nitems_return argument\nis empty. In this case, the delete argument is ignored.\n- If the specified property exists but its type does not match the\nspecified type, `window_property` returns the actual property type to\nactual_type_return, the actual property format (never zero) to actual_format_return,\nand the property length in bytes (even if the actual_format_return is 16 or 32)\nto bytes_after_return. It also ignores the delete argument. The nitems_return argument is empty.\n- If the specified property exists and either you assign **AnyPropertyType**\nto the req_type argument or the specified type matches the actual property type,\n`window_property` returns the actual property type to actual_type_return and\nthe actual property format (never zero) to actual_format_return. It also returns\na value to bytes_after_return and nitems_return, by defining the following values:\n```\nN = actual length of the stored property in bytes (even if the format is 16 or 32)\nI = 4 * long_offset\nT = N - I\nL = MINIMUM(T, 4 * long_length)\nA = N - (I + L)\n```\nThe returned value starts at byte index I in the property (indexing from zero),\nand its length in bytes is L. If the value for long_offset causes L to be negative,\na **BadValue** error results. The value of bytes_after_return is A, giving\nthe number of trailing unread bytes in the stored property.\n\nIf the returned format is 8, the returned data is represented as a char array.\nIf the returned format is 16, the returned data is represented as a short array\nand should be cast to that type to obtain the elements. If the returned format\nis 32, the returned data is represented as a long array and should be cast\nto that type to obtain the elements.\n\nIf delete is **true** and bytes_after is zero, `window_property` deletes the\nproperty from the window and generates a **PropertyNotify** event on the window.\n\nThe function returns **Success** in res if it executes successfully.\n\n`window_property` can generate **BadAtom**, **BadValue**, and **BadWindow** errors.\n\n###Diagnostics\n- **BadAtom** A value for an *Atom* argument does not name a defined *Atom*.\n- **BadValue** Some numeric value falls outside the range of values accepted\nby the request. Unless a specific range is specified for an argument, the\nfull range defined by the argument's type is accepted. Any argument defined\nas a set of alternatives can generate this error.\n- **BadWindow** A value for a *Window* argument does not name a defined *Window*.\n\n###See also\n`change_property`, `delete_property`, `properties`, `rotate_window_properties`.","summary":"<p>Returns the actual type of the property; the actual format of the property; the number of 8-bit, 16-bit, or 32-bit items transferred; the number of bytes remaining to be read in the property; and a string of the data actually returned.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"property","doc":null,"default_value":"","external_name":"property","restriction":"Atom | X11::C::Atom"},{"name":"long_offset","doc":null,"default_value":"","external_name":"long_offset","restriction":"Int64"},{"name":"long_length","doc":null,"default_value":"","external_name":"long_length","restriction":"Int64"},{"name":"delete","doc":null,"default_value":"","external_name":"delete","restriction":"Bool"},{"name":"req_type","doc":null,"default_value":"","external_name":"req_type","restriction":"Atom | X11::C::Atom"}],"args_string":"(w : X11::C::Window, property : Atom | X11::C::Atom, long_offset : Int64, long_length : Int64, delete : Bool, req_type : Atom | X11::C::Atom) : NamedTuple()","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, property : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>, long_offset : Int64, long_length : Int64, delete : Bool, req_type : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>) : NamedTuple()","location":{"filename":"src/x11/display.cr","line_number":4691,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L4691"},"def":{"name":"window_property","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"property","doc":null,"default_value":"","external_name":"property","restriction":"Atom | X11::C::Atom"},{"name":"long_offset","doc":null,"default_value":"","external_name":"long_offset","restriction":"Int64"},{"name":"long_length","doc":null,"default_value":"","external_name":"long_length","restriction":"Int64"},{"name":"delete","doc":null,"default_value":"","external_name":"delete","restriction":"Bool"},{"name":"req_type","doc":null,"default_value":"","external_name":"req_type","restriction":"Atom | X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(actual_type: X11::C::Atom, actual_format: Int32, nitems: UInt64, bytes_after: UInt64, prop: String, res: Int32)","visibility":"Public","body":"res = X.get_window_property(@dpy, w, property.to_u64, long_offset, long_length, delete ? X::True : X::False, req_type.to_u64, out actual_type_return, out actual_format_return, out nitems_return, out bytes_after_return, out prop_return)\nif prop_return.null?\n  string = \"\"\nelse\n  string = String.new(prop_return)\n  X.free(prop_return)\nend\n{actual_type: actual_type_return, actual_format: actual_format_return, nitems: nitems_return, bytes_after: bytes_after_return, prop: string, res: res}\n"}},{"id":"withdraw_window(w:X11::C::Window,screen_number:Int32):X11::C::X::Status-instance-method","html_id":"withdraw_window(w:X11::C::Window,screen_number:Int32):X11::C::X::Status-instance-method","name":"withdraw_window","doc":"Unmaps the specified window.\n\n###Arguments\n- **w** Specifies the window.\n- **screen_number** Specifies the appropriate screen number on the host server.\n\n###Description\nThe `withdraw_window` function unmaps the specified window and sends a\nsynthetic **UnmapNotify** event to the root window of the specified screen.\nWindow managers may elect to receive this message and may treat it as a\nrequest to change the window's state to withdrawn. When a window is in\nthe withdrawn state, neither its normal nor its iconic representations is visible.\nIt returns a nonzero status if the **UnmapNotify** event is successfully sent; otherwise, it returns a zero status.\n\n`withdraw_window` can generate a **BadWindow** error.\n###Diagnostics\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`change_window_attributes`, `configure_window`, `create_window`, `destroy_window`,\n`map_window`, `raise_window`, `reconfigure_wm_window`, `unmap_window`, `withdraw_window`.","summary":"<p>Unmaps the specified window.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"args_string":"(w : X11::C::Window, screen_number : Int32) : X11::C::X::Status","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>, screen_number : Int32) : X11::C::X::Status","location":{"filename":"src/x11/display.cr","line_number":1641,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1641"},"def":{"name":"withdraw_window","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"},{"name":"screen_number","doc":null,"default_value":"","external_name":"screen_number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::Status","visibility":"Public","body":"X.withdraw_window(@dpy, w, screen_number)"}},{"id":"wm_colormap_windows(w:X11::C::Window):Array(X11::C::Window)-instance-method","html_id":"wm_colormap_windows(w:X11::C::Window):Array(X11::C::Window)-instance-method","name":"wm_colormap_windows","doc":"Returns the list of window identifiers stored in the WM_COLORMAP_WINDOWS property.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `wm_colormap_windows` function returns the list of window identifiers\nstored in the WM_COLORMAP_WINDOWS property on the specified window.\nThese identifiers indicate the colormaps that the window manager may need\nto install for this window.\n\n`wm_colormap_windows` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`X11::alloc_class_hint`, `X11::alloc_icon_size`, `X11::alloc_size_hints`,\n`X11::alloc_wm_hints`, `set_command`, `set_text_property`, `set_transient_for_hint`,\n`set_wm_client_machine`, `set_wm_colormap_windows`, `set_wm_icon_name`,\n`set_wm_name`, `set_wm_properties`, `set_wm_protocols`, `X11::string_list_to_text_property`.","summary":"<p>Returns the list of window identifiers stored in the WM_COLORMAP_WINDOWS property.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Array(X11::C::Window)","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Array(<a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/display.cr","line_number":1696,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1696"},"def":{"name":"wm_colormap_windows","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(X11::C::Window)","visibility":"Public","body":"status = X.get_wm_colormap_windows(@dpy, w, out pwindows, out count)\nif (status == (__temp_24 = 0 | count)) && __temp_24 <= 0\n  return [] of X11::C::Window\nend\nwindows = Array(X11::C::Window).new\n(0...count).each do |i|\n  windows << pwindows[i]\nend\nwindows\n"}},{"id":"wm_protocols(w:X11::C::Window):Array(X11::C::Atom)-instance-method","html_id":"wm_protocols(w:X11::C::Window):Array(X11::C::Atom)-instance-method","name":"wm_protocols","doc":"Returns the list of atoms stored in the WM_PROTOCOLS propertystored in the WM_PROTOCOLS property.\n\n###Arguments\n- **w** Specifies the window.\n\n###Description\nThe `wm_protocols` function returns the list of atoms stored in the WM_PROTOCOLS property on the specified window.\nThese atoms describe window manager protocols in which the owner of this window\nis willing to participate. If the property exists, is of type `Atom`,\nis of format 32, and the atom WM_PROTOCOLS can be interned.\n\n`wm_protocols` can generate a **BadWindow** error.\n\n###Diagnostics\n- **BadWindow** A value for a Window argument does not name a defined Window.\n\n###See also\n`X11::alloc_class_hint`, `X11::alloc_icon_size`, `X11::alloc_size_hints`,\n`X11::alloc_wm_hints`, `set_command`, `set_text_property`, `set_transient_for_hint`,\n`set_wm_client_machine`, `set_wm_colormap_windows`, `set_wm_icon_name`,\n`set_wm_name`, `set_wm_properties`, `set_wm_protocols`, `X11::string_list_to_text_property`.","summary":"<p>Returns the list of atoms stored in the WM_PROTOCOLS propertystored in the WM_PROTOCOLS property.</p>","abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"args_string":"(w : X11::C::Window) : Array(X11::C::Atom)","args_html":"(w : <a href=\"../X11/C/Window.html\">X11::C::Window</a>) : Array(<a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)","location":{"filename":"src/x11/display.cr","line_number":1555,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L1555"},"def":{"name":"wm_protocols","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(X11::C::Atom)","visibility":"Public","body":"status = X.get_wm_protocols(@dpy, w, out patoms, out count)\nif (status == 0) || count <= 0\n  return [] of X11::C::Atom\nend\natoms = Array(X11::C::Atom).new\n(0...count).each do |i|\n  atoms << patoms[i]\nend\nX.free(patoms.as(PChar))\natoms\n"}},{"id":"write_bitmap_file(filename:String,bitmap:X11::C::Pixmap,width:UInt32,height:UInt32,x_hot:Int32,y_hot:Int32):Int32-instance-method","html_id":"write_bitmap_file(filename:String,bitmap:X11::C::Pixmap,width:UInt32,height:UInt32,x_hot:Int32,y_hot:Int32):Int32-instance-method","name":"write_bitmap_file","doc":"Writes a bitmap out to a file in the X Version 11 format.\n\n###Arguments\n- **filename** Specifies the file name to use. The format of the file name is operating-system dependent.\n- **bitmap** Specifies the bitmap.\n- **width**, **height** Specify the width and height.\n- **x_hot**, **y_hot** Specify where to place the hotspot coordinates\n(or -1, -1 if none are present) in the file.\n\n###Description\nThe `write_bitmap_file` function writes a bitmap out to a file in the X\nVersion 11 format. The name used in the output file is derived from the\nfile name by deleting the directory prefix. The file is written in the\nencoding of the current locale. If the file cannot be opened for writing,\nit returns **BitmapOpenFailed**. If insufficient memory is allocated,\n`write_bitmap_file` returns **BitmapNoMemory**; otherwise, on no error,\nit returns **BitmapSuccess**. If x_hot and y_hot are not -1, -1,\n`write_bitmap_file` writes them out as the hotspot coordinates for the bitmap.\n\n`write_bitmap_file` can generate **BadDrawable** and **BadMatch** errors.\n\n###Diagnostics\n- **BadDrawable** A value for a *Drawable* argument does not name a defined *Window* or *Pixmap*.\n- **BadMatch** An **InputOnly** window is used as a *Drawable*. **BadMatch**.\nSome argument or pair of arguments has the correct type and range but fails\nto match in some other way required by the request.\n\n###See also\n`create_bitmap_from_data`, `create_pixmap`, `create_pixmap_from_bitmap_data`,\n`put_image`, `read_bitmap_file`.","summary":"<p>Writes a bitmap out to a file in the X Version 11 format.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"bitmap","doc":null,"default_value":"","external_name":"bitmap","restriction":"X11::C::Pixmap"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"x_hot","doc":null,"default_value":"","external_name":"x_hot","restriction":"Int32"},{"name":"y_hot","doc":null,"default_value":"","external_name":"y_hot","restriction":"Int32"}],"args_string":"(filename : String, bitmap : X11::C::Pixmap, width : UInt32, height : UInt32, x_hot : Int32, y_hot : Int32) : Int32","args_html":"(filename : String, bitmap : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>, width : UInt32, height : UInt32, x_hot : Int32, y_hot : Int32) : Int32","location":{"filename":"src/x11/display.cr","line_number":8207,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8207"},"def":{"name":"write_bitmap_file","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"bitmap","doc":null,"default_value":"","external_name":"bitmap","restriction":"X11::C::Pixmap"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt32"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt32"},{"name":"x_hot","doc":null,"default_value":"","external_name":"x_hot","restriction":"Int32"},{"name":"y_hot","doc":null,"default_value":"","external_name":"y_hot","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.write_bitmap_file(@dpy, filename.to_unsafe, width, height, x_hot, y_hot)"}}],"macros":[],"types":[]},{"html_id":"x11/X11/DisplayInitialization","path":"X11/DisplayInitialization.html","kind":"enum","full_name":"X11::DisplayInitialization","name":"DisplayInitialization","abstract":false,"superclass":null,"ancestors":[{"html_id":"x11/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"x11/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/display.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L6"}],"repository_name":"x11","program":false,"enum":true,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"Name","name":"Name","value":"0","doc":null,"summary":null},{"id":"PDisplay","name":"PDisplay","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"name?-instance-method","html_id":"name?-instance-method","name":"name?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/display.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L7"},"def":{"name":"name?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Name"}},{"id":"p_display?-instance-method","html_id":"p_display?-instance-method","name":"p_display?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/display.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/display.cr#L8"},"def":{"name":"p_display?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PDisplay"}}],"macros":[],"types":[]},{"html_id":"x11/X11/ErrorEvent","path":"X11/ErrorEvent.html","kind":"class","full_name":"X11::ErrorEvent","name":"ErrorEvent","abstract":false,"superclass":{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},"ancestors":[{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/error_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::ErrorEvent` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/ErrorEvent.html\">ErrorEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PErrorEvent)-class-method","html_id":"new(event:X11::C::X::PErrorEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PErrorEvent"}],"args_string":"(event : X11::C::X::PErrorEvent)","args_html":"(event : X11::C::X::PErrorEvent)","location":{"filename":"src/x11/error_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PErrorEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::ErrorEvent)-class-method","html_id":"new(event:X11::C::X::ErrorEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ErrorEvent"}],"args_string":"(event : X11::C::X::ErrorEvent)","args_html":"(event : X11::C::X::ErrorEvent)","location":{"filename":"src/x11/error_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ErrorEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/error_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"error_code:UInt8-instance-method","html_id":"error_code:UInt8-instance-method","name":"error_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","args_html":" : UInt8","location":{"filename":"src/x11/error_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L43"},"def":{"name":"error_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"@event.error_code"}},{"id":"error_code=(error_code:UInt8)-instance-method","html_id":"error_code=(error_code:UInt8)-instance-method","name":"error_code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"error_code","doc":null,"default_value":"","external_name":"error_code","restriction":"UInt8"}],"args_string":"(error_code : UInt8)","args_html":"(error_code : UInt8)","location":{"filename":"src/x11/error_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L47"},"def":{"name":"error_code=","args":[{"name":"error_code","doc":null,"default_value":"","external_name":"error_code","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.error_code = error_code"}},{"id":"minor_code:UInt8-instance-method","html_id":"minor_code:UInt8-instance-method","name":"minor_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","args_html":" : UInt8","location":{"filename":"src/x11/error_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L59"},"def":{"name":"minor_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"@event.minor_code"}},{"id":"minor_code=(minor_code:UInt8)-instance-method","html_id":"minor_code=(minor_code:UInt8)-instance-method","name":"minor_code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"minor_code","doc":null,"default_value":"","external_name":"minor_code","restriction":"UInt8"}],"args_string":"(minor_code : UInt8)","args_html":"(minor_code : UInt8)","location":{"filename":"src/x11/error_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L63"},"def":{"name":"minor_code=","args":[{"name":"minor_code","doc":null,"default_value":"","external_name":"minor_code","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.minor_code = minor_code"}},{"id":"request_code:UInt8-instance-method","html_id":"request_code:UInt8-instance-method","name":"request_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","args_html":" : UInt8","location":{"filename":"src/x11/error_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L51"},"def":{"name":"request_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"@event.request_code"}},{"id":"request_code=(request_code:UInt8)-instance-method","html_id":"request_code=(request_code:UInt8)-instance-method","name":"request_code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"request_code","doc":null,"default_value":"","external_name":"request_code","restriction":"UInt8"}],"args_string":"(request_code : UInt8)","args_html":"(request_code : UInt8)","location":{"filename":"src/x11/error_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L55"},"def":{"name":"request_code=","args":[{"name":"request_code","doc":null,"default_value":"","external_name":"request_code","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.request_code = request_code"}},{"id":"resource_id:X11::C::XID-instance-method","html_id":"resource_id:X11::C::XID-instance-method","name":"resource_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::XID","args_html":" : <a href=\"../X11/C/XID.html\">X11::C::XID</a>","location":{"filename":"src/x11/error_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L67"},"def":{"name":"resource_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::XID","visibility":"Public","body":"@event.resource_id"}},{"id":"resource_id=(resource_id:X11::C::XID)-instance-method","html_id":"resource_id=(resource_id:X11::C::XID)-instance-method","name":"resource_id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"resource_id","doc":null,"default_value":"","external_name":"resource_id","restriction":"X11::C::XID"}],"args_string":"(resource_id : X11::C::XID)","args_html":"(resource_id : <a href=\"../X11/C/XID.html\">X11::C::XID</a>)","location":{"filename":"src/x11/error_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L71"},"def":{"name":"resource_id=","args":[{"name":"resource_id","doc":null,"default_value":"","external_name":"resource_id","restriction":"X11::C::XID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.resource_id = resource_id"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/error_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/error_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PErrorEvent-instance-method","html_id":"to_unsafe:X11::C::X::PErrorEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PErrorEvent","args_html":" : X11::C::X::PErrorEvent","location":{"filename":"src/x11/error_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PErrorEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::ErrorEvent-instance-method","html_id":"to_x:X11::C::X::ErrorEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::ErrorEvent","args_html":" : X11::C::X::ErrorEvent","location":{"filename":"src/x11/error_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ErrorEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/error_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/error_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/error_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}}],"macros":[],"types":[]},{"html_id":"x11/X11/Event","path":"X11/Event.html","kind":"class","full_name":"X11::Event","name":"Event","abstract":true,"superclass":{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/event.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/event.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"x11/X11/AnyEvent","kind":"class","full_name":"X11::AnyEvent","name":"AnyEvent"},{"html_id":"x11/X11/ErrorEvent","kind":"class","full_name":"X11::ErrorEvent","name":"ErrorEvent"},{"html_id":"x11/X11/GenericEvent","kind":"class","full_name":"X11::GenericEvent","name":"GenericEvent"},{"html_id":"x11/X11/GraphicsExposeEvent","kind":"class","full_name":"X11::GraphicsExposeEvent","name":"GraphicsExposeEvent"},{"html_id":"x11/X11/NoExposeEvent","kind":"class","full_name":"X11::NoExposeEvent","name":"NoExposeEvent"},{"html_id":"x11/X11/SelectionEvent","kind":"class","full_name":"X11::SelectionEvent","name":"SelectionEvent"},{"html_id":"x11/X11/SelectionRequestEvent","kind":"class","full_name":"X11::SelectionRequestEvent","name":"SelectionRequestEvent"},{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"}],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"from_xevent(xevent:X11::C::X::Event):Event-class-method","html_id":"from_xevent(xevent:X11::C::X::Event):Event-class-method","name":"from_xevent","doc":null,"summary":null,"abstract":false,"args":[{"name":"xevent","doc":null,"default_value":"","external_name":"xevent","restriction":"X11::C::X::Event"}],"args_string":"(xevent : X11::C::X::Event) : Event","args_html":"(xevent : X11::C::X::Event) : <a href=\"../X11/Event.html\">Event</a>","location":{"filename":"src/x11/event.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/event.cr#L5"},"def":{"name":"from_xevent","args":[{"name":"xevent","doc":null,"default_value":"","external_name":"xevent","restriction":"X11::C::X::Event"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Event","visibility":"Public","body":"case xevent.type\nwhen KeyPress, KeyRelease\n  KeyEvent.new(xevent.key)\nwhen ButtonPress, ButtonRelease\n  ButtonEvent.new(xevent.button)\nwhen MotionNotify\n  MotionEvent.new(xevent.motion)\nwhen EnterNotify, LeaveNotify\n  CrossingEvent.new(xevent.crossing)\nwhen FocusIn, FocusOut\n  FocusChangeEvent.new(xevent.focus)\nwhen Expose\n  ExposeEvent.new(xevent.expose)\nwhen GraphicsExpose\n  GraphicsExposeEvent.new(xevent.graphicsexpose)\nwhen NoExpose\n  NoExposeEvent.new(xevent.noexpose)\nwhen VisibilityNotify\n  VisibilityEvent.new(xevent.visibility)\nwhen CreateNotify\n  CreateWindowEvent.new(xevent.createwindow)\nwhen DestroyNotify\n  DestroyWindowEvent.new(xevent.destroywindow)\nwhen UnmapNotify\n  UnmapEvent.new(xevent.unmap)\nwhen MapNotify\n  MapEvent.new(xevent.map)\nwhen MapRequest\n  MapRequestEvent.new(xevent.maprequest)\nwhen ReparentNotify\n  ReparentEvent.new(xevent.reparent)\nwhen ConfigureNotify\n  ConfigureEvent.new(xevent.configure)\nwhen GravityNotify\n  GravityEvent.new(xevent.gravity)\nwhen ResizeRequest\n  ResizeRequestEvent.new(xevent.resizerequest)\nwhen ConfigureRequest\n  ConfigureRequestEvent.new(xevent.configurerequest)\nwhen CirculateNotify\n  CirculateEvent.new(xevent.circulate)\nwhen CirculateRequest\n  CirculateRequestEvent.new(xevent.circulaterequest)\nwhen PropertyNotify\n  PropertyEvent.new(xevent.property)\nwhen SelectionClear\n  SelectionClearEvent.new(xevent.selectionclear)\nwhen SelectionRequest\n  SelectionRequestEvent.new(xevent.selectionrequest)\nwhen SelectionNotify\n  SelectionEvent.new(xevent.selection)\nwhen ColormapNotify\n  ColormapEvent.new(xevent.colormap)\nwhen ClientMessage\n  ClientMessageEvent.new(xevent.client)\nwhen MappingNotify\n  MappingEvent.new(xevent.mapping)\nwhen KeymapNotify\n  KeymapEvent.new(xevent.keymap)\nwhen X11::C::GenericEvent\n  GenericEvent.new(xevent.cookie)\nelse\n  AnyEvent.new(xevent.any)\nend"}}],"instance_methods":[{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/event.cr","line_number":44,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/event.cr#L44"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":""}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":true,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/event.cr","line_number":45,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/event.cr#L45"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/event.cr","line_number":42,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/event.cr#L42"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":true,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/event.cr#L43"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"x11/X11/ExposeEvent","path":"X11/ExposeEvent.html","kind":"class","full_name":"X11::ExposeEvent","name":"ExposeEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/expose_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::ExposeEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/ExposeEvent.html\">ExposeEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PExposeEvent)-class-method","html_id":"new(event:X11::C::X::PExposeEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PExposeEvent"}],"args_string":"(event : X11::C::X::PExposeEvent)","args_html":"(event : X11::C::X::PExposeEvent)","location":{"filename":"src/x11/expose_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PExposeEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::ExposeEvent)-class-method","html_id":"new(event:X11::C::X::ExposeEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ExposeEvent"}],"args_string":"(event : X11::C::X::ExposeEvent)","args_html":"(event : X11::C::X::ExposeEvent)","location":{"filename":"src/x11/expose_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ExposeEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/expose_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"count:Int32-instance-method","html_id":"count:Int32-instance-method","name":"count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/expose_event.cr","line_number":99,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L99"},"def":{"name":"count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.count"}},{"id":"count=(count:Int32)-instance-method","html_id":"count=(count:Int32)-instance-method","name":"count=","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"args_string":"(count : Int32)","args_html":"(count : Int32)","location":{"filename":"src/x11/expose_event.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L103"},"def":{"name":"count=","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.count = count"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/expose_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/expose_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/expose_event.cr","line_number":91,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L91"},"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.height"}},{"id":"height=(height:Int32)-instance-method","html_id":"height=(height:Int32)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(height : Int32)","args_html":"(height : Int32)","location":{"filename":"src/x11/expose_event.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L95"},"def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.height = height"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/expose_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/expose_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/expose_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/expose_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PExposeEvent-instance-method","html_id":"to_unsafe:X11::C::X::PExposeEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PExposeEvent","args_html":" : X11::C::X::PExposeEvent","location":{"filename":"src/x11/expose_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PExposeEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::ExposeEvent-instance-method","html_id":"to_x:X11::C::X::ExposeEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::ExposeEvent","args_html":" : X11::C::X::ExposeEvent","location":{"filename":"src/x11/expose_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ExposeEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/expose_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/expose_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/expose_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L83"},"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.width"}},{"id":"width=(width:Int32)-instance-method","html_id":"width=(width:Int32)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"args_string":"(width : Int32)","args_html":"(width : Int32)","location":{"filename":"src/x11/expose_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L87"},"def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.width = width"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/expose_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L59"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/expose_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L63"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/expose_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L67"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","args_html":"(x : Int32)","location":{"filename":"src/x11/expose_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L71"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x = x"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/expose_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L75"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","args_html":"(y : Int32)","location":{"filename":"src/x11/expose_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/expose_event.cr#L79"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y = y"}}],"macros":[],"types":[]},{"html_id":"x11/X11/ExtCodes","path":"X11/ExtCodes.html","kind":"struct","full_name":"X11::ExtCodes","name":"ExtCodes","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/ext_codes.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L5"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::ExtCodes` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/ExtCodes.html\">ExtCodes</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(ext_codes:X11::C::X::PExtCodes)-class-method","html_id":"new(ext_codes:X11::C::X::PExtCodes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ext_codes","doc":null,"default_value":"","external_name":"ext_codes","restriction":"X11::C::X::PExtCodes"}],"args_string":"(ext_codes : X11::C::X::PExtCodes)","args_html":"(ext_codes : X11::C::X::PExtCodes)","location":{"filename":"src/x11/ext_codes.cr","line_number":14,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L14"},"def":{"name":"new","args":[{"name":"ext_codes","doc":null,"default_value":"","external_name":"ext_codes","restriction":"X11::C::X::PExtCodes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ext_codes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ext_codes:X11::C::X::ExtCodes)-class-method","html_id":"new(ext_codes:X11::C::X::ExtCodes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ext_codes","doc":null,"default_value":"","external_name":"ext_codes","restriction":"X11::C::X::ExtCodes"}],"args_string":"(ext_codes : X11::C::X::ExtCodes)","args_html":"(ext_codes : X11::C::X::ExtCodes)","location":{"filename":"src/x11/ext_codes.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L19"},"def":{"name":"new","args":[{"name":"ext_codes","doc":null,"default_value":"","external_name":"ext_codes","restriction":"X11::C::X::ExtCodes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ext_codes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/ext_codes.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L6"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"extension:Int32-instance-method","html_id":"extension:Int32-instance-method","name":"extension","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/ext_codes.cr","line_number":30,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L30"},"def":{"name":"extension","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@ext_codes.extension"}},{"id":"extension=(extension:Int32)-instance-method","html_id":"extension=(extension:Int32)-instance-method","name":"extension=","doc":null,"summary":null,"abstract":false,"args":[{"name":"extension","doc":null,"default_value":"","external_name":"extension","restriction":"Int32"}],"args_string":"(extension : Int32)","args_html":"(extension : Int32)","location":{"filename":"src/x11/ext_codes.cr","line_number":34,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L34"},"def":{"name":"extension=","args":[{"name":"extension","doc":null,"default_value":"","external_name":"extension","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ext_codes.extension = extension"}},{"id":"first_error:Int32-instance-method","html_id":"first_error:Int32-instance-method","name":"first_error","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/ext_codes.cr","line_number":54,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L54"},"def":{"name":"first_error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@ext_codes.first_error"}},{"id":"first_error=(first_error:Int32)-instance-method","html_id":"first_error=(first_error:Int32)-instance-method","name":"first_error=","doc":null,"summary":null,"abstract":false,"args":[{"name":"first_error","doc":null,"default_value":"","external_name":"first_error","restriction":"Int32"}],"args_string":"(first_error : Int32)","args_html":"(first_error : Int32)","location":{"filename":"src/x11/ext_codes.cr","line_number":58,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L58"},"def":{"name":"first_error=","args":[{"name":"first_error","doc":null,"default_value":"","external_name":"first_error","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ext_codes.first_error = first_error"}},{"id":"first_event:Int32-instance-method","html_id":"first_event:Int32-instance-method","name":"first_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/ext_codes.cr","line_number":46,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L46"},"def":{"name":"first_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@ext_codes.first_event"}},{"id":"first_event=(first_event:Int32)-instance-method","html_id":"first_event=(first_event:Int32)-instance-method","name":"first_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"first_event","doc":null,"default_value":"","external_name":"first_event","restriction":"Int32"}],"args_string":"(first_event : Int32)","args_html":"(first_event : Int32)","location":{"filename":"src/x11/ext_codes.cr","line_number":50,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L50"},"def":{"name":"first_event=","args":[{"name":"first_event","doc":null,"default_value":"","external_name":"first_event","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ext_codes.first_event = first_event"}},{"id":"major_opcode:Int32-instance-method","html_id":"major_opcode:Int32-instance-method","name":"major_opcode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/ext_codes.cr","line_number":38,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L38"},"def":{"name":"major_opcode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@ext_codes.major_opcode"}},{"id":"major_opcode=(major_opcode:Int32)-instance-method","html_id":"major_opcode=(major_opcode:Int32)-instance-method","name":"major_opcode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"major_opcode","doc":null,"default_value":"","external_name":"major_opcode","restriction":"Int32"}],"args_string":"(major_opcode : Int32)","args_html":"(major_opcode : Int32)","location":{"filename":"src/x11/ext_codes.cr","line_number":42,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L42"},"def":{"name":"major_opcode=","args":[{"name":"major_opcode","doc":null,"default_value":"","external_name":"major_opcode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ext_codes.major_opcode = major_opcode"}},{"id":"to_unsafe:X11::C::X::PExtCodes-instance-method","html_id":"to_unsafe:X11::C::X::PExtCodes-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PExtCodes","args_html":" : X11::C::X::PExtCodes","location":{"filename":"src/x11/ext_codes.cr","line_number":22,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L22"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PExtCodes","visibility":"Public","body":"pointerof(@ext_codes)"}},{"id":"to_x:X11::C::X::ExtCodes-instance-method","html_id":"to_x:X11::C::X::ExtCodes-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::ExtCodes","args_html":" : X11::C::X::ExtCodes","location":{"filename":"src/x11/ext_codes.cr","line_number":26,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_codes.cr#L26"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ExtCodes","visibility":"Public","body":"@ext_codes"}}],"macros":[],"types":[]},{"html_id":"x11/X11/ExtData","path":"X11/ExtData.html","kind":"struct","full_name":"X11::ExtData","name":"ExtData","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/ext_data.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L5"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::ExtData` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/ExtData.html\">ExtData</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(ext_data:X11::C::X::PExtData)-class-method","html_id":"new(ext_data:X11::C::X::PExtData)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ext_data","doc":null,"default_value":"","external_name":"ext_data","restriction":"X11::C::X::PExtData"}],"args_string":"(ext_data : X11::C::X::PExtData)","args_html":"(ext_data : X11::C::X::PExtData)","location":{"filename":"src/x11/ext_data.cr","line_number":10,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L10"},"def":{"name":"new","args":[{"name":"ext_data","doc":null,"default_value":"","external_name":"ext_data","restriction":"X11::C::X::PExtData"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ext_data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(ext_data:X11::C::X::ExtData)-class-method","html_id":"new(ext_data:X11::C::X::ExtData)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ext_data","doc":null,"default_value":"","external_name":"ext_data","restriction":"X11::C::X::ExtData"}],"args_string":"(ext_data : X11::C::X::ExtData)","args_html":"(ext_data : X11::C::X::ExtData)","location":{"filename":"src/x11/ext_data.cr","line_number":15,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L15"},"def":{"name":"new","args":[{"name":"ext_data","doc":null,"default_value":"","external_name":"ext_data","restriction":"X11::C::X::ExtData"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ext_data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/ext_data.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L6"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"free_private:X11::C::X::PExtData->Int32-instance-method","html_id":"free_private:X11::C::X::PExtData->Int32-instance-method","name":"free_private","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PExtData -> Int32","args_html":" : X11::C::X::PExtData -> Int32","location":{"filename":"src/x11/ext_data.cr","line_number":46,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L46"},"def":{"name":"free_private","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(X11::C::X::PExtData -> Int32)","visibility":"Public","body":"@ext_data.free_private"}},{"id":"free_private=(free_private:X11::C::X::PExtData->Int32)-instance-method","html_id":"free_private=(free_private:X11::C::X::PExtData->Int32)-instance-method","name":"free_private=","doc":null,"summary":null,"abstract":false,"args":[{"name":"free_private","doc":null,"default_value":"","external_name":"free_private","restriction":"(X11::C::X::PExtData -> Int32)"}],"args_string":"(free_private : X11::C::X::PExtData -> Int32)","args_html":"(free_private : X11::C::X::PExtData -> Int32)","location":{"filename":"src/x11/ext_data.cr","line_number":50,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L50"},"def":{"name":"free_private=","args":[{"name":"free_private","doc":null,"default_value":"","external_name":"free_private","restriction":"(X11::C::X::PExtData -> Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ext_data.free_private = free_private"}},{"id":"next:ExtData?-instance-method","html_id":"next:ExtData?-instance-method","name":"next","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ExtData?","args_html":" : <a href=\"../X11/ExtData.html\">ExtData</a>?","location":{"filename":"src/x11/ext_data.cr","line_number":34,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L34"},"def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ExtData | ::Nil","visibility":"Public","body":"if @ext_data.next.null?\n  nil\nelse\n  ExtData.new(@ext_data.next)\nend"}},{"id":"next=(data:ExtData)-instance-method","html_id":"next=(data:ExtData)-instance-method","name":"next=","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ExtData"}],"args_string":"(data : ExtData)","args_html":"(data : <a href=\"../X11/ExtData.html\">ExtData</a>)","location":{"filename":"src/x11/ext_data.cr","line_number":42,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L42"},"def":{"name":"next=","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ExtData"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ext_data.next = data.to_unsafe"}},{"id":"number:Int32-instance-method","html_id":"number:Int32-instance-method","name":"number","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/ext_data.cr","line_number":26,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L26"},"def":{"name":"number","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@ext_data.number"}},{"id":"number=(number:Int32)-instance-method","html_id":"number=(number:Int32)-instance-method","name":"number=","doc":null,"summary":null,"abstract":false,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int32"}],"args_string":"(number : Int32)","args_html":"(number : Int32)","location":{"filename":"src/x11/ext_data.cr","line_number":30,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L30"},"def":{"name":"number=","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ext_data.number = number"}},{"id":"private_data:X11::C::X::Pointer-instance-method","html_id":"private_data:X11::C::X::Pointer-instance-method","name":"private_data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::Pointer","args_html":" : X11::C::X::Pointer","location":{"filename":"src/x11/ext_data.cr","line_number":54,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L54"},"def":{"name":"private_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::Pointer","visibility":"Public","body":"@ext_data.private_data"}},{"id":"private_data=(private_data:X11::C::X::Pointer)-instance-method","html_id":"private_data=(private_data:X11::C::X::Pointer)-instance-method","name":"private_data=","doc":null,"summary":null,"abstract":false,"args":[{"name":"private_data","doc":null,"default_value":"","external_name":"private_data","restriction":"X11::C::X::Pointer"}],"args_string":"(private_data : X11::C::X::Pointer)","args_html":"(private_data : X11::C::X::Pointer)","location":{"filename":"src/x11/ext_data.cr","line_number":58,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L58"},"def":{"name":"private_data=","args":[{"name":"private_data","doc":null,"default_value":"","external_name":"private_data","restriction":"X11::C::X::Pointer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ext_data.private_data = private_data"}},{"id":"to_unsafe:X11::C::X::PExtData-instance-method","html_id":"to_unsafe:X11::C::X::PExtData-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PExtData","args_html":" : X11::C::X::PExtData","location":{"filename":"src/x11/ext_data.cr","line_number":18,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L18"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PExtData","visibility":"Public","body":"pointerof(@ext_data)"}},{"id":"to_x:X11::C::X::ExtData-instance-method","html_id":"to_x:X11::C::X::ExtData-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::ExtData","args_html":" : X11::C::X::ExtData","location":{"filename":"src/x11/ext_data.cr","line_number":22,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/ext_data.cr#L22"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ExtData","visibility":"Public","body":"@ext_data"}}],"macros":[],"types":[]},{"html_id":"x11/X11/FocusChangeEvent","path":"X11/FocusChangeEvent.html","kind":"class","full_name":"X11::FocusChangeEvent","name":"FocusChangeEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/focus_change_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::FocusChangeEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/FocusChangeEvent.html\">FocusChangeEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PFocusChangeEvent)-class-method","html_id":"new(event:X11::C::X::PFocusChangeEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PFocusChangeEvent"}],"args_string":"(event : X11::C::X::PFocusChangeEvent)","args_html":"(event : X11::C::X::PFocusChangeEvent)","location":{"filename":"src/x11/focus_change_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PFocusChangeEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::FocusChangeEvent)-class-method","html_id":"new(event:X11::C::X::FocusChangeEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::FocusChangeEvent"}],"args_string":"(event : X11::C::X::FocusChangeEvent)","args_html":"(event : X11::C::X::FocusChangeEvent)","location":{"filename":"src/x11/focus_change_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::FocusChangeEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/focus_change_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"detail:Int32-instance-method","html_id":"detail:Int32-instance-method","name":"detail","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/focus_change_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L83"},"def":{"name":"detail","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.keycode"}},{"id":"detail=(detail:Int32)-instance-method","html_id":"detail=(detail:Int32)-instance-method","name":"detail=","doc":null,"summary":null,"abstract":false,"args":[{"name":"detail","doc":null,"default_value":"","external_name":"detail","restriction":"Int32"}],"args_string":"(detail : Int32)","args_html":"(detail : Int32)","location":{"filename":"src/x11/focus_change_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L87"},"def":{"name":"detail=","args":[{"name":"detail","doc":null,"default_value":"","external_name":"detail","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.detail = detail"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/focus_change_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L59"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/focus_change_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L63"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"in?:Bool-instance-method","html_id":"in?:Bool-instance-method","name":"in?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/focus_change_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L27"},"def":{"name":"in?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.type == FocusIn"}},{"id":"mode:Int32-instance-method","html_id":"mode:Int32-instance-method","name":"mode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/focus_change_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L75"},"def":{"name":"mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.mode"}},{"id":"mode=(mode:Int32)-instance-method","html_id":"mode=(mode:Int32)-instance-method","name":"mode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"args_string":"(mode : Int32)","args_html":"(mode : Int32)","location":{"filename":"src/x11/focus_change_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L79"},"def":{"name":"mode=","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.mode = mode"}},{"id":"out?:Bool-instance-method","html_id":"out?:Bool-instance-method","name":"out?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/focus_change_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L31"},"def":{"name":"out?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.type == FocusOut"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/focus_change_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L51"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/focus_change_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L55"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/focus_change_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L43"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/focus_change_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L47"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PFocusChangeEvent-instance-method","html_id":"to_unsafe:X11::C::X::PFocusChangeEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PFocusChangeEvent","args_html":" : X11::C::X::PFocusChangeEvent","location":{"filename":"src/x11/focus_change_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PFocusChangeEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::FocusChangeEvent-instance-method","html_id":"to_x:X11::C::X::FocusChangeEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::FocusChangeEvent","args_html":" : X11::C::X::FocusChangeEvent","location":{"filename":"src/x11/focus_change_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::FocusChangeEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/focus_change_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L35"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/focus_change_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L39"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/focus_change_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/focus_change_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/focus_change_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/FontStruct","path":"X11/FontStruct.html","kind":"class","full_name":"X11::FontStruct","name":"FontStruct","abstract":false,"superclass":{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/font_struct.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L7"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(display:Display,font_struct:X::PFontStruct)-class-method","html_id":"new(display:Display,font_struct:X::PFontStruct)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"},{"name":"font_struct","doc":null,"default_value":"","external_name":"font_struct","restriction":"X::PFontStruct"}],"args_string":"(display : Display, font_struct : X::PFontStruct)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>, font_struct : X::PFontStruct)","location":{"filename":"src/x11/font_struct.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L11"},"def":{"name":"new","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"},{"name":"font_struct","doc":null,"default_value":"","external_name":"font_struct","restriction":"X::PFontStruct"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(display, font_struct)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/font_struct.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L8"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"@display"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/font_struct.cr","line_number":15,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L15"},"def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.free_font(@display.dpy, @font_struct)"}},{"id":"font_struct:X::PFontStruct-instance-method","html_id":"font_struct:X::PFontStruct-instance-method","name":"font_struct","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X::PFontStruct","args_html":" : X::PFontStruct","location":{"filename":"src/x11/font_struct.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L9"},"def":{"name":"font_struct","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X::PFontStruct","visibility":"Public","body":"@font_struct"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"Returns the font's name.","summary":"<p>Returns the font's name.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/x11/font_struct.cr","line_number":20,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L20"},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"property_name(Atom::Font)"}},{"id":"property(atom:Atom|X11::C::Atom):Atom|X11::C::Atom|Bool-instance-method","html_id":"property(atom:Atom|X11::C::Atom):Atom|X11::C::Atom|Bool-instance-method","name":"property","doc":"Returns the value of the specified font property.\n\n###Arguments\n- **atom** Specifies the atom for the property name you want returned.\n\n###Description\nGiven the atom for that property, the property() function returns the value of the specified font property.\nproperty() also returns false if the property was not defined or true if it was defined.\nA set of predefined atoms exists for font properties, which can be found in x11/atom.cr .\nThis set contains the standard properties associated with a font.\nAlthough it is not guaranteed, it is likely that the predefined font properties will be present.\n\n###See also\n`Display::create_gc`, `finalize`, `Display::fonts`, `Display::load_font`,\n`Display::load_query_font`, `Display::query_font`,\n`Display::set_font_path`, `Display::unload_font`.","summary":"<p>Returns the value of the specified font property.</p>","abstract":false,"args":[{"name":"atom","doc":null,"default_value":"","external_name":"atom","restriction":"Atom | X11::C::Atom"}],"args_string":"(atom : Atom | X11::C::Atom) : Atom | X11::C::Atom | Bool","args_html":"(atom : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>) : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a> | Bool","location":{"filename":"src/x11/font_struct.cr","line_number":40,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L40"},"def":{"name":"property","args":[{"name":"atom","doc":null,"default_value":"","external_name":"atom","restriction":"Atom | X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Atom | X11::C::Atom | Bool","visibility":"Public","body":"res = X.get_font_property(@font_struct, atom.to_u64, out ret)\nres == X::True ? ret : false\n"}},{"id":"property_name(atom:Atom|X11::C::Atom)-instance-method","html_id":"property_name(atom:Atom|X11::C::Atom)-instance-method","name":"property_name","doc":null,"summary":null,"abstract":false,"args":[{"name":"atom","doc":null,"default_value":"","external_name":"atom","restriction":"Atom | X11::C::Atom"}],"args_string":"(atom : Atom | X11::C::Atom)","args_html":"(atom : <a href=\"../X11/Atom.html\">Atom</a> | <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)","location":{"filename":"src/x11/font_struct.cr","line_number":45,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L45"},"def":{"name":"property_name","args":[{"name":"atom","doc":null,"default_value":"","external_name":"atom","restriction":"Atom | X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case prop = property(atom)\nwhen Atom, X11::C::Atom\n  @display.atom_name(prop)\nelse\n  \"<unknown>\"\nend"}},{"id":"text_extents(string:String):NamedTuple()-instance-method","html_id":"text_extents(string:String):NamedTuple()-instance-method","name":"text_extents","doc":"Performs the size computation locally.\n\n###Arguments\n- **string** Specifies the character string.\n\n###Returns\n- **direction** Returns the value of the direction hint\n(**FontLeftToRight** or **FontRightToLeft**).\n- **font_ascent** Returns the font ascent.\n- **font_descent** Returns the font descent.\n- **overall** Returns the overall size in the specified `CharStruct` structure.\n\n###Description\nThe `text_extents` function performs the size computation locally and,\nthereby, avoid the round-trip overhead of `query_text_extents` and\n`query_text_extents_16`. The function returns an `CharStruct` structure,\nwhose members are set to the values as follows.\n\nThe ascent member is set to the maximum of the ascent metrics of all\ncharacters in the string. The descent member is set to the maximum of the\ndescent metrics. The width member is set to the sum of the character-width\nmetrics of all characters in the string. For each character in the string,\nlet W be the sum of the character-width metrics of all characters preceding\nit in the string. Let L be the left-side-bearing metric of the character\nplus W. Let R be the right-side-bearing metric of the character plus W.\nThe lbearing member is set to the minimum L of all characters in the string.\nThe rbearing member is set to the maximum R.\n\nFor fonts defined with linear indexing rather than 2-byte matrix indexing,\neach `X11::C::X::Char2b` structure is interpreted as a 16-bit number with\nbyte1 as the most-significant byte. If the font has no defined default\ncharacter, undefined characters in the string are taken to have all zero metrics.\n\n###See also\n`Display::query_text_extents`, `Display::query_text_extents_16`, `text_extents_16`.","summary":"<p>Performs the size computation locally.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : NamedTuple()","args_html":"(string : String) : NamedTuple()","location":{"filename":"src/x11/font_struct.cr","line_number":88,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L88"},"def":{"name":"text_extents","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(direction: Int32, font_ascent: Int32, font_descent: Int32, overall: CharStruct, res: Int32)","visibility":"Public","body":"res = X.text_extents(@font_struct, string.to_unsafe, string.size, out direction_return, out font_ascent_return, out font_descent_return, out overall_return)\n{direction: direction_return, font_ascent: font_ascent_return, font_descent: font_descent_return, overall: CharStruct.new(overall_return), res: res}\n"}},{"id":"text_extents_16(string:Array(X11::C::X::Char2b)):NamedTuple()-instance-method","html_id":"text_extents_16(string:Array(X11::C::X::Char2b)):NamedTuple()-instance-method","name":"text_extents_16","doc":"Performs the size computation locally.\n\n###Arguments\n- **string** Specifies the character string.\n\n###Returns\n- **direction** Returns the value of the direction hint\n(**FontLeftToRight** or **FontRightToLeft**).\n- **font_ascent** Returns the font ascent.\n- **font_descent** Returns the font descent.\n- **overall** Returns the overall size in the specified `CharStruct` structure.\n\n###Description\nThe `text_extents_16` function performs the size computation locally and,\nthereby, avoid the round-trip overhead of `query_text_extents` and\n`query_text_extents_16`. The function returns an `CharStruct` structure,\nwhose members are set to the values as follows.\n\nThe ascent member is set to the maximum of the ascent metrics of all\ncharacters in the string. The descent member is set to the maximum of the\ndescent metrics. The width member is set to the sum of the character-width\nmetrics of all characters in the string. For each character in the string,\nlet W be the sum of the character-width metrics of all characters\npreceding it in the string. Let L be the left-side-bearing metric of the\ncharacter plus W. Let R be the right-side-bearing metric of the character\nplus W. The lbearing member is set to the minimum L of all characters in\nthe string. The rbearing member is set to the maximum R.\n\nFor fonts defined with linear indexing rather than 2-byte matrix indexing,\neach `X1::C::X::Char2b` structure is interpreted as a 16-bit number with\nbyte1 as the most-significant byte. If the font has no defined default\ncharacter, undefined characters in the string are taken to have all zero metrics.\n\n###See also\n`Display::query_text_extents`, `Display::query_text_extents_16`, `text_extents`.","summary":"<p>Performs the size computation locally.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"Array(X11::C::X::Char2b)"}],"args_string":"(string : Array(X11::C::X::Char2b)) : NamedTuple()","args_html":"(string : Array(X11::C::X::Char2b)) : NamedTuple()","location":{"filename":"src/x11/font_struct.cr","line_number":128,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L128"},"def":{"name":"text_extents_16","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"Array(X11::C::X::Char2b)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(direction: Int32, font_ascent: Int32, font_descent: Int32, overall: CharStruct, res: Int32)","visibility":"Public","body":"res = X.text_extents_16(@font_struct, string.to_unsafe, string.size, out direction_return, out font_ascent_return, out font_descent_return, out overall_return)\n{direction: direction_return, font_ascent: font_ascent_return, font_descent: font_descent_return, overall: CharStruct.new(overall_return), res: res}\n"}},{"id":"text_width(string:String):Int32-instance-method","html_id":"text_width(string:String):Int32-instance-method","name":"text_width","doc":"Determines the width of an 8-bit character string.\n\n###Arguments\n- **string** Specifies the character string.\n\n###See also\n`text_width_16`, `Display::load_font`, `text_extents`.","summary":"<p>Determines the width of an 8-bit character string.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : Int32","args_html":"(string : String) : Int32","location":{"filename":"src/x11/font_struct.cr","line_number":140,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L140"},"def":{"name":"text_width","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.text_width(@font_struct, string.to_unsafe, string.size)"}},{"id":"text_width_16(string:Array(X11::C::X::Char2b)):Int32-instance-method","html_id":"text_width_16(string:Array(X11::C::X::Char2b)):Int32-instance-method","name":"text_width_16","doc":"Determines the width of an 16-bit character string.\n\n###Arguments\n- **string** Specifies the character string.\n\n###See also\n`text_width`, `Display::load_font`, `text_extents`.","summary":"<p>Determines the width of an 16-bit character string.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"Array(X11::C::X::Char2b)"}],"args_string":"(string : Array(X11::C::X::Char2b)) : Int32","args_html":"(string : Array(X11::C::X::Char2b)) : Int32","location":{"filename":"src/x11/font_struct.cr","line_number":151,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L151"},"def":{"name":"text_width_16","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"Array(X11::C::X::Char2b)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.text_width_16(@font_struct, string.to_unsafe, string.size)"}},{"id":"to_unsafe:X11::C::X::PFontStruct-instance-method","html_id":"to_unsafe:X11::C::X::PFontStruct-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PFontStruct","args_html":" : X11::C::X::PFontStruct","location":{"filename":"src/x11/font_struct.cr","line_number":155,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L155"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PFontStruct","visibility":"Public","body":"@font_struct"}},{"id":"to_x:X11::C::X::FontStruct-instance-method","html_id":"to_x:X11::C::X::FontStruct-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::FontStruct","args_html":" : X11::C::X::FontStruct","location":{"filename":"src/x11/font_struct.cr","line_number":159,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/font_struct.cr#L159"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::FontStruct","visibility":"Public","body":"@font_struct.value"}}],"macros":[],"types":[]},{"html_id":"x11/X11/GCValues","path":"X11/GCValues.html","kind":"class","full_name":"X11::GCValues","name":"GCValues","abstract":false,"superclass":{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/gc_values.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gc_values.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(values:X11::C::X::PGCValues)-class-method","html_id":"new(values:X11::C::X::PGCValues)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"X11::C::X::PGCValues"}],"args_string":"(values : X11::C::X::PGCValues)","args_html":"(values : X11::C::X::PGCValues)","location":{"filename":"src/x11/gc_values.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gc_values.cr#L7"},"def":{"name":"new","args":[{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":"X11::C::X::PGCValues"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_unsafe:X11::C::X::PGCValues-instance-method","html_id":"to_unsafe:X11::C::X::PGCValues-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PGCValues","args_html":" : X11::C::X::PGCValues","location":{"filename":"src/x11/gc_values.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gc_values.cr#L11"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PGCValues","visibility":"Public","body":"@values"}},{"id":"values:X11::C::X::PGCValues-instance-method","html_id":"values:X11::C::X::PGCValues-instance-method","name":"values","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PGCValues","args_html":" : X11::C::X::PGCValues","location":{"filename":"src/x11/gc_values.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gc_values.cr#L5"},"def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PGCValues","visibility":"Public","body":"@values"}}],"macros":[],"types":[]},{"html_id":"x11/X11/GenericEvent","path":"X11/GenericEvent.html","kind":"class","full_name":"X11::GenericEvent","name":"GenericEvent","abstract":false,"superclass":{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},"ancestors":[{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/generic_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::GenericEvent` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/GenericEvent.html\">GenericEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PGenericEventCookie)-class-method","html_id":"new(event:X11::C::X::PGenericEventCookie)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PGenericEventCookie"}],"args_string":"(event : X11::C::X::PGenericEventCookie)","args_html":"(event : X11::C::X::PGenericEventCookie)","location":{"filename":"src/x11/generic_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PGenericEventCookie"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::GenericEventCookie)-class-method","html_id":"new(event:X11::C::X::GenericEventCookie)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::GenericEventCookie"}],"args_string":"(event : X11::C::X::GenericEventCookie)","args_html":"(event : X11::C::X::GenericEventCookie)","location":{"filename":"src/x11/generic_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::GenericEventCookie"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/generic_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"cookie:UInt32-instance-method","html_id":"cookie:UInt32-instance-method","name":"cookie","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/x11/generic_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L75"},"def":{"name":"cookie","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@event.cookie"}},{"id":"cookie=(cookie:UInt32)-instance-method","html_id":"cookie=(cookie:UInt32)-instance-method","name":"cookie=","doc":null,"summary":null,"abstract":false,"args":[{"name":"cookie","doc":null,"default_value":"","external_name":"cookie","restriction":"UInt32"}],"args_string":"(cookie : UInt32)","args_html":"(cookie : UInt32)","location":{"filename":"src/x11/generic_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L79"},"def":{"name":"cookie=","args":[{"name":"cookie","doc":null,"default_value":"","external_name":"cookie","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.cookie = cookie"}},{"id":"data:Pointer(Void)-instance-method","html_id":"data:Pointer(Void)-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Pointer(Void)","args_html":" : Pointer(Void)","location":{"filename":"src/x11/generic_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L83"},"def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(Void)","visibility":"Public","body":"@event.data"}},{"id":"data=(data:Pointer(Void))-instance-method","html_id":"data=(data:Pointer(Void))-instance-method","name":"data=","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"args_string":"(data : Pointer(Void))","args_html":"(data : Pointer(Void))","location":{"filename":"src/x11/generic_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L87"},"def":{"name":"data=","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"::Pointer(Void)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.data = data"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/generic_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/generic_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"ev_type:Int32-instance-method","html_id":"ev_type:Int32-instance-method","name":"ev_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/generic_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L67"},"def":{"name":"ev_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.ev_type"}},{"id":"ev_type=(ev_type:Int32)-instance-method","html_id":"ev_type=(ev_type:Int32)-instance-method","name":"ev_type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"ev_type","doc":null,"default_value":"","external_name":"ev_type","restriction":"Int32"}],"args_string":"(ev_type : Int32)","args_html":"(ev_type : Int32)","location":{"filename":"src/x11/generic_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L71"},"def":{"name":"ev_type=","args":[{"name":"ev_type","doc":null,"default_value":"","external_name":"ev_type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.ev_type = ev_type"}},{"id":"extension:Int32-instance-method","html_id":"extension:Int32-instance-method","name":"extension","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/generic_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L59"},"def":{"name":"extension","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.extension"}},{"id":"extension=(extension:Int32)-instance-method","html_id":"extension=(extension:Int32)-instance-method","name":"extension=","doc":null,"summary":null,"abstract":false,"args":[{"name":"extension","doc":null,"default_value":"","external_name":"extension","restriction":"Int32"}],"args_string":"(extension : Int32)","args_html":"(extension : Int32)","location":{"filename":"src/x11/generic_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L63"},"def":{"name":"extension=","args":[{"name":"extension","doc":null,"default_value":"","external_name":"extension","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.extension = extension"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/generic_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/generic_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/generic_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/generic_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PGenericEventCookie-instance-method","html_id":"to_unsafe:X11::C::X::PGenericEventCookie-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PGenericEventCookie","args_html":" : X11::C::X::PGenericEventCookie","location":{"filename":"src/x11/generic_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PGenericEventCookie","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::GenericEventCookie-instance-method","html_id":"to_x:X11::C::X::GenericEventCookie-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::GenericEventCookie","args_html":" : X11::C::X::GenericEventCookie","location":{"filename":"src/x11/generic_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::GenericEventCookie","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/generic_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/generic_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}}],"macros":[],"types":[]},{"html_id":"x11/X11/GenericEventCookie","path":"X11/GenericEventCookie.html","kind":"alias","full_name":"X11::GenericEventCookie","name":"GenericEventCookie","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/x11/generic_event.cr","line_number":92,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/generic_event.cr#L92"}],"repository_name":"x11","program":false,"enum":false,"alias":true,"aliased":"X11::GenericEvent","aliased_html":"<a href=\"../X11/GenericEvent.html\">X11::GenericEvent</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"x11/X11/GraphicsExposeEvent","path":"X11/GraphicsExposeEvent.html","kind":"class","full_name":"X11::GraphicsExposeEvent","name":"GraphicsExposeEvent","abstract":false,"superclass":{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},"ancestors":[{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/graphics_expose_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::GraphicsExposeEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/GraphicsExposeEvent.html\">GraphicsExposeEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PGraphicsExposeEvent)-class-method","html_id":"new(event:X11::C::X::PGraphicsExposeEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PGraphicsExposeEvent"}],"args_string":"(event : X11::C::X::PGraphicsExposeEvent)","args_html":"(event : X11::C::X::PGraphicsExposeEvent)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PGraphicsExposeEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::GraphicsExposeEvent)-class-method","html_id":"new(event:X11::C::X::GraphicsExposeEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::GraphicsExposeEvent"}],"args_string":"(event : X11::C::X::GraphicsExposeEvent)","args_html":"(event : X11::C::X::GraphicsExposeEvent)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::GraphicsExposeEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"count:Int32-instance-method","html_id":"count:Int32-instance-method","name":"count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":99,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L99"},"def":{"name":"count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.count"}},{"id":"count=(count:Int32)-instance-method","html_id":"count=(count:Int32)-instance-method","name":"count=","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"args_string":"(count : Int32)","args_html":"(count : Int32)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L103"},"def":{"name":"count=","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.count = count"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"drawable:X11::C::Drawable-instance-method","html_id":"drawable:X11::C::Drawable-instance-method","name":"drawable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Drawable","args_html":" : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L59"},"def":{"name":"drawable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Drawable","visibility":"Public","body":"@event.drawable"}},{"id":"drawable=(drawable:X11::C::Drawable)-instance-method","html_id":"drawable=(drawable:X11::C::Drawable)-instance-method","name":"drawable=","doc":null,"summary":null,"abstract":false,"args":[{"name":"drawable","doc":null,"default_value":"","external_name":"drawable","restriction":"X11::C::Drawable"}],"args_string":"(drawable : X11::C::Drawable)","args_html":"(drawable : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L63"},"def":{"name":"drawable=","args":[{"name":"drawable","doc":null,"default_value":"","external_name":"drawable","restriction":"X11::C::Drawable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.drawable = drawable"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":91,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L91"},"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.height"}},{"id":"height=(height:Int32)-instance-method","html_id":"height=(height:Int32)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(height : Int32)","args_html":"(height : Int32)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L95"},"def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.height = height"}},{"id":"major_code:Int32-instance-method","html_id":"major_code:Int32-instance-method","name":"major_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":107,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L107"},"def":{"name":"major_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.major_code"}},{"id":"major_code=(major_code:Int32)-instance-method","html_id":"major_code=(major_code:Int32)-instance-method","name":"major_code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"major_code","doc":null,"default_value":"","external_name":"major_code","restriction":"Int32"}],"args_string":"(major_code : Int32)","args_html":"(major_code : Int32)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":111,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L111"},"def":{"name":"major_code=","args":[{"name":"major_code","doc":null,"default_value":"","external_name":"major_code","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.major_code = major_code"}},{"id":"minor_code:Int32-instance-method","html_id":"minor_code:Int32-instance-method","name":"minor_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":115,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L115"},"def":{"name":"minor_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.minor_code"}},{"id":"minor_code=(minor_code:Int32)-instance-method","html_id":"minor_code=(minor_code:Int32)-instance-method","name":"minor_code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"minor_code","doc":null,"default_value":"","external_name":"minor_code","restriction":"Int32"}],"args_string":"(minor_code : Int32)","args_html":"(minor_code : Int32)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":119,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L119"},"def":{"name":"minor_code=","args":[{"name":"minor_code","doc":null,"default_value":"","external_name":"minor_code","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.minor_code = minor_code"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PGraphicsExposeEvent-instance-method","html_id":"to_unsafe:X11::C::X::PGraphicsExposeEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PGraphicsExposeEvent","args_html":" : X11::C::X::PGraphicsExposeEvent","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PGraphicsExposeEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::GraphicsExposeEvent-instance-method","html_id":"to_x:X11::C::X::GraphicsExposeEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::GraphicsExposeEvent","args_html":" : X11::C::X::GraphicsExposeEvent","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::GraphicsExposeEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L83"},"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.width"}},{"id":"width=(width:Int32)-instance-method","html_id":"width=(width:Int32)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"args_string":"(width : Int32)","args_html":"(width : Int32)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L87"},"def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.width = width"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L67"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","args_html":"(x : Int32)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L71"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x = x"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L75"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","args_html":"(y : Int32)","location":{"filename":"src/x11/graphics_expose_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/graphics_expose_event.cr#L79"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y = y"}}],"macros":[],"types":[]},{"html_id":"x11/X11/GravityEvent","path":"X11/GravityEvent.html","kind":"class","full_name":"X11::GravityEvent","name":"GravityEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/gravity_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::GravityEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/GravityEvent.html\">GravityEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PGravityEvent)-class-method","html_id":"new(event:X11::C::X::PGravityEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PGravityEvent"}],"args_string":"(event : X11::C::X::PGravityEvent)","args_html":"(event : X11::C::X::PGravityEvent)","location":{"filename":"src/x11/gravity_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PGravityEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::GravityEvent)-class-method","html_id":"new(event:X11::C::X::GravityEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::GravityEvent"}],"args_string":"(event : X11::C::X::GravityEvent)","args_html":"(event : X11::C::X::GravityEvent)","location":{"filename":"src/x11/gravity_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::GravityEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/gravity_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/gravity_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/gravity_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"event:X11::C::Window-instance-method","html_id":"event:X11::C::Window-instance-method","name":"event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/gravity_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L59"},"def":{"name":"event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.event"}},{"id":"event=(event:X11::C::Window)-instance-method","html_id":"event=(event:X11::C::Window)-instance-method","name":"event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"args_string":"(event : X11::C::Window)","args_html":"(event : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/gravity_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L63"},"def":{"name":"event=","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.event = event"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/gravity_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/gravity_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/gravity_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/gravity_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PGravityEvent-instance-method","html_id":"to_unsafe:X11::C::X::PGravityEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PGravityEvent","args_html":" : X11::C::X::PGravityEvent","location":{"filename":"src/x11/gravity_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PGravityEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::GravityEvent-instance-method","html_id":"to_x:X11::C::X::GravityEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::GravityEvent","args_html":" : X11::C::X::GravityEvent","location":{"filename":"src/x11/gravity_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::GravityEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/gravity_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/gravity_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/gravity_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/gravity_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/gravity_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L75"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","args_html":"(x : Int32)","location":{"filename":"src/x11/gravity_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L79"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x = x"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/gravity_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L83"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","args_html":"(y : Int32)","location":{"filename":"src/x11/gravity_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/gravity_event.cr#L87"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y = y"}}],"macros":[],"types":[]},{"html_id":"x11/X11/HostAddress","path":"X11/HostAddress.html","kind":"struct","full_name":"X11::HostAddress","name":"HostAddress","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/host_address.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L5"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::HostAddress` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/HostAddress.html\">HostAddress</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(family:Int32,data:Bytes)-class-method","html_id":"new(family:Int32,data:Bytes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"family","doc":null,"default_value":"","external_name":"family","restriction":"Int32"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"args_string":"(family : Int32, data : Bytes)","args_html":"(family : Int32, data : Bytes)","location":{"filename":"src/x11/host_address.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L6"},"def":{"name":"new","args":[{"name":"family","doc":null,"default_value":"","external_name":"family","restriction":"Int32"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(family, data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(host_address:X11::C::X::PHostAddress)-class-method","html_id":"new(host_address:X11::C::X::PHostAddress)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"host_address","doc":null,"default_value":"","external_name":"host_address","restriction":"X11::C::X::PHostAddress"}],"args_string":"(host_address : X11::C::X::PHostAddress)","args_html":"(host_address : X11::C::X::PHostAddress)","location":{"filename":"src/x11/host_address.cr","line_number":13,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L13"},"def":{"name":"new","args":[{"name":"host_address","doc":null,"default_value":"","external_name":"host_address","restriction":"X11::C::X::PHostAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(host_address)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(host_address:X11::C::X::HostAddress)-class-method","html_id":"new(host_address:X11::C::X::HostAddress)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"host_address","doc":null,"default_value":"","external_name":"host_address","restriction":"X11::C::X::HostAddress"}],"args_string":"(host_address : X11::C::X::HostAddress)","args_html":"(host_address : X11::C::X::HostAddress)","location":{"filename":"src/x11/host_address.cr","line_number":18,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L18"},"def":{"name":"new","args":[{"name":"host_address","doc":null,"default_value":"","external_name":"host_address","restriction":"X11::C::X::HostAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(host_address)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(host:ServerInterpretedAddress)-class-method","html_id":"new(host:ServerInterpretedAddress)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"ServerInterpretedAddress"}],"args_string":"(host : ServerInterpretedAddress)","args_html":"(host : <a href=\"../X11/ServerInterpretedAddress.html\">ServerInterpretedAddress</a>)","location":{"filename":"src/x11/host_address.cr","line_number":21,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L21"},"def":{"name":"new","args":[{"name":"host","doc":null,"default_value":"","external_name":"host","restriction":"ServerInterpretedAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(host)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"address:X11::C::PChar-instance-method","html_id":"address:X11::C::PChar-instance-method","name":"address","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::PChar","args_html":" : <a href=\"../X11/C/PChar.html\">X11::C::PChar</a>","location":{"filename":"src/x11/host_address.cr","line_number":44,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L44"},"def":{"name":"address","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::PChar","visibility":"Public","body":"@host_address.address"}},{"id":"bytes:Bytes-instance-method","html_id":"bytes:Bytes-instance-method","name":"bytes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bytes","args_html":" : Bytes","location":{"filename":"src/x11/host_address.cr","line_number":48,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L48"},"def":{"name":"bytes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"Bytes.new(@host_address.address, @host_address.length)"}},{"id":"chaos?:Bool-instance-method","html_id":"chaos?:Bool-instance-method","name":"chaos?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/host_address.cr","line_number":60,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L60"},"def":{"name":"chaos?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"family == X11::C::FamilyChaos"}},{"id":"dec_net?:Bool-instance-method","html_id":"dec_net?:Bool-instance-method","name":"dec_net?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/host_address.cr","line_number":56,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L56"},"def":{"name":"dec_net?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"family == X11::C::FamilyDECnet"}},{"id":"family:Int32-instance-method","html_id":"family:Int32-instance-method","name":"family","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/host_address.cr","line_number":36,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L36"},"def":{"name":"family","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@host_address.family"}},{"id":"internet6?:Bool-instance-method","html_id":"internet6?:Bool-instance-method","name":"internet6?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/host_address.cr","line_number":64,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L64"},"def":{"name":"internet6?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"family == X11::C::FamilyInternet6"}},{"id":"internet?:Bool-instance-method","html_id":"internet?:Bool-instance-method","name":"internet?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/host_address.cr","line_number":52,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L52"},"def":{"name":"internet?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"family == X11::C::FamilyInternet"}},{"id":"length:Int32-instance-method","html_id":"length:Int32-instance-method","name":"length","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/host_address.cr","line_number":40,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L40"},"def":{"name":"length","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@host_address.length"}},{"id":"server_interpreted?-instance-method","html_id":"server_interpreted?-instance-method","name":"server_interpreted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/host_address.cr","line_number":68,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L68"},"def":{"name":"server_interpreted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"family == X11::C::FamilyServerInterpreted"}},{"id":"server_interpreted_address:ServerInterpretedAddress?-instance-method","html_id":"server_interpreted_address:ServerInterpretedAddress?-instance-method","name":"server_interpreted_address","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : ServerInterpretedAddress?","args_html":" : <a href=\"../X11/ServerInterpretedAddress.html\">ServerInterpretedAddress</a>?","location":{"filename":"src/x11/host_address.cr","line_number":72,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L72"},"def":{"name":"server_interpreted_address","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ServerInterpretedAddress | ::Nil","visibility":"Public","body":"if family == X11::C::FamilyServerInterpreted\n  ServerInterpretedAddress.new(@host_address.address.as(X11::C::X::PServerInterpretedAddress))\nelse\n  nil\nend"}},{"id":"to_unsafe:X11::C::X::PHostAddress-instance-method","html_id":"to_unsafe:X11::C::X::PHostAddress-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PHostAddress","args_html":" : X11::C::X::PHostAddress","location":{"filename":"src/x11/host_address.cr","line_number":28,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L28"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PHostAddress","visibility":"Public","body":"pointerof(@host_address)"}},{"id":"to_x:X11::C::X::HostAddress-instance-method","html_id":"to_x:X11::C::X::HostAddress-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::HostAddress","args_html":" : X11::C::X::HostAddress","location":{"filename":"src/x11/host_address.cr","line_number":32,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/host_address.cr#L32"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::HostAddress","visibility":"Public","body":"@host_address"}}],"macros":[],"types":[]},{"html_id":"x11/X11/Image","path":"X11/Image.html","kind":"class","full_name":"X11::Image","name":"Image","abstract":false,"superclass":{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/image.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/image.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(image:X11::C::X::PImage)-class-method","html_id":"new(image:X11::C::X::PImage)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"X11::C::X::PImage"}],"args_string":"(image : X11::C::X::PImage)","args_html":"(image : X11::C::X::PImage)","location":{"filename":"src/x11/image.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/image.cr#L7"},"def":{"name":"new","args":[{"name":"image","doc":null,"default_value":"","external_name":"image","restriction":"X11::C::X::PImage"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(image)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/image.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/image.cr#L35"},"def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.destroy_image(@image)"}},{"id":"image:X11::C::X::PImage-instance-method","html_id":"image:X11::C::X::PImage-instance-method","name":"image","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PImage","args_html":" : X11::C::X::PImage","location":{"filename":"src/x11/image.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/image.cr#L5"},"def":{"name":"image","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PImage","visibility":"Public","body":"@image"}},{"id":"init:Int32-instance-method","html_id":"init:Int32-instance-method","name":"init","doc":"Initializes the internal image manipulation routines of the underlieing image structure.,\nbased on the values of the various structure members.\n\nAll fields other than the manipulation routines must already be initialized.\nIf the `bytes_per_line` member is zero,\n`init` will assume the image data is contiguous in memory and set the `bytes_per_line` member\nto an appropriate value based on the other members; otherwise,\nthe value of `bytes_per_line` is not changed.\nAll of the manipulation routines are initialized to functions that other Xlib image manipulation functions\nneed to operate on the the type of image specified by the rest of the structure.\n\nThis function must be called for any image constructed by the client before passing it to any other function.\nImage structures created or returned by Xlib do not need to be initialized in this fashion.\n\nThis function returns a nonzero status if initialization of the structure is successful.\nIt returns zero if it detected some error or inconsistency in the structure, in which case the image is not changed.\n\n###See also\n`add_pixel`, `Display::create_image`, `finalize`, `pixel`, `Display::put_image`,\n`put_pixel`, `Display::sub_image`.","summary":"<p>Initializes the internal image manipulation routines of the underlieing image structure., based on the values of the various structure members.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/image.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/image.cr#L31"},"def":{"name":"init","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.init_image(@image)"}}],"macros":[],"types":[]},{"html_id":"x11/X11/KeyboardControl","path":"X11/KeyboardControl.html","kind":"class","full_name":"X11::KeyboardControl","name":"KeyboardControl","abstract":false,"superclass":{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/keyboard_control.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wraper for `X11::C::X::KeyboardControl` structure.","summary":"<p>Wraper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/KeyboardControl.html\">KeyboardControl</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(keyboard_control:X11::C::X::PKeyboardControl)-class-method","html_id":"new(keyboard_control:X11::C::X::PKeyboardControl)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"keyboard_control","doc":null,"default_value":"","external_name":"keyboard_control","restriction":"X11::C::X::PKeyboardControl"}],"args_string":"(keyboard_control : X11::C::X::PKeyboardControl)","args_html":"(keyboard_control : X11::C::X::PKeyboardControl)","location":{"filename":"src/x11/keyboard_control.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L7"},"def":{"name":"new","args":[{"name":"keyboard_control","doc":null,"default_value":"","external_name":"keyboard_control","restriction":"X11::C::X::PKeyboardControl"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(keyboard_control)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(keyboard_control:X11::C::X::KeyboardControl)-class-method","html_id":"new(keyboard_control:X11::C::X::KeyboardControl)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"keyboard_control","doc":null,"default_value":"","external_name":"keyboard_control","restriction":"X11::C::X::KeyboardControl"}],"args_string":"(keyboard_control : X11::C::X::KeyboardControl)","args_html":"(keyboard_control : X11::C::X::KeyboardControl)","location":{"filename":"src/x11/keyboard_control.cr","line_number":12,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L12"},"def":{"name":"new","args":[{"name":"keyboard_control","doc":null,"default_value":"","external_name":"keyboard_control","restriction":"X11::C::X::KeyboardControl"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(keyboard_control)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/keyboard_control.cr","line_number":15,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L15"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"auto_repeat_mode:Int32-instance-method","html_id":"auto_repeat_mode:Int32-instance-method","name":"auto_repeat_mode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/keyboard_control.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L83"},"def":{"name":"auto_repeat_mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@keyboard_control.auto_repeat_mode"}},{"id":"auto_repeat_mode=(auto_repeat_mode:Int32)-instance-method","html_id":"auto_repeat_mode=(auto_repeat_mode:Int32)-instance-method","name":"auto_repeat_mode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"auto_repeat_mode","doc":null,"default_value":"","external_name":"auto_repeat_mode","restriction":"Int32"}],"args_string":"(auto_repeat_mode : Int32)","args_html":"(auto_repeat_mode : Int32)","location":{"filename":"src/x11/keyboard_control.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L87"},"def":{"name":"auto_repeat_mode=","args":[{"name":"auto_repeat_mode","doc":null,"default_value":"","external_name":"auto_repeat_mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_control.auto_repeat_mode = auto_repeat_mode"}},{"id":"bell_duration:Int32-instance-method","html_id":"bell_duration:Int32-instance-method","name":"bell_duration","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/keyboard_control.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L51"},"def":{"name":"bell_duration","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@keyboard_control.bell_duration"}},{"id":"bell_duration=(bell_duration:Int32)-instance-method","html_id":"bell_duration=(bell_duration:Int32)-instance-method","name":"bell_duration=","doc":null,"summary":null,"abstract":false,"args":[{"name":"bell_duration","doc":null,"default_value":"","external_name":"bell_duration","restriction":"Int32"}],"args_string":"(bell_duration : Int32)","args_html":"(bell_duration : Int32)","location":{"filename":"src/x11/keyboard_control.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L55"},"def":{"name":"bell_duration=","args":[{"name":"bell_duration","doc":null,"default_value":"","external_name":"bell_duration","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_control.bell_duration = bell_duration"}},{"id":"bell_percent:Int32-instance-method","html_id":"bell_percent:Int32-instance-method","name":"bell_percent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/keyboard_control.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L35"},"def":{"name":"bell_percent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@keyboard_control.bell_percent"}},{"id":"bell_percent=(bell_percent:Int32)-instance-method","html_id":"bell_percent=(bell_percent:Int32)-instance-method","name":"bell_percent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"bell_percent","doc":null,"default_value":"","external_name":"bell_percent","restriction":"Int32"}],"args_string":"(bell_percent : Int32)","args_html":"(bell_percent : Int32)","location":{"filename":"src/x11/keyboard_control.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L39"},"def":{"name":"bell_percent=","args":[{"name":"bell_percent","doc":null,"default_value":"","external_name":"bell_percent","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_control.bell_percent = bell_percent"}},{"id":"bell_pitch:Int32-instance-method","html_id":"bell_pitch:Int32-instance-method","name":"bell_pitch","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/keyboard_control.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L43"},"def":{"name":"bell_pitch","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@keyboard_control.bell_pitch"}},{"id":"bell_pitch=(bell_pitch:Int32)-instance-method","html_id":"bell_pitch=(bell_pitch:Int32)-instance-method","name":"bell_pitch=","doc":null,"summary":null,"abstract":false,"args":[{"name":"bell_pitch","doc":null,"default_value":"","external_name":"bell_pitch","restriction":"Int32"}],"args_string":"(bell_pitch : Int32)","args_html":"(bell_pitch : Int32)","location":{"filename":"src/x11/keyboard_control.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L47"},"def":{"name":"bell_pitch=","args":[{"name":"bell_pitch","doc":null,"default_value":"","external_name":"bell_pitch","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_control.bell_pitch = bell_pitch"}},{"id":"key:Int32-instance-method","html_id":"key:Int32-instance-method","name":"key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/keyboard_control.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L75"},"def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@keyboard_control.key"}},{"id":"key=(key:Int32)-instance-method","html_id":"key=(key:Int32)-instance-method","name":"key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int32"}],"args_string":"(key : Int32)","args_html":"(key : Int32)","location":{"filename":"src/x11/keyboard_control.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L79"},"def":{"name":"key=","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_control.key = key"}},{"id":"key_click_percent:Int32-instance-method","html_id":"key_click_percent:Int32-instance-method","name":"key_click_percent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/keyboard_control.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L27"},"def":{"name":"key_click_percent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@keyboard_control.key_click_percent"}},{"id":"key_click_percent=(key_click_percent:Int32)-instance-method","html_id":"key_click_percent=(key_click_percent:Int32)-instance-method","name":"key_click_percent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key_click_percent","doc":null,"default_value":"","external_name":"key_click_percent","restriction":"Int32"}],"args_string":"(key_click_percent : Int32)","args_html":"(key_click_percent : Int32)","location":{"filename":"src/x11/keyboard_control.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L31"},"def":{"name":"key_click_percent=","args":[{"name":"key_click_percent","doc":null,"default_value":"","external_name":"key_click_percent","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_control.key_click_percent = key_click_percent"}},{"id":"led:Int32-instance-method","html_id":"led:Int32-instance-method","name":"led","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/keyboard_control.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L59"},"def":{"name":"led","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@keyboard_control.led"}},{"id":"led=(led:Int32)-instance-method","html_id":"led=(led:Int32)-instance-method","name":"led=","doc":null,"summary":null,"abstract":false,"args":[{"name":"led","doc":null,"default_value":"","external_name":"led","restriction":"Int32"}],"args_string":"(led : Int32)","args_html":"(led : Int32)","location":{"filename":"src/x11/keyboard_control.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L63"},"def":{"name":"led=","args":[{"name":"led","doc":null,"default_value":"","external_name":"led","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_control.led = led"}},{"id":"led_mode:Int32-instance-method","html_id":"led_mode:Int32-instance-method","name":"led_mode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/keyboard_control.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L67"},"def":{"name":"led_mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@keyboard_control.led_mode"}},{"id":"led_mode=(led_mode:Int32)-instance-method","html_id":"led_mode=(led_mode:Int32)-instance-method","name":"led_mode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"led_mode","doc":null,"default_value":"","external_name":"led_mode","restriction":"Int32"}],"args_string":"(led_mode : Int32)","args_html":"(led_mode : Int32)","location":{"filename":"src/x11/keyboard_control.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L71"},"def":{"name":"led_mode=","args":[{"name":"led_mode","doc":null,"default_value":"","external_name":"led_mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_control.led_mode = led_mode"}},{"id":"to_unsafe:X11::C::X::PKeyboardControl-instance-method","html_id":"to_unsafe:X11::C::X::PKeyboardControl-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PKeyboardControl","args_html":" : X11::C::X::PKeyboardControl","location":{"filename":"src/x11/keyboard_control.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L23"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PKeyboardControl","visibility":"Public","body":"pointerof(@keyboard_control)"}},{"id":"to_x:X11::C::X::KeyboardControl-instance-method","html_id":"to_x:X11::C::X::KeyboardControl-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::KeyboardControl","args_html":" : X11::C::X::KeyboardControl","location":{"filename":"src/x11/keyboard_control.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_control.cr#L19"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::KeyboardControl","visibility":"Public","body":"@keyboard_control"}}],"macros":[],"types":[]},{"html_id":"x11/X11/KeyboardState","path":"X11/KeyboardState.html","kind":"struct","full_name":"X11::KeyboardState","name":"KeyboardState","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/keyboard_state.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(keyboard_state:X11::C::X::PKeyboardState)-class-method","html_id":"new(keyboard_state:X11::C::X::PKeyboardState)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"keyboard_state","doc":null,"default_value":"","external_name":"keyboard_state","restriction":"X11::C::X::PKeyboardState"}],"args_string":"(keyboard_state : X11::C::X::PKeyboardState)","args_html":"(keyboard_state : X11::C::X::PKeyboardState)","location":{"filename":"src/x11/keyboard_state.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L9"},"def":{"name":"new","args":[{"name":"keyboard_state","doc":null,"default_value":"","external_name":"keyboard_state","restriction":"X11::C::X::PKeyboardState"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(keyboard_state)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(keyboard_state:X11::C::X::KeyboardState)-class-method","html_id":"new(keyboard_state:X11::C::X::KeyboardState)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"keyboard_state","doc":null,"default_value":"","external_name":"keyboard_state","restriction":"X11::C::X::KeyboardState"}],"args_string":"(keyboard_state : X11::C::X::KeyboardState)","args_html":"(keyboard_state : X11::C::X::KeyboardState)","location":{"filename":"src/x11/keyboard_state.cr","line_number":14,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L14"},"def":{"name":"new","args":[{"name":"keyboard_state","doc":null,"default_value":"","external_name":"keyboard_state","restriction":"X11::C::X::KeyboardState"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(keyboard_state)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/keyboard_state.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L5"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"auto_repeats:StaticArray(UInt8,32)-instance-method","html_id":"auto_repeats:StaticArray(UInt8,32)-instance-method","name":"auto_repeats","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : StaticArray(UInt8, <span class=\"n\">32</span>)","args_html":" : StaticArray(UInt8, <span class=\"n\">32</span>)","location":{"filename":"src/x11/keyboard_state.cr","line_number":73,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L73"},"def":{"name":"auto_repeats","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"StaticArray(UInt8, 32)","visibility":"Public","body":"@keyboard_state.auto_repeats"}},{"id":"auto_repeats=(auto_repeats:StaticArray(UInt8,32))-instance-method","html_id":"auto_repeats=(auto_repeats:StaticArray(UInt8,32))-instance-method","name":"auto_repeats=","doc":null,"summary":null,"abstract":false,"args":[{"name":"auto_repeats","doc":null,"default_value":"","external_name":"auto_repeats","restriction":"StaticArray(UInt8, 32)"}],"args_string":"(auto_repeats : StaticArray(UInt8, <span class=\"n\">32</span>))","args_html":"(auto_repeats : StaticArray(UInt8, <span class=\"n\">32</span>))","location":{"filename":"src/x11/keyboard_state.cr","line_number":77,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L77"},"def":{"name":"auto_repeats=","args":[{"name":"auto_repeats","doc":null,"default_value":"","external_name":"auto_repeats","restriction":"StaticArray(UInt8, 32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_state.auto_repeats = auto_repeats"}},{"id":"bell_duration:UInt32-instance-method","html_id":"bell_duration:UInt32-instance-method","name":"bell_duration","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/x11/keyboard_state.cr","line_number":49,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L49"},"def":{"name":"bell_duration","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@keyboard_state.bell_duration"}},{"id":"bell_duration=(bell_duration:UInt32)-instance-method","html_id":"bell_duration=(bell_duration:UInt32)-instance-method","name":"bell_duration=","doc":null,"summary":null,"abstract":false,"args":[{"name":"bell_duration","doc":null,"default_value":"","external_name":"bell_duration","restriction":"UInt32"}],"args_string":"(bell_duration : UInt32)","args_html":"(bell_duration : UInt32)","location":{"filename":"src/x11/keyboard_state.cr","line_number":53,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L53"},"def":{"name":"bell_duration=","args":[{"name":"bell_duration","doc":null,"default_value":"","external_name":"bell_duration","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_state.bell_duration = bell_duration"}},{"id":"bell_percent:Int32-instance-method","html_id":"bell_percent:Int32-instance-method","name":"bell_percent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/keyboard_state.cr","line_number":33,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L33"},"def":{"name":"bell_percent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@keyboard_state.bell_percent"}},{"id":"bell_percent=(bell_percent:Int32)-instance-method","html_id":"bell_percent=(bell_percent:Int32)-instance-method","name":"bell_percent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"bell_percent","doc":null,"default_value":"","external_name":"bell_percent","restriction":"Int32"}],"args_string":"(bell_percent : Int32)","args_html":"(bell_percent : Int32)","location":{"filename":"src/x11/keyboard_state.cr","line_number":37,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L37"},"def":{"name":"bell_percent=","args":[{"name":"bell_percent","doc":null,"default_value":"","external_name":"bell_percent","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_state.bell_percent = bell_percent"}},{"id":"bell_pitch:UInt32-instance-method","html_id":"bell_pitch:UInt32-instance-method","name":"bell_pitch","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/x11/keyboard_state.cr","line_number":41,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L41"},"def":{"name":"bell_pitch","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@keyboard_state.bell_pitch"}},{"id":"bell_pitch=(bell_pitch:UInt32)-instance-method","html_id":"bell_pitch=(bell_pitch:UInt32)-instance-method","name":"bell_pitch=","doc":null,"summary":null,"abstract":false,"args":[{"name":"bell_pitch","doc":null,"default_value":"","external_name":"bell_pitch","restriction":"UInt32"}],"args_string":"(bell_pitch : UInt32)","args_html":"(bell_pitch : UInt32)","location":{"filename":"src/x11/keyboard_state.cr","line_number":45,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L45"},"def":{"name":"bell_pitch=","args":[{"name":"bell_pitch","doc":null,"default_value":"","external_name":"bell_pitch","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_state.bell_pitch = bell_pitch"}},{"id":"global_auto_repeat:Int32-instance-method","html_id":"global_auto_repeat:Int32-instance-method","name":"global_auto_repeat","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/keyboard_state.cr","line_number":65,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L65"},"def":{"name":"global_auto_repeat","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@keyboard_state.global_auto_repeat"}},{"id":"global_auto_repeat=(global_auto_repeat:Int32)-instance-method","html_id":"global_auto_repeat=(global_auto_repeat:Int32)-instance-method","name":"global_auto_repeat=","doc":null,"summary":null,"abstract":false,"args":[{"name":"global_auto_repeat","doc":null,"default_value":"","external_name":"global_auto_repeat","restriction":"Int32"}],"args_string":"(global_auto_repeat : Int32)","args_html":"(global_auto_repeat : Int32)","location":{"filename":"src/x11/keyboard_state.cr","line_number":69,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L69"},"def":{"name":"global_auto_repeat=","args":[{"name":"global_auto_repeat","doc":null,"default_value":"","external_name":"global_auto_repeat","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_state.global_auto_repeat = global_auto_repeat"}},{"id":"key_click_percent:Int32-instance-method","html_id":"key_click_percent:Int32-instance-method","name":"key_click_percent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/keyboard_state.cr","line_number":25,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L25"},"def":{"name":"key_click_percent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@keyboard_state.key_click_percent"}},{"id":"key_click_percent=(key_click_percent:Int32)-instance-method","html_id":"key_click_percent=(key_click_percent:Int32)-instance-method","name":"key_click_percent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key_click_percent","doc":null,"default_value":"","external_name":"key_click_percent","restriction":"Int32"}],"args_string":"(key_click_percent : Int32)","args_html":"(key_click_percent : Int32)","location":{"filename":"src/x11/keyboard_state.cr","line_number":29,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L29"},"def":{"name":"key_click_percent=","args":[{"name":"key_click_percent","doc":null,"default_value":"","external_name":"key_click_percent","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_state.key_click_percent = key_click_percent"}},{"id":"led_mask:UInt64-instance-method","html_id":"led_mask:UInt64-instance-method","name":"led_mask","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/keyboard_state.cr","line_number":57,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L57"},"def":{"name":"led_mask","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@keyboard_state.led_mask"}},{"id":"led_mask=(led_mask:UInt64)-instance-method","html_id":"led_mask=(led_mask:UInt64)-instance-method","name":"led_mask=","doc":null,"summary":null,"abstract":false,"args":[{"name":"led_mask","doc":null,"default_value":"","external_name":"led_mask","restriction":"UInt64"}],"args_string":"(led_mask : UInt64)","args_html":"(led_mask : UInt64)","location":{"filename":"src/x11/keyboard_state.cr","line_number":61,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L61"},"def":{"name":"led_mask=","args":[{"name":"led_mask","doc":null,"default_value":"","external_name":"led_mask","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@keyboard_state.led_mask = led_mask"}},{"id":"to_unsafe:X11::C::X::PKeyboardState-instance-method","html_id":"to_unsafe:X11::C::X::PKeyboardState-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PKeyboardState","args_html":" : X11::C::X::PKeyboardState","location":{"filename":"src/x11/keyboard_state.cr","line_number":17,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L17"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PKeyboardState","visibility":"Public","body":"pointerof(@keyboard_state)"}},{"id":"to_x:X11::C::X::KeyboardState-instance-method","html_id":"to_x:X11::C::X::KeyboardState-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::KeyboardState","args_html":" : X11::C::X::KeyboardState","location":{"filename":"src/x11/keyboard_state.cr","line_number":21,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keyboard_state.cr#L21"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::KeyboardState","visibility":"Public","body":"@keyboard_state"}}],"macros":[],"types":[]},{"html_id":"x11/X11/KeyEvent","path":"X11/KeyEvent.html","kind":"class","full_name":"X11::KeyEvent","name":"KeyEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/key_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::KeyEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/KeyEvent.html\">KeyEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(key_event:X11::C::X::PKeyEvent)-class-method","html_id":"new(key_event:X11::C::X::PKeyEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"key_event","doc":null,"default_value":"","external_name":"key_event","restriction":"X11::C::X::PKeyEvent"}],"args_string":"(key_event : X11::C::X::PKeyEvent)","args_html":"(key_event : X11::C::X::PKeyEvent)","location":{"filename":"src/x11/key_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L11"},"def":{"name":"new","args":[{"name":"key_event","doc":null,"default_value":"","external_name":"key_event","restriction":"X11::C::X::PKeyEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(key_event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::KeyEvent)-class-method","html_id":"new(event:X11::C::X::KeyEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::KeyEvent"}],"args_string":"(event : X11::C::X::KeyEvent)","args_html":"(event : X11::C::X::KeyEvent)","location":{"filename":"src/x11/key_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::KeyEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/key_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/key_event.cr","line_number":84,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L84"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/key_event.cr","line_number":88,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L88"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"keycode:UInt32-instance-method","html_id":"keycode:UInt32-instance-method","name":"keycode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/x11/key_event.cr","line_number":164,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L164"},"def":{"name":"keycode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@event.keycode"}},{"id":"keycode=(keycode:UInt32)-instance-method","html_id":"keycode=(keycode:UInt32)-instance-method","name":"keycode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"keycode","doc":null,"default_value":"","external_name":"keycode","restriction":"UInt32"}],"args_string":"(keycode : UInt32)","args_html":"(keycode : UInt32)","location":{"filename":"src/x11/key_event.cr","line_number":168,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L168"},"def":{"name":"keycode=","args":[{"name":"keycode","doc":null,"default_value":"","external_name":"keycode","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.keycode = keycode"}},{"id":"lookup_keysym(index:Int32):X11::C::KeySym-instance-method","html_id":"lookup_keysym(index:Int32):X11::C::KeySym-instance-method","name":"lookup_keysym","doc":"Returns the KeySym from the list that corresponds to the `keycode` member\n\n###Arguments\n- **index** Specifies the index into the KeySyms list for the event's KeyCode.\n\n###Description\nThe `lookup_keysym` function uses a given keyboard event and the index you\nspecified to return the KeySym from the list that corresponds to the KeyCode\nmember in the `KeyPressedEvent` or `KeyReleasedEvent` structure.\nIf no KeySym is defined for the KeyCode of the event, `lookup_leysym` returns `NoSymbol`.\n\n###See also\n`lookup_string`, `Display::rebind_keysym`, `MappingEvent::refresh_keyboard_mapping`,\n`ButtonEvent`, `MapEvent`.","summary":"<p>Returns the KeySym from the list that corresponds to the <code><a href=\"../X11/KeyEvent.html#keycode:UInt32-instance-method\">#keycode</a></code> member</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"args_string":"(index : Int32) : X11::C::KeySym","args_html":"(index : Int32) : <a href=\"../X11/C/KeySym.html\">X11::C::KeySym</a>","location":{"filename":"src/x11/key_event.cr","line_number":33,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L33"},"def":{"name":"lookup_keysym","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::KeySym","visibility":"Public","body":"X.lookup_keysym(to_unsafe, index)"}},{"id":"lookup_string:NamedTuple()-instance-method","html_id":"lookup_string:NamedTuple()-instance-method","name":"lookup_string","doc":"Translates key event to a string and a keysym.","summary":"<p>Translates key event to a string and a keysym.</p>","abstract":false,"args":[],"args_string":" : NamedTuple()","args_html":" : NamedTuple()","location":{"filename":"src/x11/key_event.cr","line_number":38,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L38"},"def":{"name":"lookup_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NamedTuple(string: String, keysym: KeySym)","visibility":"Public","body":"buffer = StaticArray(UInt8, 10).new(0)\nlen = X.lookup_string(to_unsafe, buffer.to_unsafe, 10, out keysym, nil)\n{string: String.new(buffer.to_unsafe), keysym: keysym}\n"}},{"id":"press?:Bool-instance-method","html_id":"press?:Bool-instance-method","name":"press?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/key_event.cr","line_number":52,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L52"},"def":{"name":"press?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.type == KeyPress"}},{"id":"release?:Bool-instance-method","html_id":"release?:Bool-instance-method","name":"release?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/key_event.cr","line_number":56,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L56"},"def":{"name":"release?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.type == KeyRelease"}},{"id":"root:X11::C::Window-instance-method","html_id":"root:X11::C::Window-instance-method","name":"root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/key_event.cr","line_number":100,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L100"},"def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.root"}},{"id":"root=(root:X11::C::Window)-instance-method","html_id":"root=(root:X11::C::Window)-instance-method","name":"root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"X11::C::Window"}],"args_string":"(root : X11::C::Window)","args_html":"(root : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/key_event.cr","line_number":104,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L104"},"def":{"name":"root=","args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.root = root"}},{"id":"same_screen:Bool-instance-method","html_id":"same_screen:Bool-instance-method","name":"same_screen","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/key_event.cr","line_number":172,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L172"},"def":{"name":"same_screen","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.same_screen ? true : false"}},{"id":"same_screen=(same_screen:Bool)-instance-method","html_id":"same_screen=(same_screen:Bool)-instance-method","name":"same_screen=","doc":null,"summary":null,"abstract":false,"args":[{"name":"same_screen","doc":null,"default_value":"","external_name":"same_screen","restriction":"Bool"}],"args_string":"(same_screen : Bool)","args_html":"(same_screen : Bool)","location":{"filename":"src/x11/key_event.cr","line_number":176,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L176"},"def":{"name":"same_screen=","args":[{"name":"same_screen","doc":null,"default_value":"","external_name":"same_screen","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.same_screen = same_screen ? 1 : 0"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/key_event.cr","line_number":76,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L76"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/key_event.cr","line_number":80,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L80"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/key_event.cr","line_number":68,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L68"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/key_event.cr","line_number":72,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L72"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"state:UInt32-instance-method","html_id":"state:UInt32-instance-method","name":"state","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/x11/key_event.cr","line_number":156,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L156"},"def":{"name":"state","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@event.state"}},{"id":"state=(state:UInt32)-instance-method","html_id":"state=(state:UInt32)-instance-method","name":"state=","doc":null,"summary":null,"abstract":false,"args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"UInt32"}],"args_string":"(state : UInt32)","args_html":"(state : UInt32)","location":{"filename":"src/x11/key_event.cr","line_number":160,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L160"},"def":{"name":"state=","args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.state = state"}},{"id":"sub_window:X11::C::Window-instance-method","html_id":"sub_window:X11::C::Window-instance-method","name":"sub_window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/key_event.cr","line_number":108,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L108"},"def":{"name":"sub_window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.subwindow"}},{"id":"sub_window=(sub_window:X11::C::Window)-instance-method","html_id":"sub_window=(sub_window:X11::C::Window)-instance-method","name":"sub_window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"sub_window","doc":null,"default_value":"","external_name":"sub_window","restriction":"X11::C::Window"}],"args_string":"(sub_window : X11::C::Window)","args_html":"(sub_window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/key_event.cr","line_number":112,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L112"},"def":{"name":"sub_window=","args":[{"name":"sub_window","doc":null,"default_value":"","external_name":"sub_window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.subwindow = sub_window"}},{"id":"time:X11::C::Time-instance-method","html_id":"time:X11::C::Time-instance-method","name":"time","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Time","args_html":" : <a href=\"../X11/C/Time.html\">X11::C::Time</a>","location":{"filename":"src/x11/key_event.cr","line_number":116,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L116"},"def":{"name":"time","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Time","visibility":"Public","body":"@event.time"}},{"id":"time=(time:X11::C::Time)-instance-method","html_id":"time=(time:X11::C::Time)-instance-method","name":"time=","doc":null,"summary":null,"abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(time : X11::C::Time)","args_html":"(time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>)","location":{"filename":"src/x11/key_event.cr","line_number":120,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L120"},"def":{"name":"time=","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.time = time"}},{"id":"to_unsafe:X11::C::X::PKeyEvent-instance-method","html_id":"to_unsafe:X11::C::X::PKeyEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PKeyEvent","args_html":" : X11::C::X::PKeyEvent","location":{"filename":"src/x11/key_event.cr","line_number":44,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L44"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PKeyEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::KeyEvent-instance-method","html_id":"to_x:X11::C::X::KeyEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::KeyEvent","args_html":" : X11::C::X::KeyEvent","location":{"filename":"src/x11/key_event.cr","line_number":48,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L48"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::KeyEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/key_event.cr","line_number":60,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L60"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/key_event.cr","line_number":64,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L64"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/key_event.cr","line_number":92,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L92"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/key_event.cr","line_number":96,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L96"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/key_event.cr","line_number":124,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L124"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","args_html":"(x : Int32)","location":{"filename":"src/x11/key_event.cr","line_number":128,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L128"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x = x"}},{"id":"x_root:Int32-instance-method","html_id":"x_root:Int32-instance-method","name":"x_root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/key_event.cr","line_number":140,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L140"},"def":{"name":"x_root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x_root"}},{"id":"x_root=(x_root:Int32)-instance-method","html_id":"x_root=(x_root:Int32)-instance-method","name":"x_root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x_root","doc":null,"default_value":"","external_name":"x_root","restriction":"Int32"}],"args_string":"(x_root : Int32)","args_html":"(x_root : Int32)","location":{"filename":"src/x11/key_event.cr","line_number":144,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L144"},"def":{"name":"x_root=","args":[{"name":"x_root","doc":null,"default_value":"","external_name":"x_root","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x_root = x_root"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/key_event.cr","line_number":132,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L132"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","args_html":"(y : Int32)","location":{"filename":"src/x11/key_event.cr","line_number":136,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L136"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y = y"}},{"id":"y_root:Int32-instance-method","html_id":"y_root:Int32-instance-method","name":"y_root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/key_event.cr","line_number":148,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L148"},"def":{"name":"y_root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y_root"}},{"id":"y_root=(y_root:Int32)-instance-method","html_id":"y_root=(y_root:Int32)-instance-method","name":"y_root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y_root","doc":null,"default_value":"","external_name":"y_root","restriction":"Int32"}],"args_string":"(y_root : Int32)","args_html":"(y_root : Int32)","location":{"filename":"src/x11/key_event.cr","line_number":152,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/key_event.cr#L152"},"def":{"name":"y_root=","args":[{"name":"y_root","doc":null,"default_value":"","external_name":"y_root","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y_root = y_root"}}],"macros":[],"types":[]},{"html_id":"x11/X11/KeymapEvent","path":"X11/KeymapEvent.html","kind":"class","full_name":"X11::KeymapEvent","name":"KeymapEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/keymap_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::KeymapEvent` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/KeymapEvent.html\">KeymapEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PKeymapEvent)-class-method","html_id":"new(event:X11::C::X::PKeymapEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PKeymapEvent"}],"args_string":"(event : X11::C::X::PKeymapEvent)","args_html":"(event : X11::C::X::PKeymapEvent)","location":{"filename":"src/x11/keymap_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PKeymapEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::KeymapEvent)-class-method","html_id":"new(event:X11::C::X::KeymapEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::KeymapEvent"}],"args_string":"(event : X11::C::X::KeymapEvent)","args_html":"(event : X11::C::X::KeymapEvent)","location":{"filename":"src/x11/keymap_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::KeymapEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/keymap_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/keymap_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/keymap_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"key_vector:StaticArray(UInt8,32)-instance-method","html_id":"key_vector:StaticArray(UInt8,32)-instance-method","name":"key_vector","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : StaticArray(UInt8, <span class=\"n\">32</span>)","args_html":" : StaticArray(UInt8, <span class=\"n\">32</span>)","location":{"filename":"src/x11/keymap_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L67"},"def":{"name":"key_vector","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"StaticArray(UInt8, 32)","visibility":"Public","body":"@event.key_vector"}},{"id":"key_vector=(key_vector:StaticArray(UInt8,32))-instance-method","html_id":"key_vector=(key_vector:StaticArray(UInt8,32))-instance-method","name":"key_vector=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key_vector","doc":null,"default_value":"","external_name":"key_vector","restriction":"StaticArray(UInt8, 32)"}],"args_string":"(key_vector : StaticArray(UInt8, <span class=\"n\">32</span>))","args_html":"(key_vector : StaticArray(UInt8, <span class=\"n\">32</span>))","location":{"filename":"src/x11/keymap_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L71"},"def":{"name":"key_vector=","args":[{"name":"key_vector","doc":null,"default_value":"","external_name":"key_vector","restriction":"StaticArray(UInt8, 32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.key_vector = key_vector"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/keymap_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/keymap_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/keymap_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/keymap_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PKeymapEvent-instance-method","html_id":"to_unsafe:X11::C::X::PKeymapEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PKeymapEvent","args_html":" : X11::C::X::PKeymapEvent","location":{"filename":"src/x11/keymap_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PKeymapEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::KeymapEvent-instance-method","html_id":"to_x:X11::C::X::KeymapEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::KeymapEvent","args_html":" : X11::C::X::KeymapEvent","location":{"filename":"src/x11/keymap_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::KeymapEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/keymap_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/keymap_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/keymap_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L59"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/keymap_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/keymap_event.cr#L63"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/MapEvent","path":"X11/MapEvent.html","kind":"class","full_name":"X11::MapEvent","name":"MapEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/map_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::MapEvent` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/MapEvent.html\">MapEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PMapEvent)-class-method","html_id":"new(event:X11::C::X::PMapEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PMapEvent"}],"args_string":"(event : X11::C::X::PMapEvent)","args_html":"(event : X11::C::X::PMapEvent)","location":{"filename":"src/x11/map_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PMapEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::MapEvent)-class-method","html_id":"new(event:X11::C::X::MapEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::MapEvent"}],"args_string":"(event : X11::C::X::MapEvent)","args_html":"(event : X11::C::X::MapEvent)","location":{"filename":"src/x11/map_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::MapEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/map_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/map_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/map_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"event:X11::C::Window-instance-method","html_id":"event:X11::C::Window-instance-method","name":"event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/map_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L59"},"def":{"name":"event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.event"}},{"id":"event=(event:X11::C::Window)-instance-method","html_id":"event=(event:X11::C::Window)-instance-method","name":"event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"args_string":"(event : X11::C::Window)","args_html":"(event : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/map_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L63"},"def":{"name":"event=","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.event = event"}},{"id":"override_redirect:Bool-instance-method","html_id":"override_redirect:Bool-instance-method","name":"override_redirect","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/map_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L75"},"def":{"name":"override_redirect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.override_redirect ? true : false"}},{"id":"override_redirect=(override_redirect:Bool)-instance-method","html_id":"override_redirect=(override_redirect:Bool)-instance-method","name":"override_redirect=","doc":null,"summary":null,"abstract":false,"args":[{"name":"override_redirect","doc":null,"default_value":"","external_name":"override_redirect","restriction":"Bool"}],"args_string":"(override_redirect : Bool)","args_html":"(override_redirect : Bool)","location":{"filename":"src/x11/map_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L79"},"def":{"name":"override_redirect=","args":[{"name":"override_redirect","doc":null,"default_value":"","external_name":"override_redirect","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.override_redirect = override_redirect ? 1 : 0"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/map_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/map_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/map_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/map_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PMapEvent-instance-method","html_id":"to_unsafe:X11::C::X::PMapEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PMapEvent","args_html":" : X11::C::X::PMapEvent","location":{"filename":"src/x11/map_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PMapEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::MapEvent-instance-method","html_id":"to_x:X11::C::X::MapEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::MapEvent","args_html":" : X11::C::X::MapEvent","location":{"filename":"src/x11/map_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::MapEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/map_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/map_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/map_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/map_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/MappingEvent","path":"X11/MappingEvent.html","kind":"class","full_name":"X11::MappingEvent","name":"MappingEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/mapping_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::MappingEvent` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/MappingEvent.html\">MappingEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PMappingEvent)-class-method","html_id":"new(event:X11::C::X::PMappingEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PMappingEvent"}],"args_string":"(event : X11::C::X::PMappingEvent)","args_html":"(event : X11::C::X::PMappingEvent)","location":{"filename":"src/x11/mapping_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PMappingEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::MappingEvent)-class-method","html_id":"new(event:X11::C::X::MappingEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::MappingEvent"}],"args_string":"(event : X11::C::X::MappingEvent)","args_html":"(event : X11::C::X::MappingEvent)","location":{"filename":"src/x11/mapping_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::MappingEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/mapping_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"count:Int32-instance-method","html_id":"count:Int32-instance-method","name":"count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/mapping_event.cr","line_number":98,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L98"},"def":{"name":"count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.count"}},{"id":"count=(count:Int32)-instance-method","html_id":"count=(count:Int32)-instance-method","name":"count=","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"args_string":"(count : Int32)","args_html":"(count : Int32)","location":{"filename":"src/x11/mapping_event.cr","line_number":102,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L102"},"def":{"name":"count=","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.count = count"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/mapping_event.cr","line_number":66,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L66"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/mapping_event.cr","line_number":70,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L70"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"first_keycode:Int32-instance-method","html_id":"first_keycode:Int32-instance-method","name":"first_keycode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/mapping_event.cr","line_number":90,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L90"},"def":{"name":"first_keycode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.first_keycode"}},{"id":"first_keycode=(first_keycode:Int32)-instance-method","html_id":"first_keycode=(first_keycode:Int32)-instance-method","name":"first_keycode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"first_keycode","doc":null,"default_value":"","external_name":"first_keycode","restriction":"Int32"}],"args_string":"(first_keycode : Int32)","args_html":"(first_keycode : Int32)","location":{"filename":"src/x11/mapping_event.cr","line_number":94,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L94"},"def":{"name":"first_keycode=","args":[{"name":"first_keycode","doc":null,"default_value":"","external_name":"first_keycode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.first_keycode = first_keycode"}},{"id":"refresh_keyboard_mapping:Int32-instance-method","html_id":"refresh_keyboard_mapping:Int32-instance-method","name":"refresh_keyboard_mapping","doc":"Refreshes the stored modifier and keymap information.\n\n###Description\nThe `refresh_keyboard_mapping` function refreshes the stored modifier and\nkeymap information. You usually call this function when a **MappingNotify**\nevent with a request member of **MappingKeyboard** or **MappingModifier**\noccurs. The result is to update Xlib's knowledge of the keyboard.\n\n###See also\n`KeyEvent::lookup_keysym`, `KeyEvent::lookup_string`, `Display::rebind_keysym`,\n`X11::string_to_keysym`, `ButtonEvent`, `MapEvent`.","summary":"<p>Refreshes the stored modifier and keymap information.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/mapping_event.cr","line_number":38,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L38"},"def":{"name":"refresh_keyboard_mapping","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.refresh_keyboard_mapping(@event)"}},{"id":"request:Int32-instance-method","html_id":"request:Int32-instance-method","name":"request","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/mapping_event.cr","line_number":82,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L82"},"def":{"name":"request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.request"}},{"id":"request=(request:Int32)-instance-method","html_id":"request=(request:Int32)-instance-method","name":"request=","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Int32"}],"args_string":"(request : Int32)","args_html":"(request : Int32)","location":{"filename":"src/x11/mapping_event.cr","line_number":86,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L86"},"def":{"name":"request=","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.request = request"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/mapping_event.cr","line_number":58,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L58"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/mapping_event.cr","line_number":62,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L62"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/mapping_event.cr","line_number":50,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L50"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/mapping_event.cr","line_number":54,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L54"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PMappingEvent-instance-method","html_id":"to_unsafe:X11::C::X::PMappingEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PMappingEvent","args_html":" : X11::C::X::PMappingEvent","location":{"filename":"src/x11/mapping_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PMappingEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::MappingEvent-instance-method","html_id":"to_x:X11::C::X::MappingEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::MappingEvent","args_html":" : X11::C::X::MappingEvent","location":{"filename":"src/x11/mapping_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::MappingEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/mapping_event.cr","line_number":42,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L42"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/mapping_event.cr","line_number":46,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L46"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/mapping_event.cr","line_number":74,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L74"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/mapping_event.cr","line_number":78,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mapping_event.cr#L78"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/MapRequestEvent","path":"X11/MapRequestEvent.html","kind":"class","full_name":"X11::MapRequestEvent","name":"MapRequestEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/map_request_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::MapRequestEvent` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/MapRequestEvent.html\">MapRequestEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PMapRequestEvent)-class-method","html_id":"new(event:X11::C::X::PMapRequestEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PMapRequestEvent"}],"args_string":"(event : X11::C::X::PMapRequestEvent)","args_html":"(event : X11::C::X::PMapRequestEvent)","location":{"filename":"src/x11/map_request_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PMapRequestEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::MapRequestEvent)-class-method","html_id":"new(event:X11::C::X::MapRequestEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::MapRequestEvent"}],"args_string":"(event : X11::C::X::MapRequestEvent)","args_html":"(event : X11::C::X::MapRequestEvent)","location":{"filename":"src/x11/map_request_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::MapRequestEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/map_request_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/map_request_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/map_request_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"parent:X11::C::Window-instance-method","html_id":"parent:X11::C::Window-instance-method","name":"parent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/map_request_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L59"},"def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.parent"}},{"id":"parent=(parent:X11::C::Window)-instance-method","html_id":"parent=(parent:X11::C::Window)-instance-method","name":"parent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"}],"args_string":"(parent : X11::C::Window)","args_html":"(parent : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/map_request_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L63"},"def":{"name":"parent=","args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.parent = parent"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/map_request_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/map_request_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/map_request_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/map_request_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PMapRequestEvent-instance-method","html_id":"to_unsafe:X11::C::X::PMapRequestEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PMapRequestEvent","args_html":" : X11::C::X::PMapRequestEvent","location":{"filename":"src/x11/map_request_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PMapRequestEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::MapRequestEvent-instance-method","html_id":"to_x:X11::C::X::MapRequestEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::MapRequestEvent","args_html":" : X11::C::X::MapRequestEvent","location":{"filename":"src/x11/map_request_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::MapRequestEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/map_request_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/map_request_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/map_request_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/map_request_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/map_request_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/MbTextItem","path":"X11/MbTextItem.html","kind":"struct","full_name":"X11::MbTextItem","name":"MbTextItem","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/mb_text_item.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L5"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::XmbTextItem` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::XmbTextItem</code> structure.</p>","class_methods":[],"constructors":[{"id":"new(text_item:X11::C::X::PmbTextItem)-class-method","html_id":"new(text_item:X11::C::X::PmbTextItem)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"text_item","doc":null,"default_value":"","external_name":"text_item","restriction":"X11::C::X::PmbTextItem"}],"args_string":"(text_item : X11::C::X::PmbTextItem)","args_html":"(text_item : X11::C::X::PmbTextItem)","location":{"filename":"src/x11/mb_text_item.cr","line_number":10,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L10"},"def":{"name":"new","args":[{"name":"text_item","doc":null,"default_value":"","external_name":"text_item","restriction":"X11::C::X::PmbTextItem"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(text_item)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(text_item:X11::C::X::XmbTextItem)-class-method","html_id":"new(text_item:X11::C::X::XmbTextItem)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"text_item","doc":null,"default_value":"","external_name":"text_item","restriction":"X11::C::X::XmbTextItem"}],"args_string":"(text_item : X11::C::X::XmbTextItem)","args_html":"(text_item : X11::C::X::XmbTextItem)","location":{"filename":"src/x11/mb_text_item.cr","line_number":15,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L15"},"def":{"name":"new","args":[{"name":"text_item","doc":null,"default_value":"","external_name":"text_item","restriction":"X11::C::X::XmbTextItem"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(text_item)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/mb_text_item.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L6"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"chars:String-instance-method","html_id":"chars:String-instance-method","name":"chars","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/x11/mb_text_item.cr","line_number":26,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L26"},"def":{"name":"chars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@text_item.chars.null? ? \"\" : String.new(@text_item.chars)"}},{"id":"chars=(chars:String)-instance-method","html_id":"chars=(chars:String)-instance-method","name":"chars=","doc":null,"summary":null,"abstract":false,"args":[{"name":"chars","doc":null,"default_value":"","external_name":"chars","restriction":"String"}],"args_string":"(chars : String)","args_html":"(chars : String)","location":{"filename":"src/x11/mb_text_item.cr","line_number":30,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L30"},"def":{"name":"chars=","args":[{"name":"chars","doc":null,"default_value":"","external_name":"chars","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_item.chars = chars.to_unsafe"}},{"id":"delta:Int32-instance-method","html_id":"delta:Int32-instance-method","name":"delta","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/mb_text_item.cr","line_number":38,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L38"},"def":{"name":"delta","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@text_item.delta"}},{"id":"delta=(delta:Int32)-instance-method","html_id":"delta=(delta:Int32)-instance-method","name":"delta=","doc":null,"summary":null,"abstract":false,"args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Int32"}],"args_string":"(delta : Int32)","args_html":"(delta : Int32)","location":{"filename":"src/x11/mb_text_item.cr","line_number":42,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L42"},"def":{"name":"delta=","args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_item.delta = delta"}},{"id":"font_set:X11::C::X::FontSet-instance-method","html_id":"font_set:X11::C::X::FontSet-instance-method","name":"font_set","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::FontSet","args_html":" : X11::C::X::FontSet","location":{"filename":"src/x11/mb_text_item.cr","line_number":46,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L46"},"def":{"name":"font_set","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::FontSet","visibility":"Public","body":"@text_item.font_set"}},{"id":"font_set=(font_set:X11::C::X::FontSet)-instance-method","html_id":"font_set=(font_set:X11::C::X::FontSet)-instance-method","name":"font_set=","doc":null,"summary":null,"abstract":false,"args":[{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"}],"args_string":"(font_set : X11::C::X::FontSet)","args_html":"(font_set : X11::C::X::FontSet)","location":{"filename":"src/x11/mb_text_item.cr","line_number":50,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L50"},"def":{"name":"font_set=","args":[{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_item.font_set = font_set"}},{"id":"nchars:Int32-instance-method","html_id":"nchars:Int32-instance-method","name":"nchars","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/mb_text_item.cr","line_number":34,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L34"},"def":{"name":"nchars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@text_item.nchars"}},{"id":"to_unsafe:X11::C::X::PmbTextItem-instance-method","html_id":"to_unsafe:X11::C::X::PmbTextItem-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PmbTextItem","args_html":" : X11::C::X::PmbTextItem","location":{"filename":"src/x11/mb_text_item.cr","line_number":18,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L18"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PmbTextItem","visibility":"Public","body":"pointerof(@text_item)"}},{"id":"to_x:X11::C::X::XmbTextItem-instance-method","html_id":"to_x:X11::C::X::XmbTextItem-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::XmbTextItem","args_html":" : X11::C::X::XmbTextItem","location":{"filename":"src/x11/mb_text_item.cr","line_number":22,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/mb_text_item.cr#L22"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::XmbTextItem","visibility":"Public","body":"@text_item"}}],"macros":[],"types":[]},{"html_id":"x11/X11/ModifierKeymap","path":"X11/ModifierKeymap.html","kind":"class","full_name":"X11::ModifierKeymap","name":"ModifierKeymap","abstract":false,"superclass":{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/modifier_keymap.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/modifier_keymap.cr#L5"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(modifier_keymap:X11::C::X::PModifierKeymap)-class-method","html_id":"new(modifier_keymap:X11::C::X::PModifierKeymap)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"modifier_keymap","doc":null,"default_value":"","external_name":"modifier_keymap","restriction":"X11::C::X::PModifierKeymap"}],"args_string":"(modifier_keymap : X11::C::X::PModifierKeymap)","args_html":"(modifier_keymap : X11::C::X::PModifierKeymap)","location":{"filename":"src/x11/modifier_keymap.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/modifier_keymap.cr#L8"},"def":{"name":"new","args":[{"name":"modifier_keymap","doc":null,"default_value":"","external_name":"modifier_keymap","restriction":"X11::C::X::PModifierKeymap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(modifier_keymap)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(max_keys_per_mod:Int32)-class-method","html_id":"new(max_keys_per_mod:Int32)-class-method","name":"new","doc":"Creates a new `ModifierKeymap` structure.\n\n###Arguments\n- **max_keys_per_mod** Specifies the number of KeyCode entries preallocated to the modifiers in the map.\n\n###See also\n`Display::change_keyboard_mapping`, `delete_entry`, `Display::display_keycodes`,\n`finalize`, `Display::keyboard_mapping`, `Display::modifier_mapping`,\n`insert_entry`, `Display::set_modifier_mapping`, `Display::set_pointer_mapping`.","summary":"<p>Creates a new <code><a href=\"../X11/ModifierKeymap.html\">ModifierKeymap</a></code> structure.</p>","abstract":false,"args":[{"name":"max_keys_per_mod","doc":null,"default_value":"","external_name":"max_keys_per_mod","restriction":"Int32"}],"args_string":"(max_keys_per_mod : Int32)","args_html":"(max_keys_per_mod : Int32)","location":{"filename":"src/x11/modifier_keymap.cr","line_number":21,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/modifier_keymap.cr#L21"},"def":{"name":"new","args":[{"name":"max_keys_per_mod","doc":null,"default_value":"","external_name":"max_keys_per_mod","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(max_keys_per_mod)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"delete_entry(entry:X11::C::KeyCode,modifier:Int32):ModifierKeymap-instance-method","html_id":"delete_entry(entry:X11::C::KeyCode,modifier:Int32):ModifierKeymap-instance-method","name":"delete_entry","doc":"Deletes the specified KeyCode from the set that controls the specified modifier.\n\n###Arguments\n- **keycode_entry** Specifies the KeyCode.\n- **modifier** Specifies the modifier.\n\n###Description\nThe `delete_entry` function deletes the specified KeyCode from the set that\ncontrols the specified modifier and returns a pointer to the resulting `ModifierKeymap` structure.\n\n###See also\n`Display::change_keyboard_mapping`, `Display::display_keycodes`,\n`finalize`, `Display::keyboard_mapping`, `Display::modifier_mapping`,\n`insert_entry`, `new`, `Display::set_modifier_mapping`, `Display::set_pointer_mapping`.","summary":"<p>Deletes the specified KeyCode from the set that controls the specified modifier.</p>","abstract":false,"args":[{"name":"entry","doc":null,"default_value":"","external_name":"entry","restriction":"X11::C::KeyCode"},{"name":"modifier","doc":null,"default_value":"","external_name":"modifier","restriction":"Int32"}],"args_string":"(entry : X11::C::KeyCode, modifier : Int32) : ModifierKeymap","args_html":"(entry : <a href=\"../X11/C/KeyCode.html\">X11::C::KeyCode</a>, modifier : Int32) : <a href=\"../X11/ModifierKeymap.html\">ModifierKeymap</a>","location":{"filename":"src/x11/modifier_keymap.cr","line_number":49,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/modifier_keymap.cr#L49"},"def":{"name":"delete_entry","args":[{"name":"entry","doc":null,"default_value":"","external_name":"entry","restriction":"X11::C::KeyCode"},{"name":"modifier","doc":null,"default_value":"","external_name":"modifier","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ModifierKeymap","visibility":"Public","body":"@modifier_keymap = X.delete_modifiermap_entry(@modifier_keymap, entry, modifier)\nself\n"}},{"id":"finalize-instance-method","html_id":"finalize-instance-method","name":"finalize","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/modifier_keymap.cr","line_number":26,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/modifier_keymap.cr#L26"},"def":{"name":"finalize","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"X.free_modifiermap(@modifier_keymap)"}},{"id":"insert_entry(entry:X11::C::KeyCode,modifier:Int32):ModifierKeymap-instance-method","html_id":"insert_entry(entry:X11::C::KeyCode,modifier:Int32):ModifierKeymap-instance-method","name":"insert_entry","doc":"Adds the specified KeyCode to the set that controls the specified modifier.\n\n###Arguments\n- **keycode_entry** Specifies the KeyCode.\n- **modifier** Specifies the modifier.\n\n###Description\nThe `insert_entry` function adds the specified KeyCode to the set that controls\nthe specified modifier and returns the resulting `ModifierKeymap` structure (expanded as needed).\n\n###See also\n`Display::change_keyboard_mapping`, `delete_entry`, `Display::display_keycodes`,\n`finalize`, `Display::keyboard_mapping`, `Display::modifier_mapping`,\n`insert_entry`, `new`, `Display::set_modifier_mapping`, `Display::set_pointer_mapping`.","summary":"<p>Adds the specified KeyCode to the set that controls the specified modifier.</p>","abstract":false,"args":[{"name":"entry","doc":null,"default_value":"","external_name":"entry","restriction":"X11::C::KeyCode"},{"name":"modifier","doc":null,"default_value":"","external_name":"modifier","restriction":"Int32"}],"args_string":"(entry : X11::C::KeyCode, modifier : Int32) : ModifierKeymap","args_html":"(entry : <a href=\"../X11/C/KeyCode.html\">X11::C::KeyCode</a>, modifier : Int32) : <a href=\"../X11/ModifierKeymap.html\">ModifierKeymap</a>","location":{"filename":"src/x11/modifier_keymap.cr","line_number":68,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/modifier_keymap.cr#L68"},"def":{"name":"insert_entry","args":[{"name":"entry","doc":null,"default_value":"","external_name":"entry","restriction":"X11::C::KeyCode"},{"name":"modifier","doc":null,"default_value":"","external_name":"modifier","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ModifierKeymap","visibility":"Public","body":"@modifier_keymap = X.insert_modifier_entry(@modifier_keymap, entry, modifier)\nself\n"}},{"id":"max_keys_per_mod:Int32-instance-method","html_id":"max_keys_per_mod:Int32-instance-method","name":"max_keys_per_mod","doc":"Specifies the number of KeyCode entries preallocated to the modifiers in the map.","summary":"<p>Specifies the number of KeyCode entries preallocated to the modifiers in the map.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/modifier_keymap.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/modifier_keymap.cr#L31"},"def":{"name":"max_keys_per_mod","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@modifier_keymap.value.max_keys_per_mod"}},{"id":"modifier_keymap:X11::C::X::PModifierKeymap-instance-method","html_id":"modifier_keymap:X11::C::X::PModifierKeymap-instance-method","name":"modifier_keymap","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PModifierKeymap","args_html":" : X11::C::X::PModifierKeymap","location":{"filename":"src/x11/modifier_keymap.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/modifier_keymap.cr#L6"},"def":{"name":"modifier_keymap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PModifierKeymap","visibility":"Public","body":"@modifier_keymap"}}],"macros":[],"types":[]},{"html_id":"x11/X11/MotionEvent","path":"X11/MotionEvent.html","kind":"class","full_name":"X11::MotionEvent","name":"MotionEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/motion_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::MotionEvent` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/MotionEvent.html\">MotionEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PMotionEvent)-class-method","html_id":"new(event:X11::C::X::PMotionEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PMotionEvent"}],"args_string":"(event : X11::C::X::PMotionEvent)","args_html":"(event : X11::C::X::PMotionEvent)","location":{"filename":"src/x11/motion_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PMotionEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::MotionEvent)-class-method","html_id":"new(event:X11::C::X::MotionEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::MotionEvent"}],"args_string":"(event : X11::C::X::MotionEvent)","args_html":"(event : X11::C::X::MotionEvent)","location":{"filename":"src/x11/motion_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::MotionEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/motion_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/motion_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/motion_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"is_hint=(is_hint:UInt8)-instance-method","html_id":"is_hint=(is_hint:UInt8)-instance-method","name":"is_hint=","doc":null,"summary":null,"abstract":false,"args":[{"name":"is_hint","doc":null,"default_value":"","external_name":"is_hint","restriction":"UInt8"}],"args_string":"(is_hint : UInt8)","args_html":"(is_hint : UInt8)","location":{"filename":"src/x11/motion_event.cr","line_number":135,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L135"},"def":{"name":"is_hint=","args":[{"name":"is_hint","doc":null,"default_value":"","external_name":"is_hint","restriction":"UInt8"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.is_hint = is_hint"}},{"id":"is_hist:UInt8-instance-method","html_id":"is_hist:UInt8-instance-method","name":"is_hist","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt8","args_html":" : UInt8","location":{"filename":"src/x11/motion_event.cr","line_number":131,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L131"},"def":{"name":"is_hist","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"@event.is_hint"}},{"id":"root:X11::C::Window-instance-method","html_id":"root:X11::C::Window-instance-method","name":"root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/motion_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L67"},"def":{"name":"root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.root"}},{"id":"root=(root:X11::C::Window)-instance-method","html_id":"root=(root:X11::C::Window)-instance-method","name":"root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"X11::C::Window"}],"args_string":"(root : X11::C::Window)","args_html":"(root : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/motion_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L71"},"def":{"name":"root=","args":[{"name":"root","doc":null,"default_value":"","external_name":"root","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.root = root"}},{"id":"same_screen:Bool-instance-method","html_id":"same_screen:Bool-instance-method","name":"same_screen","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/motion_event.cr","line_number":139,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L139"},"def":{"name":"same_screen","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.same_screen ? true : false"}},{"id":"same_screen=(same_screen:Bool)-instance-method","html_id":"same_screen=(same_screen:Bool)-instance-method","name":"same_screen=","doc":null,"summary":null,"abstract":false,"args":[{"name":"same_screen","doc":null,"default_value":"","external_name":"same_screen","restriction":"Bool"}],"args_string":"(same_screen : Bool)","args_html":"(same_screen : Bool)","location":{"filename":"src/x11/motion_event.cr","line_number":143,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L143"},"def":{"name":"same_screen=","args":[{"name":"same_screen","doc":null,"default_value":"","external_name":"same_screen","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.same_screen = same_screen ? 1 : 0"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/motion_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/motion_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/motion_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/motion_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"state:UInt32-instance-method","html_id":"state:UInt32-instance-method","name":"state","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/x11/motion_event.cr","line_number":123,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L123"},"def":{"name":"state","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@event.state"}},{"id":"state=(state:UInt32)-instance-method","html_id":"state=(state:UInt32)-instance-method","name":"state=","doc":null,"summary":null,"abstract":false,"args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"UInt32"}],"args_string":"(state : UInt32)","args_html":"(state : UInt32)","location":{"filename":"src/x11/motion_event.cr","line_number":127,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L127"},"def":{"name":"state=","args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"UInt32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.state = state"}},{"id":"sub_window:X11::C::Window-instance-method","html_id":"sub_window:X11::C::Window-instance-method","name":"sub_window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/motion_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L75"},"def":{"name":"sub_window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.subwindow"}},{"id":"sub_window=(sub_window:X11::C::Window)-instance-method","html_id":"sub_window=(sub_window:X11::C::Window)-instance-method","name":"sub_window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"sub_window","doc":null,"default_value":"","external_name":"sub_window","restriction":"X11::C::Window"}],"args_string":"(sub_window : X11::C::Window)","args_html":"(sub_window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/motion_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L79"},"def":{"name":"sub_window=","args":[{"name":"sub_window","doc":null,"default_value":"","external_name":"sub_window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.subwindow = sub_window"}},{"id":"time:X11::C::Time-instance-method","html_id":"time:X11::C::Time-instance-method","name":"time","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Time","args_html":" : <a href=\"../X11/C/Time.html\">X11::C::Time</a>","location":{"filename":"src/x11/motion_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L83"},"def":{"name":"time","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Time","visibility":"Public","body":"@event.time"}},{"id":"time=(time:X11::C::Time)-instance-method","html_id":"time=(time:X11::C::Time)-instance-method","name":"time=","doc":null,"summary":null,"abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(time : X11::C::Time)","args_html":"(time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>)","location":{"filename":"src/x11/motion_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L87"},"def":{"name":"time=","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.time = time"}},{"id":"to_unsafe:X11::C::X::PMotionEvent-instance-method","html_id":"to_unsafe:X11::C::X::PMotionEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PMotionEvent","args_html":" : X11::C::X::PMotionEvent","location":{"filename":"src/x11/motion_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PMotionEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::MotionEvent-instance-method","html_id":"to_x:X11::C::X::MotionEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::MotionEvent","args_html":" : X11::C::X::MotionEvent","location":{"filename":"src/x11/motion_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::MotionEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/motion_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/motion_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/motion_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L59"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/motion_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L63"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/motion_event.cr","line_number":91,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L91"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","args_html":"(x : Int32)","location":{"filename":"src/x11/motion_event.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L95"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x = x"}},{"id":"x_root:Int32-instance-method","html_id":"x_root:Int32-instance-method","name":"x_root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/motion_event.cr","line_number":107,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L107"},"def":{"name":"x_root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x_root"}},{"id":"x_root=(x_root:Int32)-instance-method","html_id":"x_root=(x_root:Int32)-instance-method","name":"x_root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x_root","doc":null,"default_value":"","external_name":"x_root","restriction":"Int32"}],"args_string":"(x_root : Int32)","args_html":"(x_root : Int32)","location":{"filename":"src/x11/motion_event.cr","line_number":111,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L111"},"def":{"name":"x_root=","args":[{"name":"x_root","doc":null,"default_value":"","external_name":"x_root","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x_root = x_root"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/motion_event.cr","line_number":99,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L99"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","args_html":"(y : Int32)","location":{"filename":"src/x11/motion_event.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L103"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y = y"}},{"id":"y_root:Int32-instance-method","html_id":"y_root:Int32-instance-method","name":"y_root","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/motion_event.cr","line_number":115,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L115"},"def":{"name":"y_root","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y_root"}},{"id":"y_root=(y_root:Int32)-instance-method","html_id":"y_root=(y_root:Int32)-instance-method","name":"y_root=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y_root","doc":null,"default_value":"","external_name":"y_root","restriction":"Int32"}],"args_string":"(y_root : Int32)","args_html":"(y_root : Int32)","location":{"filename":"src/x11/motion_event.cr","line_number":119,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/motion_event.cr#L119"},"def":{"name":"y_root=","args":[{"name":"y_root","doc":null,"default_value":"","external_name":"y_root","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y_root = y_root"}}],"macros":[],"types":[]},{"html_id":"x11/X11/NoExposeEvent","path":"X11/NoExposeEvent.html","kind":"class","full_name":"X11::NoExposeEvent","name":"NoExposeEvent","abstract":false,"superclass":{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},"ancestors":[{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/no_expose_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::NoExposeEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/NoExposeEvent.html\">NoExposeEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PNoExposeEvent)-class-method","html_id":"new(event:X11::C::X::PNoExposeEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PNoExposeEvent"}],"args_string":"(event : X11::C::X::PNoExposeEvent)","args_html":"(event : X11::C::X::PNoExposeEvent)","location":{"filename":"src/x11/no_expose_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PNoExposeEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::NoExposeEvent)-class-method","html_id":"new(event:X11::C::X::NoExposeEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::NoExposeEvent"}],"args_string":"(event : X11::C::X::NoExposeEvent)","args_html":"(event : X11::C::X::NoExposeEvent)","location":{"filename":"src/x11/no_expose_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::NoExposeEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/no_expose_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/no_expose_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/no_expose_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"drawable:X11::C::Drawable-instance-method","html_id":"drawable:X11::C::Drawable-instance-method","name":"drawable","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Drawable","args_html":" : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>","location":{"filename":"src/x11/no_expose_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L59"},"def":{"name":"drawable","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Drawable","visibility":"Public","body":"@event.drawable"}},{"id":"drawable=(drawable:X11::C::Drawable)-instance-method","html_id":"drawable=(drawable:X11::C::Drawable)-instance-method","name":"drawable=","doc":null,"summary":null,"abstract":false,"args":[{"name":"drawable","doc":null,"default_value":"","external_name":"drawable","restriction":"X11::C::Drawable"}],"args_string":"(drawable : X11::C::Drawable)","args_html":"(drawable : <a href=\"../X11/C/Drawable.html\">X11::C::Drawable</a>)","location":{"filename":"src/x11/no_expose_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L63"},"def":{"name":"drawable=","args":[{"name":"drawable","doc":null,"default_value":"","external_name":"drawable","restriction":"X11::C::Drawable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.drawable = drawable"}},{"id":"major_code:Int32-instance-method","html_id":"major_code:Int32-instance-method","name":"major_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/no_expose_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L67"},"def":{"name":"major_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.major_code"}},{"id":"major_code=(major_code:Int32)-instance-method","html_id":"major_code=(major_code:Int32)-instance-method","name":"major_code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"major_code","doc":null,"default_value":"","external_name":"major_code","restriction":"Int32"}],"args_string":"(major_code : Int32)","args_html":"(major_code : Int32)","location":{"filename":"src/x11/no_expose_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L71"},"def":{"name":"major_code=","args":[{"name":"major_code","doc":null,"default_value":"","external_name":"major_code","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.major_code = major_code"}},{"id":"minor_code:Int32-instance-method","html_id":"minor_code:Int32-instance-method","name":"minor_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/no_expose_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L75"},"def":{"name":"minor_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.minor_code"}},{"id":"minor_code=(minor_code:Int32)-instance-method","html_id":"minor_code=(minor_code:Int32)-instance-method","name":"minor_code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"minor_code","doc":null,"default_value":"","external_name":"minor_code","restriction":"Int32"}],"args_string":"(minor_code : Int32)","args_html":"(minor_code : Int32)","location":{"filename":"src/x11/no_expose_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L79"},"def":{"name":"minor_code=","args":[{"name":"minor_code","doc":null,"default_value":"","external_name":"minor_code","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.minor_code = minor_code"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/no_expose_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/no_expose_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/no_expose_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/no_expose_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PNoExposeEvent-instance-method","html_id":"to_unsafe:X11::C::X::PNoExposeEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PNoExposeEvent","args_html":" : X11::C::X::PNoExposeEvent","location":{"filename":"src/x11/no_expose_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PNoExposeEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::NoExposeEvent-instance-method","html_id":"to_x:X11::C::X::NoExposeEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::NoExposeEvent","args_html":" : X11::C::X::NoExposeEvent","location":{"filename":"src/x11/no_expose_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::NoExposeEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/no_expose_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/no_expose_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/no_expose_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}}],"macros":[],"types":[]},{"html_id":"x11/X11/PixmapFormatValues","path":"X11/PixmapFormatValues.html","kind":"class","full_name":"X11::PixmapFormatValues","name":"PixmapFormatValues","abstract":false,"superclass":{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/pixmap_format_values.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/pixmap_format_values.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(depth:Int32,bits_per_pixel:Int32,scanline_pad:Int3)-class-method","html_id":"new(depth:Int32,bits_per_pixel:Int32,scanline_pad:Int3)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"depth","doc":null,"default_value":"","external_name":"depth","restriction":"Int32"},{"name":"bits_per_pixel","doc":null,"default_value":"","external_name":"bits_per_pixel","restriction":"Int32"},{"name":"scanline_pad","doc":null,"default_value":"","external_name":"scanline_pad","restriction":"Int3"}],"args_string":"(depth : Int32, bits_per_pixel : Int32, scanline_pad : Int3)","args_html":"(depth : Int32, bits_per_pixel : Int32, scanline_pad : Int3)","location":{"filename":"src/x11/pixmap_format_values.cr","line_number":21,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/pixmap_format_values.cr#L21"},"def":{"name":"new","args":[{"name":"depth","doc":null,"default_value":"","external_name":"depth","restriction":"Int32"},{"name":"bits_per_pixel","doc":null,"default_value":"","external_name":"bits_per_pixel","restriction":"Int32"},{"name":"scanline_pad","doc":null,"default_value":"","external_name":"scanline_pad","restriction":"Int3"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(depth, bits_per_pixel, scanline_pad)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(pixmap_format_values:X11::C::X::PPixmapFormatValues)-class-method","html_id":"new(pixmap_format_values:X11::C::X::PPixmapFormatValues)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pixmap_format_values","doc":null,"default_value":"","external_name":"pixmap_format_values","restriction":"X11::C::X::PPixmapFormatValues"}],"args_string":"(pixmap_format_values : X11::C::X::PPixmapFormatValues)","args_html":"(pixmap_format_values : X11::C::X::PPixmapFormatValues)","location":{"filename":"src/x11/pixmap_format_values.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/pixmap_format_values.cr#L9"},"def":{"name":"new","args":[{"name":"pixmap_format_values","doc":null,"default_value":"","external_name":"pixmap_format_values","restriction":"X11::C::X::PPixmapFormatValues"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pixmap_format_values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(pixmap_format_values:X11::C::X::PixmapFormatValues)-class-method","html_id":"new(pixmap_format_values:X11::C::X::PixmapFormatValues)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"pixmap_format_values","doc":null,"default_value":"","external_name":"pixmap_format_values","restriction":"X11::C::X::PixmapFormatValues"}],"args_string":"(pixmap_format_values : X11::C::X::PixmapFormatValues)","args_html":"(pixmap_format_values : X11::C::X::PixmapFormatValues)","location":{"filename":"src/x11/pixmap_format_values.cr","line_number":15,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/pixmap_format_values.cr#L15"},"def":{"name":"new","args":[{"name":"pixmap_format_values","doc":null,"default_value":"","external_name":"pixmap_format_values","restriction":"X11::C::X::PixmapFormatValues"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(pixmap_format_values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"bits_per_pixel:Int32-instance-method","html_id":"bits_per_pixel:Int32-instance-method","name":"bits_per_pixel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/pixmap_format_values.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/pixmap_format_values.cr#L6"},"def":{"name":"bits_per_pixel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@bits_per_pixel"}},{"id":"bits_per_pixel=(bits_per_pixel:Int32)-instance-method","html_id":"bits_per_pixel=(bits_per_pixel:Int32)-instance-method","name":"bits_per_pixel=","doc":null,"summary":null,"abstract":false,"args":[{"name":"bits_per_pixel","doc":null,"default_value":"","external_name":"bits_per_pixel","restriction":"Int32"}],"args_string":"(bits_per_pixel : Int32)","args_html":"(bits_per_pixel : Int32)","location":{"filename":"src/x11/pixmap_format_values.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/pixmap_format_values.cr#L6"},"def":{"name":"bits_per_pixel=","args":[{"name":"bits_per_pixel","doc":null,"default_value":"","external_name":"bits_per_pixel","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@bits_per_pixel = bits_per_pixel"}},{"id":"depth:Int32-instance-method","html_id":"depth:Int32-instance-method","name":"depth","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/pixmap_format_values.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/pixmap_format_values.cr#L5"},"def":{"name":"depth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@depth"}},{"id":"depth=(depth:Int32)-instance-method","html_id":"depth=(depth:Int32)-instance-method","name":"depth=","doc":null,"summary":null,"abstract":false,"args":[{"name":"depth","doc":null,"default_value":"","external_name":"depth","restriction":"Int32"}],"args_string":"(depth : Int32)","args_html":"(depth : Int32)","location":{"filename":"src/x11/pixmap_format_values.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/pixmap_format_values.cr#L5"},"def":{"name":"depth=","args":[{"name":"depth","doc":null,"default_value":"","external_name":"depth","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@depth = depth"}},{"id":"scanline_pad:Int32-instance-method","html_id":"scanline_pad:Int32-instance-method","name":"scanline_pad","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/pixmap_format_values.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/pixmap_format_values.cr#L7"},"def":{"name":"scanline_pad","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@scanline_pad"}},{"id":"scanline_pad=(scanline_pad:Int32)-instance-method","html_id":"scanline_pad=(scanline_pad:Int32)-instance-method","name":"scanline_pad=","doc":null,"summary":null,"abstract":false,"args":[{"name":"scanline_pad","doc":null,"default_value":"","external_name":"scanline_pad","restriction":"Int32"}],"args_string":"(scanline_pad : Int32)","args_html":"(scanline_pad : Int32)","location":{"filename":"src/x11/pixmap_format_values.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/pixmap_format_values.cr#L7"},"def":{"name":"scanline_pad=","args":[{"name":"scanline_pad","doc":null,"default_value":"","external_name":"scanline_pad","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@scanline_pad = scanline_pad"}},{"id":"to_x:X11::C::X::PixmapFormatValues-instance-method","html_id":"to_x:X11::C::X::PixmapFormatValues-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PixmapFormatValues","args_html":" : X11::C::X::PixmapFormatValues","location":{"filename":"src/x11/pixmap_format_values.cr","line_number":24,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/pixmap_format_values.cr#L24"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PixmapFormatValues","visibility":"Public","body":"s = X11::C::X::PixmapFormatValues.new\ns.depth = @depth\ns.bits_per_pixel = @bits_per_pixel\ns.scanline_pad = @scanline_pad\ns\n"}}],"macros":[],"types":[]},{"html_id":"x11/X11/Point","path":"X11/Point.html","kind":"struct","full_name":"X11::Point","name":"Point","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/point.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/point.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(x:Int16,y:Int16)-class-method","html_id":"new(x:Int16,y:Int16)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"}],"args_string":"(x : Int16, y : Int16)","args_html":"(x : Int16, y : Int16)","location":{"filename":"src/x11/point.cr","line_number":18,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/point.cr#L18"},"def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x, y)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(point:X11::C::X::Point)-class-method","html_id":"new(point:X11::C::X::Point)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"X11::C::X::Point"}],"args_string":"(point : X11::C::X::Point)","args_html":"(point : X11::C::X::Point)","location":{"filename":"src/x11/point.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/point.cr#L8"},"def":{"name":"new","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"X11::C::X::Point"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(point)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(point:X11::C::X::PPoint)-class-method","html_id":"new(point:X11::C::X::PPoint)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"X11::C::X::PPoint"}],"args_string":"(point : X11::C::X::PPoint)","args_html":"(point : X11::C::X::PPoint)","location":{"filename":"src/x11/point.cr","line_number":13,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/point.cr#L13"},"def":{"name":"new","args":[{"name":"point","doc":null,"default_value":"","external_name":"point","restriction":"X11::C::X::PPoint"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(point)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_x:X11::C::X::Point-instance-method","html_id":"to_x:X11::C::X::Point-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::Point","args_html":" : X11::C::X::Point","location":{"filename":"src/x11/point.cr","line_number":21,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/point.cr#L21"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::Point","visibility":"Public","body":"point = X11::C::X::Point.new\npoint.x = @x\npoint.y = @y\npoint\n"}},{"id":"x:Int16-instance-method","html_id":"x:Int16-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/point.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/point.cr#L5"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@x"}},{"id":"x=(x:Int16)-instance-method","html_id":"x=(x:Int16)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"}],"args_string":"(x : Int16)","args_html":"(x : Int16)","location":{"filename":"src/x11/point.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/point.cr#L5"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = x"}},{"id":"y:Int16-instance-method","html_id":"y:Int16-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/point.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/point.cr#L6"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@y"}},{"id":"y=(y:Int16)-instance-method","html_id":"y=(y:Int16)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"}],"args_string":"(y : Int16)","args_html":"(y : Int16)","location":{"filename":"src/x11/point.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/point.cr#L6"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = y"}}],"macros":[],"types":[]},{"html_id":"x11/X11/PropertyEvent","path":"X11/PropertyEvent.html","kind":"class","full_name":"X11::PropertyEvent","name":"PropertyEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/property_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::PropertyEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/PropertyEvent.html\">PropertyEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PPropertyEvent)-class-method","html_id":"new(event:X11::C::X::PPropertyEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PPropertyEvent"}],"args_string":"(event : X11::C::X::PPropertyEvent)","args_html":"(event : X11::C::X::PPropertyEvent)","location":{"filename":"src/x11/property_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PPropertyEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::PropertyEvent)-class-method","html_id":"new(event:X11::C::X::PropertyEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PropertyEvent"}],"args_string":"(event : X11::C::X::PropertyEvent)","args_html":"(event : X11::C::X::PropertyEvent)","location":{"filename":"src/x11/property_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PropertyEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/property_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"atom:X11::C::Atom-instance-method","html_id":"atom:X11::C::Atom-instance-method","name":"atom","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Atom","args_html":" : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>","location":{"filename":"src/x11/property_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L67"},"def":{"name":"atom","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Atom","visibility":"Public","body":"@event.atom"}},{"id":"atom=(atom:X11::C::Atom)-instance-method","html_id":"atom=(atom:X11::C::Atom)-instance-method","name":"atom=","doc":null,"summary":null,"abstract":false,"args":[{"name":"atom","doc":null,"default_value":"","external_name":"atom","restriction":"X11::C::Atom"}],"args_string":"(atom : X11::C::Atom)","args_html":"(atom : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)","location":{"filename":"src/x11/property_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L71"},"def":{"name":"atom=","args":[{"name":"atom","doc":null,"default_value":"","external_name":"atom","restriction":"X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.atom = atom"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/property_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/property_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/property_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/property_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/property_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/property_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"state:Int32-instance-method","html_id":"state:Int32-instance-method","name":"state","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/property_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L83"},"def":{"name":"state","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.state"}},{"id":"state=(state:Int32)-instance-method","html_id":"state=(state:Int32)-instance-method","name":"state=","doc":null,"summary":null,"abstract":false,"args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"Int32"}],"args_string":"(state : Int32)","args_html":"(state : Int32)","location":{"filename":"src/x11/property_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L87"},"def":{"name":"state=","args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.state = state"}},{"id":"time:X11::C::Time-instance-method","html_id":"time:X11::C::Time-instance-method","name":"time","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Time","args_html":" : <a href=\"../X11/C/Time.html\">X11::C::Time</a>","location":{"filename":"src/x11/property_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L75"},"def":{"name":"time","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Time","visibility":"Public","body":"@event.time"}},{"id":"time=(time:X11::C::Time)-instance-method","html_id":"time=(time:X11::C::Time)-instance-method","name":"time=","doc":null,"summary":null,"abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(time : X11::C::Time)","args_html":"(time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>)","location":{"filename":"src/x11/property_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L79"},"def":{"name":"time=","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.time = time"}},{"id":"to_unsafe:X11::C::X::PPropertyEvent-instance-method","html_id":"to_unsafe:X11::C::X::PPropertyEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PPropertyEvent","args_html":" : X11::C::X::PPropertyEvent","location":{"filename":"src/x11/property_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PPropertyEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::PropertyEvent-instance-method","html_id":"to_x:X11::C::X::PropertyEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PropertyEvent","args_html":" : X11::C::X::PropertyEvent","location":{"filename":"src/x11/property_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PropertyEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/property_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/property_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/property_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L59"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/property_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/property_event.cr#L63"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/Rectangle","path":"X11/Rectangle.html","kind":"struct","full_name":"X11::Rectangle","name":"Rectangle","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/rectangle.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(x:Int16,y:Int16,width:UInt16,height:UInt16)-class-method","html_id":"new(x:Int16,y:Int16,width:UInt16,height:UInt16)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt16"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt16"}],"args_string":"(x : Int16, y : Int16, width : UInt16, height : UInt16)","args_html":"(x : Int16, y : Int16, width : UInt16, height : UInt16)","location":{"filename":"src/x11/rectangle.cr","line_number":22,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L22"},"def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"},{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt16"},{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x, y, width, height)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rectangle:X11::C::X::Rectangle)-class-method","html_id":"new(rectangle:X11::C::X::Rectangle)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"X11::C::X::Rectangle"}],"args_string":"(rectangle : X11::C::X::Rectangle)","args_html":"(rectangle : X11::C::X::Rectangle)","location":{"filename":"src/x11/rectangle.cr","line_number":10,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L10"},"def":{"name":"new","args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"X11::C::X::Rectangle"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rectangle)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rectangle:X11::C::X::PRectangle)-class-method","html_id":"new(rectangle:X11::C::X::PRectangle)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"X11::C::X::PRectangle"}],"args_string":"(rectangle : X11::C::X::PRectangle)","args_html":"(rectangle : X11::C::X::PRectangle)","location":{"filename":"src/x11/rectangle.cr","line_number":17,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L17"},"def":{"name":"new","args":[{"name":"rectangle","doc":null,"default_value":"","external_name":"rectangle","restriction":"X11::C::X::PRectangle"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rectangle)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"height:UInt16-instance-method","html_id":"height:UInt16-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt16","args_html":" : UInt16","location":{"filename":"src/x11/rectangle.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L8"},"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"@height"}},{"id":"height=(height:UInt16)-instance-method","html_id":"height=(height:UInt16)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt16"}],"args_string":"(height : UInt16)","args_html":"(height : UInt16)","location":{"filename":"src/x11/rectangle.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L8"},"def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@height = height"}},{"id":"to_x:X11::C::X::Rectangle-instance-method","html_id":"to_x:X11::C::X::Rectangle-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::Rectangle","args_html":" : X11::C::X::Rectangle","location":{"filename":"src/x11/rectangle.cr","line_number":25,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L25"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::Rectangle","visibility":"Public","body":"rectangle = X11::C::X::Rectangle.new\nrectangle.x = @x\nrectangle.y = @y\nrectangle.width = @width\nrectangle.height = @height\nrectangle\n"}},{"id":"width:UInt16-instance-method","html_id":"width:UInt16-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt16","args_html":" : UInt16","location":{"filename":"src/x11/rectangle.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L7"},"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"@width"}},{"id":"width=(width:UInt16)-instance-method","html_id":"width=(width:UInt16)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt16"}],"args_string":"(width : UInt16)","args_html":"(width : UInt16)","location":{"filename":"src/x11/rectangle.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L7"},"def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@width = width"}},{"id":"x:Int16-instance-method","html_id":"x:Int16-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/rectangle.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L5"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@x"}},{"id":"x=(x:Int16)-instance-method","html_id":"x=(x:Int16)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"}],"args_string":"(x : Int16)","args_html":"(x : Int16)","location":{"filename":"src/x11/rectangle.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L5"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = x"}},{"id":"y:Int16-instance-method","html_id":"y:Int16-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/rectangle.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L6"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@y"}},{"id":"y=(y:Int16)-instance-method","html_id":"y=(y:Int16)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"}],"args_string":"(y : Int16)","args_html":"(y : Int16)","location":{"filename":"src/x11/rectangle.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/rectangle.cr#L6"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = y"}}],"macros":[],"types":[]},{"html_id":"x11/X11/ReparentEvent","path":"X11/ReparentEvent.html","kind":"class","full_name":"X11::ReparentEvent","name":"ReparentEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/reparent_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::ReparentEvent` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/ReparentEvent.html\">ReparentEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PReparentEvent)-class-method","html_id":"new(event:X11::C::X::PReparentEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PReparentEvent"}],"args_string":"(event : X11::C::X::PReparentEvent)","args_html":"(event : X11::C::X::PReparentEvent)","location":{"filename":"src/x11/reparent_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PReparentEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::ReparentEvent)-class-method","html_id":"new(event:X11::C::X::ReparentEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ReparentEvent"}],"args_string":"(event : X11::C::X::ReparentEvent)","args_html":"(event : X11::C::X::ReparentEvent)","location":{"filename":"src/x11/reparent_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ReparentEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/reparent_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/reparent_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/reparent_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"event:X11::C::Window-instance-method","html_id":"event:X11::C::Window-instance-method","name":"event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/reparent_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L59"},"def":{"name":"event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.event"}},{"id":"event=(event:X11::C::Window)-instance-method","html_id":"event=(event:X11::C::Window)-instance-method","name":"event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"args_string":"(event : X11::C::Window)","args_html":"(event : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/reparent_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L63"},"def":{"name":"event=","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.event = event"}},{"id":"override_redirect:Bool-instance-method","html_id":"override_redirect:Bool-instance-method","name":"override_redirect","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/reparent_event.cr","line_number":99,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L99"},"def":{"name":"override_redirect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.override_redirect ? true : false"}},{"id":"override_redirect=(override_redirect:Bool)-instance-method","html_id":"override_redirect=(override_redirect:Bool)-instance-method","name":"override_redirect=","doc":null,"summary":null,"abstract":false,"args":[{"name":"override_redirect","doc":null,"default_value":"","external_name":"override_redirect","restriction":"Bool"}],"args_string":"(override_redirect : Bool)","args_html":"(override_redirect : Bool)","location":{"filename":"src/x11/reparent_event.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L103"},"def":{"name":"override_redirect=","args":[{"name":"override_redirect","doc":null,"default_value":"","external_name":"override_redirect","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.override_redirect = override_redirect ? 1 : 0"}},{"id":"parent:X11::C::Window-instance-method","html_id":"parent:X11::C::Window-instance-method","name":"parent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/reparent_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L75"},"def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.parent"}},{"id":"parent=(parent:X11::C::Window)-instance-method","html_id":"parent=(parent:X11::C::Window)-instance-method","name":"parent=","doc":null,"summary":null,"abstract":false,"args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"}],"args_string":"(parent : X11::C::Window)","args_html":"(parent : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/reparent_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L79"},"def":{"name":"parent=","args":[{"name":"parent","doc":null,"default_value":"","external_name":"parent","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.parent = parent"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/reparent_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/reparent_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/reparent_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/reparent_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PReparentEvent-instance-method","html_id":"to_unsafe:X11::C::X::PReparentEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PReparentEvent","args_html":" : X11::C::X::PReparentEvent","location":{"filename":"src/x11/reparent_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PReparentEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::ReparentEvent-instance-method","html_id":"to_x:X11::C::X::ReparentEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::ReparentEvent","args_html":" : X11::C::X::ReparentEvent","location":{"filename":"src/x11/reparent_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ReparentEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/reparent_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/reparent_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/reparent_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/reparent_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/reparent_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L83"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","args_html":"(x : Int32)","location":{"filename":"src/x11/reparent_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L87"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.x = x"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/reparent_event.cr","line_number":91,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L91"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","args_html":"(y : Int32)","location":{"filename":"src/x11/reparent_event.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/reparent_event.cr#L95"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.y = y"}}],"macros":[],"types":[]},{"html_id":"x11/X11/ResizeRequestEvent","path":"X11/ResizeRequestEvent.html","kind":"class","full_name":"X11::ResizeRequestEvent","name":"ResizeRequestEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/resize_request_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::ResizeRequestEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/ResizeRequestEvent.html\">ResizeRequestEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PResizeRequestEvent)-class-method","html_id":"new(event:X11::C::X::PResizeRequestEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PResizeRequestEvent"}],"args_string":"(event : X11::C::X::PResizeRequestEvent)","args_html":"(event : X11::C::X::PResizeRequestEvent)","location":{"filename":"src/x11/resize_request_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PResizeRequestEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::ResizeRequestEvent)-class-method","html_id":"new(event:X11::C::X::ResizeRequestEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ResizeRequestEvent"}],"args_string":"(event : X11::C::X::ResizeRequestEvent)","args_html":"(event : X11::C::X::ResizeRequestEvent)","location":{"filename":"src/x11/resize_request_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::ResizeRequestEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/resize_request_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/resize_request_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/resize_request_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/resize_request_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L75"},"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.height"}},{"id":"height=(height:Int32)-instance-method","html_id":"height=(height:Int32)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(height : Int32)","args_html":"(height : Int32)","location":{"filename":"src/x11/resize_request_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L79"},"def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.height = height"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/resize_request_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/resize_request_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/resize_request_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/resize_request_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PResizeRequestEvent-instance-method","html_id":"to_unsafe:X11::C::X::PResizeRequestEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PResizeRequestEvent","args_html":" : X11::C::X::PResizeRequestEvent","location":{"filename":"src/x11/resize_request_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PResizeRequestEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::ResizeRequestEvent-instance-method","html_id":"to_x:X11::C::X::ResizeRequestEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::ResizeRequestEvent","args_html":" : X11::C::X::ResizeRequestEvent","location":{"filename":"src/x11/resize_request_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ResizeRequestEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/resize_request_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/resize_request_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/resize_request_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L67"},"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.width"}},{"id":"width=(width:Int32)-instance-method","html_id":"width=(width:Int32)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"args_string":"(width : Int32)","args_html":"(width : Int32)","location":{"filename":"src/x11/resize_request_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L71"},"def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.width = width"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/resize_request_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L59"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/resize_request_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/resize_request_event.cr#L63"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/Screen","path":"X11/Screen.html","kind":"class","full_name":"X11::Screen","name":"Screen","abstract":false,"superclass":{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/screen.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L5"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(screen:X11::C::X::PScreen)-class-method","html_id":"new(screen:X11::C::X::PScreen)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"screen","doc":null,"default_value":"","external_name":"screen","restriction":"X11::C::X::PScreen"}],"args_string":"(screen : X11::C::X::PScreen)","args_html":"(screen : X11::C::X::PScreen)","location":{"filename":"src/x11/screen.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L6"},"def":{"name":"new","args":[{"name":"screen","doc":null,"default_value":"","external_name":"screen","restriction":"X11::C::X::PScreen"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(screen)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"black_pixel:UInt64-instance-method","html_id":"black_pixel:UInt64-instance-method","name":"black_pixel","doc":"Returns the black pixel.","summary":"<p>Returns the black pixel.</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/screen.cr","line_number":46,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L46"},"def":{"name":"black_pixel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"X.black_pixel_of_screen(@screen)"}},{"id":"cells:Int32-instance-method","html_id":"cells:Int32-instance-method","name":"cells","doc":"Returns the number of colormap cells in the default colormap.","summary":"<p>Returns the number of colormap cells in the default colormap.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/screen.cr","line_number":76,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L76"},"def":{"name":"cells","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.cells_of_screen(@screen)"}},{"id":"default_colormap:X11::C::Colormap-instance-method","html_id":"default_colormap:X11::C::Colormap-instance-method","name":"default_colormap","doc":"Returns the default colormap ID.","summary":"<p>Returns the default colormap ID.</p>","abstract":false,"args":[],"args_string":" : X11::C::Colormap","args_html":" : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>","location":{"filename":"src/x11/screen.cr","line_number":56,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L56"},"def":{"name":"default_colormap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Colormap","visibility":"Public","body":"X.default_colormap_of_screen(@screen)"}},{"id":"default_depth:Int32-instance-method","html_id":"default_depth:Int32-instance-method","name":"default_depth","doc":"Returns the depth of the root window.","summary":"<p>Returns the depth of the root window.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/screen.cr","line_number":81,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L81"},"def":{"name":"default_depth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.default_depth_of_screen(@screen)"}},{"id":"default_gc:X11::C::X::GC-instance-method","html_id":"default_gc:X11::C::X::GC-instance-method","name":"default_gc","doc":"Returns the default graphics context (GC), which has the same depth as the root window of the screen.","summary":"<p>Returns the default graphics context (GC), which has the same depth as the root window of the screen.</p>","abstract":false,"args":[],"args_string":" : X11::C::X::GC","args_html":" : X11::C::X::GC","location":{"filename":"src/x11/screen.cr","line_number":41,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L41"},"def":{"name":"default_gc","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::GC","visibility":"Public","body":"X.default_gc_of_screen(@screen)"}},{"id":"default_visual:Visual-instance-method","html_id":"default_visual:Visual-instance-method","name":"default_visual","doc":"Returns the default visual.","summary":"<p>Returns the default visual.</p>","abstract":false,"args":[],"args_string":" : Visual","args_html":" : <a href=\"../X11/Visual.html\">Visual</a>","location":{"filename":"src/x11/screen.cr","line_number":36,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L36"},"def":{"name":"default_visual","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Visual","visibility":"Public","body":"Visual.new(X.default_visual_of_screen(@screen))"}},{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":"Returns the display","summary":"<p>Returns the display</p>","abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/screen.cr","line_number":61,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L61"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(X.display_of_screen(@screen))"}},{"id":"does_backing_store:Int32-instance-method","html_id":"does_backing_store:Int32-instance-method","name":"does_backing_store","doc":"Returns a value indicating whether the screen supports backing stores.\nThe value returned can be one of **WhenMapped**, **NotUseful**, or **Always**","summary":"<p>Returns a value indicating whether the screen supports backing stores.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/screen.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L87"},"def":{"name":"does_backing_store","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.does_backing_store(@screen)"}},{"id":"does_save_unders:Bool-instance-method","html_id":"does_save_unders:Bool-instance-method","name":"does_save_unders","doc":"Returns a `Bool` value indicating whether the screen supports save unders.\nIf `true`, the screen supports save unders. If `false`, the screen does not support save unders","summary":"<p>Returns a <code>Bool</code> value indicating whether the screen supports save unders.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/screen.cr","line_number":93,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L93"},"def":{"name":"does_save_unders","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(X.does_save_unders(@screen)) == X11::C::X::True ? true : false"}},{"id":"event_mask:Int64-instance-method","html_id":"event_mask:Int64-instance-method","name":"event_mask","doc":"Returns the event mask of the root window at connection setup time.","summary":"<p>Returns the event mask of the root window at connection setup time.</p>","abstract":false,"args":[],"args_string":" : Int64","args_html":" : Int64","location":{"filename":"src/x11/screen.cr","line_number":66,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L66"},"def":{"name":"event_mask","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"X.event_mask_of_screen(@screen)"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":"Returns height of screen in pixels.","summary":"<p>Returns height of screen in pixels.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/screen.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L103"},"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.height_of_screen(@screen)"}},{"id":"height_mm:Int32-instance-method","html_id":"height_mm:Int32-instance-method","name":"height_mm","doc":"Returns height of screen in millimeters.","summary":"<p>Returns height of screen in millimeters.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/screen.cr","line_number":98,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L98"},"def":{"name":"height_mm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.height_of_screen(@screen)"}},{"id":"max_cmaps:Int32-instance-method","html_id":"max_cmaps:Int32-instance-method","name":"max_cmaps","doc":"Returns the maximum number of installed colormaps supported by the specified screen.","summary":"<p>Returns the maximum number of installed colormaps supported by the specified screen.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/screen.cr","line_number":108,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L108"},"def":{"name":"max_cmaps","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.max_cmaps_of_screen(@screen)"}},{"id":"min_cmaps:Int32-instance-method","html_id":"min_cmaps:Int32-instance-method","name":"min_cmaps","doc":"Returns the minimum number of installed colormaps supported by the specified screen.","summary":"<p>Returns the minimum number of installed colormaps supported by the specified screen.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/screen.cr","line_number":113,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L113"},"def":{"name":"min_cmaps","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.min_cmaps_of_screen(@screen)"}},{"id":"plane:Int32-instance-method","html_id":"plane:Int32-instance-method","name":"plane","doc":"Returns the depth of the root window.","summary":"<p>Returns the depth of the root window.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/screen.cr","line_number":118,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L118"},"def":{"name":"plane","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.plane_of_screen(@screen)"}},{"id":"resource_string:String-instance-method","html_id":"resource_string:String-instance-method","name":"resource_string","doc":"Returns the SCREEN_RESOURCES property from the root window.\n\n###Description\nThe `resource_string` function returns the SCREEN_RESOURCES property from\nthe root window of the actual screen. The property is converted from\ntype STRING to the current locale. The conversion is identical to that\nproduced by `Display::mb_text_property_to_text_list` for a single element STRING\nproperty. The property value must be in a format that is acceptable to\n`X11::rm_get_string_database`. If no property exists, empty string is returned.\n\n###See also\n`Display::resource_manager_string`.","summary":"<p>Returns the SCREEN_RESOURCES property from the root window.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/x11/screen.cr","line_number":22,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L22"},"def":{"name":"resource_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"pstr = X.screen_resource_string(@screen)\nif pstr.null?\n  return \"\"\nend\nstr = String.new(pstr)\nX.free(pstr)\nstr\n"}},{"id":"root_window:X11::C::Window-instance-method","html_id":"root_window:X11::C::Window-instance-method","name":"root_window","doc":"Returns root window","summary":"<p>Returns root window</p>","abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/screen.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L31"},"def":{"name":"root_window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"X.root_window_of_screen(@screen)"}},{"id":"screen_number:Int32-instance-method","html_id":"screen_number:Int32-instance-method","name":"screen_number","doc":"Returns the screen index number.","summary":"<p>Returns the screen index number.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/screen.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L71"},"def":{"name":"screen_number","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.screen_number_of_screen(@screen)"}},{"id":"to_unsafe:X11::C::X::PScreen-instance-method","html_id":"to_unsafe:X11::C::X::PScreen-instance-method","name":"to_unsafe","doc":"Returns the underlieing `X11::C::X::PScreen` pointer","summary":"<p>Returns the underlieing <code><a href=\"../X11.html\">X11</a>::C::X::PScreen</code> pointer</p>","abstract":false,"args":[],"args_string":" : X11::C::X::PScreen","args_html":" : X11::C::X::PScreen","location":{"filename":"src/x11/screen.cr","line_number":133,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L133"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PScreen","visibility":"Public","body":"@screen"}},{"id":"white_pixel:UInt64-instance-method","html_id":"white_pixel:UInt64-instance-method","name":"white_pixel","doc":"Returns the white pixel.","summary":"<p>Returns the white pixel.</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/screen.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L51"},"def":{"name":"white_pixel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"X.white_pixel_of_screen(@screen)"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":"Returns the width of the specified screen in pixels.","summary":"<p>Returns the width of the specified screen in pixels.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/screen.cr","line_number":128,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L128"},"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.width_of_screen(@screen)"}},{"id":"width_mm:Int32-instance-method","html_id":"width_mm:Int32-instance-method","name":"width_mm","doc":"Returns the width of the specified screen in millimeters.","summary":"<p>Returns the width of the specified screen in millimeters.</p>","abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/screen.cr","line_number":123,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/screen.cr#L123"},"def":{"name":"width_mm","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X.width_mm_of_screen(@screen)"}}],"macros":[],"types":[]},{"html_id":"x11/X11/Segment","path":"X11/Segment.html","kind":"struct","full_name":"X11::Segment","name":"Segment","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/segment.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(x1:Int16,y1:Int16,x2:Int16,y2:Int16)-class-method","html_id":"new(x1:Int16,y1:Int16,x2:Int16,y2:Int16)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Int16"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Int16"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Int16"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Int16"}],"args_string":"(x1 : Int16, y1 : Int16, x2 : Int16, y2 : Int16)","args_html":"(x1 : Int16, y1 : Int16, x2 : Int16, y2 : Int16)","location":{"filename":"src/x11/segment.cr","line_number":22,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L22"},"def":{"name":"new","args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Int16"},{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Int16"},{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Int16"},{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x1, y1, x2, y2)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(segment:X11::C::X::Segment)-class-method","html_id":"new(segment:X11::C::X::Segment)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"segment","doc":null,"default_value":"","external_name":"segment","restriction":"X11::C::X::Segment"}],"args_string":"(segment : X11::C::X::Segment)","args_html":"(segment : X11::C::X::Segment)","location":{"filename":"src/x11/segment.cr","line_number":10,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L10"},"def":{"name":"new","args":[{"name":"segment","doc":null,"default_value":"","external_name":"segment","restriction":"X11::C::X::Segment"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(segment)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(segment:X11::C::X::PSegment)-class-method","html_id":"new(segment:X11::C::X::PSegment)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"segment","doc":null,"default_value":"","external_name":"segment","restriction":"X11::C::X::PSegment"}],"args_string":"(segment : X11::C::X::PSegment)","args_html":"(segment : X11::C::X::PSegment)","location":{"filename":"src/x11/segment.cr","line_number":17,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L17"},"def":{"name":"new","args":[{"name":"segment","doc":null,"default_value":"","external_name":"segment","restriction":"X11::C::X::PSegment"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(segment)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_x:X11::C::X::Segment-instance-method","html_id":"to_x:X11::C::X::Segment-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::Segment","args_html":" : X11::C::X::Segment","location":{"filename":"src/x11/segment.cr","line_number":25,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L25"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::Segment","visibility":"Public","body":"segment = X11::C::X::Segment.new\nsegment.x1 = @x1\nsegment.y1 = @y1\nsegment.x2 = @x2\nsegment.y2 = @y2\nsegment\n"}},{"id":"x1:Int16-instance-method","html_id":"x1:Int16-instance-method","name":"x1","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/segment.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L5"},"def":{"name":"x1","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@x1"}},{"id":"x1=(x1:Int16)-instance-method","html_id":"x1=(x1:Int16)-instance-method","name":"x1=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Int16"}],"args_string":"(x1 : Int16)","args_html":"(x1 : Int16)","location":{"filename":"src/x11/segment.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L5"},"def":{"name":"x1=","args":[{"name":"x1","doc":null,"default_value":"","external_name":"x1","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x1 = x1"}},{"id":"x2:Int16-instance-method","html_id":"x2:Int16-instance-method","name":"x2","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/segment.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L7"},"def":{"name":"x2","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@x2"}},{"id":"x2=(x2:Int16)-instance-method","html_id":"x2=(x2:Int16)-instance-method","name":"x2=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Int16"}],"args_string":"(x2 : Int16)","args_html":"(x2 : Int16)","location":{"filename":"src/x11/segment.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L7"},"def":{"name":"x2=","args":[{"name":"x2","doc":null,"default_value":"","external_name":"x2","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x2 = x2"}},{"id":"y1:Int16-instance-method","html_id":"y1:Int16-instance-method","name":"y1","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/segment.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L6"},"def":{"name":"y1","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@y1"}},{"id":"y1=(y1:Int16)-instance-method","html_id":"y1=(y1:Int16)-instance-method","name":"y1=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Int16"}],"args_string":"(y1 : Int16)","args_html":"(y1 : Int16)","location":{"filename":"src/x11/segment.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L6"},"def":{"name":"y1=","args":[{"name":"y1","doc":null,"default_value":"","external_name":"y1","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y1 = y1"}},{"id":"y2:Int16-instance-method","html_id":"y2:Int16-instance-method","name":"y2","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/segment.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L8"},"def":{"name":"y2","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@y2"}},{"id":"y2=(y2:Int16)-instance-method","html_id":"y2=(y2:Int16)-instance-method","name":"y2=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Int16"}],"args_string":"(y2 : Int16)","args_html":"(y2 : Int16)","location":{"filename":"src/x11/segment.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/segment.cr#L8"},"def":{"name":"y2=","args":[{"name":"y2","doc":null,"default_value":"","external_name":"y2","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y2 = y2"}}],"macros":[],"types":[]},{"html_id":"x11/X11/SelectionClearEvent","path":"X11/SelectionClearEvent.html","kind":"class","full_name":"X11::SelectionClearEvent","name":"SelectionClearEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/selection_clear_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::SelectionClearEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/SelectionClearEvent.html\">SelectionClearEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PSelectionClearEvent)-class-method","html_id":"new(event:X11::C::X::PSelectionClearEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PSelectionClearEvent"}],"args_string":"(event : X11::C::X::PSelectionClearEvent)","args_html":"(event : X11::C::X::PSelectionClearEvent)","location":{"filename":"src/x11/selection_clear_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PSelectionClearEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::SelectionClearEvent)-class-method","html_id":"new(event:X11::C::X::SelectionClearEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::SelectionClearEvent"}],"args_string":"(event : X11::C::X::SelectionClearEvent)","args_html":"(event : X11::C::X::SelectionClearEvent)","location":{"filename":"src/x11/selection_clear_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::SelectionClearEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/selection_clear_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/selection_clear_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/selection_clear_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"selection:X11::C::Atom-instance-method","html_id":"selection:X11::C::Atom-instance-method","name":"selection","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Atom","args_html":" : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>","location":{"filename":"src/x11/selection_clear_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L67"},"def":{"name":"selection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Atom","visibility":"Public","body":"@event.selection"}},{"id":"selection=(selection:X11::C::Atom)-instance-method","html_id":"selection=(selection:X11::C::Atom)-instance-method","name":"selection=","doc":null,"summary":null,"abstract":false,"args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"X11::C::Atom"}],"args_string":"(selection : X11::C::Atom)","args_html":"(selection : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)","location":{"filename":"src/x11/selection_clear_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L71"},"def":{"name":"selection=","args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.selection = selection"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/selection_clear_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/selection_clear_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/selection_clear_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/selection_clear_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"time:X11::C::Time-instance-method","html_id":"time:X11::C::Time-instance-method","name":"time","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Time","args_html":" : <a href=\"../X11/C/Time.html\">X11::C::Time</a>","location":{"filename":"src/x11/selection_clear_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L75"},"def":{"name":"time","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Time","visibility":"Public","body":"@event.time"}},{"id":"time=(time:X11::C::Time)-instance-method","html_id":"time=(time:X11::C::Time)-instance-method","name":"time=","doc":null,"summary":null,"abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(time : X11::C::Time)","args_html":"(time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>)","location":{"filename":"src/x11/selection_clear_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L79"},"def":{"name":"time=","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.time = time"}},{"id":"to_unsafe:X11::C::X::PSelectionClearEvent-instance-method","html_id":"to_unsafe:X11::C::X::PSelectionClearEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PSelectionClearEvent","args_html":" : X11::C::X::PSelectionClearEvent","location":{"filename":"src/x11/selection_clear_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PSelectionClearEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::SelectionClearEvent-instance-method","html_id":"to_x:X11::C::X::SelectionClearEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::SelectionClearEvent","args_html":" : X11::C::X::SelectionClearEvent","location":{"filename":"src/x11/selection_clear_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::SelectionClearEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/selection_clear_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/selection_clear_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/selection_clear_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L59"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/selection_clear_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_clear_event.cr#L63"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/SelectionEvent","path":"X11/SelectionEvent.html","kind":"class","full_name":"X11::SelectionEvent","name":"SelectionEvent","abstract":false,"superclass":{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},"ancestors":[{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/selection_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::SelectionEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/SelectionEvent.html\">SelectionEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PSelectionEvent)-class-method","html_id":"new(event:X11::C::X::PSelectionEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PSelectionEvent"}],"args_string":"(event : X11::C::X::PSelectionEvent)","args_html":"(event : X11::C::X::PSelectionEvent)","location":{"filename":"src/x11/selection_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PSelectionEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::SelectionEvent)-class-method","html_id":"new(event:X11::C::X::SelectionEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::SelectionEvent"}],"args_string":"(event : X11::C::X::SelectionEvent)","args_html":"(event : X11::C::X::SelectionEvent)","location":{"filename":"src/x11/selection_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::SelectionEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/selection_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/selection_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/selection_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"property:X11::C::Atom-instance-method","html_id":"property:X11::C::Atom-instance-method","name":"property","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Atom","args_html":" : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>","location":{"filename":"src/x11/selection_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L83"},"def":{"name":"property","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Atom","visibility":"Public","body":"@event.property"}},{"id":"property=(property:X11::C::Atom)-instance-method","html_id":"property=(property:X11::C::Atom)-instance-method","name":"property=","doc":null,"summary":null,"abstract":false,"args":[{"name":"property","doc":null,"default_value":"","external_name":"property","restriction":"X11::C::Atom"}],"args_string":"(property : X11::C::Atom)","args_html":"(property : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)","location":{"filename":"src/x11/selection_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L87"},"def":{"name":"property=","args":[{"name":"property","doc":null,"default_value":"","external_name":"property","restriction":"X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.property = property"}},{"id":"requestor:X11::C::Window-instance-method","html_id":"requestor:X11::C::Window-instance-method","name":"requestor","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/selection_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L59"},"def":{"name":"requestor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.requestor"}},{"id":"requestor=(requestor:X11::C::Window)-instance-method","html_id":"requestor=(requestor:X11::C::Window)-instance-method","name":"requestor=","doc":null,"summary":null,"abstract":false,"args":[{"name":"requestor","doc":null,"default_value":"","external_name":"requestor","restriction":"X11::C::Window"}],"args_string":"(requestor : X11::C::Window)","args_html":"(requestor : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/selection_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L63"},"def":{"name":"requestor=","args":[{"name":"requestor","doc":null,"default_value":"","external_name":"requestor","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.requestor = requestor"}},{"id":"selection:X11::C::Atom-instance-method","html_id":"selection:X11::C::Atom-instance-method","name":"selection","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Atom","args_html":" : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>","location":{"filename":"src/x11/selection_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L67"},"def":{"name":"selection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Atom","visibility":"Public","body":"@event.selection"}},{"id":"selection=(selection:X11::C::Atom)-instance-method","html_id":"selection=(selection:X11::C::Atom)-instance-method","name":"selection=","doc":null,"summary":null,"abstract":false,"args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"X11::C::Atom"}],"args_string":"(selection : X11::C::Atom)","args_html":"(selection : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)","location":{"filename":"src/x11/selection_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L71"},"def":{"name":"selection=","args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.selection = selection"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/selection_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/selection_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/selection_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/selection_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"target:X11::C::Atom-instance-method","html_id":"target:X11::C::Atom-instance-method","name":"target","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Atom","args_html":" : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>","location":{"filename":"src/x11/selection_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L75"},"def":{"name":"target","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Atom","visibility":"Public","body":"@event.target"}},{"id":"target=(target:X11::C::Atom)-instance-method","html_id":"target=(target:X11::C::Atom)-instance-method","name":"target=","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"X11::C::Atom"}],"args_string":"(target : X11::C::Atom)","args_html":"(target : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)","location":{"filename":"src/x11/selection_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L79"},"def":{"name":"target=","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.target = target"}},{"id":"time:X11::C::Time-instance-method","html_id":"time:X11::C::Time-instance-method","name":"time","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Time","args_html":" : <a href=\"../X11/C/Time.html\">X11::C::Time</a>","location":{"filename":"src/x11/selection_event.cr","line_number":91,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L91"},"def":{"name":"time","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Time","visibility":"Public","body":"@event.time"}},{"id":"time=(time:X11::C::Time)-instance-method","html_id":"time=(time:X11::C::Time)-instance-method","name":"time=","doc":null,"summary":null,"abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(time : X11::C::Time)","args_html":"(time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>)","location":{"filename":"src/x11/selection_event.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L95"},"def":{"name":"time=","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.time = time"}},{"id":"to_unsafe:X11::C::X::PSelectionEvent-instance-method","html_id":"to_unsafe:X11::C::X::PSelectionEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PSelectionEvent","args_html":" : X11::C::X::PSelectionEvent","location":{"filename":"src/x11/selection_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PSelectionEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::SelectionEvent-instance-method","html_id":"to_x:X11::C::X::SelectionEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::SelectionEvent","args_html":" : X11::C::X::SelectionEvent","location":{"filename":"src/x11/selection_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::SelectionEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/selection_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/selection_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}}],"macros":[],"types":[]},{"html_id":"x11/X11/SelectionRequestEvent","path":"X11/SelectionRequestEvent.html","kind":"class","full_name":"X11::SelectionRequestEvent","name":"SelectionRequestEvent","abstract":false,"superclass":{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},"ancestors":[{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/selection_request_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::SelectionRequestEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/SelectionRequestEvent.html\">SelectionRequestEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PSelectionRequestEvent)-class-method","html_id":"new(event:X11::C::X::PSelectionRequestEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PSelectionRequestEvent"}],"args_string":"(event : X11::C::X::PSelectionRequestEvent)","args_html":"(event : X11::C::X::PSelectionRequestEvent)","location":{"filename":"src/x11/selection_request_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PSelectionRequestEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::SelectionRequestEvent)-class-method","html_id":"new(event:X11::C::X::SelectionRequestEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::SelectionRequestEvent"}],"args_string":"(event : X11::C::X::SelectionRequestEvent)","args_html":"(event : X11::C::X::SelectionRequestEvent)","location":{"filename":"src/x11/selection_request_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::SelectionRequestEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/selection_request_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/selection_request_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/selection_request_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"owner:X11::C::Window-instance-method","html_id":"owner:X11::C::Window-instance-method","name":"owner","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/selection_request_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L59"},"def":{"name":"owner","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.owner"}},{"id":"owner=(owner:X11::C::Window)-instance-method","html_id":"owner=(owner:X11::C::Window)-instance-method","name":"owner=","doc":null,"summary":null,"abstract":false,"args":[{"name":"owner","doc":null,"default_value":"","external_name":"owner","restriction":"X11::C::Window"}],"args_string":"(owner : X11::C::Window)","args_html":"(owner : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/selection_request_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L63"},"def":{"name":"owner=","args":[{"name":"owner","doc":null,"default_value":"","external_name":"owner","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.owner = owner"}},{"id":"property:X11::C::Atom-instance-method","html_id":"property:X11::C::Atom-instance-method","name":"property","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Atom","args_html":" : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>","location":{"filename":"src/x11/selection_request_event.cr","line_number":91,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L91"},"def":{"name":"property","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Atom","visibility":"Public","body":"@event.property"}},{"id":"property=(property:X11::C::Atom)-instance-method","html_id":"property=(property:X11::C::Atom)-instance-method","name":"property=","doc":null,"summary":null,"abstract":false,"args":[{"name":"property","doc":null,"default_value":"","external_name":"property","restriction":"X11::C::Atom"}],"args_string":"(property : X11::C::Atom)","args_html":"(property : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)","location":{"filename":"src/x11/selection_request_event.cr","line_number":95,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L95"},"def":{"name":"property=","args":[{"name":"property","doc":null,"default_value":"","external_name":"property","restriction":"X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.property = property"}},{"id":"requestor:X11::C::Window-instance-method","html_id":"requestor:X11::C::Window-instance-method","name":"requestor","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/selection_request_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L67"},"def":{"name":"requestor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.requestor"}},{"id":"requestor=(requestor:X11::C::Window)-instance-method","html_id":"requestor=(requestor:X11::C::Window)-instance-method","name":"requestor=","doc":null,"summary":null,"abstract":false,"args":[{"name":"requestor","doc":null,"default_value":"","external_name":"requestor","restriction":"X11::C::Window"}],"args_string":"(requestor : X11::C::Window)","args_html":"(requestor : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/selection_request_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L71"},"def":{"name":"requestor=","args":[{"name":"requestor","doc":null,"default_value":"","external_name":"requestor","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.requestor = requestor"}},{"id":"selection:X11::C::Atom-instance-method","html_id":"selection:X11::C::Atom-instance-method","name":"selection","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Atom","args_html":" : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>","location":{"filename":"src/x11/selection_request_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L75"},"def":{"name":"selection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Atom","visibility":"Public","body":"@event.selection"}},{"id":"selection=(selection:X11::C::Atom)-instance-method","html_id":"selection=(selection:X11::C::Atom)-instance-method","name":"selection=","doc":null,"summary":null,"abstract":false,"args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"X11::C::Atom"}],"args_string":"(selection : X11::C::Atom)","args_html":"(selection : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)","location":{"filename":"src/x11/selection_request_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L79"},"def":{"name":"selection=","args":[{"name":"selection","doc":null,"default_value":"","external_name":"selection","restriction":"X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.selection = selection"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/selection_request_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/selection_request_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/selection_request_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/selection_request_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"target:X11::C::Atom-instance-method","html_id":"target:X11::C::Atom-instance-method","name":"target","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Atom","args_html":" : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>","location":{"filename":"src/x11/selection_request_event.cr","line_number":83,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L83"},"def":{"name":"target","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Atom","visibility":"Public","body":"@event.target"}},{"id":"target=(target:X11::C::Atom)-instance-method","html_id":"target=(target:X11::C::Atom)-instance-method","name":"target=","doc":null,"summary":null,"abstract":false,"args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"X11::C::Atom"}],"args_string":"(target : X11::C::Atom)","args_html":"(target : <a href=\"../X11/C/Atom.html\">X11::C::Atom</a>)","location":{"filename":"src/x11/selection_request_event.cr","line_number":87,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L87"},"def":{"name":"target=","args":[{"name":"target","doc":null,"default_value":"","external_name":"target","restriction":"X11::C::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.target = target"}},{"id":"time:X11::C::Time-instance-method","html_id":"time:X11::C::Time-instance-method","name":"time","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Time","args_html":" : <a href=\"../X11/C/Time.html\">X11::C::Time</a>","location":{"filename":"src/x11/selection_request_event.cr","line_number":99,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L99"},"def":{"name":"time","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Time","visibility":"Public","body":"@event.time"}},{"id":"time=(time:X11::C::Time)-instance-method","html_id":"time=(time:X11::C::Time)-instance-method","name":"time=","doc":null,"summary":null,"abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"args_string":"(time : X11::C::Time)","args_html":"(time : <a href=\"../X11/C/Time.html\">X11::C::Time</a>)","location":{"filename":"src/x11/selection_request_event.cr","line_number":103,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L103"},"def":{"name":"time=","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"X11::C::Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.time = time"}},{"id":"to_unsafe:X11::C::X::PSelectionRequestEvent-instance-method","html_id":"to_unsafe:X11::C::X::PSelectionRequestEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PSelectionRequestEvent","args_html":" : X11::C::X::PSelectionRequestEvent","location":{"filename":"src/x11/selection_request_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PSelectionRequestEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::SelectionRequestEvent-instance-method","html_id":"to_x:X11::C::X::SelectionRequestEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::SelectionRequestEvent","args_html":" : X11::C::X::SelectionRequestEvent","location":{"filename":"src/x11/selection_request_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::SelectionRequestEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/selection_request_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/selection_request_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/selection_request_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}}],"macros":[],"types":[]},{"html_id":"x11/X11/ServerInterpretedAddress","path":"X11/ServerInterpretedAddress.html","kind":"struct","full_name":"X11::ServerInterpretedAddress","name":"ServerInterpretedAddress","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/server_interpreted_address.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/server_interpreted_address.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(type:String,value:String)-class-method","html_id":"new(type:String,value:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"args_string":"(type : String, value : String)","args_html":"(type : String, value : String)","location":{"filename":"src/x11/server_interpreted_address.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/server_interpreted_address.cr#L5"},"def":{"name":"new","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(type, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(server_interpreted_address:X11::C::X::PServerInterpretedAddress)-class-method","html_id":"new(server_interpreted_address:X11::C::X::PServerInterpretedAddress)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"server_interpreted_address","doc":null,"default_value":"","external_name":"server_interpreted_address","restriction":"X11::C::X::PServerInterpretedAddress"}],"args_string":"(server_interpreted_address : X11::C::X::PServerInterpretedAddress)","args_html":"(server_interpreted_address : X11::C::X::PServerInterpretedAddress)","location":{"filename":"src/x11/server_interpreted_address.cr","line_number":13,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/server_interpreted_address.cr#L13"},"def":{"name":"new","args":[{"name":"server_interpreted_address","doc":null,"default_value":"","external_name":"server_interpreted_address","restriction":"X11::C::X::PServerInterpretedAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(server_interpreted_address)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(server_interpreted_address:X11::C::X::ServerInterpretedAddress)-class-method","html_id":"new(server_interpreted_address:X11::C::X::ServerInterpretedAddress)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"server_interpreted_address","doc":null,"default_value":"","external_name":"server_interpreted_address","restriction":"X11::C::X::ServerInterpretedAddress"}],"args_string":"(server_interpreted_address : X11::C::X::ServerInterpretedAddress)","args_html":"(server_interpreted_address : X11::C::X::ServerInterpretedAddress)","location":{"filename":"src/x11/server_interpreted_address.cr","line_number":18,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/server_interpreted_address.cr#L18"},"def":{"name":"new","args":[{"name":"server_interpreted_address","doc":null,"default_value":"","external_name":"server_interpreted_address","restriction":"X11::C::X::ServerInterpretedAddress"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(server_interpreted_address)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"family:Int32-instance-method","html_id":"family:Int32-instance-method","name":"family","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/server_interpreted_address.cr","line_number":29,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/server_interpreted_address.cr#L29"},"def":{"name":"family","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"X11::C::FamilyServerInterpreted"}},{"id":"to_unsafe:X11::C::X::PServerInterpretedAddress-instance-method","html_id":"to_unsafe:X11::C::X::PServerInterpretedAddress-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PServerInterpretedAddress","args_html":" : X11::C::X::PServerInterpretedAddress","location":{"filename":"src/x11/server_interpreted_address.cr","line_number":21,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/server_interpreted_address.cr#L21"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PServerInterpretedAddress","visibility":"Public","body":"pointerof(@server_interpreted_address)"}},{"id":"to_x:X11::C::X::ServerInterpretedAddress-instance-method","html_id":"to_x:X11::C::X::ServerInterpretedAddress-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::ServerInterpretedAddress","args_html":" : X11::C::X::ServerInterpretedAddress","location":{"filename":"src/x11/server_interpreted_address.cr","line_number":25,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/server_interpreted_address.cr#L25"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::ServerInterpretedAddress","visibility":"Public","body":"@server_interpreted_address"}},{"id":"type:String-instance-method","html_id":"type:String-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/x11/server_interpreted_address.cr","line_number":37,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/server_interpreted_address.cr#L37"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.new(@server_interpreted_address.type)"}},{"id":"type_length:Int32-instance-method","html_id":"type_length:Int32-instance-method","name":"type_length","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/server_interpreted_address.cr","line_number":33,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/server_interpreted_address.cr#L33"},"def":{"name":"type_length","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@server_interpreted_address.typelength"}},{"id":"value:String-instance-method","html_id":"value:String-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/x11/server_interpreted_address.cr","line_number":45,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/server_interpreted_address.cr#L45"},"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.new(@server_interpreted_address.value)"}},{"id":"value_length:Int32-instance-method","html_id":"value_length:Int32-instance-method","name":"value_length","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/server_interpreted_address.cr","line_number":41,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/server_interpreted_address.cr#L41"},"def":{"name":"value_length","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@server_interpreted_address.valuelength"}}],"macros":[],"types":[]},{"html_id":"x11/X11/SetWindowAttributes","path":"X11/SetWindowAttributes.html","kind":"class","full_name":"X11::SetWindowAttributes","name":"SetWindowAttributes","abstract":false,"superclass":{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/set_window_attributes.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(attributes:X11::C::X::PSetWindowAttributes)-class-method","html_id":"new(attributes:X11::C::X::PSetWindowAttributes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"X11::C::X::PSetWindowAttributes"}],"args_string":"(attributes : X11::C::X::PSetWindowAttributes)","args_html":"(attributes : X11::C::X::PSetWindowAttributes)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L5"},"def":{"name":"new","args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"X11::C::X::PSetWindowAttributes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(attributes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(attributes:X11::C::X::SetWindowAttributes)-class-method","html_id":"new(attributes:X11::C::X::SetWindowAttributes)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"X11::C::X::SetWindowAttributes"}],"args_string":"(attributes : X11::C::X::SetWindowAttributes)","args_html":"(attributes : X11::C::X::SetWindowAttributes)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":10,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L10"},"def":{"name":"new","args":[{"name":"attributes","doc":null,"default_value":"","external_name":"attributes","restriction":"X11::C::X::SetWindowAttributes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(attributes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/set_window_attributes.cr","line_number":13,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L13"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"background_pixel:UInt64-instance-method","html_id":"background_pixel:UInt64-instance-method","name":"background_pixel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/set_window_attributes.cr","line_number":25,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L25"},"def":{"name":"background_pixel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@attributes.background_pixel"}},{"id":"background_pixel=(bg_pix:UInt64)-instance-method","html_id":"background_pixel=(bg_pix:UInt64)-instance-method","name":"background_pixel=","doc":null,"summary":null,"abstract":false,"args":[{"name":"bg_pix","doc":null,"default_value":"","external_name":"bg_pix","restriction":"UInt64"}],"args_string":"(bg_pix : UInt64)","args_html":"(bg_pix : UInt64)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":29,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L29"},"def":{"name":"background_pixel=","args":[{"name":"bg_pix","doc":null,"default_value":"","external_name":"bg_pix","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.background_pixel = bg_pix"}},{"id":"background_pixmap:X11::C::Pixmap-instance-method","html_id":"background_pixmap:X11::C::Pixmap-instance-method","name":"background_pixmap","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Pixmap","args_html":" : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>","location":{"filename":"src/x11/set_window_attributes.cr","line_number":21,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L21"},"def":{"name":"background_pixmap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Pixmap","visibility":"Public","body":"@attributes.background_pixmap"}},{"id":"backing_pixel:UInt64-instance-method","html_id":"backing_pixel:UInt64-instance-method","name":"backing_pixel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/set_window_attributes.cr","line_number":81,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L81"},"def":{"name":"backing_pixel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@attributes.backing_pixel"}},{"id":"backing_pixel=(pixel:UInt64)-instance-method","html_id":"backing_pixel=(pixel:UInt64)-instance-method","name":"backing_pixel=","doc":null,"summary":null,"abstract":false,"args":[{"name":"pixel","doc":null,"default_value":"","external_name":"pixel","restriction":"UInt64"}],"args_string":"(pixel : UInt64)","args_html":"(pixel : UInt64)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":85,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L85"},"def":{"name":"backing_pixel=","args":[{"name":"pixel","doc":null,"default_value":"","external_name":"pixel","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.backing_pixel = pixel"}},{"id":"backing_planes:UInt64-instance-method","html_id":"backing_planes:UInt64-instance-method","name":"backing_planes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/set_window_attributes.cr","line_number":73,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L73"},"def":{"name":"backing_planes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@attributes.backing_planes"}},{"id":"backing_planes=(planes:UInt64)-instance-method","html_id":"backing_planes=(planes:UInt64)-instance-method","name":"backing_planes=","doc":null,"summary":null,"abstract":false,"args":[{"name":"planes","doc":null,"default_value":"","external_name":"planes","restriction":"UInt64"}],"args_string":"(planes : UInt64)","args_html":"(planes : UInt64)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":77,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L77"},"def":{"name":"backing_planes=","args":[{"name":"planes","doc":null,"default_value":"","external_name":"planes","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.backing_planes = planes"}},{"id":"backing_store:Int32-instance-method","html_id":"backing_store:Int32-instance-method","name":"backing_store","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/set_window_attributes.cr","line_number":65,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L65"},"def":{"name":"backing_store","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@attributes.backing_store"}},{"id":"backing_store=(store:Int32)-instance-method","html_id":"backing_store=(store:Int32)-instance-method","name":"backing_store=","doc":null,"summary":null,"abstract":false,"args":[{"name":"store","doc":null,"default_value":"","external_name":"store","restriction":"Int32"}],"args_string":"(store : Int32)","args_html":"(store : Int32)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":69,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L69"},"def":{"name":"backing_store=","args":[{"name":"store","doc":null,"default_value":"","external_name":"store","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.backing_store = store"}},{"id":"bit_gravity:Int32-instance-method","html_id":"bit_gravity:Int32-instance-method","name":"bit_gravity","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/set_window_attributes.cr","line_number":49,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L49"},"def":{"name":"bit_gravity","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@attributes.bit_gravity"}},{"id":"bit_gravity=(gravity:Int32)-instance-method","html_id":"bit_gravity=(gravity:Int32)-instance-method","name":"bit_gravity=","doc":null,"summary":null,"abstract":false,"args":[{"name":"gravity","doc":null,"default_value":"","external_name":"gravity","restriction":"Int32"}],"args_string":"(gravity : Int32)","args_html":"(gravity : Int32)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":53,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L53"},"def":{"name":"bit_gravity=","args":[{"name":"gravity","doc":null,"default_value":"","external_name":"gravity","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.bit_gravity = gravity"}},{"id":"border_pixel:UInt64-instance-method","html_id":"border_pixel:UInt64-instance-method","name":"border_pixel","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/set_window_attributes.cr","line_number":41,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L41"},"def":{"name":"border_pixel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@attributes.border_pixel"}},{"id":"border_pixel=(pixel:UInt64)-instance-method","html_id":"border_pixel=(pixel:UInt64)-instance-method","name":"border_pixel=","doc":null,"summary":null,"abstract":false,"args":[{"name":"pixel","doc":null,"default_value":"","external_name":"pixel","restriction":"UInt64"}],"args_string":"(pixel : UInt64)","args_html":"(pixel : UInt64)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":45,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L45"},"def":{"name":"border_pixel=","args":[{"name":"pixel","doc":null,"default_value":"","external_name":"pixel","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.border_pixel = pixel"}},{"id":"border_pixmap:X11::C::Pixmap-instance-method","html_id":"border_pixmap:X11::C::Pixmap-instance-method","name":"border_pixmap","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Pixmap","args_html":" : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>","location":{"filename":"src/x11/set_window_attributes.cr","line_number":33,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L33"},"def":{"name":"border_pixmap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Pixmap","visibility":"Public","body":"@attibutes.border_pixmap"}},{"id":"border_pixmap=(pixmap:X11::C::Pixmap)-instance-method","html_id":"border_pixmap=(pixmap:X11::C::Pixmap)-instance-method","name":"border_pixmap=","doc":null,"summary":null,"abstract":false,"args":[{"name":"pixmap","doc":null,"default_value":"","external_name":"pixmap","restriction":"X11::C::Pixmap"}],"args_string":"(pixmap : X11::C::Pixmap)","args_html":"(pixmap : <a href=\"../X11/C/Pixmap.html\">X11::C::Pixmap</a>)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":37,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L37"},"def":{"name":"border_pixmap=","args":[{"name":"pixmap","doc":null,"default_value":"","external_name":"pixmap","restriction":"X11::C::Pixmap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attibutes.border_pixmap = pixmap"}},{"id":"colormap:X11::C::Colormap-instance-method","html_id":"colormap:X11::C::Colormap-instance-method","name":"colormap","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Colormap","args_html":" : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>","location":{"filename":"src/x11/set_window_attributes.cr","line_number":121,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L121"},"def":{"name":"colormap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Colormap","visibility":"Public","body":"@attributes.colormap"}},{"id":"colormap=(colormap:X11::C::Colormap)-instance-method","html_id":"colormap=(colormap:X11::C::Colormap)-instance-method","name":"colormap=","doc":null,"summary":null,"abstract":false,"args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"args_string":"(colormap : X11::C::Colormap)","args_html":"(colormap : <a href=\"../X11/C/Colormap.html\">X11::C::Colormap</a>)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":125,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L125"},"def":{"name":"colormap=","args":[{"name":"colormap","doc":null,"default_value":"","external_name":"colormap","restriction":"X11::C::Colormap"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.colormap = colormap"}},{"id":"cursor:X11::C::Cursor-instance-method","html_id":"cursor:X11::C::Cursor-instance-method","name":"cursor","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Cursor","args_html":" : <a href=\"../X11/C/Cursor.html\">X11::C::Cursor</a>","location":{"filename":"src/x11/set_window_attributes.cr","line_number":129,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L129"},"def":{"name":"cursor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Cursor","visibility":"Public","body":"@attributes.cursor"}},{"id":"cursor=(cursor:X11::C::Cursor)-instance-method","html_id":"cursor=(cursor:X11::C::Cursor)-instance-method","name":"cursor=","doc":null,"summary":null,"abstract":false,"args":[{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"}],"args_string":"(cursor : X11::C::Cursor)","args_html":"(cursor : <a href=\"../X11/C/Cursor.html\">X11::C::Cursor</a>)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":133,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L133"},"def":{"name":"cursor=","args":[{"name":"cursor","doc":null,"default_value":"","external_name":"cursor","restriction":"X11::C::Cursor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.cursor = cursor"}},{"id":"do_not_propagate_mask:Int64-instance-method","html_id":"do_not_propagate_mask:Int64-instance-method","name":"do_not_propagate_mask","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","args_html":" : Int64","location":{"filename":"src/x11/set_window_attributes.cr","line_number":105,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L105"},"def":{"name":"do_not_propagate_mask","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@attributes.do_not_propagate_mask"}},{"id":"do_not_propagate_mask=(mask:Int64)-instance-method","html_id":"do_not_propagate_mask=(mask:Int64)-instance-method","name":"do_not_propagate_mask=","doc":null,"summary":null,"abstract":false,"args":[{"name":"mask","doc":null,"default_value":"","external_name":"mask","restriction":"Int64"}],"args_string":"(mask : Int64)","args_html":"(mask : Int64)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":109,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L109"},"def":{"name":"do_not_propagate_mask=","args":[{"name":"mask","doc":null,"default_value":"","external_name":"mask","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.do_not_propagate_mask = mask"}},{"id":"event_mask:Int64-instance-method","html_id":"event_mask:Int64-instance-method","name":"event_mask","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","args_html":" : Int64","location":{"filename":"src/x11/set_window_attributes.cr","line_number":97,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L97"},"def":{"name":"event_mask","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@attributes.event_mask"}},{"id":"event_mask=(mask:Int64)-instance-method","html_id":"event_mask=(mask:Int64)-instance-method","name":"event_mask=","doc":null,"summary":null,"abstract":false,"args":[{"name":"mask","doc":null,"default_value":"","external_name":"mask","restriction":"Int64"}],"args_string":"(mask : Int64)","args_html":"(mask : Int64)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":101,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L101"},"def":{"name":"event_mask=","args":[{"name":"mask","doc":null,"default_value":"","external_name":"mask","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.event_mask = mask"}},{"id":"override_redirect:Bool-instance-method","html_id":"override_redirect:Bool-instance-method","name":"override_redirect","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/set_window_attributes.cr","line_number":113,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L113"},"def":{"name":"override_redirect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@attributes.override_redirect == 1 ? true : false"}},{"id":"override_redirect=(redirect:Bool)-instance-method","html_id":"override_redirect=(redirect:Bool)-instance-method","name":"override_redirect=","doc":null,"summary":null,"abstract":false,"args":[{"name":"redirect","doc":null,"default_value":"","external_name":"redirect","restriction":"Bool"}],"args_string":"(redirect : Bool)","args_html":"(redirect : Bool)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":117,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L117"},"def":{"name":"override_redirect=","args":[{"name":"redirect","doc":null,"default_value":"","external_name":"redirect","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.override_redirect = (redirect ? 1 : 0)"}},{"id":"save_under:Bool-instance-method","html_id":"save_under:Bool-instance-method","name":"save_under","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/set_window_attributes.cr","line_number":89,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L89"},"def":{"name":"save_under","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@attributes.save_under"}},{"id":"save_under=(b:Bool)-instance-method","html_id":"save_under=(b:Bool)-instance-method","name":"save_under=","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bool"}],"args_string":"(b : Bool)","args_html":"(b : Bool)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":93,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L93"},"def":{"name":"save_under=","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.save_under = (b ? 1 : 0)"}},{"id":"to_unsafe:X11::C::X::PSetWindowAttributes-instance-method","html_id":"to_unsafe:X11::C::X::PSetWindowAttributes-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PSetWindowAttributes","args_html":" : X11::C::X::PSetWindowAttributes","location":{"filename":"src/x11/set_window_attributes.cr","line_number":17,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L17"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PSetWindowAttributes","visibility":"Public","body":"pointerof(@attributes)"}},{"id":"win_gravity:Int32-instance-method","html_id":"win_gravity:Int32-instance-method","name":"win_gravity","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/set_window_attributes.cr","line_number":57,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L57"},"def":{"name":"win_gravity","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@attributes.win_gravity"}},{"id":"win_gravity=(gravity:Int32)-instance-method","html_id":"win_gravity=(gravity:Int32)-instance-method","name":"win_gravity=","doc":null,"summary":null,"abstract":false,"args":[{"name":"gravity","doc":null,"default_value":"","external_name":"gravity","restriction":"Int32"}],"args_string":"(gravity : Int32)","args_html":"(gravity : Int32)","location":{"filename":"src/x11/set_window_attributes.cr","line_number":61,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/set_window_attributes.cr#L61"},"def":{"name":"win_gravity=","args":[{"name":"gravity","doc":null,"default_value":"","external_name":"gravity","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes.win_gravity = gravity"}}],"macros":[],"types":[]},{"html_id":"x11/X11/TextItem","path":"X11/TextItem.html","kind":"struct","full_name":"X11::TextItem","name":"TextItem","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/text_item.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(chars:String,delta:Int32,font:X11::C::Font)-class-method","html_id":"new(chars:String,delta:Int32,font:X11::C::Font)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"chars","doc":null,"default_value":"","external_name":"chars","restriction":"String"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Int32"},{"name":"font","doc":null,"default_value":"","external_name":"font","restriction":"X11::C::Font"}],"args_string":"(chars : String, delta : Int32, font : X11::C::Font)","args_html":"(chars : String, delta : Int32, font : <a href=\"../X11/C/Font.html\">X11::C::Font</a>)","location":{"filename":"src/x11/text_item.cr","line_number":17,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L17"},"def":{"name":"new","args":[{"name":"chars","doc":null,"default_value":"","external_name":"chars","restriction":"String"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Int32"},{"name":"font","doc":null,"default_value":"","external_name":"font","restriction":"X11::C::Font"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(chars, delta, font)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(text_item:X11::C::X::TextItem)-class-method","html_id":"new(text_item:X11::C::X::TextItem)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"text_item","doc":null,"default_value":"","external_name":"text_item","restriction":"X11::C::X::TextItem"}],"args_string":"(text_item : X11::C::X::TextItem)","args_html":"(text_item : X11::C::X::TextItem)","location":{"filename":"src/x11/text_item.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L5"},"def":{"name":"new","args":[{"name":"text_item","doc":null,"default_value":"","external_name":"text_item","restriction":"X11::C::X::TextItem"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(text_item)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(text_item:X11::C::X::PTextItem)-class-method","html_id":"new(text_item:X11::C::X::PTextItem)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"text_item","doc":null,"default_value":"","external_name":"text_item","restriction":"X11::C::X::PTextItem"}],"args_string":"(text_item : X11::C::X::PTextItem)","args_html":"(text_item : X11::C::X::PTextItem)","location":{"filename":"src/x11/text_item.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L8"},"def":{"name":"new","args":[{"name":"text_item","doc":null,"default_value":"","external_name":"text_item","restriction":"X11::C::X::PTextItem"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(text_item)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/text_item.cr","line_number":13,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L13"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"chars:String-instance-method","html_id":"chars:String-instance-method","name":"chars","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/x11/text_item.cr","line_number":25,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L25"},"def":{"name":"chars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.new(@text_item.chars)"}},{"id":"chars=(chars:String)-instance-method","html_id":"chars=(chars:String)-instance-method","name":"chars=","doc":null,"summary":null,"abstract":false,"args":[{"name":"chars","doc":null,"default_value":"","external_name":"chars","restriction":"String"}],"args_string":"(chars : String)","args_html":"(chars : String)","location":{"filename":"src/x11/text_item.cr","line_number":29,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L29"},"def":{"name":"chars=","args":[{"name":"chars","doc":null,"default_value":"","external_name":"chars","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_item.chars = chars.to_unsafe\n@text_item.nchars = chars.size\n"}},{"id":"delta:Int32-instance-method","html_id":"delta:Int32-instance-method","name":"delta","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/text_item.cr","line_number":38,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L38"},"def":{"name":"delta","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@text_item.delta"}},{"id":"delta=(delta:Int32)-instance-method","html_id":"delta=(delta:Int32)-instance-method","name":"delta=","doc":null,"summary":null,"abstract":false,"args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Int32"}],"args_string":"(delta : Int32)","args_html":"(delta : Int32)","location":{"filename":"src/x11/text_item.cr","line_number":42,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L42"},"def":{"name":"delta=","args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_item.delta = delta"}},{"id":"font:X11::C::Font-instance-method","html_id":"font:X11::C::Font-instance-method","name":"font","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Font","args_html":" : <a href=\"../X11/C/Font.html\">X11::C::Font</a>","location":{"filename":"src/x11/text_item.cr","line_number":46,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L46"},"def":{"name":"font","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Font","visibility":"Public","body":"@text_item.font"}},{"id":"font=(font:X11::C::Font)-instance-method","html_id":"font=(font:X11::C::Font)-instance-method","name":"font=","doc":null,"summary":null,"abstract":false,"args":[{"name":"font","doc":null,"default_value":"","external_name":"font","restriction":"X11::C::Font"}],"args_string":"(font : X11::C::Font)","args_html":"(font : <a href=\"../X11/C/Font.html\">X11::C::Font</a>)","location":{"filename":"src/x11/text_item.cr","line_number":50,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L50"},"def":{"name":"font=","args":[{"name":"font","doc":null,"default_value":"","external_name":"font","restriction":"X11::C::Font"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_item.font = font"}},{"id":"nchars:Int32-instance-method","html_id":"nchars:Int32-instance-method","name":"nchars","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/text_item.cr","line_number":34,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L34"},"def":{"name":"nchars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@text_item.nchars"}},{"id":"to_unsafe:X11::C::X::PTextItem-instance-method","html_id":"to_unsafe:X11::C::X::PTextItem-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PTextItem","args_html":" : X11::C::X::PTextItem","location":{"filename":"src/x11/text_item.cr","line_number":58,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L58"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PTextItem","visibility":"Public","body":"pointerof(@text_item)"}},{"id":"to_x:X11::C::X::TextItem-instance-method","html_id":"to_x:X11::C::X::TextItem-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::TextItem","args_html":" : X11::C::X::TextItem","location":{"filename":"src/x11/text_item.cr","line_number":54,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/text_item.cr#L54"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::TextItem","visibility":"Public","body":"@text_item"}}],"macros":[],"types":[]},{"html_id":"x11/X11/TimeCoord","path":"X11/TimeCoord.html","kind":"struct","full_name":"X11::TimeCoord","name":"TimeCoord","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/time_coord.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/time_coord.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(time:UInt64,x:Int16,y:Int16)-class-method","html_id":"new(time:UInt64,x:Int16,y:Int16)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"UInt64"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"}],"args_string":"(time : UInt64, x : Int16, y : Int16)","args_html":"(time : UInt64, x : Int16, y : Int16)","location":{"filename":"src/x11/time_coord.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/time_coord.cr#L11"},"def":{"name":"new","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"UInt64"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int16"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(time, x, y)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(time_coord:X11::C::TimeCoord)-class-method","html_id":"new(time_coord:X11::C::TimeCoord)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"time_coord","doc":null,"default_value":"","external_name":"time_coord","restriction":"X11::C::TimeCoord"}],"args_string":"(time_coord : X11::C::TimeCoord)","args_html":"(time_coord : X11::C::TimeCoord)","location":{"filename":"src/x11/time_coord.cr","line_number":14,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/time_coord.cr#L14"},"def":{"name":"new","args":[{"name":"time_coord","doc":null,"default_value":"","external_name":"time_coord","restriction":"X11::C::TimeCoord"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(time_coord)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(time_coord:X11::C::PTimeCoord)-class-method","html_id":"new(time_coord:X11::C::PTimeCoord)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"time_coord","doc":null,"default_value":"","external_name":"time_coord","restriction":"X11::C::PTimeCoord"}],"args_string":"(time_coord : X11::C::PTimeCoord)","args_html":"(time_coord : X11::C::PTimeCoord)","location":{"filename":"src/x11/time_coord.cr","line_number":20,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/time_coord.cr#L20"},"def":{"name":"new","args":[{"name":"time_coord","doc":null,"default_value":"","external_name":"time_coord","restriction":"X11::C::PTimeCoord"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(time_coord)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"time:UInt64-instance-method","html_id":"time:UInt64-instance-method","name":"time","doc":"The time in milliseconds.","summary":"<p>The time in milliseconds.</p>","abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/time_coord.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/time_coord.cr#L6"},"def":{"name":"time","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@time"}},{"id":"time=(time:UInt64)-instance-method","html_id":"time=(time:UInt64)-instance-method","name":"time=","doc":"The time in milliseconds.","summary":"<p>The time in milliseconds.</p>","abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"UInt64"}],"args_string":"(time : UInt64)","args_html":"(time : UInt64)","location":{"filename":"src/x11/time_coord.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/time_coord.cr#L6"},"def":{"name":"time=","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@time = time"}},{"id":"x:Int16-instance-method","html_id":"x:Int16-instance-method","name":"x","doc":"The x and y members are set to the coordinates of the pointer and are reported relative to the origin of the specified window.","summary":"<p>The x and y members are set to the coordinates of the pointer and are reported relative to the origin of the specified window.</p>","abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/time_coord.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/time_coord.cr#L9"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x"}},{"id":"x=(x)-instance-method","html_id":"x=(x)-instance-method","name":"x=","doc":"The x and y members are set to the coordinates of the pointer and are reported relative to the origin of the specified window.","summary":"<p>The x and y members are set to the coordinates of the pointer and are reported relative to the origin of the specified window.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"args_string":"(x)","args_html":"(x)","location":{"filename":"src/x11/time_coord.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/time_coord.cr#L9"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = x"}},{"id":"y:Int16-instance-method","html_id":"y:Int16-instance-method","name":"y","doc":"The x and y members are set to the coordinates of the pointer and are reported relative to the origin of the specified window.","summary":"<p>The x and y members are set to the coordinates of the pointer and are reported relative to the origin of the specified window.</p>","abstract":false,"args":[],"args_string":" : Int16","args_html":" : Int16","location":{"filename":"src/x11/time_coord.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/time_coord.cr#L9"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"@y"}},{"id":"y=(y:Int16)-instance-method","html_id":"y=(y:Int16)-instance-method","name":"y=","doc":"The x and y members are set to the coordinates of the pointer and are reported relative to the origin of the specified window.","summary":"<p>The x and y members are set to the coordinates of the pointer and are reported relative to the origin of the specified window.</p>","abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"}],"args_string":"(y : Int16)","args_html":"(y : Int16)","location":{"filename":"src/x11/time_coord.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/time_coord.cr#L9"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = y"}}],"macros":[],"types":[]},{"html_id":"x11/X11/UnmapEvent","path":"X11/UnmapEvent.html","kind":"class","full_name":"X11::UnmapEvent","name":"UnmapEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/unmap_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::UnmapEvent` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/UnmapEvent.html\">UnmapEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PUnmapEvent)-class-method","html_id":"new(event:X11::C::X::PUnmapEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PUnmapEvent"}],"args_string":"(event : X11::C::X::PUnmapEvent)","args_html":"(event : X11::C::X::PUnmapEvent)","location":{"filename":"src/x11/unmap_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PUnmapEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::UnmapEvent)-class-method","html_id":"new(event:X11::C::X::UnmapEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::UnmapEvent"}],"args_string":"(event : X11::C::X::UnmapEvent)","args_html":"(event : X11::C::X::UnmapEvent)","location":{"filename":"src/x11/unmap_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::UnmapEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/unmap_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/unmap_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L51"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/unmap_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L55"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"event:X11::C::Window-instance-method","html_id":"event:X11::C::Window-instance-method","name":"event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/unmap_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L59"},"def":{"name":"event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.event"}},{"id":"event=(event:X11::C::Window)-instance-method","html_id":"event=(event:X11::C::Window)-instance-method","name":"event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"args_string":"(event : X11::C::Window)","args_html":"(event : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/unmap_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L63"},"def":{"name":"event=","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.event = event"}},{"id":"from_configure:Bool-instance-method","html_id":"from_configure:Bool-instance-method","name":"from_configure","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/unmap_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L75"},"def":{"name":"from_configure","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.from_configure ? true : false"}},{"id":"from_configure=(from_configure:Bool)-instance-method","html_id":"from_configure=(from_configure:Bool)-instance-method","name":"from_configure=","doc":null,"summary":null,"abstract":false,"args":[{"name":"from_configure","doc":null,"default_value":"","external_name":"from_configure","restriction":"Bool"}],"args_string":"(from_configure : Bool)","args_html":"(from_configure : Bool)","location":{"filename":"src/x11/unmap_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L79"},"def":{"name":"from_configure=","args":[{"name":"from_configure","doc":null,"default_value":"","external_name":"from_configure","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.from_configure = from_configure ? 1 : 0"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/unmap_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L43"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/unmap_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L47"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/unmap_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L35"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/unmap_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L39"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"to_unsafe:X11::C::X::PUnmapEvent-instance-method","html_id":"to_unsafe:X11::C::X::PUnmapEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PUnmapEvent","args_html":" : X11::C::X::PUnmapEvent","location":{"filename":"src/x11/unmap_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PUnmapEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::UnmapEvent-instance-method","html_id":"to_x:X11::C::X::UnmapEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::UnmapEvent","args_html":" : X11::C::X::UnmapEvent","location":{"filename":"src/x11/unmap_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::UnmapEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/unmap_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L27"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/unmap_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L31"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/unmap_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/unmap_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/unmap_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/VisibilityEvent","path":"X11/VisibilityEvent.html","kind":"class","full_name":"X11::VisibilityEvent","name":"VisibilityEvent","abstract":false,"superclass":{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},"ancestors":[{"html_id":"x11/X11/WindowEvent","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent"},{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/visibility_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L6"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper from `X11::C::X::VisibilityEvent` structure.","summary":"<p>Wrapper from <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/VisibilityEvent.html\">VisibilityEvent</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(event:X11::C::X::PVisibilityEvent)-class-method","html_id":"new(event:X11::C::X::PVisibilityEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PVisibilityEvent"}],"args_string":"(event : X11::C::X::PVisibilityEvent)","args_html":"(event : X11::C::X::PVisibilityEvent)","location":{"filename":"src/x11/visibility_event.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L11"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::PVisibilityEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(event:X11::C::X::VisibilityEvent)-class-method","html_id":"new(event:X11::C::X::VisibilityEvent)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::VisibilityEvent"}],"args_string":"(event : X11::C::X::VisibilityEvent)","args_html":"(event : X11::C::X::VisibilityEvent)","location":{"filename":"src/x11/visibility_event.cr","line_number":16,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L16"},"def":{"name":"new","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"X11::C::X::VisibilityEvent"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/visibility_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L7"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/visibility_event.cr","line_number":59,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L59"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":"Display.new(@event.display)"}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":false,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/visibility_event.cr","line_number":63,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L63"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.display = display.to_unsafe"}},{"id":"enter?:Bool-instance-method","html_id":"enter?:Bool-instance-method","name":"enter?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/visibility_event.cr","line_number":27,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L27"},"def":{"name":"enter?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.type == EnterNotify"}},{"id":"leave?:Bool-instance-method","html_id":"leave?:Bool-instance-method","name":"leave?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/visibility_event.cr","line_number":31,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L31"},"def":{"name":"leave?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.type == LeaveNotify"}},{"id":"send_event:Bool-instance-method","html_id":"send_event:Bool-instance-method","name":"send_event","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/x11/visibility_event.cr","line_number":51,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L51"},"def":{"name":"send_event","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@event.send_event ? true : false"}},{"id":"send_event=(send_event:Bool)-instance-method","html_id":"send_event=(send_event:Bool)-instance-method","name":"send_event=","doc":null,"summary":null,"abstract":false,"args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"args_string":"(send_event : Bool)","args_html":"(send_event : Bool)","location":{"filename":"src/x11/visibility_event.cr","line_number":55,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L55"},"def":{"name":"send_event=","args":[{"name":"send_event","doc":null,"default_value":"","external_name":"send_event","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.send_event = send_event ? 1 : 0"}},{"id":"serial:UInt64-instance-method","html_id":"serial:UInt64-instance-method","name":"serial","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : UInt64","args_html":" : UInt64","location":{"filename":"src/x11/visibility_event.cr","line_number":43,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L43"},"def":{"name":"serial","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"@event.serial"}},{"id":"serial=(serial:UInt64)-instance-method","html_id":"serial=(serial:UInt64)-instance-method","name":"serial=","doc":null,"summary":null,"abstract":false,"args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"args_string":"(serial : UInt64)","args_html":"(serial : UInt64)","location":{"filename":"src/x11/visibility_event.cr","line_number":47,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L47"},"def":{"name":"serial=","args":[{"name":"serial","doc":null,"default_value":"","external_name":"serial","restriction":"UInt64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.serial = serial"}},{"id":"state:Int32-instance-method","html_id":"state:Int32-instance-method","name":"state","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/visibility_event.cr","line_number":75,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L75"},"def":{"name":"state","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.state"}},{"id":"state=(state:Int32)-instance-method","html_id":"state=(state:Int32)-instance-method","name":"state=","doc":null,"summary":null,"abstract":false,"args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"Int32"}],"args_string":"(state : Int32)","args_html":"(state : Int32)","location":{"filename":"src/x11/visibility_event.cr","line_number":79,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L79"},"def":{"name":"state=","args":[{"name":"state","doc":null,"default_value":"","external_name":"state","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.state = state"}},{"id":"to_unsafe:X11::C::X::PVisibilityEvent-instance-method","html_id":"to_unsafe:X11::C::X::PVisibilityEvent-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PVisibilityEvent","args_html":" : X11::C::X::PVisibilityEvent","location":{"filename":"src/x11/visibility_event.cr","line_number":19,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L19"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PVisibilityEvent","visibility":"Public","body":"return pointerof(@event)"}},{"id":"to_x:X11::C::X::VisibilityEvent-instance-method","html_id":"to_x:X11::C::X::VisibilityEvent-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::VisibilityEvent","args_html":" : X11::C::X::VisibilityEvent","location":{"filename":"src/x11/visibility_event.cr","line_number":23,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L23"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::VisibilityEvent","visibility":"Public","body":"@event"}},{"id":"type:Int32-instance-method","html_id":"type:Int32-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/visibility_event.cr","line_number":35,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L35"},"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@event.type"}},{"id":"type=(type:Int32)-instance-method","html_id":"type=(type:Int32)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"args_string":"(type : Int32)","args_html":"(type : Int32)","location":{"filename":"src/x11/visibility_event.cr","line_number":39,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L39"},"def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.type = type"}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/visibility_event.cr","line_number":67,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L67"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@event.window"}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":false,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/visibility_event.cr","line_number":71,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visibility_event.cr#L71"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@event.window = window"}}],"macros":[],"types":[]},{"html_id":"x11/X11/Visual","path":"X11/Visual.html","kind":"class","full_name":"X11::Visual","name":"Visual","abstract":false,"superclass":{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/visual.cr","line_number":4,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visual.cr#L4"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(visual:X11::C::X::PVisual)-class-method","html_id":"new(visual:X11::C::X::PVisual)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"visual","doc":null,"default_value":"","external_name":"visual","restriction":"X11::C::X::PVisual"}],"args_string":"(visual : X11::C::X::PVisual)","args_html":"(visual : X11::C::X::PVisual)","location":{"filename":"src/x11/visual.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visual.cr#L7"},"def":{"name":"new","args":[{"name":"visual","doc":null,"default_value":"","external_name":"visual","restriction":"X11::C::X::PVisual"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(visual)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_unsafe:X11::C::X::PVisual-instance-method","html_id":"to_unsafe:X11::C::X::PVisual-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PVisual","args_html":" : X11::C::X::PVisual","location":{"filename":"src/x11/visual.cr","line_number":15,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visual.cr#L15"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PVisual","visibility":"Public","body":"@visual"}},{"id":"visual:X11::C::X::PVisual-instance-method","html_id":"visual:X11::C::X::PVisual-instance-method","name":"visual","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PVisual","args_html":" : X11::C::X::PVisual","location":{"filename":"src/x11/visual.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visual.cr#L5"},"def":{"name":"visual","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PVisual","visibility":"Public","body":"@visual"}},{"id":"visual_id:X11::C::VisualID-instance-method","html_id":"visual_id:X11::C::VisualID-instance-method","name":"visual_id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::VisualID","args_html":" : <a href=\"../X11/C/VisualID.html\">X11::C::VisualID</a>","location":{"filename":"src/x11/visual.cr","line_number":11,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/visual.cr#L11"},"def":{"name":"visual_id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::VisualID","visibility":"Public","body":"X.visual_id_from_visual(@visual)"}}],"macros":[],"types":[]},{"html_id":"x11/X11/WcTextItem","path":"X11/WcTextItem.html","kind":"struct","full_name":"X11::WcTextItem","name":"WcTextItem","abstract":false,"superclass":{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"x11/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"x11/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/wc_text_item.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L5"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::XwcTextItem` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::XwcTextItem</code> structure.</p>","class_methods":[],"constructors":[{"id":"new(text_item:X11::C::X::PwcTextItem)-class-method","html_id":"new(text_item:X11::C::X::PwcTextItem)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"text_item","doc":null,"default_value":"","external_name":"text_item","restriction":"X11::C::X::PwcTextItem"}],"args_string":"(text_item : X11::C::X::PwcTextItem)","args_html":"(text_item : X11::C::X::PwcTextItem)","location":{"filename":"src/x11/wc_text_item.cr","line_number":10,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L10"},"def":{"name":"new","args":[{"name":"text_item","doc":null,"default_value":"","external_name":"text_item","restriction":"X11::C::X::PwcTextItem"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(text_item)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(text_item:X11::C::X::XwcTextItem)-class-method","html_id":"new(text_item:X11::C::X::XwcTextItem)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"text_item","doc":null,"default_value":"","external_name":"text_item","restriction":"X11::C::X::XwcTextItem"}],"args_string":"(text_item : X11::C::X::XwcTextItem)","args_html":"(text_item : X11::C::X::XwcTextItem)","location":{"filename":"src/x11/wc_text_item.cr","line_number":15,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L15"},"def":{"name":"new","args":[{"name":"text_item","doc":null,"default_value":"","external_name":"text_item","restriction":"X11::C::X::XwcTextItem"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(text_item)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/wc_text_item.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L6"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"chars:X11::C::X::PWChar_t-instance-method","html_id":"chars:X11::C::X::PWChar_t-instance-method","name":"chars","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PWChar_t","args_html":" : X11::C::X::PWChar_t","location":{"filename":"src/x11/wc_text_item.cr","line_number":26,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L26"},"def":{"name":"chars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PWChar_t","visibility":"Public","body":"@text_item.chars"}},{"id":"chars=(chars:X11::C::X::PWChar_t)-instance-method","html_id":"chars=(chars:X11::C::X::PWChar_t)-instance-method","name":"chars=","doc":null,"summary":null,"abstract":false,"args":[{"name":"chars","doc":null,"default_value":"","external_name":"chars","restriction":"X11::C::X::PWChar_t"}],"args_string":"(chars : X11::C::X::PWChar_t)","args_html":"(chars : X11::C::X::PWChar_t)","location":{"filename":"src/x11/wc_text_item.cr","line_number":30,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L30"},"def":{"name":"chars=","args":[{"name":"chars","doc":null,"default_value":"","external_name":"chars","restriction":"X11::C::X::PWChar_t"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_item.chars = chars"}},{"id":"delta:Int32-instance-method","html_id":"delta:Int32-instance-method","name":"delta","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/wc_text_item.cr","line_number":38,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L38"},"def":{"name":"delta","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@text_item.delta"}},{"id":"delta=(delta:Int32)-instance-method","html_id":"delta=(delta:Int32)-instance-method","name":"delta=","doc":null,"summary":null,"abstract":false,"args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Int32"}],"args_string":"(delta : Int32)","args_html":"(delta : Int32)","location":{"filename":"src/x11/wc_text_item.cr","line_number":42,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L42"},"def":{"name":"delta=","args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_item.delta = delta"}},{"id":"font_set:X11::C::X::FontSet-instance-method","html_id":"font_set:X11::C::X::FontSet-instance-method","name":"font_set","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::FontSet","args_html":" : X11::C::X::FontSet","location":{"filename":"src/x11/wc_text_item.cr","line_number":46,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L46"},"def":{"name":"font_set","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::FontSet","visibility":"Public","body":"@text_item.font_set"}},{"id":"font_set=(font_set:X11::C::X::FontSet)-instance-method","html_id":"font_set=(font_set:X11::C::X::FontSet)-instance-method","name":"font_set=","doc":null,"summary":null,"abstract":false,"args":[{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"}],"args_string":"(font_set : X11::C::X::FontSet)","args_html":"(font_set : X11::C::X::FontSet)","location":{"filename":"src/x11/wc_text_item.cr","line_number":50,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L50"},"def":{"name":"font_set=","args":[{"name":"font_set","doc":null,"default_value":"","external_name":"font_set","restriction":"X11::C::X::FontSet"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@text_item.font_set = font_set"}},{"id":"nchars:Int32-instance-method","html_id":"nchars:Int32-instance-method","name":"nchars","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/wc_text_item.cr","line_number":34,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L34"},"def":{"name":"nchars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@text_item.nchars"}},{"id":"to_unsafe:X11::C::X::PwcTextItem-instance-method","html_id":"to_unsafe:X11::C::X::PwcTextItem-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PwcTextItem","args_html":" : X11::C::X::PwcTextItem","location":{"filename":"src/x11/wc_text_item.cr","line_number":18,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L18"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PwcTextItem","visibility":"Public","body":"pointerof(@text_item)"}},{"id":"to_x:X11::C::X::XwcTextItem-instance-method","html_id":"to_x:X11::C::X::XwcTextItem-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::XwcTextItem","args_html":" : X11::C::X::XwcTextItem","location":{"filename":"src/x11/wc_text_item.cr","line_number":22,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/wc_text_item.cr#L22"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::XwcTextItem","visibility":"Public","body":"@text_item"}}],"macros":[],"types":[]},{"html_id":"x11/X11/WindowChanges","path":"X11/WindowChanges.html","kind":"class","full_name":"X11::WindowChanges","name":"WindowChanges","abstract":false,"superclass":{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/window_changes.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L5"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":"Wrapper for `X11::C::X::WindowChanges` structure.","summary":"<p>Wrapper for <code><a href=\"../X11.html\">X11</a>::C::X::<a href=\"../X11/WindowChanges.html\">WindowChanges</a></code> structure.</p>","class_methods":[],"constructors":[{"id":"new(changes:X11::C::X::WindowChanges)-class-method","html_id":"new(changes:X11::C::X::WindowChanges)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"changes","doc":null,"default_value":"","external_name":"changes","restriction":"X11::C::X::WindowChanges"}],"args_string":"(changes : X11::C::X::WindowChanges)","args_html":"(changes : X11::C::X::WindowChanges)","location":{"filename":"src/x11/window_changes.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L6"},"def":{"name":"new","args":[{"name":"changes","doc":null,"default_value":"","external_name":"changes","restriction":"X11::C::X::WindowChanges"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(changes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(changes:X11::C::X::PWindowChanges)-class-method","html_id":"new(changes:X11::C::X::PWindowChanges)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"changes","doc":null,"default_value":"","external_name":"changes","restriction":"X11::C::X::PWindowChanges"}],"args_string":"(changes : X11::C::X::PWindowChanges)","args_html":"(changes : X11::C::X::PWindowChanges)","location":{"filename":"src/x11/window_changes.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L9"},"def":{"name":"new","args":[{"name":"changes","doc":null,"default_value":"","external_name":"changes","restriction":"X11::C::X::PWindowChanges"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(changes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/x11/window_changes.cr","line_number":14,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L14"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"border_width:Int32-instance-method","html_id":"border_width:Int32-instance-method","name":"border_width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/window_changes.cr","line_number":58,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L58"},"def":{"name":"border_width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@changes.border_width"}},{"id":"border_width=(border_width:Int32)-instance-method","html_id":"border_width=(border_width:Int32)-instance-method","name":"border_width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"border_width","doc":null,"default_value":"","external_name":"border_width","restriction":"Int32"}],"args_string":"(border_width : Int32)","args_html":"(border_width : Int32)","location":{"filename":"src/x11/window_changes.cr","line_number":62,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L62"},"def":{"name":"border_width=","args":[{"name":"border_width","doc":null,"default_value":"","external_name":"border_width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@changes.border_width = border_width"}},{"id":"height:Int32-instance-method","html_id":"height:Int32-instance-method","name":"height","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/window_changes.cr","line_number":50,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L50"},"def":{"name":"height","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@changes.height"}},{"id":"height=(height:Int32)-instance-method","html_id":"height=(height:Int32)-instance-method","name":"height=","doc":null,"summary":null,"abstract":false,"args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"args_string":"(height : Int32)","args_html":"(height : Int32)","location":{"filename":"src/x11/window_changes.cr","line_number":54,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L54"},"def":{"name":"height=","args":[{"name":"height","doc":null,"default_value":"","external_name":"height","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@changes.height = height"}},{"id":"sibling:X11::C::Window-instance-method","html_id":"sibling:X11::C::Window-instance-method","name":"sibling","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/window_changes.cr","line_number":66,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L66"},"def":{"name":"sibling","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":"@changes.sibling"}},{"id":"sibling=(sibling:X11::C::Window)-instance-method","html_id":"sibling=(sibling:X11::C::Window)-instance-method","name":"sibling=","doc":null,"summary":null,"abstract":false,"args":[{"name":"sibling","doc":null,"default_value":"","external_name":"sibling","restriction":"X11::C::Window"}],"args_string":"(sibling : X11::C::Window)","args_html":"(sibling : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/window_changes.cr","line_number":70,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L70"},"def":{"name":"sibling=","args":[{"name":"sibling","doc":null,"default_value":"","external_name":"sibling","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@changes.sibling = sibling"}},{"id":"stack_mode:Int32-instance-method","html_id":"stack_mode:Int32-instance-method","name":"stack_mode","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/window_changes.cr","line_number":74,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L74"},"def":{"name":"stack_mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@changes.stack_mode"}},{"id":"stack_mode=(stack_mode:Int32)-instance-method","html_id":"stack_mode=(stack_mode:Int32)-instance-method","name":"stack_mode=","doc":null,"summary":null,"abstract":false,"args":[{"name":"stack_mode","doc":null,"default_value":"","external_name":"stack_mode","restriction":"Int32"}],"args_string":"(stack_mode : Int32)","args_html":"(stack_mode : Int32)","location":{"filename":"src/x11/window_changes.cr","line_number":78,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L78"},"def":{"name":"stack_mode=","args":[{"name":"stack_mode","doc":null,"default_value":"","external_name":"stack_mode","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@changes.stack_mode = stack_mode"}},{"id":"to_unsafe:X11::C::X::PWindowChanges-instance-method","html_id":"to_unsafe:X11::C::X::PWindowChanges-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::PWindowChanges","args_html":" : X11::C::X::PWindowChanges","location":{"filename":"src/x11/window_changes.cr","line_number":22,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L22"},"def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::PWindowChanges","visibility":"Public","body":"pointerof(@changes)"}},{"id":"to_x:X11::C::X::WindowChanges-instance-method","html_id":"to_x:X11::C::X::WindowChanges-instance-method","name":"to_x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : X11::C::X::WindowChanges","args_html":" : X11::C::X::WindowChanges","location":{"filename":"src/x11/window_changes.cr","line_number":18,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L18"},"def":{"name":"to_x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::X::WindowChanges","visibility":"Public","body":"@changes"}},{"id":"width:Int32-instance-method","html_id":"width:Int32-instance-method","name":"width","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/window_changes.cr","line_number":42,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L42"},"def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@changes.width"}},{"id":"width=(width:Int32)-instance-method","html_id":"width=(width:Int32)-instance-method","name":"width=","doc":null,"summary":null,"abstract":false,"args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"args_string":"(width : Int32)","args_html":"(width : Int32)","location":{"filename":"src/x11/window_changes.cr","line_number":46,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L46"},"def":{"name":"width=","args":[{"name":"width","doc":null,"default_value":"","external_name":"width","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@changes.width = width"}},{"id":"x:Int32-instance-method","html_id":"x:Int32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/window_changes.cr","line_number":26,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L26"},"def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@changes.x"}},{"id":"x=(x:Int32)-instance-method","html_id":"x=(x:Int32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"args_string":"(x : Int32)","args_html":"(x : Int32)","location":{"filename":"src/x11/window_changes.cr","line_number":30,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L30"},"def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@changes.x = x"}},{"id":"y:Int32-instance-method","html_id":"y:Int32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/x11/window_changes.cr","line_number":34,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L34"},"def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@changes.y"}},{"id":"y=(y:Int32)-instance-method","html_id":"y=(y:Int32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(y : Int32)","args_html":"(y : Int32)","location":{"filename":"src/x11/window_changes.cr","line_number":38,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_changes.cr#L38"},"def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@changes.y = y"}}],"macros":[],"types":[]},{"html_id":"x11/X11/WindowEvent","path":"X11/WindowEvent.html","kind":"class","full_name":"X11::WindowEvent","name":"WindowEvent","abstract":true,"superclass":{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},"ancestors":[{"html_id":"x11/X11/Event","kind":"class","full_name":"X11::Event","name":"Event"},{"html_id":"x11/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"x11/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/x11/window_event.cr","line_number":5,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_event.cr#L5"}],"repository_name":"x11","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"x11/X11/ButtonEvent","kind":"class","full_name":"X11::ButtonEvent","name":"ButtonEvent"},{"html_id":"x11/X11/CirculateEvent","kind":"class","full_name":"X11::CirculateEvent","name":"CirculateEvent"},{"html_id":"x11/X11/CirculateRequestEvent","kind":"class","full_name":"X11::CirculateRequestEvent","name":"CirculateRequestEvent"},{"html_id":"x11/X11/ClientMessageEvent","kind":"class","full_name":"X11::ClientMessageEvent","name":"ClientMessageEvent"},{"html_id":"x11/X11/ColormapEvent","kind":"class","full_name":"X11::ColormapEvent","name":"ColormapEvent"},{"html_id":"x11/X11/ConfigureEvent","kind":"class","full_name":"X11::ConfigureEvent","name":"ConfigureEvent"},{"html_id":"x11/X11/ConfigureRequestEvent","kind":"class","full_name":"X11::ConfigureRequestEvent","name":"ConfigureRequestEvent"},{"html_id":"x11/X11/CreateWindowEvent","kind":"class","full_name":"X11::CreateWindowEvent","name":"CreateWindowEvent"},{"html_id":"x11/X11/CrossingEvent","kind":"class","full_name":"X11::CrossingEvent","name":"CrossingEvent"},{"html_id":"x11/X11/DestroyWindowEvent","kind":"class","full_name":"X11::DestroyWindowEvent","name":"DestroyWindowEvent"},{"html_id":"x11/X11/ExposeEvent","kind":"class","full_name":"X11::ExposeEvent","name":"ExposeEvent"},{"html_id":"x11/X11/FocusChangeEvent","kind":"class","full_name":"X11::FocusChangeEvent","name":"FocusChangeEvent"},{"html_id":"x11/X11/GravityEvent","kind":"class","full_name":"X11::GravityEvent","name":"GravityEvent"},{"html_id":"x11/X11/KeyEvent","kind":"class","full_name":"X11::KeyEvent","name":"KeyEvent"},{"html_id":"x11/X11/KeymapEvent","kind":"class","full_name":"X11::KeymapEvent","name":"KeymapEvent"},{"html_id":"x11/X11/MapEvent","kind":"class","full_name":"X11::MapEvent","name":"MapEvent"},{"html_id":"x11/X11/MappingEvent","kind":"class","full_name":"X11::MappingEvent","name":"MappingEvent"},{"html_id":"x11/X11/MapRequestEvent","kind":"class","full_name":"X11::MapRequestEvent","name":"MapRequestEvent"},{"html_id":"x11/X11/MotionEvent","kind":"class","full_name":"X11::MotionEvent","name":"MotionEvent"},{"html_id":"x11/X11/PropertyEvent","kind":"class","full_name":"X11::PropertyEvent","name":"PropertyEvent"},{"html_id":"x11/X11/ReparentEvent","kind":"class","full_name":"X11::ReparentEvent","name":"ReparentEvent"},{"html_id":"x11/X11/ResizeRequestEvent","kind":"class","full_name":"X11::ResizeRequestEvent","name":"ResizeRequestEvent"},{"html_id":"x11/X11/SelectionClearEvent","kind":"class","full_name":"X11::SelectionClearEvent","name":"SelectionClearEvent"},{"html_id":"x11/X11/UnmapEvent","kind":"class","full_name":"X11::UnmapEvent","name":"UnmapEvent"},{"html_id":"x11/X11/VisibilityEvent","kind":"class","full_name":"X11::VisibilityEvent","name":"VisibilityEvent"}],"including_types":[],"namespace":{"html_id":"x11/X11","kind":"module","full_name":"X11","name":"X11"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"display:Display-instance-method","html_id":"display:Display-instance-method","name":"display","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Display","args_html":" : <a href=\"../X11/Display.html\">Display</a>","location":{"filename":"src/x11/window_event.cr","line_number":6,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_event.cr#L6"},"def":{"name":"display","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Display","visibility":"Public","body":""}},{"id":"display=(display:Display)-instance-method","html_id":"display=(display:Display)-instance-method","name":"display=","doc":null,"summary":null,"abstract":true,"args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"args_string":"(display : Display)","args_html":"(display : <a href=\"../X11/Display.html\">Display</a>)","location":{"filename":"src/x11/window_event.cr","line_number":7,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_event.cr#L7"},"def":{"name":"display=","args":[{"name":"display","doc":null,"default_value":"","external_name":"display","restriction":"Display"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"window:X11::C::Window-instance-method","html_id":"window:X11::C::Window-instance-method","name":"window","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : X11::C::Window","args_html":" : <a href=\"../X11/C/Window.html\">X11::C::Window</a>","location":{"filename":"src/x11/window_event.cr","line_number":8,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_event.cr#L8"},"def":{"name":"window","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"X11::C::Window","visibility":"Public","body":""}},{"id":"window=(window:X11::C::Window)-instance-method","html_id":"window=(window:X11::C::Window)-instance-method","name":"window=","doc":null,"summary":null,"abstract":true,"args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"args_string":"(window : X11::C::Window)","args_html":"(window : <a href=\"../X11/C/Window.html\">X11::C::Window</a>)","location":{"filename":"src/x11/window_event.cr","line_number":9,"url":"https://github.com/TamasSzekeres/x11-cr/blob/c77c1eb953856090ed443408fbe5367fe5404965/src/x11/window_event.cr#L9"},"def":{"name":"window=","args":[{"name":"window","doc":null,"default_value":"","external_name":"window","restriction":"X11::C::Window"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]}]}]}}